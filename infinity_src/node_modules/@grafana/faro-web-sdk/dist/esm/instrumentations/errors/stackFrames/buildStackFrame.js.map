{"version":3,"file":"buildStackFrame.js","sourceRoot":"","sources":["../../../../../src/instrumentations/errors/stackFrames/buildStackFrame.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,aAAa,EAAE,MAAM,SAAS,CAAC;AAExC,MAAM,UAAU,eAAe,CAC7B,QAA4B,EAC5B,IAAwB,EACxB,MAA0B,EAC1B,KAAyB;IAEzB,MAAM,UAAU,GAAwB;QACtC,QAAQ,EAAE,QAAQ,IAAI,QAAQ,CAAC,QAAQ,CAAC,IAAI;QAC5C,QAAQ,EAAE,IAAI,IAAI,aAAa;KAChC,CAAC;IAEF,IAAI,MAAM,KAAK,SAAS,EAAE;QACxB,UAAU,CAAC,MAAM,GAAG,MAAM,CAAC;KAC5B;IAED,IAAI,KAAK,KAAK,SAAS,EAAE;QACvB,UAAU,CAAC,KAAK,GAAG,KAAK,CAAC;KAC1B;IAED,OAAO,UAAU,CAAC;AACpB,CAAC","sourcesContent":["import type { ExceptionStackFrame } from '@grafana/faro-core';\n\nimport { unknownString } from './const';\n\nexport function buildStackFrame(\n  filename: string | undefined,\n  func: string | undefined,\n  lineno: number | undefined,\n  colno: number | undefined\n): ExceptionStackFrame {\n  const stackFrame: ExceptionStackFrame = {\n    filename: filename || document.location.href,\n    function: func || unknownString,\n  };\n\n  if (lineno !== undefined) {\n    stackFrame.lineno = lineno;\n  }\n\n  if (colno !== undefined) {\n    stackFrame.colno = colno;\n  }\n\n  return stackFrame;\n}\n"]}