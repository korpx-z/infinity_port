import { BaseInstrumentation, Conventions, VERSION } from '@grafana/faro-core';
// all this does is send VIEW_CHANGED event
export class ViewInstrumentation extends BaseInstrumentation {
    constructor() {
        super(...arguments);
        this.name = '@grafana/faro-web-sdk:instrumentation-view';
        this.version = VERSION;
    }
    sendViewChangedEvent(meta) {
        const view = meta.view;
        if (view && view !== this.notifiedView) {
            this.notifiedView = view;
            this.api.pushEvent(Conventions.EventNames.VIEW_CHANGED, {}, undefined, { skipDedupe: true });
        }
    }
    initialize() {
        this.sendViewChangedEvent(this.metas.value);
        this.metas.addListener(this.sendViewChangedEvent.bind(this));
    }
}
//# sourceMappingURL=instrumentation.js.map