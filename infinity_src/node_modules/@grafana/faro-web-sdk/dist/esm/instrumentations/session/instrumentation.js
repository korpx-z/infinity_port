import { BaseInstrumentation, Conventions, VERSION } from '@grafana/faro-core';
// all this does is send SESSION_START event
export class SessionInstrumentation extends BaseInstrumentation {
    constructor() {
        super(...arguments);
        this.name = '@grafana/faro-web-sdk:instrumentation-session';
        this.version = VERSION;
    }
    sendSessionStartEvent(meta) {
        const session = meta.session;
        if (session && session !== this.notifiedSession) {
            this.notifiedSession = session;
            // no need to add attributes and session id, they are included as part of meta
            // automatically
            this.api.pushEvent(Conventions.EventNames.SESSION_START, {}, undefined, { skipDedupe: true });
        }
    }
    initialize() {
        this.sendSessionStartEvent(this.metas.value);
        this.metas.addListener(this.sendSessionStartEvent.bind(this));
    }
}
//# sourceMappingURL=instrumentation.js.map