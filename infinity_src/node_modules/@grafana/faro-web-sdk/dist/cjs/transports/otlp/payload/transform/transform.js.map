{"version":3,"file":"transform.js","sourceRoot":"","sources":["../../../../../../src/transports/otlp/payload/transform/transform.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IKeyValue } from '@opentelemetry/otlp-transformer';\nimport {\n  SemanticAttributes,\n  SemanticResourceAttributes,\n  TelemetrySdkLanguageValues,\n} from '@opentelemetry/semantic-conventions';\n\nimport {\n  EventEvent,\n  ExceptionEvent,\n  LogEvent,\n  MeasurementEvent,\n  Meta,\n  TransportItem,\n  TransportItemType,\n  VERSION,\n} from '@grafana/faro-core';\n\nimport { internalLogger } from '../../otlpPayloadLogger';\nimport { isAttribute, toAttribute, toAttributeValue } from '../attribute';\n\nimport type { LogRecord, LogTransportItem, Resource, ScopeLog } from './types';\n\n/**\n * Seems currently to be missing in the semantic-conventions npm package.\n * See: https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/resource/semantic_conventions/README.md#todos\n *\n * Attributes are as defined by the Otel docs\n */\nconst SemanticBrowserAttributes = {\n  BROWSER_BRANDS: 'browser.brands',\n  BROWSER_PLATFORM: 'browser.platform',\n  BROWSER_MOBILE: 'browser.mobile',\n  BROWSER_USER_AGENT: 'browser.user_agent',\n  BROWSER_LANGUAGE: 'browser.language',\n} as const;\n\nexport function toResourceLog(transportItem: LogTransportItem) {\n  const resource = toResource(transportItem);\n\n  return {\n    resource,\n    scopeLogs: [toScopeLog(transportItem)],\n  };\n}\n\nfunction toResource(transportItem: LogTransportItem): Readonly<Resource> {\n  const { browser, sdk, app } = transportItem.meta;\n\n  return {\n    attributes: [\n      toAttribute(SemanticBrowserAttributes.BROWSER_MOBILE, browser?.mobile),\n      toAttribute(SemanticBrowserAttributes.BROWSER_USER_AGENT, browser?.userAgent),\n      toAttribute(SemanticBrowserAttributes.BROWSER_LANGUAGE, browser?.language),\n      toAttribute('browser.os', browser?.os),\n      // toAttribute(SemanticBrowserAttributes.BROWSER_BRANDS, browser?.brands),\n      toAttribute('browser.name', browser?.name),\n      toAttribute('browser.version', browser?.version),\n\n      toAttribute(SemanticResourceAttributes.TELEMETRY_SDK_NAME, sdk?.name),\n      toAttribute(SemanticResourceAttributes.TELEMETRY_SDK_VERSION, sdk?.version),\n      Boolean(sdk)\n        ? toAttribute(SemanticResourceAttributes.TELEMETRY_SDK_LANGUAGE, TelemetrySdkLanguageValues.WEBJS)\n        : undefined,\n\n      toAttribute(SemanticResourceAttributes.SERVICE_NAME, app?.name),\n      toAttribute(SemanticResourceAttributes.SERVICE_VERSION, app?.version),\n      toAttribute(SemanticResourceAttributes.DEPLOYMENT_ENVIRONMENT, app?.environment),\n    ].filter(isAttribute),\n  };\n}\n\nexport function toScopeLog(transportItem: LogTransportItem): ScopeLog {\n  return {\n    scope: {\n      name: '@grafana/faro-web-sdk',\n      version: VERSION,\n    },\n    logRecords: [toLogRecord(transportItem)],\n  };\n}\n\nfunction toLogRecord(transportItem: LogTransportItem): LogRecord {\n  const { type } = transportItem;\n\n  switch (type) {\n    case TransportItemType.LOG:\n      return toLogLogRecord(transportItem as TransportItem<LogEvent>);\n    case TransportItemType.EXCEPTION:\n      return toErrorLogRecord(transportItem as TransportItem<ExceptionEvent>);\n    case TransportItemType.EVENT:\n      return toEventLogRecord(transportItem as TransportItem<EventEvent>);\n    case TransportItemType.MEASUREMENT:\n      return toMeasurementLogRecord(transportItem as TransportItem<MeasurementEvent>);\n    default:\n      const error = `Unknown TransportItemType: ${type}`;\n      internalLogger.error(error);\n      throw new Error(error);\n  }\n}\n\nfunction toLogLogRecord(transportItem: TransportItem<LogEvent>): LogRecord {\n  const { meta, payload } = transportItem;\n  const timeUnixNano = toTimeUnixNano(payload.timestamp);\n  const body = toAttributeValue(payload.message) as { stringValue: string; key: string };\n\n  return {\n    timeUnixNano,\n    severityNumber: 10,\n    severityText: 'INFO2',\n    body,\n    attributes: getCommonLogAttributes(meta),\n    traceId: payload.trace?.trace_id,\n    spanId: payload.trace?.trace_id,\n  } as const;\n}\n\nfunction toEventLogRecord(transportItem: TransportItem<EventEvent>): LogRecord {\n  const { meta, payload } = transportItem;\n  const timeUnixNano = toTimeUnixNano(payload.timestamp);\n  const body = toAttributeValue(payload.name) as { stringValue: string; key: string };\n\n  return {\n    timeUnixNano,\n    body,\n    attributes: [\n      ...getCommonLogAttributes(meta),\n      toAttribute('event.name', payload.name), // No prefix because this is a semantic attribute. But event.name constant is currently missing in sematic-conventions npm package\n      toAttribute('event.domain', payload.domain), // No prefix because this is a semantic attribute. But event.domain constant is currently missing in sematic-conventions npm package\n      toAttribute('event.attributes', payload.attributes),\n    ].filter(isAttribute),\n    traceId: payload.trace?.trace_id,\n    spanId: payload.trace?.trace_id,\n  } as const;\n}\n\nfunction toErrorLogRecord(transportItem: TransportItem<ExceptionEvent>): LogRecord {\n  const { meta, payload } = transportItem;\n  const timeUnixNano = toTimeUnixNano(payload.timestamp);\n\n  return {\n    timeUnixNano,\n    attributes: [\n      ...getCommonLogAttributes(meta),\n      toAttribute(SemanticAttributes.EXCEPTION_TYPE, payload.type),\n      toAttribute(SemanticAttributes.EXCEPTION_MESSAGE, payload.value),\n      // toAttribute(SemanticAttributes.EXCEPTION_STACKTRACE, undefined),\n      toAttribute('faro.error.stacktrace', payload.stacktrace),\n    ].filter(isAttribute),\n    traceId: payload.trace?.trace_id,\n    spanId: payload.trace?.trace_id,\n  } as const;\n}\n\nfunction toMeasurementLogRecord(transportItem: TransportItem<MeasurementEvent>): LogRecord {\n  const { meta, payload } = transportItem;\n  const timeUnixNano = toTimeUnixNano(payload.timestamp);\n  const [measurementName, measurementValue] = Object.entries(payload.values).flat();\n\n  return {\n    timeUnixNano,\n    attributes: [\n      ...getCommonLogAttributes(meta),\n      toAttribute('measurement.type', payload.type),\n      toAttribute('measurement.name', measurementName),\n      toAttribute('measurement.value', measurementValue),\n    ].filter(isAttribute),\n    traceId: payload.trace?.trace_id,\n    spanId: payload.trace?.trace_id,\n  } as const;\n}\n\nfunction getCommonLogAttributes(meta: Meta): IKeyValue[] {\n  const { view, page, session, user } = meta;\n\n  return [\n    toAttribute('view.name', view?.name),\n    toAttribute(SemanticAttributes.HTTP_URL, page?.url),\n    toAttribute('page.id', page?.id),\n    toAttribute('page.attributes', page?.attributes),\n    toAttribute('session.id', session?.id),\n    toAttribute('session.attributes', session?.attributes),\n    toAttribute(SemanticAttributes.ENDUSER_ID, user?.id),\n    toAttribute('enduser.name', user?.username),\n    toAttribute('enduser.email', user?.email),\n    toAttribute('enduser.attributes', user?.attributes),\n  ].filter(isAttribute);\n}\n\nfunction toTimeUnixNano(timestamp: string): number {\n  return Date.parse(timestamp) * 1e6;\n}\n"]}