{"version":3,"file":"instrumentation.js","sourceRoot":"","sources":["../../../../src/instrumentations/session/instrumentation.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA,gDAAkG;AAElG,4CAA4C;AAC5C;IAA4C,0CAAmB;IAA/D;QAAA,qEAwBC;QAvBU,UAAI,GAAG,+CAA+C,CAAC;QACvD,aAAO,GAAG,mBAAO,CAAC;;IAsB7B,CAAC;IAhBS,sDAAqB,GAA7B,UAA8B,IAAU;QACtC,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAE7B,IAAI,OAAO,IAAI,OAAO,KAAK,IAAI,CAAC,eAAe,EAAE;YAC/C,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC;YAC/B,8EAA8E;YAC9E,gBAAgB;YAChB,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,uBAAW,CAAC,UAAU,CAAC,aAAa,EAAE,EAAE,EAAE,SAAS,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC;SAC/F;IACH,CAAC;IAED,2CAAU,GAAV;QACE,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAE7C,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IAChE,CAAC;IACH,6BAAC;AAAD,CAAC,AAxBD,CAA4C,+BAAmB,GAwB9D;AAxBY,wDAAsB","sourcesContent":["import { BaseInstrumentation, Conventions, Meta, MetaSession, VERSION } from '@grafana/faro-core';\n\n// all this does is send SESSION_START event\nexport class SessionInstrumentation extends BaseInstrumentation {\n  readonly name = '@grafana/faro-web-sdk:instrumentation-session';\n  readonly version = VERSION;\n\n  // previously notified session, to ensure we don't send session start\n  // event twice for the same session\n  private notifiedSession: MetaSession | undefined;\n\n  private sendSessionStartEvent(meta: Meta): void {\n    const session = meta.session;\n\n    if (session && session !== this.notifiedSession) {\n      this.notifiedSession = session;\n      // no need to add attributes and session id, they are included as part of meta\n      // automatically\n      this.api.pushEvent(Conventions.EventNames.SESSION_START, {}, undefined, { skipDedupe: true });\n    }\n  }\n\n  initialize() {\n    this.sendSessionStartEvent(this.metas.value);\n\n    this.metas.addListener(this.sendSessionStartEvent.bind(this));\n  }\n}\n"]}