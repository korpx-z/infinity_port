{"version":3,"file":"instrumentation.js","sourceRoot":"","sources":["../../../../src/instrumentations/view/instrumentation.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA,gDAA+F;AAE/F,2CAA2C;AAC3C;IAAyC,uCAAmB;IAA5D;QAAA,qEAuBC;QAtBU,UAAI,GAAG,4CAA4C,CAAC;QACpD,aAAO,GAAG,mBAAO,CAAC;;IAqB7B,CAAC;IAfS,kDAAoB,GAA5B,UAA6B,IAAU;QACrC,IAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAEvB,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,CAAC,YAAY,EAAE;YACtC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YAEzB,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,uBAAW,CAAC,UAAU,CAAC,YAAY,EAAE,EAAE,EAAE,SAAS,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC;SAC9F;IACH,CAAC;IAED,wCAAU,GAAV;QACE,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAE5C,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IAC/D,CAAC;IACH,0BAAC;AAAD,CAAC,AAvBD,CAAyC,+BAAmB,GAuB3D;AAvBY,kDAAmB","sourcesContent":["import { BaseInstrumentation, Conventions, Meta, MetaView, VERSION } from '@grafana/faro-core';\n\n// all this does is send VIEW_CHANGED event\nexport class ViewInstrumentation extends BaseInstrumentation {\n  readonly name = '@grafana/faro-web-sdk:instrumentation-view';\n  readonly version = VERSION;\n\n  // previously notified view, to ensure we don't send view changed\n  // event twice for the same view\n  private notifiedView: MetaView | undefined;\n\n  private sendViewChangedEvent(meta: Meta): void {\n    const view = meta.view;\n\n    if (view && view !== this.notifiedView) {\n      this.notifiedView = view;\n\n      this.api.pushEvent(Conventions.EventNames.VIEW_CHANGED, {}, undefined, { skipDedupe: true });\n    }\n  }\n\n  initialize() {\n    this.sendViewChangedEvent(this.metas.value);\n\n    this.metas.addListener(this.sendViewChangedEvent.bind(this));\n  }\n}\n"]}