{"version":3,"file":"registerOnunhandledrejection.js","sourceRoot":"","sources":["../../../../src/instrumentations/errors/registerOnunhandledrejection.ts"],"names":[],"mappings":";;;AAAA,gDAAiD;AAGjD,iCAA0E;AAC1E,qDAAoD;AAGpD,SAAgB,4BAA4B,CAAC,GAAQ;IACnD,MAAM,CAAC,gBAAgB,CAAC,oBAAoB,EAAE,UAAC,GAAkC;;;QAC/E,IAAI,KAAK,GAAG,GAAG,CAAC;QAEhB,IAAI,KAAK,CAAC,MAAM,EAAE;YAChB,KAAK,GAAG,GAAG,CAAC,MAAM,CAAC;SACpB;aAAM,IAAI,MAAA,GAAG,CAAC,MAAM,0CAAE,MAAM,EAAE;YAC7B,KAAK,GAAG,MAAA,GAAG,CAAC,MAAM,0CAAE,MAAM,CAAC;SAC5B;QAED,IAAI,KAAyB,CAAC;QAC9B,IAAI,IAAwB,CAAC;QAE7B,IAAI,IAAA,uBAAW,EAAC,KAAK,CAAC,EAAE;YACtB,KAAK,GAAG,UAAG,+BAAuB,cAAI,MAAM,CAAC,KAAK,CAAC,CAAE,CAAC;YACtD,IAAI,GAAG,8BAAsB,CAAC;SAC/B;aAAM;YACL,KAAgB,IAAA,iCAAe,EAAC,KAAK,CAAC,EAArC,KAAK,QAAA,EAAE,IAAI,QAAA,CAA2B;SACxC;QAED,IAAI,KAAK,EAAE;YACT,GAAG,CAAC,SAAS,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,EAAE,EAAE,IAAI,MAAA,EAAE,CAAC,CAAC;SAC3C;IACH,CAAC,CAAC,CAAC;AACL,CAAC;AAxBD,oEAwBC","sourcesContent":["import { isPrimitive } from '@grafana/faro-core';\nimport type { API } from '@grafana/faro-core';\n\nimport { primitiveUnhandledType, primitiveUnhandledValue } from './const';\nimport { getErrorDetails } from './getErrorDetails';\nimport type { ExtendedPromiseRejectionEvent } from './types';\n\nexport function registerOnunhandledrejection(api: API): void {\n  window.addEventListener('unhandledrejection', (evt: ExtendedPromiseRejectionEvent) => {\n    let error = evt;\n\n    if (error.reason) {\n      error = evt.reason;\n    } else if (evt.detail?.reason) {\n      error = evt.detail?.reason;\n    }\n\n    let value: string | undefined;\n    let type: string | undefined;\n\n    if (isPrimitive(error)) {\n      value = `${primitiveUnhandledValue} ${String(error)}`;\n      type = primitiveUnhandledType;\n    } else {\n      [value, type] = getErrorDetails(error);\n    }\n\n    if (value) {\n      api.pushError(new Error(value), { type });\n    }\n  });\n}\n"]}