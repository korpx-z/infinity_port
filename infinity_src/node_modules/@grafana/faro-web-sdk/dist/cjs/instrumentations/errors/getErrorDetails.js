"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getErrorDetails = void 0;
var faro_core_1 = require("@grafana/faro-core");
var const_1 = require("./const");
var stackFrames_1 = require("./stackFrames");
function getErrorDetails(evt) {
    var value;
    var type;
    var stackFrames = [];
    var isDomErrorRes;
    var isEventRes;
    if ((0, faro_core_1.isErrorEvent)(evt) && evt.error) {
        value = evt.error.message;
        type = evt.error.name;
        stackFrames = (0, stackFrames_1.getStackFramesFromError)(evt.error);
    }
    else if ((isDomErrorRes = (0, faro_core_1.isDomError)(evt)) || (0, faro_core_1.isDomException)(evt)) {
        var name_1 = evt.name, message = evt.message;
        type = name_1 !== null && name_1 !== void 0 ? name_1 : (isDomErrorRes ? const_1.domErrorType : const_1.domExceptionType);
        value = message ? "".concat(type, ": ").concat(message) : type;
    }
    else if ((0, faro_core_1.isError)(evt)) {
        value = evt.message;
        stackFrames = (0, stackFrames_1.getStackFramesFromError)(evt);
    }
    else if ((0, faro_core_1.isObject)(evt) || (isEventRes = (0, faro_core_1.isEvent)(evt))) {
        type = isEventRes ? evt.constructor.name : undefined;
        value = "".concat(const_1.objectEventValue, " ").concat(Object.keys(evt));
    }
    return [value, type, stackFrames];
}
exports.getErrorDetails = getErrorDetails;
//# sourceMappingURL=getErrorDetails.js.map