{"version":3,"file":"Switch.js","sources":["../../../../src/components/Switch/Switch.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport { uniqueId } from 'lodash';\nimport React, { HTMLProps, useRef } from 'react';\n\nimport { GrafanaTheme2, deprecationWarning } from '@grafana/data';\n\nimport { stylesFactory, useTheme2 } from '../../themes';\nimport { getFocusStyles, getMouseFocusStyles } from '../../themes/mixins';\n\nexport interface Props extends Omit<HTMLProps<HTMLInputElement>, 'value'> {\n  value?: boolean;\n  /** Make switch's background and border transparent */\n  transparent?: boolean;\n}\n\nexport const Switch = React.forwardRef<HTMLInputElement, Props>(\n  ({ value, checked, onChange, id, label, disabled, ...inputProps }, ref) => {\n    if (checked) {\n      deprecationWarning('Switch', 'checked prop', 'value');\n    }\n\n    const theme = useTheme2();\n    const styles = getSwitchStyles(theme);\n    const switchIdRef = useRef(id ? id : uniqueId('switch-'));\n\n    return (\n      <div className={cx(styles.switch)}>\n        <input\n          type=\"checkbox\"\n          disabled={disabled}\n          checked={value}\n          onChange={(event) => {\n            !disabled && onChange?.(event);\n          }}\n          id={switchIdRef.current}\n          {...inputProps}\n          ref={ref}\n        />\n        <label htmlFor={switchIdRef.current} aria-label={label ?? 'Toggle switch'} />\n      </div>\n    );\n  }\n);\n\nSwitch.displayName = 'Switch';\n\nexport interface InlineSwitchProps extends Props {\n  showLabel?: boolean;\n}\n\nexport const InlineSwitch = React.forwardRef<HTMLInputElement, InlineSwitchProps>(\n  ({ transparent, className, showLabel, label, value, id, ...props }, ref) => {\n    const theme = useTheme2();\n    const styles = getSwitchStyles(theme, transparent);\n\n    return (\n      <div className={cx(styles.inlineContainer, className, props.disabled && styles.disabled)}>\n        {showLabel && (\n          <label\n            htmlFor={id}\n            className={cx(styles.inlineLabel, value && styles.inlineLabelEnabled, 'inline-switch-label')}\n          >\n            {label}\n          </label>\n        )}\n        <Switch {...props} id={id} label={label} ref={ref} value={value} />\n      </div>\n    );\n  }\n);\n\nInlineSwitch.displayName = 'Switch';\n\nconst getSwitchStyles = stylesFactory((theme: GrafanaTheme2, transparent?: boolean) => {\n  return {\n    switch: css`\n      width: 32px;\n      height: 16px;\n      position: relative;\n\n      input {\n        opacity: 0;\n        left: -100vw;\n        z-index: -1000;\n        position: absolute;\n\n        &:disabled + label {\n          background: ${theme.colors.action.disabledBackground};\n          cursor: not-allowed;\n        }\n\n        &:checked + label {\n          background: ${theme.colors.primary.main};\n          border-color: ${theme.colors.primary.main};\n\n          &:hover {\n            background: ${theme.colors.primary.shade};\n          }\n\n          &::after {\n            transform: translate3d(18px, -50%, 0);\n            background: ${theme.colors.primary.contrastText};\n          }\n        }\n\n        &:focus + label,\n        &:focus-visible + label {\n          ${getFocusStyles(theme)}\n        }\n\n        &:focus:not(:focus-visible) + label {\n          ${getMouseFocusStyles(theme)}\n        }\n      }\n\n      label {\n        width: 100%;\n        height: 100%;\n        cursor: pointer;\n        border: none;\n        border-radius: ${theme.shape.radius.pill};\n        background: ${theme.components.input.background};\n        border: 1px solid ${theme.components.input.borderColor};\n        transition: all 0.3s ease;\n\n        &:hover {\n          border-color: ${theme.components.input.borderHover};\n        }\n\n        &::after {\n          position: absolute;\n          display: block;\n          content: '';\n          width: 12px;\n          height: 12px;\n          border-radius: ${theme.shape.radius.circle};\n          background: ${theme.colors.text.secondary};\n          box-shadow: ${theme.shadows.z1};\n          top: 50%;\n          transform: translate3d(2px, -50%, 0);\n          transition: transform 0.2s cubic-bezier(0.19, 1, 0.22, 1);\n        }\n      }\n    `,\n    inlineContainer: css`\n      padding: ${theme.spacing(0, 1)};\n      height: ${theme.spacing(theme.components.height.md)};\n      display: inline-flex;\n      align-items: center;\n      background: ${transparent ? 'transparent' : theme.components.input.background};\n      border: 1px solid ${transparent ? 'transparent' : theme.components.input.borderColor};\n      border-radius: ${theme.shape.borderRadius()};\n\n      &:hover {\n        border: 1px solid ${transparent ? 'transparent' : theme.components.input.borderHover};\n\n        .inline-switch-label {\n          color: ${theme.colors.text.primary};\n        }\n      }\n    `,\n    disabled: css`\n      background-color: rgba(204, 204, 220, 0.04);\n      color: rgba(204, 204, 220, 0.6);\n      border: 1px solid rgba(204, 204, 220, 0.04);\n    `,\n    inlineLabel: css`\n      cursor: pointer;\n      padding-right: ${theme.spacing(1)};\n      color: ${theme.colors.text.secondary};\n      white-space: nowrap;\n    `,\n    inlineLabelEnabled: css`\n      color: ${theme.colors.text.primary};\n    `,\n  };\n});\n"],"names":["React"],"mappings":"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"}