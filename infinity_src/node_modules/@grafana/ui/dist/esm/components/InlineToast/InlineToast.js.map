{"version":3,"file":"InlineToast.js","sources":["../../../../src/components/InlineToast/InlineToast.tsx"],"sourcesContent":["import { css, cx, keyframes } from '@emotion/css';\nimport { BasePlacement } from '@popperjs/core';\nimport React, { useState } from 'react';\nimport { usePopper } from 'react-popper';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\nimport { IconName } from '../../types';\nimport { Icon } from '../Icon/Icon';\nimport { Portal } from '../Portal/Portal';\n\nexport interface InlineToastProps {\n  children: React.ReactNode;\n  suffixIcon?: IconName;\n  referenceElement: HTMLElement | null;\n  placement: BasePlacement;\n}\n\nexport function InlineToast({ referenceElement, children, suffixIcon, placement }: InlineToastProps) {\n  const [indicatorElement, setIndicatorElement] = useState<HTMLElement | null>(null);\n  const popper = usePopper(referenceElement, indicatorElement, { placement });\n  const styles = useStyles2(getStyles);\n  const placementStyles = useStyles2(getPlacementStyles);\n\n  return (\n    <Portal>\n      <div\n        style={{ display: 'inline-block', ...popper.styles.popper }}\n        {...popper.attributes.popper}\n        ref={setIndicatorElement}\n      >\n        <span className={cx(styles.root, placementStyles[placement])}>\n          {children && <span>{children}</span>}\n          {suffixIcon && <Icon name={suffixIcon} />}\n        </span>\n      </div>\n    </Portal>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    root: css({\n      ...theme.typography.bodySmall,\n      willChange: 'transform',\n      background: theme.components.tooltip.background,\n      color: theme.components.tooltip.text,\n      padding: theme.spacing(0.5, 1.5), // get's an extra .5 of vertical padding to account for the rounded corners\n      borderRadius: 100, // just a sufficiently large value to ensure ends are completely rounded\n      display: 'inline-flex',\n      gap: theme.spacing(0.5),\n      alignItems: 'center',\n    }),\n  };\n};\n\nconst createAnimation = (fromX: string | number, fromY: string | number) =>\n  keyframes({\n    from: {\n      opacity: 0,\n      transform: `translate(${fromX}, ${fromY})`,\n    },\n\n    to: {\n      opacity: 1,\n      transform: 'translate(0, 0px)',\n    },\n  });\n\nconst getPlacementStyles = (theme: GrafanaTheme2): Record<InlineToastProps['placement'], string> => {\n  const gap = 1;\n\n  const placementTopAnimation = createAnimation(0, theme.spacing(gap));\n  const placementBottomAnimation = createAnimation(0, theme.spacing(gap * -1));\n  const placementLeftAnimation = createAnimation(theme.spacing(gap), 0);\n  const placementRightAnimation = createAnimation(theme.spacing(gap * -1), 0);\n\n  return {\n    top: css({\n      marginBottom: theme.spacing(gap),\n      animation: `${placementTopAnimation} ease-out 100ms`,\n    }),\n    bottom: css({\n      marginTop: theme.spacing(gap),\n      animation: `${placementBottomAnimation} ease-out 100ms`,\n    }),\n    left: css({\n      marginRight: theme.spacing(gap),\n      animation: `${placementLeftAnimation} ease-out 100ms`,\n    }),\n    right: css({\n      marginLeft: theme.spacing(gap),\n      animation: `${placementRightAnimation} ease-out 100ms`,\n    }),\n  };\n};\n"],"names":["React"],"mappings":"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"}