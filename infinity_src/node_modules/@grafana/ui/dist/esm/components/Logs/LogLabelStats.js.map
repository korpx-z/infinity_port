{"version":3,"file":"LogLabelStats.js","sources":["../../../../src/components/Logs/LogLabelStats.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { PureComponent } from 'react';\n\nimport { LogLabelStatsModel, GrafanaTheme2 } from '@grafana/data';\n\nimport { stylesFactory } from '../../themes';\nimport { withTheme2 } from '../../themes/index';\nimport { Themeable2 } from '../../types/theme';\n\n//Components\nimport { LogLabelStatsRow } from './LogLabelStatsRow';\n\nconst STATS_ROW_LIMIT = 5;\n\nconst getStyles = stylesFactory((theme: GrafanaTheme2) => {\n  return {\n    logsStats: css`\n      label: logs-stats;\n      background: inherit;\n      color: ${theme.colors.text.primary};\n      word-break: break-all;\n      width: fit-content;\n      max-width: 100%;\n    `,\n    logsStatsHeader: css`\n      label: logs-stats__header;\n      border-bottom: 1px solid ${theme.colors.border.medium};\n      display: flex;\n    `,\n    logsStatsTitle: css`\n      label: logs-stats__title;\n      font-weight: ${theme.typography.fontWeightMedium};\n      padding-right: ${theme.spacing(2)};\n      display: inline-block;\n      white-space: nowrap;\n      text-overflow: ellipsis;\n      flex-grow: 1;\n    `,\n    logsStatsClose: css`\n      label: logs-stats__close;\n      cursor: pointer;\n    `,\n    logsStatsBody: css`\n      label: logs-stats__body;\n      padding: 5px 0;\n    `,\n  };\n});\n\ninterface Props extends Themeable2 {\n  stats: LogLabelStatsModel[];\n  label: string;\n  value: string;\n  rowCount: number;\n  isLabel?: boolean;\n}\n\nclass UnThemedLogLabelStats extends PureComponent<Props> {\n  render() {\n    const { label, rowCount, stats, value, theme, isLabel } = this.props;\n    const style = getStyles(theme);\n    const topRows = stats.slice(0, STATS_ROW_LIMIT);\n    let activeRow = topRows.find((row) => row.value === value);\n    let otherRows = stats.slice(STATS_ROW_LIMIT);\n    const insertActiveRow = !activeRow;\n\n    // Remove active row from other to show extra\n    if (insertActiveRow) {\n      activeRow = otherRows.find((row) => row.value === value);\n      otherRows = otherRows.filter((row) => row.value !== value);\n    }\n\n    const otherCount = otherRows.reduce((sum, row) => sum + row.count, 0);\n    const topCount = topRows.reduce((sum, row) => sum + row.count, 0);\n    const total = topCount + otherCount;\n    const otherProportion = otherCount / total;\n\n    return (\n      <div className={style.logsStats} data-testid=\"logLabelStats\">\n        <div className={style.logsStatsHeader}>\n          <div className={style.logsStatsTitle}>\n            {label}: {total} of {rowCount} rows have that {isLabel ? 'label' : 'field'}\n          </div>\n        </div>\n        <div className={style.logsStatsBody}>\n          {topRows.map((stat) => (\n            <LogLabelStatsRow key={stat.value} {...stat} active={stat.value === value} />\n          ))}\n          {insertActiveRow && activeRow && <LogLabelStatsRow key={activeRow.value} {...activeRow} active />}\n          {otherCount > 0 && (\n            <LogLabelStatsRow key=\"__OTHERS__\" count={otherCount} value=\"Other\" proportion={otherProportion} />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\n/** @deprecated will be removed in the next major version */\nexport const LogLabelStats = withTheme2(UnThemedLogLabelStats);\nLogLabelStats.displayName = 'LogLabelStats';\n"],"names":["React"],"mappings":"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"}