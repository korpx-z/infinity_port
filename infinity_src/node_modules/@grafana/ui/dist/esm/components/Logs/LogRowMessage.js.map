{"version":3,"file":"LogRowMessage.js","sources":["../../../../src/components/Logs/LogRowMessage.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport memoizeOne from 'memoize-one';\nimport React, { PureComponent } from 'react';\nimport Highlighter from 'react-highlight-words';\nimport tinycolor from 'tinycolor2';\n\nimport { LogRowModel, findHighlightChunksInText, GrafanaTheme2 } from '@grafana/data';\n\nimport { withTheme2 } from '../../themes/index';\nimport { Themeable2 } from '../../types/theme';\nimport { IconButton } from '../IconButton/IconButton';\nimport { Tooltip } from '../Tooltip/Tooltip';\n\nimport { LogMessageAnsi } from './LogMessageAnsi';\nimport { LogRowContext } from './LogRowContext';\nimport { LogRowContextQueryErrors, HasMoreContextRows, LogRowContextRows } from './LogRowContextProvider';\nimport { getLogRowStyles } from './getLogRowStyles';\n\n/** @deprecated will be removed in the next major version */\nexport const MAX_CHARACTERS = 100000;\n\ninterface Props extends Themeable2 {\n  row: LogRowModel;\n  hasMoreContextRows?: HasMoreContextRows;\n  contextIsOpen: boolean;\n  wrapLogMessage: boolean;\n  prettifyLogMessage: boolean;\n  errors?: LogRowContextQueryErrors;\n  context?: LogRowContextRows;\n  showContextToggle?: (row?: LogRowModel) => boolean;\n  getRows: () => LogRowModel[];\n  onToggleContext: () => void;\n  updateLimit?: () => void;\n}\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  const outlineColor = tinycolor(theme.components.dashboard.background).setAlpha(0.7).toRgbString();\n\n  return {\n    positionRelative: css`\n      label: positionRelative;\n      position: relative;\n    `,\n    rowWithContext: css`\n      label: rowWithContext;\n      z-index: 1;\n      outline: 9999px solid ${outlineColor};\n    `,\n    horizontalScroll: css`\n      label: verticalScroll;\n      white-space: pre;\n    `,\n    contextNewline: css`\n      display: block;\n      margin-left: 0px;\n    `,\n    contextButton: css`\n      display: flex;\n      flex-wrap: nowrap;\n      flex-direction: row;\n      align-content: flex-end;\n      justify-content: space-evenly;\n      align-items: center;\n      position: absolute;\n      right: -8px;\n      top: 0;\n      bottom: auto;\n      width: 80px;\n      height: 36px;\n      background: ${theme.colors.background.primary};\n      box-shadow: ${theme.shadows.z3};\n      padding: ${theme.spacing(0, 0, 0, 0.5)};\n      z-index: 100;\n    `,\n  };\n};\n\nfunction renderLogMessage(\n  hasAnsi: boolean,\n  entry: string,\n  highlights: string[] | undefined,\n  highlightClassName: string\n) {\n  const needsHighlighter =\n    highlights && highlights.length > 0 && highlights[0] && highlights[0].length > 0 && entry.length < MAX_CHARACTERS;\n  const searchWords = highlights ?? [];\n  if (hasAnsi) {\n    const highlight = needsHighlighter ? { searchWords, highlightClassName } : undefined;\n    return <LogMessageAnsi value={entry} highlight={highlight} />;\n  } else if (needsHighlighter) {\n    return (\n      <Highlighter\n        textToHighlight={entry}\n        searchWords={searchWords}\n        findChunks={findHighlightChunksInText}\n        highlightClassName={highlightClassName}\n      />\n    );\n  } else {\n    return entry;\n  }\n}\n\nconst restructureLog = memoizeOne((line: string, prettifyLogMessage: boolean): string => {\n  if (prettifyLogMessage) {\n    try {\n      return JSON.stringify(JSON.parse(line), undefined, 2);\n    } catch (error) {\n      return line;\n    }\n  }\n  return line;\n});\n\nclass UnThemedLogRowMessage extends PureComponent<Props> {\n  onContextToggle = (e: React.SyntheticEvent<HTMLElement>) => {\n    e.stopPropagation();\n    this.props.onToggleContext();\n  };\n\n  render() {\n    const {\n      row,\n      theme,\n      errors,\n      hasMoreContextRows,\n      updateLimit,\n      context,\n      contextIsOpen,\n      showContextToggle,\n      wrapLogMessage,\n      prettifyLogMessage,\n      onToggleContext,\n    } = this.props;\n\n    const style = getLogRowStyles(theme, row.logLevel);\n    const { hasAnsi, raw } = row;\n    const restructuredEntry = restructureLog(raw, prettifyLogMessage);\n    const styles = getStyles(theme);\n\n    return (\n      // When context is open, the position has to be NOT relative.\n      // Setting the postion as inline-style to overwrite the more sepecific style definition from `style.logsRowMessage`.\n      <td style={contextIsOpen ? { position: 'unset' } : undefined} className={style.logsRowMessage}>\n        <div\n          className={cx({ [styles.positionRelative]: wrapLogMessage }, { [styles.horizontalScroll]: !wrapLogMessage })}\n        >\n          {contextIsOpen && context && (\n            <LogRowContext\n              row={row}\n              context={context}\n              errors={errors}\n              wrapLogMessage={wrapLogMessage}\n              hasMoreContextRows={hasMoreContextRows}\n              onOutsideClick={onToggleContext}\n              onLoadMoreContext={() => {\n                if (updateLimit) {\n                  updateLimit();\n                }\n              }}\n            />\n          )}\n          <span className={cx(styles.positionRelative, { [styles.rowWithContext]: contextIsOpen })}>\n            {renderLogMessage(hasAnsi, restructuredEntry, row.searchWords, style.logsRowMatchHighLight)}\n          </span>\n          {!contextIsOpen && showContextToggle?.(row) && (\n            <span\n              className={cx('log-row-context', style.context, styles.contextButton)}\n              onClick={(e) => e.stopPropagation()}\n            >\n              <Tooltip placement=\"top\" content={'Show context'}>\n                <IconButton size=\"md\" name=\"gf-show-context\" onClick={this.onContextToggle} />\n              </Tooltip>\n              <Tooltip placement=\"top\" content={'Copy'}>\n                <IconButton\n                  size=\"md\"\n                  name=\"copy\"\n                  onClick={() => navigator.clipboard.writeText(JSON.stringify(restructuredEntry))}\n                />\n              </Tooltip>\n            </span>\n          )}\n        </div>\n      </td>\n    );\n  }\n}\n\n/** @deprecated will be removed in the next major version */\nexport const LogRowMessage = withTheme2(UnThemedLogRowMessage);\nLogRowMessage.displayName = 'LogRowMessage';\n"],"names":["React"],"mappings":";;;;;;;;;;;;;;AAmBO,MAAM,cAAiB,GAAA,IAAA;AAgB9B,MAAM,SAAA,GAAY,CAAC,KAAyB,KAAA;AAC1C,EAAM,MAAA,YAAA,GAAe,SAAU,CAAA,KAAA,CAAM,UAAW,CAAA,SAAA,CAAU,UAAU,CAAE,CAAA,QAAA,CAAS,GAAG,CAAA,CAAE,WAAY,EAAA,CAAA;AAEhG,EAAO,OAAA;AAAA,IACL,gBAAkB,EAAA,GAAA,CAAA;AAAA;AAAA;AAAA,IAAA,CAAA;AAAA,IAIlB,cAAgB,EAAA,GAAA,CAAA;AAAA;AAAA;AAAA,4BAGU,EAAA,YAAA,CAAA;AAAA,IAAA,CAAA;AAAA,IAE1B,gBAAkB,EAAA,GAAA,CAAA;AAAA;AAAA;AAAA,IAAA,CAAA;AAAA,IAIlB,cAAgB,EAAA,GAAA,CAAA;AAAA;AAAA;AAAA,IAAA,CAAA;AAAA,IAIhB,aAAe,EAAA,GAAA,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAaC,EAAA,KAAA,CAAM,OAAO,UAAW,CAAA,OAAA,CAAA;AAAA,kBAAA,EACxB,MAAM,OAAQ,CAAA,EAAA,CAAA;AAAA,eAAA,EACjB,KAAM,CAAA,OAAA,CAAQ,CAAG,EAAA,CAAA,EAAG,GAAG,GAAG,CAAA,CAAA;AAAA;AAAA,IAAA,CAAA;AAAA,GAGzC,CAAA;AACF,CAAA,CAAA;AAEA,SAAS,gBACP,CAAA,OAAA,EACA,KACA,EAAA,UAAA,EACA,kBACA,EAAA;AACA,EAAA,MAAM,gBACJ,GAAA,UAAA,IAAc,UAAW,CAAA,MAAA,GAAS,KAAK,UAAW,CAAA,CAAC,CAAK,IAAA,UAAA,CAAW,CAAC,CAAA,CAAE,MAAS,GAAA,CAAA,IAAK,MAAM,MAAS,GAAA,cAAA,CAAA;AACrG,EAAM,MAAA,WAAA,GAAc,kCAAc,EAAC,CAAA;AACnC,EAAA,IAAI,OAAS,EAAA;AACX,IAAA,MAAM,SAAY,GAAA,gBAAA,GAAmB,EAAE,WAAA,EAAa,oBAAuB,GAAA,KAAA,CAAA,CAAA;AAC3E,IAAA,uBAAQA,cAAA,CAAA,aAAA,CAAA,cAAA,EAAA,EAAe,KAAO,EAAA,KAAA,EAAO,SAAsB,EAAA,CAAA,CAAA;AAAA,aAClD,gBAAkB,EAAA;AAC3B,IACE,uBAAAA,cAAA,CAAA,aAAA;AAAA,MAAC,WAAA;AAAA,MAAA;AAAA,QACC,eAAiB,EAAA,KAAA;AAAA,QACjB,WAAA;AAAA,QACA,UAAY,EAAA,yBAAA;AAAA,QACZ,kBAAA;AAAA,OAAA;AAAA,KACF,CAAA;AAAA,GAEG,MAAA;AACL,IAAO,OAAA,KAAA,CAAA;AAAA,GACT;AACF,CAAA;AAEA,MAAM,cAAiB,GAAA,UAAA,CAAW,CAAC,IAAA,EAAc,kBAAwC,KAAA;AACvF,EAAA,IAAI,kBAAoB,EAAA;AACtB,IAAI,IAAA;AACF,MAAA,OAAO,KAAK,SAAU,CAAA,IAAA,CAAK,MAAM,IAAI,CAAA,EAAG,QAAW,CAAC,CAAA,CAAA;AAAA,aAC7C,KAAP,EAAA;AACA,MAAO,OAAA,IAAA,CAAA;AAAA,KACT;AAAA,GACF;AACA,EAAO,OAAA,IAAA,CAAA;AACT,CAAC,CAAA,CAAA;AAED,MAAM,8BAA8B,aAAqB,CAAA;AAAA,EAAzD,WAAA,GAAA;AAAA,IAAA,KAAA,CAAA,GAAA,SAAA,CAAA,CAAA;AACE,IAAA,IAAA,CAAA,eAAA,GAAkB,CAAC,CAAyC,KAAA;AAC1D,MAAA,CAAA,CAAE,eAAgB,EAAA,CAAA;AAClB,MAAA,IAAA,CAAK,MAAM,eAAgB,EAAA,CAAA;AAAA,KAC7B,CAAA;AAAA,GAAA;AAAA,EAEA,MAAS,GAAA;AACP,IAAM,MAAA;AAAA,MACJ,GAAA;AAAA,MACA,KAAA;AAAA,MACA,MAAA;AAAA,MACA,kBAAA;AAAA,MACA,WAAA;AAAA,MACA,OAAA;AAAA,MACA,aAAA;AAAA,MACA,iBAAA;AAAA,MACA,cAAA;AAAA,MACA,kBAAA;AAAA,MACA,eAAA;AAAA,QACE,IAAK,CAAA,KAAA,CAAA;AAET,IAAA,MAAM,KAAQ,GAAA,eAAA,CAAgB,KAAO,EAAA,GAAA,CAAI,QAAQ,CAAA,CAAA;AACjD,IAAM,MAAA,EAAE,OAAS,EAAA,GAAA,EAAQ,GAAA,GAAA,CAAA;AACzB,IAAM,MAAA,iBAAA,GAAoB,cAAe,CAAA,GAAA,EAAK,kBAAkB,CAAA,CAAA;AAChE,IAAM,MAAA,MAAA,GAAS,UAAU,KAAK,CAAA,CAAA;AAE9B,IAAA;AAAA;AAAA;AAAA,sBAGEA,cAAA,CAAA,aAAA,CAAC,IAAG,EAAA,EAAA,KAAA,EAAO,aAAgB,GAAA,EAAE,QAAU,EAAA,OAAA,EAAY,GAAA,KAAA,CAAA,EAAW,SAAW,EAAA,KAAA,CAAM,cAC7E,EAAA,kBAAAA,cAAA,CAAA,aAAA;AAAA,QAAC,KAAA;AAAA,QAAA;AAAA,UACC,WAAW,EAAG,CAAA,EAAE,CAAC,MAAA,CAAO,gBAAgB,GAAG,cAAA,EAAkB,EAAA,EAAE,CAAC,MAAO,CAAA,gBAAgB,GAAG,CAAC,gBAAgB,CAAA;AAAA,SAAA;AAAA,QAE1G,iBAAiB,OAChB,oBAAAA,cAAA,CAAA,aAAA;AAAA,UAAC,aAAA;AAAA,UAAA;AAAA,YACC,GAAA;AAAA,YACA,OAAA;AAAA,YACA,MAAA;AAAA,YACA,cAAA;AAAA,YACA,kBAAA;AAAA,YACA,cAAgB,EAAA,eAAA;AAAA,YAChB,mBAAmB,MAAM;AACvB,cAAA,IAAI,WAAa,EAAA;AACf,gBAAY,WAAA,EAAA,CAAA;AAAA,eACd;AAAA,aACF;AAAA,WAAA;AAAA,SACF;AAAA,wBAEFA,cAAA,CAAA,aAAA,CAAC,UAAK,SAAW,EAAA,EAAA,CAAG,OAAO,gBAAkB,EAAA,EAAE,CAAC,MAAO,CAAA,cAAc,GAAG,aAAc,EAAC,KACpF,gBAAiB,CAAA,OAAA,EAAS,mBAAmB,GAAI,CAAA,WAAA,EAAa,KAAM,CAAA,qBAAqB,CAC5F,CAAA;AAAA,QACC,CAAC,aAAiB,KAAA,iBAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,iBAAA,CAAoB,GACrC,CAAA,CAAA,oBAAAA,cAAA,CAAA,aAAA;AAAA,UAAC,MAAA;AAAA,UAAA;AAAA,YACC,WAAW,EAAG,CAAA,iBAAA,EAAmB,KAAM,CAAA,OAAA,EAAS,OAAO,aAAa,CAAA;AAAA,YACpE,OAAS,EAAA,CAAC,CAAM,KAAA,CAAA,CAAE,eAAgB,EAAA;AAAA,WAAA;AAAA,0BAEjCA,cAAA,CAAA,aAAA,CAAA,OAAA,EAAA,EAAQ,SAAU,EAAA,KAAA,EAAM,SAAS,cAChC,EAAA,kBAAAA,cAAA,CAAA,aAAA,CAAC,UAAW,EAAA,EAAA,IAAA,EAAK,MAAK,IAAK,EAAA,iBAAA,EAAkB,OAAS,EAAA,IAAA,CAAK,iBAAiB,CAC9E,CAAA;AAAA,0BACCA,cAAA,CAAA,aAAA,CAAA,OAAA,EAAA,EAAQ,SAAU,EAAA,KAAA,EAAM,SAAS,MAChC,EAAA,kBAAAA,cAAA,CAAA,aAAA;AAAA,YAAC,UAAA;AAAA,YAAA;AAAA,cACC,IAAK,EAAA,IAAA;AAAA,cACL,IAAK,EAAA,MAAA;AAAA,cACL,OAAA,EAAS,MAAM,SAAU,CAAA,SAAA,CAAU,UAAU,IAAK,CAAA,SAAA,CAAU,iBAAiB,CAAC,CAAA;AAAA,aAAA;AAAA,WAElF,CAAA;AAAA,SACF;AAAA,OAGN,CAAA;AAAA,MAAA;AAAA,GAEJ;AACF,CAAA;AAGa,MAAA,aAAA,GAAgB,WAAW,qBAAqB,EAAA;AAC7D,aAAA,CAAc,WAAc,GAAA,eAAA;;;;"}