{"version":3,"file":"LogMessageAnsi.js","sources":["../../../../src/components/Logs/LogMessageAnsi.tsx"],"sourcesContent":["import ansicolor from 'ansicolor';\nimport React, { PureComponent } from 'react';\nimport Highlighter from 'react-highlight-words';\n\nimport { findHighlightChunksInText, GrafanaTheme2 } from '@grafana/data';\n\nimport { withTheme2 } from '../../themes';\nimport { Themeable2 } from '../../types';\n\ninterface Style {\n  [key: string]: string;\n}\n\ninterface ParsedChunk {\n  style: Style;\n  text: string;\n}\n\nfunction convertCSSToStyle(theme: GrafanaTheme2, css: string): Style {\n  return css.split(/;\\s*/).reduce<Style>((accumulated, line) => {\n    // The ansicolor package returns this color if the chunk has the ANSI dim\n    // style (`\\e[2m`), but it is nearly unreadable in the dark theme, so we use\n    // GrafanaTheme2 instead to style it in a way that works across all themes.\n    if (line === 'color:rgba(0,0,0,0.5)') {\n      return { color: theme.colors.text.secondary };\n    }\n\n    const match = line.match(/([^:\\s]+)\\s*:\\s*(.+)/);\n\n    if (match && match[1] && match[2]) {\n      const key = match[1].replace(/-([a-z])/g, (_, character) => character.toUpperCase());\n      accumulated[key] = match[2];\n    }\n\n    return accumulated;\n  }, {});\n}\n\ninterface Props extends Themeable2 {\n  value: string;\n  highlight?: {\n    searchWords: string[];\n    highlightClassName: string;\n  };\n}\n\ninterface State {\n  chunks: ParsedChunk[];\n  prevValue: string;\n}\n\n/** @deprecated will be removed in the next major version */\nexport class UnThemedLogMessageAnsi extends PureComponent<Props, State> {\n  state: State = {\n    chunks: [],\n    prevValue: '',\n  };\n\n  static getDerivedStateFromProps(props: Props, state: State) {\n    if (props.value === state.prevValue) {\n      return null;\n    }\n\n    const parsed = ansicolor.parse(props.value);\n\n    return {\n      chunks: parsed.spans.map((span) => {\n        return span.css\n          ? {\n              style: convertCSSToStyle(props.theme, span.css),\n              text: span.text,\n            }\n          : { text: span.text };\n      }),\n      prevValue: props.value,\n    };\n  }\n\n  render() {\n    const { chunks } = this.state;\n\n    return chunks.map((chunk, index) => {\n      const chunkText = this.props.highlight?.searchWords ? (\n        <Highlighter\n          key={index}\n          textToHighlight={chunk.text}\n          searchWords={this.props.highlight.searchWords}\n          findChunks={findHighlightChunksInText}\n          highlightClassName={this.props.highlight.highlightClassName}\n        />\n      ) : (\n        chunk.text\n      );\n      return chunk.style ? (\n        <span key={index} style={chunk.style} data-testid=\"ansiLogLine\">\n          {chunkText}\n        </span>\n      ) : (\n        chunkText\n      );\n    });\n  }\n}\n\n/** @deprecated will be removed in the next major version */\nexport const LogMessageAnsi = withTheme2(UnThemedLogMessageAnsi);\nLogMessageAnsi.displayName = 'LogMessageAnsi';\n"],"names":["React"],"mappings":"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"}