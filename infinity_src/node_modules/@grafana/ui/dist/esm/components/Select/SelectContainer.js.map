{"version":3,"file":"SelectContainer.js","sources":["../../../../src/components/Select/SelectContainer.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport React from 'react';\nimport { components, ContainerProps as BaseContainerProps, GroupBase } from 'react-select';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { stylesFactory } from '../../themes';\nimport { useTheme2 } from '../../themes/ThemeContext';\nimport { focusCss } from '../../themes/mixins';\nimport { sharedInputStyle } from '../Forms/commonStyles';\nimport { getInputStyles } from '../Input/Input';\n\nimport { CustomComponentProps } from './types';\n\n// prettier-ignore\nexport type SelectContainerProps<Option, isMulti extends boolean, Group extends GroupBase<Option>> =\n  BaseContainerProps<Option, isMulti, Group> & CustomComponentProps<Option, isMulti, Group>;\n\nexport const SelectContainer = <Option, isMulti extends boolean, Group extends GroupBase<Option>>(\n  props: SelectContainerProps<Option, isMulti, Group>\n) => {\n  const {\n    isDisabled,\n    isFocused,\n    children,\n    selectProps: { invalid = false },\n  } = props;\n\n  const theme = useTheme2();\n  const styles = getSelectContainerStyles(theme, isFocused, isDisabled, invalid);\n\n  return (\n    <components.SelectContainer {...props} className={cx(styles.wrapper, props.className)}>\n      {children}\n    </components.SelectContainer>\n  );\n};\n\nconst getSelectContainerStyles = stylesFactory(\n  (theme: GrafanaTheme2, focused: boolean, disabled: boolean, invalid: boolean) => {\n    const styles = getInputStyles({ theme, invalid });\n\n    return {\n      wrapper: cx(\n        styles.wrapper,\n        sharedInputStyle(theme, invalid),\n        focused &&\n          css`\n            ${focusCss(theme.v1)}\n          `,\n        disabled && styles.inputDisabled,\n        css`\n          position: relative;\n          box-sizing: border-box;\n          /* The display property is set by the styles prop in SelectBase because it's dependant on the width prop  */\n          flex-direction: row;\n          flex-wrap: wrap;\n          align-items: stretch;\n          justify-content: space-between;\n\n          min-height: 32px;\n          height: auto;\n          max-width: 100%;\n\n          /* Input padding is applied to the InputControl so the menu is aligned correctly */\n          padding: 0;\n          cursor: ${disabled ? 'not-allowed' : 'pointer'};\n        `\n      ),\n    };\n  }\n);\n"],"names":["React"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkBa,MAAA,eAAA,GAAkB,CAC7B,KACG,KAAA;AACH,EAAM,MAAA;AAAA,IACJ,UAAA;AAAA,IACA,SAAA;AAAA,IACA,QAAA;AAAA,IACA,WAAA,EAAa,EAAE,OAAA,GAAU,KAAM,EAAA;AAAA,GAC7B,GAAA,KAAA,CAAA;AAEJ,EAAA,MAAM,QAAQ,SAAU,EAAA,CAAA;AACxB,EAAA,MAAM,MAAS,GAAA,wBAAA,CAAyB,KAAO,EAAA,SAAA,EAAW,YAAY,OAAO,CAAA,CAAA;AAE7E,EAAA,uBACGA,cAAA,CAAA,aAAA,CAAA,UAAA,CAAW,eAAX,EAAA,aAAA,CAAA,cAAA,CAAA,EAAA,EAA+B,KAA/B,CAAA,EAAA,EAAsC,SAAW,EAAA,EAAA,CAAG,MAAO,CAAA,OAAA,EAAS,KAAM,CAAA,SAAS,MACjF,QACH,CAAA,CAAA;AAEJ,EAAA;AAEA,MAAM,wBAA2B,GAAA,aAAA;AAAA,EAC/B,CAAC,KAAA,EAAsB,OAAkB,EAAA,QAAA,EAAmB,OAAqB,KAAA;AAC/E,IAAA,MAAM,MAAS,GAAA,cAAA,CAAe,EAAE,KAAA,EAAO,SAAS,CAAA,CAAA;AAEhD,IAAO,OAAA;AAAA,MACL,OAAS,EAAA,EAAA;AAAA,QACP,MAAO,CAAA,OAAA;AAAA,QACP,gBAAA,CAAiB,OAAO,OAAO,CAAA;AAAA,QAC/B,OACE,IAAA,GAAA,CAAA;AAAA,YACI,EAAA,QAAA,CAAS,MAAM,EAAE,CAAA,CAAA;AAAA,UAAA,CAAA;AAAA,QAEvB,YAAY,MAAO,CAAA,aAAA;AAAA,QACnB,GAAA,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAA,EAeY,WAAW,aAAgB,GAAA,SAAA,CAAA;AAAA,QAAA,CAAA;AAAA,OAEzC;AAAA,KACF,CAAA;AAAA,GACF;AACF,CAAA;;;;"}