{"version":3,"file":"SingleValue.js","sources":["../../../../src/components/Select/SingleValue.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport React from 'react';\nimport { components, GroupBase, SingleValueProps } from 'react-select';\n\nimport { GrafanaTheme2, SelectableValue, toIconName } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\nimport { useDelayedSwitch } from '../../utils/useDelayedSwitch';\nimport { Icon } from '../Icon/Icon';\nimport { Spinner } from '../Spinner/Spinner';\nimport { FadeTransition } from '../transitions/FadeTransition';\nimport { SlideOutTransition } from '../transitions/SlideOutTransition';\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    singleValue: css`\n      label: singleValue;\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      box-sizing: border-box;\n      max-width: 100%;\n      grid-area: 1 / 1 / 2 / 3;\n    `,\n    spinnerWrapper: css`\n      width: 16px;\n      height: 16px;\n      display: inline-block;\n      margin-right: 10px;\n      position: relative;\n      vertical-align: middle;\n      overflow: hidden;\n    `,\n    spinnerIcon: css`\n      width: 100%;\n      height: 100%;\n      position: absolute;\n    `,\n    optionIcon: css`\n      margin-right: ${theme.spacing(1)};\n      color: ${theme.colors.text.secondary};\n    `,\n    disabled: css`\n      color: ${theme.colors.text.disabled};\n    `,\n    isOpen: css`\n      color: ${theme.colors.text.disabled};\n    `,\n  };\n};\n\ntype StylesType = ReturnType<typeof getStyles>;\n\nexport type Props<T> = SingleValueProps<SelectableValue<T>, boolean, GroupBase<SelectableValue<T>>>;\n\nexport const SingleValue = <T extends unknown>(props: Props<T>) => {\n  const { children, data, isDisabled } = props;\n  const styles = useStyles2(getStyles);\n  const loading = useDelayedSwitch(data.loading || false, { delay: 250, duration: 750 });\n  const icon = data.icon ? toIconName(data.icon) : undefined;\n\n  return (\n    <components.SingleValue\n      {...props}\n      className={cx(styles.singleValue, isDisabled && styles.disabled, props.selectProps.menuIsOpen && styles.isOpen)}\n    >\n      {data.imgUrl ? (\n        <FadeWithImage\n          loading={loading}\n          imgUrl={data.imgUrl}\n          styles={styles}\n          alt={(data.label ?? data.value) as string}\n        />\n      ) : (\n        <>\n          <SlideOutTransition horizontal size={16} visible={loading} duration={150}>\n            <div className={styles.spinnerWrapper}>\n              <Spinner className={styles.spinnerIcon} inline />\n            </div>\n          </SlideOutTransition>\n          {icon && <Icon name={icon} role=\"img\" className={styles.optionIcon} />}\n        </>\n      )}\n\n      {!data.hideText && children}\n    </components.SingleValue>\n  );\n};\n\nconst FadeWithImage = (props: { loading: boolean; imgUrl: string; styles: StylesType; alt?: string }) => {\n  return (\n    <div className={props.styles.spinnerWrapper}>\n      <FadeTransition duration={150} visible={props.loading}>\n        <Spinner className={props.styles.spinnerIcon} inline />\n      </FadeTransition>\n      <FadeTransition duration={150} visible={!props.loading}>\n        <img className={props.styles.spinnerIcon} src={props.imgUrl} alt={props.alt} />\n      </FadeTransition>\n    </div>\n  );\n};\n"],"names":["React"],"mappings":"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"}