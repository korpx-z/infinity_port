{"version":3,"file":"Dropdown.js","sources":["../../../../src/components/Dropdown/Dropdown.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport { FocusScope } from '@react-aria/focus';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { usePopperTooltip } from 'react-popper-tooltip';\nimport { CSSTransition } from 'react-transition-group';\n\nimport { ReactUtils } from '../../utils';\nimport { Portal } from '../Portal/Portal';\nimport { TooltipPlacement } from '../Tooltip/types';\n\nexport interface Props {\n  overlay: React.ReactElement | (() => React.ReactElement);\n  placement?: TooltipPlacement;\n  children: React.ReactElement | ((isOpen: boolean) => React.ReactElement);\n  /** Amount in pixels to nudge the dropdown vertically and horizontally, respectively. */\n  offset?: [number, number];\n  onVisibleChange?: (state: boolean) => void;\n}\n\nexport const Dropdown = React.memo(({ children, overlay, placement, offset, onVisibleChange }: Props) => {\n  const [show, setShow] = useState(false);\n  const transitionRef = useRef(null);\n\n  useEffect(() => {\n    onVisibleChange?.(show);\n  }, [onVisibleChange, show]);\n\n  const { getArrowProps, getTooltipProps, setTooltipRef, setTriggerRef, visible } = usePopperTooltip({\n    visible: show,\n    placement: placement,\n    onVisibleChange: setShow,\n    interactive: true,\n    delayHide: 0,\n    delayShow: 0,\n    offset: offset ?? [0, 8],\n    trigger: ['click'],\n  });\n\n  const animationDuration = 150;\n  const animationStyles = getStyles(animationDuration);\n\n  const onOverlayClicked = () => {\n    setShow(false);\n  };\n\n  const handleKeys = (event: React.KeyboardEvent) => {\n    if (event.key === 'Escape' || event.key === 'Tab') {\n      setShow(false);\n    }\n  };\n\n  return (\n    <>\n      {React.cloneElement(typeof children === 'function' ? children(visible) : children, {\n        ref: setTriggerRef,\n      })}\n      {visible && (\n        <Portal>\n          <FocusScope autoFocus restoreFocus contain>\n            {/*\n              this is handling bubbled events from the inner overlay\n              see https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/main/docs/rules/no-static-element-interactions.md#case-the-event-handler-is-only-being-used-to-capture-bubbled-events\n            */}\n            {/* eslint-disable-next-line jsx-a11y/no-static-element-interactions, jsx-a11y/click-events-have-key-events */}\n            <div ref={setTooltipRef} {...getTooltipProps()} onClick={onOverlayClicked} onKeyDown={handleKeys}>\n              <div {...getArrowProps({ className: 'tooltip-arrow' })} />\n              <CSSTransition\n                nodeRef={transitionRef}\n                appear={true}\n                in={true}\n                timeout={{ appear: animationDuration, exit: 0, enter: 0 }}\n                classNames={animationStyles}\n              >\n                <div ref={transitionRef}>{ReactUtils.renderOrCallToRender(overlay)}</div>\n              </CSSTransition>\n            </div>\n          </FocusScope>\n        </Portal>\n      )}\n    </>\n  );\n});\n\nDropdown.displayName = 'Dropdown';\n\nconst getStyles = (duration: number) => {\n  return {\n    appear: css({\n      opacity: '0',\n      position: 'relative',\n      transform: 'scaleY(0.5)',\n      transformOrigin: 'top',\n    }),\n    appearActive: css({\n      opacity: '1',\n      transform: 'scaleY(1)',\n      transition: `transform ${duration}ms cubic-bezier(0.2, 0, 0.2, 1), opacity ${duration}ms cubic-bezier(0.2, 0, 0.2, 1)`,\n    }),\n  };\n};\n"],"names":["React","ReactUtils.renderOrCallToRender"],"mappings":"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"}