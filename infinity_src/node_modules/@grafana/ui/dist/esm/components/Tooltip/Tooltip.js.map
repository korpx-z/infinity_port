{"version":3,"file":"Tooltip.js","sources":["../../../../src/components/Tooltip/Tooltip.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { usePopperTooltip } from 'react-popper-tooltip';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes/ThemeContext';\nimport { buildTooltipTheme } from '../../utils/tooltipUtils';\nimport { Portal } from '../Portal/Portal';\n\nimport { PopoverContent, TooltipPlacement } from './types';\n\nexport interface TooltipProps {\n  theme?: 'info' | 'error' | 'info-alt';\n  show?: boolean;\n  placement?: TooltipPlacement;\n  content: PopoverContent;\n  children: JSX.Element;\n  /**\n   * Set to true if you want the tooltip to stay long enough so the user can move mouse over content to select text or click a link\n   */\n  interactive?: boolean;\n}\n\nexport const Tooltip = React.memo(({ children, theme, interactive, show, placement, content }: TooltipProps) => {\n  const [controlledVisible, setControlledVisible] = React.useState(show);\n\n  useEffect(() => {\n    if (controlledVisible !== false) {\n      const handleKeyDown = (enterKey: KeyboardEvent) => {\n        if (enterKey.key === 'Escape') {\n          setControlledVisible(false);\n        }\n      };\n      document.addEventListener('keydown', handleKeyDown);\n      return () => {\n        document.removeEventListener('keydown', handleKeyDown);\n      };\n    } else {\n      return;\n    }\n  }, [controlledVisible]);\n\n  const { getArrowProps, getTooltipProps, setTooltipRef, setTriggerRef, visible, update } = usePopperTooltip({\n    visible: controlledVisible,\n    placement: placement,\n    interactive: interactive,\n    delayHide: interactive ? 100 : 0,\n    delayShow: 150,\n    offset: [0, 8],\n    trigger: ['hover', 'focus'],\n    onVisibleChange: setControlledVisible,\n  });\n\n  const styles = useStyles2(getStyles);\n  const style = styles[theme ?? 'info'];\n\n  return (\n    <>\n      {React.cloneElement(children, {\n        ref: setTriggerRef,\n        tabIndex: 0, // tooltip should be keyboard focusable\n      })}\n      {visible && (\n        <Portal>\n          <div ref={setTooltipRef} {...getTooltipProps({ className: style.container })}>\n            <div {...getArrowProps({ className: style.arrow })} />\n            {typeof content === 'string' && content}\n            {React.isValidElement(content) && React.cloneElement(content)}\n            {typeof content === 'function' &&\n              update &&\n              content({\n                updatePopperPosition: update,\n              })}\n          </div>\n        </Portal>\n      )}\n    </>\n  );\n});\n\nTooltip.displayName = 'Tooltip';\n\nexport const getStyles = (theme: GrafanaTheme2) => {\n  const info = buildTooltipTheme(\n    theme,\n    theme.components.tooltip.background,\n    theme.components.tooltip.background,\n    theme.components.tooltip.text,\n    { topBottom: 0.5, rightLeft: 1 }\n  );\n  const error = buildTooltipTheme(\n    theme,\n    theme.colors.error.main,\n    theme.colors.error.main,\n    theme.colors.error.contrastText,\n    { topBottom: 0.5, rightLeft: 1 }\n  );\n\n  return {\n    info,\n    ['info-alt']: info,\n    error,\n  };\n};\n"],"names":["React"],"mappings":"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"}