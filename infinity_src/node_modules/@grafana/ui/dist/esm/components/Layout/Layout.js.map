{"version":3,"file":"Layout.js","sources":["../../../../src/components/Layout/Layout.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport React, { HTMLProps, useCallback } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\n\nenum Orientation {\n  Horizontal,\n  Vertical,\n}\ntype Spacing = 'none' | 'xs' | 'sm' | 'md' | 'lg';\ntype Justify = 'flex-start' | 'flex-end' | 'space-between' | 'center';\ntype Align = 'normal' | 'flex-start' | 'flex-end' | 'center';\n\nexport interface LayoutProps extends Omit<HTMLProps<HTMLDivElement>, 'align' | 'children' | 'wrap'> {\n  children: React.ReactNode[] | React.ReactNode;\n  orientation?: Orientation;\n  spacing?: Spacing;\n  justify?: Justify;\n  align?: Align;\n  width?: string;\n  wrap?: boolean;\n}\n\nexport interface ContainerProps {\n  padding?: Spacing;\n  margin?: Spacing;\n  grow?: number;\n  shrink?: number;\n}\n\nexport const Layout = ({\n  children,\n  orientation = Orientation.Horizontal,\n  spacing = 'sm',\n  justify = 'flex-start',\n  align = 'normal',\n  wrap = false,\n  width = '100%',\n  height = '100%',\n  ...rest\n}: LayoutProps) => {\n  const styles = useStyles2(\n    useCallback(\n      (theme) => getStyles(theme, orientation, spacing, justify, align, wrap),\n      [align, justify, orientation, spacing, wrap]\n    )\n  );\n\n  return (\n    <div className={styles.layout} style={{ width, height }} {...rest}>\n      {React.Children.toArray(children)\n        .filter(Boolean)\n        .map((child, index) => {\n          return (\n            <div className={styles.childWrapper} key={index}>\n              {child}\n            </div>\n          );\n        })}\n    </div>\n  );\n};\n\nexport const HorizontalGroup = ({\n  children,\n  spacing,\n  justify,\n  align = 'center',\n  wrap,\n  width,\n  height,\n}: Omit<LayoutProps, 'orientation'>) => (\n  <Layout\n    spacing={spacing}\n    justify={justify}\n    orientation={Orientation.Horizontal}\n    align={align}\n    width={width}\n    height={height}\n    wrap={wrap}\n  >\n    {children}\n  </Layout>\n);\nexport const VerticalGroup = ({\n  children,\n  spacing,\n  justify,\n  align,\n  width,\n  height,\n}: Omit<LayoutProps, 'orientation' | 'wrap'>) => (\n  <Layout\n    spacing={spacing}\n    justify={justify}\n    orientation={Orientation.Vertical}\n    align={align}\n    width={width}\n    height={height}\n  >\n    {children}\n  </Layout>\n);\n\nexport const Container = ({ children, padding, margin, grow, shrink }: React.PropsWithChildren<ContainerProps>) => {\n  const styles = useStyles2(useCallback((theme) => getContainerStyles(theme, padding, margin), [padding, margin]));\n\n  return (\n    <div\n      className={cx(\n        styles.wrapper,\n        grow !== undefined &&\n          css`\n            flex-grow: ${grow};\n          `,\n        shrink !== undefined &&\n          css`\n            flex-shrink: ${shrink};\n          `\n      )}\n    >\n      {children}\n    </div>\n  );\n};\n\nconst getStyles = (\n  theme: GrafanaTheme2,\n  orientation: Orientation,\n  spacing: Spacing,\n  justify: Justify,\n  align: Align,\n  wrap: boolean\n) => {\n  const finalSpacing = spacing !== 'none' ? theme.spacing(spacingToNumber[spacing]) : 0;\n\n  // compensate for last row margin when wrapped, horizontal layout\n  const marginCompensation =\n    (orientation === Orientation.Horizontal && !wrap) || orientation === Orientation.Vertical ? 0 : `-${finalSpacing}`;\n\n  const label = orientation === Orientation.Vertical ? 'vertical-group' : 'horizontal-group';\n\n  return {\n    layout: css`\n      label: ${label};\n      display: flex;\n      flex-direction: ${orientation === Orientation.Vertical ? 'column' : 'row'};\n      flex-wrap: ${wrap ? 'wrap' : 'nowrap'};\n      justify-content: ${justify};\n      align-items: ${align};\n      height: 100%;\n      max-width: 100%;\n      // compensate for last row margin when wrapped, horizontal layout\n      margin-bottom: ${marginCompensation};\n    `,\n    childWrapper: css`\n      label: layoutChildrenWrapper;\n      margin-bottom: ${orientation === Orientation.Horizontal && !wrap ? 0 : finalSpacing};\n      margin-right: ${orientation === Orientation.Horizontal ? finalSpacing : 0};\n      display: flex;\n      align-items: ${align};\n\n      &:last-child {\n        margin-bottom: ${orientation === Orientation.Vertical && 0};\n        margin-right: ${orientation === Orientation.Horizontal && 0};\n      }\n    `,\n  };\n};\n\nconst spacingToNumber: Record<Spacing, number> = {\n  none: 0,\n  xs: 0.5,\n  sm: 1,\n  md: 2,\n  lg: 3,\n};\n\nconst getContainerStyles = (theme: GrafanaTheme2, padding?: Spacing, margin?: Spacing) => {\n  const paddingSize = (padding && padding !== 'none' && theme.spacing(spacingToNumber[padding])) || 0;\n  const marginSize = (margin && margin !== 'none' && theme.spacing(spacingToNumber[margin])) || 0;\n  return {\n    wrapper: css`\n      label: container;\n      margin: ${marginSize};\n      padding: ${paddingSize};\n    `,\n  };\n};\n"],"names":["React"],"mappings":"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"}