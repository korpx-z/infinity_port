{"version":3,"file":"CalendarBody.js","sources":["../../../../../src/components/DateTimePickers/TimeRangePicker/CalendarBody.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { useCallback } from 'react';\nimport Calendar from 'react-calendar';\n\nimport { GrafanaTheme2, dateTime, dateTimeParse, DateTime, TimeZone } from '@grafana/data';\n\nimport { useStyles2 } from '../../../themes';\nimport { Icon } from '../../Icon/Icon';\n\nimport { TimePickerCalendarProps } from './TimePickerCalendar';\n\nexport function Body({ onChange, from, to, timeZone }: TimePickerCalendarProps) {\n  const value = inputToValue(from, to);\n  const onCalendarChange = useOnCalendarChange(onChange, timeZone);\n  const styles = useStyles2(getBodyStyles);\n\n  return (\n    <Calendar\n      selectRange={true}\n      next2Label={null}\n      prev2Label={null}\n      className={styles.body}\n      tileClassName={styles.title}\n      value={value}\n      nextLabel={<Icon name=\"angle-right\" />}\n      prevLabel={<Icon name=\"angle-left\" />}\n      onChange={onCalendarChange}\n      locale=\"en\"\n    />\n  );\n}\n\nBody.displayName = 'Body';\n\nexport function inputToValue(from: DateTime, to: DateTime, invalidDateDefault: Date = new Date()): [Date, Date] {\n  const fromAsDate = from.toDate();\n  const toAsDate = to.toDate();\n  const fromAsValidDate = dateTime(fromAsDate).isValid() ? fromAsDate : invalidDateDefault;\n  const toAsValidDate = dateTime(toAsDate).isValid() ? toAsDate : invalidDateDefault;\n\n  if (fromAsValidDate > toAsValidDate) {\n    return [toAsValidDate, fromAsValidDate];\n  }\n  return [fromAsValidDate, toAsValidDate];\n}\n\nfunction useOnCalendarChange(onChange: (from: DateTime, to: DateTime) => void, timeZone?: TimeZone) {\n  return useCallback(\n    (value: Date | Date[]) => {\n      if (!Array.isArray(value)) {\n        return console.error('onCalendarChange: should be run in selectRange={true}');\n      }\n\n      const from = dateTimeParse(dateInfo(value[0]), { timeZone });\n      const to = dateTimeParse(dateInfo(value[1]), { timeZone });\n\n      onChange(from, to);\n    },\n    [onChange, timeZone]\n  );\n}\n\nfunction dateInfo(date: Date): number[] {\n  return [date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds()];\n}\n\nexport const getBodyStyles = (theme: GrafanaTheme2) => {\n  // If a time range is part of only 1 day but does not encompass the whole day,\n  // the class that react-calendar uses is '--hasActive' by itself (without being part of a '--range')\n  const hasActiveSelector = `.react-calendar__tile--hasActive:not(.react-calendar__tile--range)`;\n  return {\n    title: css`\n      color: ${theme.colors.text.primary};\n      background-color: ${theme.colors.background.primary};\n      font-size: ${theme.typography.size.md};\n      border: 1px solid transparent;\n\n      &:hover {\n        position: relative;\n      }\n\n      &:disabled {\n        color: ${theme.colors.action.disabledText};\n      }\n    `,\n    body: css`\n      z-index: ${theme.zIndex.modal};\n      background-color: ${theme.colors.background.primary};\n      width: 268px;\n\n      .react-calendar__navigation {\n        display: flex;\n      }\n\n      .react-calendar__navigation__label,\n      .react-calendar__navigation__arrow,\n      .react-calendar__navigation {\n        padding-top: 4px;\n        background-color: inherit;\n        color: ${theme.colors.text.primary};\n        border: 0;\n        font-weight: ${theme.typography.fontWeightMedium};\n      }\n\n      .react-calendar__month-view__weekdays {\n        background-color: inherit;\n        text-align: center;\n        color: ${theme.colors.primary.text};\n\n        abbr {\n          border: 0;\n          text-decoration: none;\n          cursor: default;\n          display: block;\n          padding: 4px 0 4px 0;\n        }\n      }\n\n      .react-calendar__month-view__days {\n        background-color: inherit;\n      }\n\n      .react-calendar__tile,\n      .react-calendar__tile--now {\n        margin-bottom: 4px;\n        background-color: inherit;\n        height: 26px;\n      }\n\n      .react-calendar__navigation__label,\n      .react-calendar__navigation > button:focus,\n      .time-picker-calendar-tile:focus {\n        outline: 0;\n      }\n\n      ${hasActiveSelector},\n      .react-calendar__tile--active,\n      .react-calendar__tile--active:hover {\n        color: ${theme.colors.primary.contrastText};\n        font-weight: ${theme.typography.fontWeightMedium};\n        background: ${theme.colors.primary.main};\n        box-shadow: none;\n        border: 0px;\n      }\n\n      .react-calendar__tile--rangeEnd,\n      .react-calendar__tile--rangeStart {\n        padding: 0;\n        border: 0px;\n        color: ${theme.colors.primary.contrastText};\n        font-weight: ${theme.typography.fontWeightMedium};\n        background: ${theme.colors.primary.main};\n\n        abbr {\n          background-color: ${theme.colors.primary.main};\n          border-radius: 100px;\n          display: block;\n          padding-top: 2px;\n          height: 26px;\n        }\n      }\n\n      ${hasActiveSelector},\n      .react-calendar__tile--rangeStart {\n        border-top-left-radius: 20px;\n        border-bottom-left-radius: 20px;\n      }\n\n      ${hasActiveSelector},\n      .react-calendar__tile--rangeEnd {\n        border-top-right-radius: 20px;\n        border-bottom-right-radius: 20px;\n      }\n    `,\n  };\n};\n"],"names":["React"],"mappings":"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"}