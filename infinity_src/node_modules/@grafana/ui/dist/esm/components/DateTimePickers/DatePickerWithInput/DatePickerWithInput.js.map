{"version":3,"file":"DatePickerWithInput.js","sources":["../../../../../src/components/DateTimePickers/DatePickerWithInput/DatePickerWithInput.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { ChangeEvent } from 'react';\n\nimport { dateTime } from '@grafana/data';\n\nimport { useStyles2 } from '../../../themes';\nimport { Props as InputProps, Input } from '../../Input/Input';\nimport { DatePicker } from '../DatePicker/DatePicker';\n\nexport const formatDate = (date: Date | string) => dateTime(date).format('L');\n\n/** @public */\nexport interface DatePickerWithInputProps extends Omit<InputProps, 'ref' | 'value' | 'onChange'> {\n  /** Value selected by the DatePicker */\n  value?: Date | string;\n  /** The minimum date the value can be set to */\n  minDate?: Date;\n  /** The maximum date the value can be set to */\n  maxDate?: Date;\n  /** Handles changes when a new date is selected */\n  onChange: (value: Date | string) => void;\n  /** Hide the calendar when date is selected */\n  closeOnSelect?: boolean;\n  /** Text that appears when the input has no text */\n  placeholder?: string;\n}\n\n/** @public */\nexport const DatePickerWithInput = ({\n  value,\n  minDate,\n  maxDate,\n  onChange,\n  closeOnSelect,\n  placeholder = 'Date',\n  ...rest\n}: DatePickerWithInputProps) => {\n  const [open, setOpen] = React.useState(false);\n  const styles = useStyles2(getStyles);\n\n  return (\n    <div className={styles.container}>\n      <Input\n        type=\"text\"\n        autoComplete={'off'}\n        placeholder={placeholder}\n        value={value ? formatDate(value) : value}\n        onClick={() => setOpen(true)}\n        onChange={(ev: ChangeEvent<HTMLInputElement>) => {\n          // Allow resetting the date\n          if (ev.target.value === '') {\n            onChange('');\n          }\n        }}\n        className={styles.input}\n        {...rest}\n      />\n      <DatePicker\n        isOpen={open}\n        value={value && typeof value !== 'string' ? value : dateTime().toDate()}\n        minDate={minDate}\n        maxDate={maxDate}\n        onChange={(ev) => {\n          onChange(ev);\n          if (closeOnSelect) {\n            setOpen(false);\n          }\n        }}\n        onClose={() => setOpen(false)}\n      />\n    </div>\n  );\n};\n\nconst getStyles = () => {\n  return {\n    container: css`\n      position: relative;\n    `,\n    input: css`\n    /* hides the native Calendar picker icon given when using type=date */\n    input[type='date']::-webkit-inner-spin-button,\n    input[type='date']::-webkit-calendar-picker-indicator {\n    display: none;\n    -webkit-appearance: none;\n    `,\n  };\n};\n"],"names":["React"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASO,MAAM,aAAa,CAAC,IAAA,KAAwB,SAAS,IAAI,CAAA,CAAE,OAAO,GAAG,EAAA;AAmB/D,MAAA,mBAAA,GAAsB,CAAC,EAQJ,KAAA;AARI,EAClC,IAAA,EAAA,GAAA,EAAA,EAAA;AAAA,IAAA,KAAA;AAAA,IACA,OAAA;AAAA,IACA,OAAA;AAAA,IACA,QAAA;AAAA,IACA,aAAA;AAAA,IACA,WAAc,GAAA,MAAA;AAAA,GAlChB,GA4BoC,EAO/B,EAAA,IAAA,GAAA,SAAA,CAP+B,EAO/B,EAAA;AAAA,IANH,OAAA;AAAA,IACA,SAAA;AAAA,IACA,SAAA;AAAA,IACA,UAAA;AAAA,IACA,eAAA;AAAA,IACA,aAAA;AAAA,GAAA,CAAA,CAAA;AAGA,EAAA,MAAM,CAAC,IAAM,EAAA,OAAO,CAAI,GAAAA,cAAA,CAAM,SAAS,KAAK,CAAA,CAAA;AAC5C,EAAM,MAAA,MAAA,GAAS,WAAW,SAAS,CAAA,CAAA;AAEnC,EAAA,uBACGA,cAAA,CAAA,aAAA,CAAA,KAAA,EAAA,EAAI,SAAW,EAAA,MAAA,CAAO,SACrB,EAAA,kBAAAA,cAAA,CAAA,aAAA;AAAA,IAAC,KAAA;AAAA,IAAA,cAAA,CAAA;AAAA,MACC,IAAK,EAAA,MAAA;AAAA,MACL,YAAc,EAAA,KAAA;AAAA,MACd,WAAA;AAAA,MACA,KAAO,EAAA,KAAA,GAAQ,UAAW,CAAA,KAAK,CAAI,GAAA,KAAA;AAAA,MACnC,OAAA,EAAS,MAAM,OAAA,CAAQ,IAAI,CAAA;AAAA,MAC3B,QAAA,EAAU,CAAC,EAAsC,KAAA;AAE/C,QAAI,IAAA,EAAA,CAAG,MAAO,CAAA,KAAA,KAAU,EAAI,EAAA;AAC1B,UAAA,QAAA,CAAS,EAAE,CAAA,CAAA;AAAA,SACb;AAAA,OACF;AAAA,MACA,WAAW,MAAO,CAAA,KAAA;AAAA,KACd,EAAA,IAAA,CAAA;AAAA,GAEN,kBAAAA,cAAA,CAAA,aAAA;AAAA,IAAC,UAAA;AAAA,IAAA;AAAA,MACC,MAAQ,EAAA,IAAA;AAAA,MACR,KAAA,EAAO,SAAS,OAAO,KAAA,KAAU,WAAW,KAAQ,GAAA,QAAA,GAAW,MAAO,EAAA;AAAA,MACtE,OAAA;AAAA,MACA,OAAA;AAAA,MACA,QAAA,EAAU,CAAC,EAAO,KAAA;AAChB,QAAA,QAAA,CAAS,EAAE,CAAA,CAAA;AACX,QAAA,IAAI,aAAe,EAAA;AACjB,UAAA,OAAA,CAAQ,KAAK,CAAA,CAAA;AAAA,SACf;AAAA,OACF;AAAA,MACA,OAAA,EAAS,MAAM,OAAA,CAAQ,KAAK,CAAA;AAAA,KAAA;AAAA,GAEhC,CAAA,CAAA;AAEJ,EAAA;AAEA,MAAM,YAAY,MAAM;AACtB,EAAO,OAAA;AAAA,IACL,SAAW,EAAA,GAAA,CAAA;AAAA;AAAA,IAAA,CAAA;AAAA,IAGX,KAAO,EAAA,GAAA,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAA,CAAA;AAAA,GAOT,CAAA;AACF,CAAA;;;;"}