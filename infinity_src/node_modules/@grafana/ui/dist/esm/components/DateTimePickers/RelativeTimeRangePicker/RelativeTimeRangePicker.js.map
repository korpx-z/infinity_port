{"version":3,"file":"RelativeTimeRangePicker.js","sources":["../../../../../src/components/DateTimePickers/RelativeTimeRangePicker/RelativeTimeRangePicker.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport { useDialog } from '@react-aria/dialog';\nimport { FocusScope } from '@react-aria/focus';\nimport { useOverlay } from '@react-aria/overlays';\nimport React, { FormEvent, useCallback, useRef, useState } from 'react';\nimport { usePopper } from 'react-popper';\n\nimport { RelativeTimeRange, GrafanaTheme2, TimeOption } from '@grafana/data';\n\nimport { useStyles2 } from '../../../themes';\nimport { Trans, t } from '../../../utils/i18n';\nimport { Button } from '../../Button';\nimport CustomScrollbar from '../../CustomScrollbar/CustomScrollbar';\nimport { Field } from '../../Forms/Field';\nimport { Icon } from '../../Icon/Icon';\nimport { getInputStyles, Input } from '../../Input/Input';\nimport { Portal } from '../../Portal/Portal';\nimport { Tooltip } from '../../Tooltip/Tooltip';\nimport { TimePickerTitle } from '../TimeRangePicker/TimePickerTitle';\nimport { TimeRangeList } from '../TimeRangePicker/TimeRangeList';\nimport { quickOptions } from '../options';\n\nimport {\n  isRangeValid,\n  isRelativeFormat,\n  mapOptionToRelativeTimeRange,\n  mapRelativeTimeRangeToOption,\n  RangeValidation,\n} from './utils';\n\n/**\n * @internal\n */\nexport interface RelativeTimeRangePickerProps {\n  timeRange: RelativeTimeRange;\n  onChange: (timeRange: RelativeTimeRange) => void;\n}\n\ntype InputState = {\n  value: string;\n  validation: RangeValidation;\n};\n\nconst validOptions = quickOptions.filter((o) => isRelativeFormat(o.from));\n\n/**\n * @internal\n */\nexport function RelativeTimeRangePicker(props: RelativeTimeRangePickerProps) {\n  const { timeRange, onChange } = props;\n  const [isOpen, setIsOpen] = useState(false);\n  const onClose = useCallback(() => setIsOpen(false), []);\n  const timeOption = mapRelativeTimeRangeToOption(timeRange);\n  const [from, setFrom] = useState<InputState>({ value: timeOption.from, validation: isRangeValid(timeOption.from) });\n  const [to, setTo] = useState<InputState>({ value: timeOption.to, validation: isRangeValid(timeOption.to) });\n  const ref = useRef<HTMLDivElement>(null);\n  const { overlayProps, underlayProps } = useOverlay(\n    { onClose: () => setIsOpen(false), isDismissable: true, isOpen },\n    ref\n  );\n  const { dialogProps } = useDialog({}, ref);\n\n  const [markerElement, setMarkerElement] = useState<HTMLDivElement | null>(null);\n  const [selectorElement, setSelectorElement] = useState<HTMLDivElement | null>(null);\n  const popper = usePopper(markerElement, selectorElement, {\n    placement: 'auto-start',\n  });\n\n  const styles = useStyles2(getStyles(from.validation.errorMessage, to.validation.errorMessage));\n\n  const onChangeTimeOption = (option: TimeOption) => {\n    const relativeTimeRange = mapOptionToRelativeTimeRange(option);\n    if (!relativeTimeRange) {\n      return;\n    }\n    onClose();\n    setFrom({ ...from, value: option.from });\n    setTo({ ...to, value: option.to });\n    onChange(relativeTimeRange);\n  };\n\n  const onOpen = useCallback(\n    (event: FormEvent<HTMLButtonElement>) => {\n      event.stopPropagation();\n      event.preventDefault();\n      setIsOpen(!isOpen);\n    },\n    [isOpen]\n  );\n\n  const onApply = (event: FormEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n\n    if (!to.validation.isValid || !from.validation.isValid) {\n      return;\n    }\n\n    const timeRange = mapOptionToRelativeTimeRange({\n      from: from.value,\n      to: to.value,\n      display: '',\n    });\n\n    if (!timeRange) {\n      return;\n    }\n\n    onChange(timeRange);\n    setIsOpen(false);\n  };\n\n  return (\n    <div className={styles.container} ref={setMarkerElement}>\n      <button className={styles.pickerInput} type=\"button\" onClick={onOpen}>\n        <span className={styles.clockIcon}>\n          <Icon name=\"clock-nine\" />\n        </span>\n        <span>\n          {timeOption.from} to {timeOption.to}\n        </span>\n        <span className={styles.caretIcon}>\n          <Icon name={isOpen ? 'angle-up' : 'angle-down'} size=\"lg\" />\n        </span>\n      </button>\n      {isOpen && (\n        <Portal>\n          <div role=\"presentation\" className={styles.backdrop} {...underlayProps} />\n          <FocusScope contain autoFocus restoreFocus>\n            <div ref={ref} {...overlayProps} {...dialogProps}>\n              <div\n                className={styles.content}\n                ref={setSelectorElement}\n                style={popper.styles.popper}\n                {...popper.attributes}\n              >\n                <div className={styles.body}>\n                  <CustomScrollbar className={styles.leftSide} hideHorizontalTrack>\n                    <TimeRangeList\n                      title={t('time-picker.time-range.example-title', 'Example time ranges')}\n                      options={validOptions}\n                      onChange={onChangeTimeOption}\n                      value={timeOption}\n                    />\n                  </CustomScrollbar>\n                  <div className={styles.rightSide}>\n                    <div className={styles.title}>\n                      <TimePickerTitle>\n                        <Tooltip content={<TooltipContent />} placement=\"bottom\" theme=\"info\">\n                          <div>\n                            <Trans i18nKey=\"time-picker.time-range.specify\">\n                              Specify time range <Icon name=\"info-circle\" />\n                            </Trans>\n                          </div>\n                        </Tooltip>\n                      </TimePickerTitle>\n                    </div>\n                    <Field label=\"From\" invalid={!from.validation.isValid} error={from.validation.errorMessage}>\n                      <Input\n                        onClick={(event) => event.stopPropagation()}\n                        onBlur={() => setFrom({ ...from, validation: isRangeValid(from.value) })}\n                        onChange={(event) => setFrom({ ...from, value: event.currentTarget.value })}\n                        value={from.value}\n                      />\n                    </Field>\n                    <Field label=\"To\" invalid={!to.validation.isValid} error={to.validation.errorMessage}>\n                      <Input\n                        onClick={(event) => event.stopPropagation()}\n                        onBlur={() => setTo({ ...to, validation: isRangeValid(to.value) })}\n                        onChange={(event) => setTo({ ...to, value: event.currentTarget.value })}\n                        value={to.value}\n                      />\n                    </Field>\n                    <Button aria-label=\"TimePicker submit button\" onClick={onApply}>\n                      Apply time range\n                    </Button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </FocusScope>\n        </Portal>\n      )}\n    </div>\n  );\n}\n\nconst TooltipContent = () => {\n  const styles = useStyles2(toolTipStyles);\n  return (\n    <>\n      <div className={styles.supported}>\n        Supported formats: <code className={styles.tooltip}>now-[digit]s/m/h/d/w</code>\n      </div>\n      <div>Example: to select a time range from 10 minutes ago to now</div>\n      <code className={styles.tooltip}>From: now-10m To: now</code>\n      <div className={styles.link}>\n        For more information see{' '}\n        <a href=\"https://grafana.com/docs/grafana/latest/dashboards/time-range-controls/\">\n          docs <Icon name=\"external-link-alt\" />\n        </a>\n        .\n      </div>\n    </>\n  );\n};\n\nconst toolTipStyles = (theme: GrafanaTheme2) => ({\n  supported: css`\n    margin-bottom: ${theme.spacing(1)};\n  `,\n  tooltip: css`\n    margin: 0;\n  `,\n  link: css`\n    margin-top: ${theme.spacing(1)};\n  `,\n});\n\nconst getStyles = (fromError?: string, toError?: string) => (theme: GrafanaTheme2) => {\n  const inputStyles = getInputStyles({ theme, invalid: false });\n  const bodyMinimumHeight = 250;\n  const bodyHeight = bodyMinimumHeight + calculateErrorHeight(theme, fromError) + calculateErrorHeight(theme, toError);\n\n  return {\n    backdrop: css`\n      position: fixed;\n      z-index: ${theme.zIndex.modalBackdrop};\n      top: 0;\n      right: 0;\n      bottom: 0;\n      left: 0;\n    `,\n    container: css`\n      display: flex;\n      position: relative;\n    `,\n    pickerInput: cx(\n      inputStyles.input,\n      inputStyles.wrapper,\n      css`\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        cursor: pointer;\n        padding-right: 0;\n        padding-left: 0;\n        line-height: ${theme.spacing.gridSize * theme.components.height.md - 2}px;\n      `\n    ),\n    caretIcon: cx(\n      inputStyles.suffix,\n      css`\n        position: relative;\n        margin-left: ${theme.spacing(0.5)};\n      `\n    ),\n    clockIcon: cx(\n      inputStyles.prefix,\n      css`\n        position: relative;\n        margin-right: ${theme.spacing(0.5)};\n      `\n    ),\n    content: css`\n      background: ${theme.colors.background.primary};\n      box-shadow: ${theme.shadows.z3};\n      position: absolute;\n      z-index: ${theme.zIndex.modal};\n      width: 500px;\n      top: 100%;\n      border-radius: ${theme.shape.radius.default};\n      border: 1px solid ${theme.colors.border.weak};\n      left: 0;\n      white-space: normal;\n    `,\n    body: css`\n      display: flex;\n      height: ${bodyHeight}px;\n    `,\n    description: css`\n      color: ${theme.colors.text.secondary};\n      font-size: ${theme.typography.size.sm};\n    `,\n    leftSide: css`\n      width: 50% !important;\n      border-right: 1px solid ${theme.colors.border.medium};\n    `,\n    rightSide: css`\n      width: 50%;\n      padding: ${theme.spacing(1)};\n    `,\n    title: css`\n      margin-bottom: ${theme.spacing(1)};\n    `,\n  };\n};\n\nfunction calculateErrorHeight(theme: GrafanaTheme2, errorMessage?: string): number {\n  if (!errorMessage) {\n    return 0;\n  }\n\n  if (errorMessage.length > 34) {\n    return theme.spacing.gridSize * 6.5;\n  }\n\n  return theme.spacing.gridSize * 4;\n}\n"],"names":["timeRange","React"],"mappings":"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"}