{"version":3,"file":"TimeRangePicker.js","sources":["../../../../src/components/DateTimePickers/TimeRangePicker.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport { useDialog } from '@react-aria/dialog';\nimport { FocusScope } from '@react-aria/focus';\nimport { useOverlay } from '@react-aria/overlays';\nimport React, { memo, FormEvent, createRef, useState } from 'react';\n\nimport {\n  isDateTime,\n  rangeUtil,\n  GrafanaTheme2,\n  dateTimeFormat,\n  timeZoneFormatUserFriendly,\n  TimeRange,\n  TimeZone,\n  dateMath,\n} from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\n\nimport { useStyles2, useTheme2 } from '../../themes/ThemeContext';\nimport { t, Trans } from '../../utils/i18n';\nimport { ButtonGroup } from '../Button';\nimport { getModalStyles } from '../Modal/getModalStyles';\nimport { ToolbarButton } from '../ToolbarButton';\nimport { Tooltip } from '../Tooltip/Tooltip';\n\nimport { TimePickerContent } from './TimeRangePicker/TimePickerContent';\nimport { quickOptions } from './options';\n\n/** @public */\nexport interface TimeRangePickerProps {\n  hideText?: boolean;\n  value: TimeRange;\n  timeZone?: TimeZone;\n  fiscalYearStartMonth?: number;\n  timeSyncButton?: JSX.Element;\n  isSynced?: boolean;\n  onChange: (timeRange: TimeRange) => void;\n  onChangeTimeZone: (timeZone: TimeZone) => void;\n  onChangeFiscalYearStartMonth?: (month: number) => void;\n  onMoveBackward: () => void;\n  onMoveForward: () => void;\n  onZoom: () => void;\n  history?: TimeRange[];\n  hideQuickRanges?: boolean;\n  widthOverride?: number;\n  isOnCanvas?: boolean;\n}\n\nexport interface State {\n  isOpen: boolean;\n}\n\nexport function TimeRangePicker(props: TimeRangePickerProps) {\n  const [isOpen, setOpen] = useState(false);\n\n  const {\n    value,\n    onMoveBackward,\n    onMoveForward,\n    onZoom,\n    timeZone,\n    fiscalYearStartMonth,\n    timeSyncButton,\n    isSynced,\n    history,\n    onChangeTimeZone,\n    onChangeFiscalYearStartMonth,\n    hideQuickRanges,\n    widthOverride,\n    isOnCanvas,\n  } = props;\n\n  const onChange = (timeRange: TimeRange) => {\n    props.onChange(timeRange);\n    setOpen(false);\n  };\n\n  const onOpen = (event: FormEvent<HTMLButtonElement>) => {\n    event.stopPropagation();\n    event.preventDefault();\n    setOpen(!isOpen);\n  };\n\n  const onClose = () => {\n    setOpen(false);\n  };\n\n  const ref = createRef<HTMLElement>();\n  const { overlayProps, underlayProps } = useOverlay({ onClose, isDismissable: true, isOpen }, ref);\n  const { dialogProps } = useDialog({}, ref);\n\n  const theme = useTheme2();\n  const styles = useStyles2(getStyles);\n  const { modalBackdrop } = getModalStyles(theme);\n  const hasAbsolute = isDateTime(value.raw.from) || isDateTime(value.raw.to);\n  const variant = isSynced ? 'active' : isOnCanvas ? 'canvas' : 'default';\n\n  const currentTimeRange = formattedRange(value, timeZone);\n\n  return (\n    <ButtonGroup className={styles.container}>\n      {hasAbsolute && (\n        <ToolbarButton\n          aria-label={t('time-picker.range-picker.backwards-time-aria-label', 'Move time range backwards')}\n          variant={variant}\n          onClick={onMoveBackward}\n          icon=\"angle-left\"\n          narrow\n        />\n      )}\n\n      <Tooltip content={<TimePickerTooltip timeRange={value} timeZone={timeZone} />} placement=\"bottom\" interactive>\n        <ToolbarButton\n          data-testid={selectors.components.TimePicker.openButton}\n          aria-label={t('time-picker.range-picker.current-time-selected', 'Time range selected: {{currentTimeRange}}', {\n            currentTimeRange,\n          })}\n          aria-controls=\"TimePickerContent\"\n          onClick={onOpen}\n          icon=\"clock-nine\"\n          isOpen={isOpen}\n          variant={variant}\n        >\n          <TimePickerButtonLabel {...props} />\n        </ToolbarButton>\n      </Tooltip>\n      {isOpen && (\n        <div>\n          <div role=\"presentation\" className={cx(modalBackdrop, styles.backdrop)} {...underlayProps} />\n          <FocusScope contain autoFocus>\n            <section className={styles.content} ref={ref} {...overlayProps} {...dialogProps}>\n              <TimePickerContent\n                timeZone={timeZone}\n                fiscalYearStartMonth={fiscalYearStartMonth}\n                value={value}\n                onChange={onChange}\n                quickOptions={quickOptions}\n                history={history}\n                showHistory\n                widthOverride={widthOverride}\n                onChangeTimeZone={onChangeTimeZone}\n                onChangeFiscalYearStartMonth={onChangeFiscalYearStartMonth}\n                hideQuickRanges={hideQuickRanges}\n              />\n            </section>\n          </FocusScope>\n        </div>\n      )}\n\n      {timeSyncButton}\n\n      {hasAbsolute && (\n        <ToolbarButton\n          aria-label={t('time-picker.range-picker.forwards-time-aria-label', 'Move time range forwards')}\n          onClick={onMoveForward}\n          icon=\"angle-right\"\n          narrow\n          variant={variant}\n        />\n      )}\n\n      <Tooltip content={ZoomOutTooltip} placement=\"bottom\">\n        <ToolbarButton\n          aria-label={t('time-picker.range-picker.zoom-out-button', 'Zoom out time range')}\n          onClick={onZoom}\n          icon=\"search-minus\"\n          variant={variant}\n        />\n      </Tooltip>\n    </ButtonGroup>\n  );\n}\n\nTimeRangePicker.displayName = 'TimeRangePicker';\n\nconst ZoomOutTooltip = () => (\n  <>\n    <Trans i18nKey=\"time-picker.range-picker.zoom-out-tooltip\">\n      Time range zoom out <br /> CTRL+Z\n    </Trans>\n  </>\n);\n\nexport const TimePickerTooltip = ({ timeRange, timeZone }: { timeRange: TimeRange; timeZone?: TimeZone }) => {\n  const styles = useStyles2(getLabelStyles);\n\n  return (\n    <>\n      {dateTimeFormat(timeRange.from, { timeZone })}\n      <div className=\"text-center\">\n        <Trans i18nKey=\"time-picker.range-picker.to\">to</Trans>\n      </div>\n      {dateTimeFormat(timeRange.to, { timeZone })}\n      <div className=\"text-center\">\n        <span className={styles.utc}>{timeZoneFormatUserFriendly(timeZone)}</span>\n      </div>\n    </>\n  );\n};\n\ntype LabelProps = Pick<TimeRangePickerProps, 'hideText' | 'value' | 'timeZone'>;\n\nexport const TimePickerButtonLabel = memo<LabelProps>(({ hideText, value, timeZone }) => {\n  const styles = useStyles2(getLabelStyles);\n\n  if (hideText) {\n    return null;\n  }\n\n  return (\n    <span className={styles.container}>\n      <span>{formattedRange(value, timeZone)}</span>\n      <span className={styles.utc}>{rangeUtil.describeTimeRangeAbbreviation(value, timeZone)}</span>\n    </span>\n  );\n});\n\nTimePickerButtonLabel.displayName = 'TimePickerButtonLabel';\n\nconst formattedRange = (value: TimeRange, timeZone?: TimeZone) => {\n  const adjustedTimeRange = {\n    to: dateMath.isMathString(value.raw.to) ? value.raw.to : value.to,\n    from: dateMath.isMathString(value.raw.from) ? value.raw.from : value.from,\n  };\n  return rangeUtil.describeTimeRange(adjustedTimeRange, timeZone);\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    container: css`\n      position: relative;\n      display: flex;\n      vertical-align: middle;\n    `,\n    backdrop: css({\n      display: 'none',\n      [theme.breakpoints.down('sm')]: {\n        display: 'block',\n      },\n    }),\n    content: css({\n      position: 'absolute',\n      right: 0,\n      top: '116%',\n      zIndex: theme.zIndex.dropdown,\n\n      [theme.breakpoints.down('sm')]: {\n        position: 'fixed',\n        right: '50%',\n        top: '50%',\n        transform: 'translate(50%, -50%)',\n        zIndex: theme.zIndex.modal,\n      },\n    }),\n  };\n};\n\nconst getLabelStyles = (theme: GrafanaTheme2) => {\n  return {\n    container: css`\n      display: flex;\n      align-items: center;\n      white-space: nowrap;\n    `,\n    utc: css`\n      color: ${theme.v1.palette.orange};\n      font-size: ${theme.typography.size.sm};\n      padding-left: 6px;\n      line-height: 28px;\n      vertical-align: bottom;\n      font-weight: ${theme.typography.fontWeightMedium};\n    `,\n  };\n};\n"],"names":["React"],"mappings":"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"}