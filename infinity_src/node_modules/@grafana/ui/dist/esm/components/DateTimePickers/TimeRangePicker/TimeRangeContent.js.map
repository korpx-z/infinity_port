{"version":3,"file":"TimeRangeContent.js","sources":["../../../../../src/components/DateTimePickers/TimeRangePicker/TimeRangeContent.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { FormEvent, useCallback, useEffect, useState } from 'react';\n\nimport {\n  dateMath,\n  DateTime,\n  dateTimeFormat,\n  dateTimeParse,\n  GrafanaTheme2,\n  isDateTime,\n  rangeUtil,\n  RawTimeRange,\n  TimeRange,\n  TimeZone,\n} from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\n\nimport { Icon, Tooltip } from '../..';\nimport { useStyles2 } from '../../..';\nimport { t, Trans } from '../../../utils/i18n';\nimport { Button } from '../../Button';\nimport { Field } from '../../Forms/Field';\nimport { Input } from '../../Input/Input';\n\nimport TimePickerCalendar from './TimePickerCalendar';\n\ninterface Props {\n  isFullscreen: boolean;\n  value: TimeRange;\n  onApply: (range: TimeRange) => void;\n  timeZone?: TimeZone;\n  fiscalYearStartMonth?: number;\n  roundup?: boolean;\n  isReversed?: boolean;\n}\n\ninterface InputState {\n  value: string;\n  invalid: boolean;\n  errorMessage: string;\n}\n\nconst ERROR_MESSAGES = {\n  default: () => t('time-picker.range-content.default-error', 'Please enter a past date or \"now\"'),\n  range: () => t('time-picker.range-content.range-error', '\"From\" can\\'t be after \"To\"'),\n};\n\nexport const TimeRangeContent = (props: Props) => {\n  const { value, isFullscreen = false, timeZone, onApply: onApplyFromProps, isReversed, fiscalYearStartMonth } = props;\n  const [fromValue, toValue] = valueToState(value.raw.from, value.raw.to, timeZone);\n  const style = useStyles2(getStyles);\n\n  const [from, setFrom] = useState<InputState>(fromValue);\n  const [to, setTo] = useState<InputState>(toValue);\n  const [isOpen, setOpen] = useState(false);\n\n  // Synchronize internal state with external value\n  useEffect(() => {\n    const [fromValue, toValue] = valueToState(value.raw.from, value.raw.to, timeZone);\n    setFrom(fromValue);\n    setTo(toValue);\n  }, [value.raw.from, value.raw.to, timeZone]);\n\n  const onOpen = useCallback(\n    (event: FormEvent<HTMLElement>) => {\n      event.preventDefault();\n      setOpen(true);\n    },\n    [setOpen]\n  );\n\n  const onApply = useCallback(() => {\n    if (to.invalid || from.invalid) {\n      return;\n    }\n\n    const raw: RawTimeRange = { from: from.value, to: to.value };\n    const timeRange = rangeUtil.convertRawToRange(raw, timeZone, fiscalYearStartMonth);\n\n    onApplyFromProps(timeRange);\n  }, [from.invalid, from.value, onApplyFromProps, timeZone, to.invalid, to.value, fiscalYearStartMonth]);\n\n  const onChange = useCallback(\n    (from: DateTime | string, to: DateTime | string) => {\n      const [fromValue, toValue] = valueToState(from, to, timeZone);\n      setFrom(fromValue);\n      setTo(toValue);\n    },\n    [timeZone]\n  );\n\n  const submitOnEnter = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === 'Enter') {\n      onApply();\n    }\n  };\n\n  const fiscalYear = rangeUtil.convertRawToRange({ from: 'now/fy', to: 'now/fy' }, timeZone, fiscalYearStartMonth);\n  const fiscalYearMessage = t('time-picker.range-content.fiscal-year', 'Fiscal year');\n\n  const fyTooltip = (\n    <div className={style.tooltip}>\n      {rangeUtil.isFiscal(value) ? (\n        <Tooltip\n          content={`${fiscalYearMessage}: ${fiscalYear.from.format('MMM-DD')} - ${fiscalYear.to.format('MMM-DD')}`}\n        >\n          <Icon name=\"info-circle\" />\n        </Tooltip>\n      ) : null}\n    </div>\n  );\n\n  const icon = (\n    <Button\n      aria-label={selectors.components.TimePicker.calendar.openButton}\n      icon=\"calendar-alt\"\n      variant=\"secondary\"\n      type=\"button\"\n      onClick={onOpen}\n    />\n  );\n\n  return (\n    <div>\n      <div className={style.fieldContainer}>\n        <Field\n          label={t('time-picker.range-content.from-input', 'From')}\n          invalid={from.invalid}\n          error={from.errorMessage}\n        >\n          <Input\n            onClick={(event) => event.stopPropagation()}\n            onChange={(event) => onChange(event.currentTarget.value, to.value)}\n            addonAfter={icon}\n            onKeyDown={submitOnEnter}\n            aria-label={selectors.components.TimePicker.fromField}\n            value={from.value}\n          />\n        </Field>\n        {fyTooltip}\n      </div>\n      <div className={style.fieldContainer}>\n        <Field label={t('time-picker.range-content.to-input', 'To')} invalid={to.invalid} error={to.errorMessage}>\n          <Input\n            onClick={(event) => event.stopPropagation()}\n            onChange={(event) => onChange(from.value, event.currentTarget.value)}\n            addonAfter={icon}\n            onKeyDown={submitOnEnter}\n            aria-label={selectors.components.TimePicker.toField}\n            value={to.value}\n          />\n        </Field>\n        {fyTooltip}\n      </div>\n      <Button data-testid={selectors.components.TimePicker.applyTimeRange} type=\"button\" onClick={onApply}>\n        <Trans i18nKey=\"time-picker.range-content.apply-button\">Apply time range</Trans>\n      </Button>\n\n      <TimePickerCalendar\n        isFullscreen={isFullscreen}\n        isOpen={isOpen}\n        from={dateTimeParse(from.value)}\n        to={dateTimeParse(to.value)}\n        onApply={onApply}\n        onClose={() => setOpen(false)}\n        onChange={onChange}\n        timeZone={timeZone}\n        isReversed={isReversed}\n      />\n    </div>\n  );\n};\n\nfunction isRangeInvalid(from: string, to: string, timezone?: string): boolean {\n  const raw: RawTimeRange = { from, to };\n  const timeRange = rangeUtil.convertRawToRange(raw, timezone);\n  const valid = timeRange.from.isSame(timeRange.to) || timeRange.from.isBefore(timeRange.to);\n\n  return !valid;\n}\n\nfunction valueToState(\n  rawFrom: DateTime | string,\n  rawTo: DateTime | string,\n  timeZone?: TimeZone\n): [InputState, InputState] {\n  const fromValue = valueAsString(rawFrom, timeZone);\n  const toValue = valueAsString(rawTo, timeZone);\n  const fromInvalid = !isValid(fromValue, false, timeZone);\n  const toInvalid = !isValid(toValue, true, timeZone);\n  // If \"To\" is invalid, we should not check the range anyways\n  const rangeInvalid = isRangeInvalid(fromValue, toValue, timeZone) && !toInvalid;\n\n  return [\n    {\n      value: fromValue,\n      invalid: fromInvalid || rangeInvalid,\n      errorMessage: rangeInvalid && !fromInvalid ? ERROR_MESSAGES.range() : ERROR_MESSAGES.default(),\n    },\n    { value: toValue, invalid: toInvalid, errorMessage: ERROR_MESSAGES.default() },\n  ];\n}\n\nfunction valueAsString(value: DateTime | string, timeZone?: TimeZone): string {\n  if (isDateTime(value)) {\n    return dateTimeFormat(value, { timeZone });\n  }\n  return value;\n}\n\nfunction isValid(value: string, roundUp?: boolean, timeZone?: TimeZone): boolean {\n  if (isDateTime(value)) {\n    return value.isValid();\n  }\n\n  if (dateMath.isMathString(value)) {\n    return dateMath.isValid(value);\n  }\n\n  const parsed = dateTimeParse(value, { roundUp, timeZone });\n  return parsed.isValid();\n}\n\nfunction getStyles(theme: GrafanaTheme2) {\n  return {\n    fieldContainer: css`\n      display: flex;\n    `,\n    tooltip: css`\n      padding-left: ${theme.spacing(1)};\n      padding-top: ${theme.spacing(3)};\n    `,\n  };\n}\n"],"names":["fromValue","toValue","from","to","React"],"mappings":"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"}