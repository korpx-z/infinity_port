{"version":3,"file":"DateTimePicker.js","sources":["../../../../../src/components/DateTimePickers/DateTimePicker/DateTimePicker.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport { useDialog } from '@react-aria/dialog';\nimport { FocusScope } from '@react-aria/focus';\nimport { useOverlay } from '@react-aria/overlays';\nimport React, { FormEvent, ReactNode, useCallback, useEffect, useRef, useState } from 'react';\nimport Calendar from 'react-calendar';\nimport { usePopper } from 'react-popper';\nimport { useMedia } from 'react-use';\n\nimport { dateTimeFormat, DateTime, dateTime, GrafanaTheme2, isDateTime } from '@grafana/data';\n\nimport { Button, HorizontalGroup, Icon, InlineField, Input, Portal } from '../..';\nimport { useStyles2, useTheme2 } from '../../../themes';\nimport { getModalStyles } from '../../Modal/getModalStyles';\nimport { TimeOfDayPicker, POPUP_CLASS_NAME } from '../TimeOfDayPicker';\nimport { getBodyStyles } from '../TimeRangePicker/CalendarBody';\nimport { isValid } from '../utils';\n\nexport interface Props {\n  /** Input date for the component */\n  date?: DateTime;\n  /** Callback for returning the selected date */\n  onChange: (date: DateTime) => void;\n  /** label for the input field */\n  label?: ReactNode;\n  /** Set the latest selectable date */\n  maxDate?: Date;\n  /** Set the minimum selectable date */\n  minDate?: Date;\n  /** Display seconds on the time picker */\n  showSeconds?: boolean;\n  /** Set the hours that can't be selected */\n  disabledHours?: () => number[];\n  /** Set the minutes that can't be selected */\n  disabledMinutes?: () => number[];\n  /** Set the seconds that can't be selected */\n  disabledSeconds?: () => number[];\n}\n\nexport const DateTimePicker = ({\n  date,\n  maxDate,\n  minDate,\n  label,\n  onChange,\n  disabledHours,\n  disabledMinutes,\n  disabledSeconds,\n  showSeconds = true,\n}: Props) => {\n  const [isOpen, setOpen] = useState(false);\n\n  const ref = useRef<HTMLDivElement>(null);\n  const { overlayProps, underlayProps } = useOverlay(\n    {\n      onClose: () => setOpen(false),\n      isDismissable: true,\n      isOpen,\n      shouldCloseOnInteractOutside: (element) => {\n        const popupElement = document.getElementsByClassName(POPUP_CLASS_NAME)[0];\n        return !(popupElement && popupElement.contains(element));\n      },\n    },\n    ref\n  );\n  const { dialogProps } = useDialog({}, ref);\n\n  const theme = useTheme2();\n  const { modalBackdrop } = getModalStyles(theme);\n  const isFullscreen = useMedia(`(min-width: ${theme.breakpoints.values.lg}px)`);\n  const styles = useStyles2(getStyles);\n\n  const [markerElement, setMarkerElement] = useState<HTMLInputElement | null>();\n  const [selectorElement, setSelectorElement] = useState<HTMLDivElement | null>();\n\n  const popper = usePopper(markerElement, selectorElement, {\n    placement: 'bottom-start',\n  });\n\n  const onApply = useCallback(\n    (date: DateTime) => {\n      setOpen(false);\n      onChange(date);\n    },\n    [onChange]\n  );\n\n  const onOpen = useCallback(\n    (event: FormEvent<HTMLElement>) => {\n      event.preventDefault();\n      setOpen(true);\n    },\n    [setOpen]\n  );\n\n  return (\n    <div data-testid=\"date-time-picker\" style={{ position: 'relative' }}>\n      <DateTimeInput\n        date={date}\n        onChange={onChange}\n        isFullscreen={isFullscreen}\n        onOpen={onOpen}\n        label={label}\n        ref={setMarkerElement}\n        showSeconds={showSeconds}\n      />\n      {isOpen ? (\n        isFullscreen ? (\n          <Portal>\n            <FocusScope contain autoFocus restoreFocus>\n              <div ref={ref} {...overlayProps} {...dialogProps}>\n                <DateTimeCalendar\n                  date={date}\n                  onChange={onApply}\n                  isFullscreen={true}\n                  onClose={() => setOpen(false)}\n                  maxDate={maxDate}\n                  minDate={minDate}\n                  ref={setSelectorElement}\n                  style={popper.styles.popper}\n                  showSeconds={showSeconds}\n                  disabledHours={disabledHours}\n                  disabledMinutes={disabledMinutes}\n                  disabledSeconds={disabledSeconds}\n                />\n              </div>\n            </FocusScope>\n          </Portal>\n        ) : (\n          <Portal>\n            <div className={modalBackdrop} {...underlayProps} />\n            <FocusScope contain autoFocus restoreFocus>\n              <div ref={ref} {...overlayProps} {...dialogProps}>\n                <div className={styles.modal}>\n                  <DateTimeCalendar\n                    date={date}\n                    maxDate={maxDate}\n                    minDate={minDate}\n                    onChange={onApply}\n                    isFullscreen={false}\n                    onClose={() => setOpen(false)}\n                    showSeconds={showSeconds}\n                    disabledHours={disabledHours}\n                    disabledMinutes={disabledMinutes}\n                    disabledSeconds={disabledSeconds}\n                  />\n                </div>\n              </div>\n            </FocusScope>\n          </Portal>\n        )\n      ) : null}\n    </div>\n  );\n};\n\ninterface DateTimeCalendarProps {\n  date?: DateTime;\n  onChange: (date: DateTime) => void;\n  onClose: () => void;\n  isFullscreen: boolean;\n  maxDate?: Date;\n  minDate?: Date;\n  style?: React.CSSProperties;\n  showSeconds?: boolean;\n  disabledHours?: () => number[];\n  disabledMinutes?: () => number[];\n  disabledSeconds?: () => number[];\n}\n\ninterface InputProps {\n  label?: ReactNode;\n  date?: DateTime;\n  isFullscreen: boolean;\n  onChange: (date: DateTime) => void;\n  onOpen: (event: FormEvent<HTMLElement>) => void;\n  showSeconds?: boolean;\n}\n\ntype InputState = {\n  value: string;\n  invalid: boolean;\n};\n\nconst DateTimeInput = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ date, label, onChange, isFullscreen, onOpen, showSeconds = true }, ref) => {\n    const format = showSeconds ? 'YYYY-MM-DD HH:mm:ss' : 'YYYY-MM-DD HH:mm';\n    const [internalDate, setInternalDate] = useState<InputState>(() => {\n      return { value: date ? dateTimeFormat(date) : dateTimeFormat(dateTime()), invalid: false };\n    });\n\n    useEffect(() => {\n      if (date) {\n        setInternalDate({\n          invalid: !isValid(dateTimeFormat(date, { format })),\n          value: isDateTime(date) ? dateTimeFormat(date, { format }) : date,\n        });\n      }\n    }, [date, format]);\n\n    const onChangeDate = useCallback((event: FormEvent<HTMLInputElement>) => {\n      const isInvalid = !isValid(event.currentTarget.value);\n      setInternalDate({\n        value: event.currentTarget.value,\n        invalid: isInvalid,\n      });\n    }, []);\n\n    const onBlur = useCallback(() => {\n      if (isDateTime(internalDate.value)) {\n        onChange(dateTime(internalDate.value));\n      }\n    }, [internalDate.value, onChange]);\n\n    const icon = <Button aria-label=\"Time picker\" icon=\"calendar-alt\" variant=\"secondary\" onClick={onOpen} />;\n    return (\n      <InlineField\n        label={label}\n        invalid={!!(internalDate.value && internalDate.invalid)}\n        className={css`\n          margin-bottom: 0;\n        `}\n      >\n        <Input\n          onChange={onChangeDate}\n          addonAfter={icon}\n          value={internalDate.value}\n          onBlur={onBlur}\n          data-testid=\"date-time-input\"\n          placeholder=\"Select date/time\"\n          ref={ref}\n        />\n      </InlineField>\n    );\n  }\n);\n\nDateTimeInput.displayName = 'DateTimeInput';\n\nconst DateTimeCalendar = React.forwardRef<HTMLDivElement, DateTimeCalendarProps>(\n  (\n    {\n      date,\n      onClose,\n      onChange,\n      isFullscreen,\n      maxDate,\n      minDate,\n      style,\n      showSeconds = true,\n      disabledHours,\n      disabledMinutes,\n      disabledSeconds,\n    },\n    ref\n  ) => {\n    const calendarStyles = useStyles2(getBodyStyles);\n    const styles = useStyles2(getStyles);\n    const [internalDate, setInternalDate] = useState<Date>(() => {\n      if (date && date.isValid()) {\n        return date.toDate();\n      }\n\n      return new Date();\n    });\n\n    const onChangeDate = useCallback((date: Date | Date[]) => {\n      if (!Array.isArray(date)) {\n        setInternalDate((prevState) => {\n          // If we don't use time from prevState\n          // the time will be reset to 00:00:00\n          date.setHours(prevState.getHours());\n          date.setMinutes(prevState.getMinutes());\n          date.setSeconds(prevState.getSeconds());\n\n          return date;\n        });\n      }\n    }, []);\n\n    const onChangeTime = useCallback((date: DateTime) => {\n      setInternalDate(date.toDate());\n    }, []);\n\n    return (\n      <div className={cx(styles.container, { [styles.fullScreen]: isFullscreen })} style={style} ref={ref}>\n        <Calendar\n          next2Label={null}\n          prev2Label={null}\n          value={internalDate}\n          nextLabel={<Icon name=\"angle-right\" />}\n          nextAriaLabel=\"Next month\"\n          prevLabel={<Icon name=\"angle-left\" />}\n          prevAriaLabel=\"Previous month\"\n          onChange={onChangeDate}\n          locale=\"en\"\n          className={calendarStyles.body}\n          tileClassName={calendarStyles.title}\n          maxDate={maxDate}\n          minDate={minDate}\n        />\n        <div className={styles.time}>\n          <TimeOfDayPicker\n            showSeconds={showSeconds}\n            onChange={onChangeTime}\n            value={dateTime(internalDate)}\n            disabledHours={disabledHours}\n            disabledMinutes={disabledMinutes}\n            disabledSeconds={disabledSeconds}\n          />\n        </div>\n        <HorizontalGroup>\n          <Button type=\"button\" onClick={() => onChange(dateTime(internalDate))}>\n            Apply\n          </Button>\n          <Button variant=\"secondary\" type=\"button\" onClick={onClose}>\n            Cancel\n          </Button>\n        </HorizontalGroup>\n      </div>\n    );\n  }\n);\n\nDateTimeCalendar.displayName = 'DateTimeCalendar';\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  container: css`\n    padding: ${theme.spacing(1)};\n    border: 1px ${theme.colors.border.weak} solid;\n    border-radius: ${theme.shape.borderRadius(1)};\n    background-color: ${theme.colors.background.primary};\n    z-index: ${theme.zIndex.modal};\n  `,\n  fullScreen: css`\n    position: absolute;\n  `,\n  time: css`\n    margin-bottom: ${theme.spacing(2)};\n  `,\n  modal: css`\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    z-index: ${theme.zIndex.modal};\n    max-width: 280px;\n  `,\n});\n"],"names":["date","React"],"mappings":"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"}