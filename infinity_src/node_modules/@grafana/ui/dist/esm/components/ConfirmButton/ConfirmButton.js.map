{"version":3,"file":"ConfirmButton.js","sources":["../../../../src/components/ConfirmButton/ConfirmButton.tsx"],"sourcesContent":["import { cx, css } from '@emotion/css';\nimport React, { PureComponent, SyntheticEvent } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { stylesFactory, withTheme2 } from '../../themes';\nimport { Themeable2 } from '../../types';\nimport { ComponentSize } from '../../types/size';\nimport { Button, ButtonVariant } from '../Button';\n\nexport interface Props extends Themeable2 {\n  /** Confirm action callback */\n  onConfirm(): void;\n  /** Custom button styles */\n  className?: string;\n  /** Button size */\n  size?: ComponentSize;\n  /** Text for the Confirm button */\n  confirmText?: string;\n  /** Disable button click action */\n  disabled?: boolean;\n  /** Variant of the Confirm button */\n  confirmVariant?: ButtonVariant;\n  /** Hide confirm actions when after of them is clicked */\n  closeOnConfirm?: boolean;\n  /** Move focus to button when mounted */\n  autoFocus?: boolean;\n\n  /** Optional on click handler for the original button */\n  onClick?(): void;\n  /** Callback for the cancel action */\n  onCancel?(): void;\n}\n\ninterface State {\n  showConfirm: boolean;\n}\n\nclass UnThemedConfirmButton extends PureComponent<React.PropsWithChildren<Props>, State> {\n  mainButtonRef = React.createRef<HTMLButtonElement>();\n  confirmButtonRef = React.createRef<HTMLButtonElement>();\n  state: State = {\n    showConfirm: false,\n  };\n\n  onClickButton = (event: SyntheticEvent) => {\n    if (event) {\n      event.preventDefault();\n    }\n\n    this.setState(\n      {\n        showConfirm: true,\n      },\n      () => {\n        if (this.props.autoFocus && this.confirmButtonRef.current) {\n          this.confirmButtonRef.current.focus();\n        }\n      }\n    );\n\n    if (this.props.onClick) {\n      this.props.onClick();\n    }\n  };\n\n  onClickCancel = (event: SyntheticEvent) => {\n    if (event) {\n      event.preventDefault();\n    }\n    this.setState(\n      {\n        showConfirm: false,\n      },\n      () => {\n        this.mainButtonRef.current?.focus();\n      }\n    );\n    if (this.props.onCancel) {\n      this.props.onCancel();\n    }\n  };\n  onConfirm = (event: SyntheticEvent) => {\n    if (event) {\n      event.preventDefault();\n    }\n    this.props.onConfirm();\n    if (this.props.closeOnConfirm) {\n      this.setState({\n        showConfirm: false,\n      });\n    }\n  };\n\n  render() {\n    const {\n      theme,\n      className,\n      size,\n      disabled,\n      confirmText,\n      confirmVariant: confirmButtonVariant,\n      children,\n    } = this.props;\n    const styles = getStyles(theme);\n    const buttonClass = cx(\n      className,\n      this.state.showConfirm ? styles.buttonHide : styles.buttonShow,\n      disabled && styles.buttonDisabled\n    );\n    const confirmButtonClass = cx(\n      styles.confirmButton,\n      this.state.showConfirm ? styles.confirmButtonShow : styles.confirmButtonHide\n    );\n\n    const onClick = disabled ? () => {} : this.onClickButton;\n\n    return (\n      <span className={styles.buttonContainer}>\n        <div className={cx(disabled && styles.disabled)}>\n          {typeof children === 'string' ? (\n            <span className={buttonClass}>\n              <Button size={size} fill=\"text\" onClick={onClick} ref={this.mainButtonRef}>\n                {children}\n              </Button>\n            </span>\n          ) : (\n            <span className={buttonClass} onClick={onClick}>\n              {children}\n            </span>\n          )}\n        </div>\n        <span className={confirmButtonClass}>\n          <Button size={size} variant={confirmButtonVariant} onClick={this.onConfirm} ref={this.confirmButtonRef}>\n            {confirmText}\n          </Button>\n          <Button size={size} fill=\"text\" onClick={this.onClickCancel}>\n            Cancel\n          </Button>\n        </span>\n      </span>\n    );\n  }\n}\n\nexport const ConfirmButton = withTheme2(UnThemedConfirmButton);\n\nconst getStyles = stylesFactory((theme: GrafanaTheme2) => {\n  return {\n    buttonContainer: css`\n      display: flex;\n      align-items: center;\n      justify-content: flex-end;\n    `,\n    buttonDisabled: css`\n      text-decoration: none;\n      color: ${theme.colors.text.primary};\n      opacity: 0.65;\n      pointer-events: none;\n    `,\n    buttonShow: css`\n      opacity: 1;\n      transition: opacity 0.1s ease;\n      z-index: 2;\n    `,\n    buttonHide: css`\n      opacity: 0;\n      transition: opacity 0.1s ease, visibility 0 0.1s;\n      visibility: hidden;\n      z-index: 0;\n    `,\n    confirmButton: css`\n      align-items: flex-start;\n      background: ${theme.colors.background.primary};\n      display: flex;\n      position: absolute;\n      pointer-events: none;\n    `,\n    confirmButtonShow: css`\n      z-index: 1;\n      opacity: 1;\n      transition: opacity 0.08s ease-out, transform 0.1s ease-out;\n      transform: translateX(0);\n      pointer-events: all;\n    `,\n    confirmButtonHide: css`\n      opacity: 0;\n      visibility: hidden;\n      transition: opacity 0.12s ease-in, transform 0.14s ease-in, visibility 0s 0.12s;\n      transform: translateX(100px);\n    `,\n    disabled: css`\n      cursor: not-allowed;\n    `,\n  };\n});\n\n// Declare defaultProps directly on the themed component so they are displayed\n// in the props table\nConfirmButton.defaultProps = {\n  size: 'md',\n  confirmText: 'Save',\n  disabled: false,\n  confirmVariant: 'primary',\n};\nConfirmButton.displayName = 'ConfirmButton';\n"],"names":["React"],"mappings":"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"}