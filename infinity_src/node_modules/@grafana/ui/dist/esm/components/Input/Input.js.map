{"version":3,"file":"Input.js","sources":["../../../../src/components/Input/Input.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport React, { HTMLProps, ReactNode } from 'react';\nimport useMeasure from 'react-use/lib/useMeasure';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { stylesFactory, useTheme2 } from '../../themes';\nimport { getFocusStyle, sharedInputStyle } from '../Forms/commonStyles';\nimport { Spinner } from '../Spinner/Spinner';\n\nexport interface Props extends Omit<HTMLProps<HTMLInputElement>, 'prefix' | 'size'> {\n  /** Sets the width to a multiple of 8px. Should only be used with inline forms. Setting width of the container is preferred in other cases.*/\n  width?: number;\n  /** Show an invalid state around the input */\n  invalid?: boolean;\n  /** Show an icon as a prefix in the input */\n  prefix?: ReactNode;\n  /** Show an icon as a suffix in the input */\n  suffix?: ReactNode;\n  /** Show a loading indicator as a suffix in the input */\n  loading?: boolean;\n  /** Add a component as an addon before the input  */\n  addonBefore?: ReactNode;\n  /** Add a component as an addon after the input */\n  addonAfter?: ReactNode;\n}\n\ninterface StyleDeps {\n  theme: GrafanaTheme2;\n  invalid?: boolean;\n  width?: number;\n}\n\nexport const Input = React.forwardRef<HTMLInputElement, Props>((props, ref) => {\n  const { className, addonAfter, addonBefore, prefix, suffix, invalid, loading, width = 0, ...restProps } = props;\n  /**\n   * Prefix & suffix are positioned absolutely within inputWrapper. We use client rects below to apply correct padding to the input\n   * when prefix/suffix is larger than default (28px = 16px(icon) + 12px(left/right paddings)).\n   * Thanks to that prefix/suffix do not overflow the input element itself.\n   */\n  const [prefixRef, prefixRect] = useMeasure<HTMLDivElement>();\n  const [suffixRef, suffixRect] = useMeasure<HTMLDivElement>();\n\n  const theme = useTheme2();\n  const styles = getInputStyles({ theme, invalid: !!invalid, width });\n\n  return (\n    <div className={cx(styles.wrapper, className)} data-testid={'input-wrapper'}>\n      {!!addonBefore && <div className={styles.addon}>{addonBefore}</div>}\n\n      <div className={styles.inputWrapper}>\n        {prefix && (\n          <div className={styles.prefix} ref={prefixRef}>\n            {prefix}\n          </div>\n        )}\n\n        <input\n          ref={ref}\n          className={styles.input}\n          {...restProps}\n          style={{\n            paddingLeft: prefix ? prefixRect.width + 12 : undefined,\n            paddingRight: suffix || loading ? suffixRect.width + 12 : undefined,\n          }}\n        />\n\n        {(suffix || loading) && (\n          <div className={styles.suffix} ref={suffixRef}>\n            {loading && <Spinner className={styles.loadingIndicator} inline={true} />}\n            {suffix}\n          </div>\n        )}\n      </div>\n\n      {!!addonAfter && <div className={styles.addon}>{addonAfter}</div>}\n    </div>\n  );\n});\n\nInput.displayName = 'Input';\n\nexport const getInputStyles = stylesFactory(({ theme, invalid = false, width }: StyleDeps) => {\n  const prefixSuffixStaticWidth = '28px';\n  const prefixSuffix = css`\n    position: absolute;\n    top: 0;\n    z-index: 1;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-grow: 0;\n    flex-shrink: 0;\n    font-size: ${theme.typography.size.md};\n    height: 100%;\n    /* Min width specified for prefix/suffix classes used outside React component*/\n    min-width: ${prefixSuffixStaticWidth};\n    color: ${theme.colors.text.secondary};\n  `;\n\n  return {\n    // Wraps inputWrapper and addons\n    wrapper: cx(\n      css`\n        label: input-wrapper;\n        display: flex;\n        width: ${width ? `${theme.spacing(width)}` : '100%'};\n        height: ${theme.spacing(theme.components.height.md)};\n        border-radius: ${theme.shape.borderRadius()};\n        &:hover {\n          > .prefix,\n          .suffix,\n          .input {\n            border-color: ${invalid ? theme.colors.error.border : theme.colors.primary.border};\n          }\n\n          // only show number buttons on hover\n          input[type='number'] {\n            -moz-appearance: number-input;\n            -webkit-appearance: number-input;\n            appearance: textfield;\n          }\n\n          input[type='number']::-webkit-inner-spin-button,\n          input[type='number']::-webkit-outer-spin-button {\n            -webkit-appearance: inner-spin-button !important;\n            opacity: 1;\n          }\n        }\n      `\n    ),\n    // Wraps input and prefix/suffix\n    inputWrapper: css`\n      label: input-inputWrapper;\n      position: relative;\n      flex-grow: 1;\n      /* we want input to be above addons, especially for focused state */\n      z-index: 1;\n\n      /* when input rendered with addon before only*/\n      &:not(:first-child):last-child {\n        > input {\n          border-left: none;\n          border-top-left-radius: 0;\n          border-bottom-left-radius: 0;\n        }\n      }\n\n      /* when input rendered with addon after only*/\n      &:first-child:not(:last-child) {\n        > input {\n          border-right: none;\n          border-top-right-radius: 0;\n          border-bottom-right-radius: 0;\n        }\n      }\n\n      /* when rendered with addon before and after */\n      &:not(:first-child):not(:last-child) {\n        > input {\n          border-right: none;\n          border-top-right-radius: 0;\n          border-bottom-right-radius: 0;\n          border-top-left-radius: 0;\n          border-bottom-left-radius: 0;\n        }\n      }\n\n      input {\n        /* paddings specified for classes used outside React component */\n        &:not(:first-child) {\n          padding-left: ${prefixSuffixStaticWidth};\n        }\n        &:not(:last-child) {\n          padding-right: ${prefixSuffixStaticWidth};\n        }\n        &[readonly] {\n          cursor: default;\n        }\n      }\n    `,\n\n    input: cx(\n      getFocusStyle(theme),\n      sharedInputStyle(theme, invalid),\n      css`\n        label: input-input;\n        position: relative;\n        z-index: 0;\n        flex-grow: 1;\n        border-radius: ${theme.shape.borderRadius()};\n        height: 100%;\n        width: 100%;\n      `\n    ),\n    inputDisabled: css`\n      background-color: ${theme.colors.action.disabledBackground};\n      color: ${theme.colors.action.disabledText};\n      border: 1px solid ${theme.colors.action.disabledBackground};\n      &:focus {\n        box-shadow: none;\n      }\n    `,\n    addon: css`\n      label: input-addon;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      flex-grow: 0;\n      flex-shrink: 0;\n      position: relative;\n\n      &:first-child {\n        border-top-right-radius: 0;\n        border-bottom-right-radius: 0;\n        > :last-child {\n          border-top-right-radius: 0;\n          border-bottom-right-radius: 0;\n        }\n      }\n\n      &:last-child {\n        border-top-left-radius: 0;\n        border-bottom-left-radius: 0;\n        > :first-child {\n          border-top-left-radius: 0;\n          border-bottom-left-radius: 0;\n        }\n      }\n      > *:focus {\n        /* we want anything that has focus and is an addon to be above input */\n        z-index: 2;\n      }\n    `,\n    prefix: cx(\n      prefixSuffix,\n      css`\n        label: input-prefix;\n        padding-left: ${theme.spacing(1)};\n        padding-right: ${theme.spacing(0.5)};\n        border-right: none;\n        border-top-right-radius: 0;\n        border-bottom-right-radius: 0;\n      `\n    ),\n    suffix: cx(\n      prefixSuffix,\n      css`\n        label: input-suffix;\n        padding-left: ${theme.spacing(1)};\n        padding-right: ${theme.spacing(1)};\n        margin-bottom: -2px;\n        border-left: none;\n        border-top-left-radius: 0;\n        border-bottom-left-radius: 0;\n        right: 0;\n      `\n    ),\n    loadingIndicator: css`\n      & + * {\n        margin-left: ${theme.spacing(0.5)};\n      }\n    `,\n  };\n});\n"],"names":["React"],"mappings":"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"}