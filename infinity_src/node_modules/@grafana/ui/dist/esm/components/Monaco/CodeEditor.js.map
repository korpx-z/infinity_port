{"version":3,"file":"CodeEditor.js","sources":["../../../../src/components/Monaco/CodeEditor.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport type * as monacoType from 'monaco-editor/esm/vs/editor/editor.api';\nimport React, { PureComponent } from 'react';\n\nimport { GrafanaTheme2, monacoLanguageRegistry } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\n\nimport { withTheme2 } from '../../themes';\nimport { Themeable2 } from '../../types';\n\nimport { ReactMonacoEditorLazy } from './ReactMonacoEditorLazy';\nimport { registerSuggestions } from './suggestions';\nimport { CodeEditorProps, Monaco, MonacoEditor as MonacoEditorType, MonacoOptions } from './types';\n\ntype Props = CodeEditorProps & Themeable2;\n\nclass UnthemedCodeEditor extends PureComponent<Props> {\n  completionCancel?: monacoType.IDisposable;\n  monaco?: Monaco;\n\n  constructor(props: Props) {\n    super(props);\n  }\n\n  componentWillUnmount() {\n    if (this.completionCancel) {\n      this.completionCancel.dispose();\n    }\n  }\n\n  componentDidUpdate(oldProps: Props) {\n    const { getSuggestions, language } = this.props;\n\n    const newLanguage = oldProps.language !== language;\n    const newGetSuggestions = oldProps.getSuggestions !== getSuggestions;\n\n    if (newGetSuggestions || newLanguage) {\n      if (this.completionCancel) {\n        this.completionCancel.dispose();\n      }\n\n      if (!this.monaco) {\n        console.warn('Monaco instance not loaded yet');\n        return;\n      }\n\n      if (getSuggestions) {\n        this.completionCancel = registerSuggestions(this.monaco, language, getSuggestions);\n      }\n    }\n\n    if (newLanguage) {\n      this.loadCustomLanguage();\n    }\n  }\n\n  loadCustomLanguage = () => {\n    const { language } = this.props;\n\n    const customLanguage = monacoLanguageRegistry.getIfExists(language);\n\n    if (customLanguage) {\n      return customLanguage.init();\n    }\n\n    return Promise.resolve();\n  };\n\n  // This is replaced with a real function when the actual editor mounts\n  getEditorValue = () => '';\n\n  onBlur = () => {\n    const { onBlur } = this.props;\n    if (onBlur) {\n      onBlur(this.getEditorValue());\n    }\n  };\n\n  onSave = () => {\n    const { onSave } = this.props;\n    if (onSave) {\n      onSave(this.getEditorValue());\n    }\n  };\n\n  handleBeforeMount = (monaco: Monaco) => {\n    this.monaco = monaco;\n    const { language, getSuggestions, onBeforeEditorMount } = this.props;\n\n    if (getSuggestions) {\n      this.completionCancel = registerSuggestions(monaco, language, getSuggestions);\n    }\n\n    onBeforeEditorMount?.(monaco);\n  };\n\n  handleOnMount = (editor: MonacoEditorType, monaco: Monaco) => {\n    const { onChange, onEditorDidMount } = this.props;\n\n    this.getEditorValue = () => editor.getValue();\n\n    editor.addCommand(monaco.KeyMod.CtrlCmd | monaco.KeyCode.KeyS, this.onSave);\n    const languagePromise = this.loadCustomLanguage();\n\n    if (onEditorDidMount) {\n      languagePromise.then(() => onEditorDidMount(editor, monaco));\n      editor.getModel()?.onDidChangeContent(() => onChange?.(editor.getValue()));\n    }\n  };\n\n  render() {\n    const { theme, language, width, height, showMiniMap, showLineNumbers, readOnly, monacoOptions } = this.props;\n    const value = this.props.value ?? '';\n    const longText = value.length > 100;\n\n    const containerStyles = this.props.containerStyles ?? getStyles(theme).container;\n\n    const options: MonacoOptions = {\n      wordWrap: 'off',\n      tabSize: 2,\n      codeLens: false,\n      contextmenu: false,\n      minimap: {\n        enabled: longText && showMiniMap,\n        renderCharacters: false,\n      },\n\n      readOnly,\n      lineNumbersMinChars: 4,\n      lineDecorationsWidth: 1 * theme.spacing.gridSize,\n      overviewRulerBorder: false,\n      automaticLayout: true,\n      padding: {\n        top: 0.5 * theme.spacing.gridSize,\n        bottom: 0.5 * theme.spacing.gridSize,\n      },\n      fixedOverflowWidgets: true, // Ensures suggestions menu is drawn on top\n    };\n\n    if (!showLineNumbers) {\n      options.glyphMargin = false;\n      options.folding = false;\n      options.lineNumbers = 'off';\n      options.lineNumbersMinChars = 0;\n    }\n\n    return (\n      <div className={containerStyles} onBlur={this.onBlur} aria-label={selectors.components.CodeEditor.container}>\n        <ReactMonacoEditorLazy\n          width={width}\n          height={height}\n          language={language}\n          value={value}\n          options={{\n            ...options,\n            ...(monacoOptions ?? {}),\n          }}\n          beforeMount={this.handleBeforeMount}\n          onMount={this.handleOnMount}\n        />\n      </div>\n    );\n  }\n}\n\nexport const CodeEditor = withTheme2(UnthemedCodeEditor);\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    container: css`\n      border-radius: ${theme.shape.borderRadius()};\n      border: 1px solid ${theme.components.input.borderColor};\n    `,\n  };\n};\n"],"names":["React"],"mappings":"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"}