{"version":3,"file":"ExpanderCell.js","sources":["../../../../src/components/InteractiveTable/ExpanderCell.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React from 'react';\nimport { CellProps } from 'react-table';\n\nimport { IconButton } from '../IconButton/IconButton';\n\nconst expanderContainerStyles = css`\n  display: flex;\n  align-items: center;\n  height: 100%;\n`;\n\nexport function ExpanderCell<K extends object>({ row, __rowID }: CellProps<K, void> & { __rowID: string }) {\n  return (\n    <div className={expanderContainerStyles}>\n      <IconButton\n        tooltip=\"toggle row expanded\"\n        aria-controls={__rowID}\n        // @ts-expect-error react-table doesn't ship with useExpanded types and we can't use declaration merging without affecting the table viz\n        name={row.isExpanded ? 'angle-down' : 'angle-right'}\n        // @ts-expect-error same as the line above\n        aria-expanded={row.isExpanded}\n        // @ts-expect-error same as the line above\n        {...row.getToggleRowExpandedProps()}\n      />\n    </div>\n  );\n}\n"],"names":["React"],"mappings":";;;;;;;;;;;;;;;;;;;;AAMA,MAAM,uBAA0B,GAAA,GAAA,CAAA;AAAA;AAAA;AAAA;AAAA,CAAA,CAAA;AAMzB,SAAS,YAA+B,CAAA,EAAE,GAAK,EAAA,OAAA,EAAqD,EAAA;AACzG,EACE,uBAAAA,cAAA,CAAA,aAAA,CAAC,KAAI,EAAA,EAAA,SAAA,EAAW,uBACd,EAAA,kBAAAA,cAAA,CAAA,aAAA;AAAA,IAAC,UAAA;AAAA,IAAA,cAAA,CAAA;AAAA,MACC,OAAQ,EAAA,qBAAA;AAAA,MACR,eAAe,EAAA,OAAA;AAAA,MAEf,IAAA,EAAM,GAAI,CAAA,UAAA,GAAa,YAAe,GAAA,aAAA;AAAA,MAEtC,iBAAe,GAAI,CAAA,UAAA;AAAA,KAAA,EAEf,IAAI,yBAA0B,EAAA,CAAA;AAAA,GAEtC,CAAA,CAAA;AAEJ;;;;"}