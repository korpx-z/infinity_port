{"version":3,"file":"config.js","sources":["../../../../src/components/uPlot/config.ts"],"sourcesContent":["import { SelectableValue } from '@grafana/data';\nimport {\n  AxisPlacement,\n  BarAlignment,\n  GraphDrawStyle,\n  GraphGradientMode,\n  GraphTresholdsStyleMode,\n  LineInterpolation,\n  VisibilityMode,\n  StackingMode,\n} from '@grafana/schema';\n\n/**\n * @alpha\n */\nexport const graphFieldOptions = {\n  drawStyle: [\n    { label: 'Lines', value: GraphDrawStyle.Line },\n    { label: 'Bars', value: GraphDrawStyle.Bars },\n    { label: 'Points', value: GraphDrawStyle.Points },\n  ] as Array<SelectableValue<GraphDrawStyle>>,\n\n  lineInterpolation: [\n    { description: 'Linear', value: LineInterpolation.Linear, icon: 'gf-interpolation-linear' },\n    { description: 'Smooth', value: LineInterpolation.Smooth, icon: 'gf-interpolation-smooth' },\n    { description: 'Step before', value: LineInterpolation.StepBefore, icon: 'gf-interpolation-step-before' },\n    { description: 'Step after', value: LineInterpolation.StepAfter, icon: 'gf-interpolation-step-after' },\n  ] as Array<SelectableValue<LineInterpolation>>,\n\n  barAlignment: [\n    { description: 'Before', value: BarAlignment.Before, icon: 'gf-bar-alignment-before' },\n    { description: 'Center', value: BarAlignment.Center, icon: 'gf-bar-alignment-center' },\n    { description: 'After', value: BarAlignment.After, icon: 'gf-bar-alignment-after' },\n  ] as Array<SelectableValue<BarAlignment>>,\n\n  showPoints: [\n    { label: 'Auto', value: VisibilityMode.Auto, description: 'Show points when the density is low' },\n    { label: 'Always', value: VisibilityMode.Always },\n    { label: 'Never', value: VisibilityMode.Never },\n  ] as Array<SelectableValue<VisibilityMode>>,\n\n  axisPlacement: [\n    { label: 'Auto', value: AxisPlacement.Auto, description: 'First field on the left, everything else on the right' },\n    { label: 'Left', value: AxisPlacement.Left },\n    { label: 'Right', value: AxisPlacement.Right },\n    { label: 'Hidden', value: AxisPlacement.Hidden },\n  ] as Array<SelectableValue<AxisPlacement>>,\n\n  fillGradient: [\n    { label: 'None', value: GraphGradientMode.None },\n    { label: 'Opacity', value: GraphGradientMode.Opacity, description: 'Enable fill opacity gradient' },\n    { label: 'Hue', value: GraphGradientMode.Hue, description: 'Small color hue gradient' },\n    {\n      label: 'Scheme',\n      value: GraphGradientMode.Scheme,\n      description: 'Use color scheme to define gradient',\n    },\n  ] as Array<SelectableValue<GraphGradientMode>>,\n\n  stacking: [\n    { label: 'Off', value: StackingMode.None },\n    { label: 'Normal', value: StackingMode.Normal },\n    { label: '100%', value: StackingMode.Percent },\n  ] as Array<SelectableValue<StackingMode>>,\n\n  thresholdsDisplayModes: [\n    { label: 'Off', value: GraphTresholdsStyleMode.Off },\n    { label: 'As lines', value: GraphTresholdsStyleMode.Line },\n    { label: 'As lines (dashed)', value: GraphTresholdsStyleMode.Dashed },\n    { label: 'As filled regions', value: GraphTresholdsStyleMode.Area },\n    { label: 'As filled regions and lines', value: GraphTresholdsStyleMode.LineAndArea },\n    { label: 'As filled regions and lines (dashed)', value: GraphTresholdsStyleMode.DashedAndArea },\n  ] as Array<SelectableValue<GraphTresholdsStyleMode>>,\n};\n"],"names":[],"mappings":"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"}