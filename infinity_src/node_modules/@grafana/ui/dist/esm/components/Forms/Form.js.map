{"version":3,"file":"Form.js","sources":["../../../../src/components/Forms/Form.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { HTMLProps, useEffect } from 'react';\nimport { useForm, Mode, DeepPartial, UnpackNestedValue, SubmitHandler, FieldValues } from 'react-hook-form';\n\nimport { FormAPI } from '../../types';\n\ninterface FormProps<T extends FieldValues> extends Omit<HTMLProps<HTMLFormElement>, 'onSubmit' | 'children'> {\n  validateOn?: Mode;\n  validateOnMount?: boolean;\n  validateFieldsOnMount?: string | string[];\n  defaultValues?: UnpackNestedValue<DeepPartial<T>>;\n  onSubmit: SubmitHandler<T>;\n  children: (api: FormAPI<T>) => React.ReactNode;\n  /** Sets max-width for container. Use it instead of setting individual widths on inputs.*/\n  maxWidth?: number | 'none';\n}\n\nexport function Form<T extends FieldValues>({\n  defaultValues,\n  onSubmit,\n  validateOnMount = false,\n  validateFieldsOnMount,\n  children,\n  validateOn = 'onSubmit',\n  maxWidth = 600,\n  ...htmlProps\n}: FormProps<T>) {\n  const { handleSubmit, trigger, formState, ...rest } = useForm<T>({\n    mode: validateOn,\n    defaultValues,\n  });\n\n  useEffect(() => {\n    if (validateOnMount) {\n      //@ts-expect-error\n      trigger(validateFieldsOnMount);\n    }\n  }, [trigger, validateFieldsOnMount, validateOnMount]);\n\n  return (\n    <form\n      className={css`\n        max-width: ${maxWidth !== 'none' ? maxWidth + 'px' : maxWidth};\n        width: 100%;\n      `}\n      onSubmit={handleSubmit(onSubmit)}\n      {...htmlProps}\n    >\n      {children({ errors: formState.errors, formState, ...rest })}\n    </form>\n  );\n}\n"],"names":["_a","React"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiBO,SAAS,KAA4B,EAS3B,EAAA;AAT2B,EAC1C,IAAA,EAAA,GAAA,EAAA,EAAA;AAAA,IAAA,aAAA;AAAA,IACA,QAAA;AAAA,IACA,eAAkB,GAAA,KAAA;AAAA,IAClB,qBAAA;AAAA,IACA,QAAA;AAAA,IACA,UAAa,GAAA,UAAA;AAAA,IACb,QAAW,GAAA,GAAA;AAAA,GAxBb,GAiB4C,EAQvC,EAAA,SAAA,GAAA,SAAA,CARuC,EAQvC,EAAA;AAAA,IAPH,eAAA;AAAA,IACA,UAAA;AAAA,IACA,iBAAA;AAAA,IACA,uBAAA;AAAA,IACA,UAAA;AAAA,IACA,YAAA;AAAA,IACA,UAAA;AAAA,GAAA,CAAA,CAAA;AAGA,EAAA,MAAsDA,MAAA,OAAW,CAAA;AAAA,IAC/D,IAAM,EAAA,UAAA;AAAA,IACN,aAAA;AAAA,GACD,CAHO,EAAA,EAAA,YAAA,EAAc,OAAS,EAAA,SAAA,EAAuBA,GAAAA,GAAAA,EAAT,IAASA,GAAAA,SAAAA,CAAAA,GAAAA,EAAT,CAArC,cAAA,EAAc,SAAS,EAAA,WAAA,CAAA,CAAA,CAAA;AAK/B,EAAA,SAAA,CAAU,MAAM;AACd,IAAA,IAAI,eAAiB,EAAA;AAEnB,MAAA,OAAA,CAAQ,qBAAqB,CAAA,CAAA;AAAA,KAC/B;AAAA,GACC,EAAA,CAAC,OAAS,EAAA,qBAAA,EAAuB,eAAe,CAAC,CAAA,CAAA;AAEpD,EACE,uBAAAC,cAAA,CAAA,aAAA;AAAA,IAAC,MAAA;AAAA,IAAA,cAAA,CAAA;AAAA,MACC,SAAW,EAAA,GAAA,CAAA;AAAA,mBACI,EAAA,QAAA,KAAa,MAAS,GAAA,QAAA,GAAW,IAAO,GAAA,QAAA,CAAA;AAAA;AAAA,MAAA,CAAA;AAAA,MAGvD,QAAA,EAAU,aAAa,QAAQ,CAAA;AAAA,KAC3B,EAAA,SAAA,CAAA;AAAA,IAEH,SAAS,cAAE,CAAA,EAAA,MAAA,EAAQ,SAAU,CAAA,MAAA,EAAQ,aAAc,IAAM,CAAA,CAAA;AAAA,GAC5D,CAAA;AAEJ;;;;"}