{"version":3,"file":"RadioButton.js","sources":["../../../../../src/components/Forms/RadioButtonGroup/RadioButton.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { StringSelector } from '@grafana/e2e-selectors';\n\nimport { useTheme2, stylesFactory } from '../../../themes';\nimport { getFocusStyles, getMouseFocusStyles } from '../../../themes/mixins';\nimport { getPropertiesForButtonSize } from '../commonStyles';\n\nexport type RadioButtonSize = 'sm' | 'md';\n\nexport interface RadioButtonProps {\n  size?: RadioButtonSize;\n  disabled?: boolean;\n  name?: string;\n  description?: string;\n  active: boolean;\n  id: string;\n  onChange: () => void;\n  onClick: () => void;\n  fullWidth?: boolean;\n  'aria-label'?: StringSelector;\n  children?: React.ReactNode;\n}\n\nexport const RadioButton = React.forwardRef<HTMLInputElement, RadioButtonProps>(\n  (\n    {\n      children,\n      active = false,\n      disabled = false,\n      size = 'md',\n      onChange,\n      onClick,\n      id,\n      name = undefined,\n      description,\n      fullWidth,\n      'aria-label': ariaLabel,\n    },\n    ref\n  ) => {\n    const theme = useTheme2();\n    const styles = getRadioButtonStyles(theme, size, fullWidth);\n\n    return (\n      <>\n        <input\n          type=\"radio\"\n          className={styles.radio}\n          onChange={onChange}\n          onClick={onClick}\n          disabled={disabled}\n          id={id}\n          checked={active}\n          name={name}\n          aria-label={ariaLabel}\n          ref={ref}\n        />\n        <label className={styles.radioLabel} htmlFor={id} title={description}>\n          {children}\n        </label>\n      </>\n    );\n  }\n);\n\nRadioButton.displayName = 'RadioButton';\n\nconst getRadioButtonStyles = stylesFactory((theme: GrafanaTheme2, size: RadioButtonSize, fullWidth?: boolean) => {\n  const { fontSize, height, padding } = getPropertiesForButtonSize(size, theme);\n\n  const textColor = theme.colors.text.secondary;\n  const textColorHover = theme.colors.text.primary;\n  // remove the group inner padding (set on RadioButtonGroup)\n  const labelHeight = height * theme.spacing.gridSize - 4 - 2;\n\n  return {\n    radio: css`\n      position: absolute;\n      opacity: 0;\n      z-index: -1000;\n\n      &:checked + label {\n        color: ${theme.colors.text.primary};\n        font-weight: ${theme.typography.fontWeightMedium};\n        background: ${theme.colors.action.selected};\n        z-index: 3;\n      }\n\n      &:focus + label,\n      &:focus-visible + label {\n        ${getFocusStyles(theme)};\n      }\n\n      &:focus:not(:focus-visible) + label {\n        ${getMouseFocusStyles(theme)}\n      }\n\n      &:disabled + label {\n        color: ${theme.colors.text.disabled};\n        cursor: not-allowed;\n      }\n    `,\n    radioLabel: css`\n      display: inline-block;\n      position: relative;\n      font-size: ${fontSize};\n      height: ${labelHeight}px;\n      // Deduct border from line-height for perfect vertical centering on windows and linux\n      line-height: ${labelHeight}px;\n      color: ${textColor};\n      padding: ${theme.spacing(0, padding)};\n      border-radius: ${theme.shape.borderRadius()};\n      background: ${theme.colors.background.primary};\n      cursor: pointer;\n      z-index: 1;\n      flex: ${fullWidth ? `1 0 0` : 'none'};\n      text-align: center;\n      user-select: none;\n      white-space: nowrap;\n\n      &:hover {\n        color: ${textColorHover};\n      }\n    `,\n  };\n});\n"],"names":["React"],"mappings":"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"}