{"version":3,"file":"TableCell.js","sources":["../../../../src/components/Table/TableCell.tsx"],"sourcesContent":["import React from 'react';\nimport { Cell } from 'react-table';\n\nimport { TableStyles } from './styles';\nimport { GrafanaTableColumn, TableFilterActionCallback } from './types';\n\nexport interface Props {\n  cell: Cell;\n  tableStyles: TableStyles;\n  onCellFilterAdded?: TableFilterActionCallback;\n  columnIndex: number;\n  columnCount: number;\n  userProps?: object;\n}\n\nexport const TableCell = ({ cell, tableStyles, onCellFilterAdded, userProps }: Props) => {\n  const cellProps = cell.getCellProps();\n  const field = (cell.column as unknown as GrafanaTableColumn).field;\n\n  if (!field?.display) {\n    return null;\n  }\n\n  if (cellProps.style) {\n    cellProps.style.minWidth = cellProps.style.width;\n    cellProps.style.justifyContent = (cell.column as any).justifyContent;\n  }\n\n  let innerWidth = ((cell.column.width as number) ?? 24) - tableStyles.cellPadding * 2;\n\n  return cell.render('Cell', {\n    field,\n    tableStyles,\n    onCellFilterAdded,\n    cellProps,\n    innerWidth,\n    userProps,\n  }) as React.ReactElement;\n};\n"],"names":[],"mappings":"AAeO,MAAM,YAAY,CAAC,EAAE,MAAM,WAAa,EAAA,iBAAA,EAAmB,WAAuB,KAAA;AAfzF,EAAA,IAAA,EAAA,CAAA;AAgBE,EAAM,MAAA,SAAA,GAAY,KAAK,YAAa,EAAA,CAAA;AACpC,EAAM,MAAA,KAAA,GAAS,KAAK,MAAyC,CAAA,KAAA,CAAA;AAE7D,EAAI,IAAA,EAAC,+BAAO,OAAS,CAAA,EAAA;AACnB,IAAO,OAAA,IAAA,CAAA;AAAA,GACT;AAEA,EAAA,IAAI,UAAU,KAAO,EAAA;AACnB,IAAU,SAAA,CAAA,KAAA,CAAM,QAAW,GAAA,SAAA,CAAU,KAAM,CAAA,KAAA,CAAA;AAC3C,IAAU,SAAA,CAAA,KAAA,CAAM,cAAkB,GAAA,IAAA,CAAK,MAAe,CAAA,cAAA,CAAA;AAAA,GACxD;AAEA,EAAA,IAAI,eAAe,EAAK,GAAA,IAAA,CAAA,MAAA,CAAO,UAAZ,IAAgC,GAAA,EAAA,GAAA,EAAA,IAAM,YAAY,WAAc,GAAA,CAAA,CAAA;AAEnF,EAAO,OAAA,IAAA,CAAK,OAAO,MAAQ,EAAA;AAAA,IACzB,KAAA;AAAA,IACA,WAAA;AAAA,IACA,iBAAA;AAAA,IACA,SAAA;AAAA,IACA,UAAA;AAAA,IACA,SAAA;AAAA,GACD,CAAA,CAAA;AACH;;;;"}