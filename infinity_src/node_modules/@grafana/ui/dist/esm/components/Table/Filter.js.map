{"version":3,"file":"Filter.js","sources":["../../../../src/components/Table/Filter.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport React, { useCallback, useMemo, useRef, useState } from 'react';\n\nimport { Field, GrafanaTheme2 } from '@grafana/data';\n\nimport { Popover } from '..';\nimport { useStyles2 } from '../../themes';\nimport { Icon } from '../Icon/Icon';\n\nimport { FilterPopup } from './FilterPopup';\nimport { TableStyles } from './styles';\n\ninterface Props {\n  column: any;\n  tableStyles: TableStyles;\n  field?: Field;\n}\n\nexport const Filter = ({ column, field, tableStyles }: Props) => {\n  const ref = useRef<HTMLButtonElement>(null);\n  const [isPopoverVisible, setPopoverVisible] = useState<boolean>(false);\n  const styles = useStyles2(getStyles);\n  const filterEnabled = useMemo(() => Boolean(column.filterValue), [column.filterValue]);\n  const onShowPopover = useCallback(() => setPopoverVisible(true), [setPopoverVisible]);\n  const onClosePopover = useCallback(() => setPopoverVisible(false), [setPopoverVisible]);\n\n  if (!field || !field.config.custom?.filterable) {\n    return null;\n  }\n  return (\n    <button\n      className={cx(tableStyles.headerFilter, filterEnabled ? styles.filterIconEnabled : styles.filterIconDisabled)}\n      ref={ref}\n      type=\"button\"\n      onClick={onShowPopover}\n    >\n      <Icon name=\"filter\" />\n      {isPopoverVisible && ref.current && (\n        <Popover\n          content={<FilterPopup column={column} tableStyles={tableStyles} field={field} onClose={onClosePopover} />}\n          placement=\"bottom-start\"\n          referenceElement={ref.current}\n          show\n        />\n      )}\n    </button>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  filterIconEnabled: css`\n    label: filterIconEnabled;\n    color: ${theme.colors.primary.text};\n  `,\n  filterIconDisabled: css`\n    label: filterIconDisabled;\n    color: ${theme.colors.text.disabled};\n  `,\n});\n"],"names":["React"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkBO,MAAM,SAAS,CAAC,EAAE,MAAQ,EAAA,KAAA,EAAO,aAAyB,KAAA;AAlBjE,EAAA,IAAA,EAAA,CAAA;AAmBE,EAAM,MAAA,GAAA,GAAM,OAA0B,IAAI,CAAA,CAAA;AAC1C,EAAA,MAAM,CAAC,gBAAA,EAAkB,iBAAiB,CAAA,GAAI,SAAkB,KAAK,CAAA,CAAA;AACrE,EAAM,MAAA,MAAA,GAAS,WAAW,SAAS,CAAA,CAAA;AACnC,EAAM,MAAA,aAAA,GAAgB,OAAQ,CAAA,MAAM,OAAQ,CAAA,MAAA,CAAO,WAAW,CAAG,EAAA,CAAC,MAAO,CAAA,WAAW,CAAC,CAAA,CAAA;AACrF,EAAM,MAAA,aAAA,GAAgB,YAAY,MAAM,iBAAA,CAAkB,IAAI,CAAG,EAAA,CAAC,iBAAiB,CAAC,CAAA,CAAA;AACpF,EAAM,MAAA,cAAA,GAAiB,YAAY,MAAM,iBAAA,CAAkB,KAAK,CAAG,EAAA,CAAC,iBAAiB,CAAC,CAAA,CAAA;AAEtF,EAAA,IAAI,CAAC,KAAS,IAAA,EAAA,CAAC,WAAM,MAAO,CAAA,MAAA,KAAb,mBAAqB,UAAY,CAAA,EAAA;AAC9C,IAAO,OAAA,IAAA,CAAA;AAAA,GACT;AACA,EACE,uBAAAA,cAAA,CAAA,aAAA;AAAA,IAAC,QAAA;AAAA,IAAA;AAAA,MACC,SAAA,EAAW,GAAG,WAAY,CAAA,YAAA,EAAc,gBAAgB,MAAO,CAAA,iBAAA,GAAoB,OAAO,kBAAkB,CAAA;AAAA,MAC5G,GAAA;AAAA,MACA,IAAK,EAAA,QAAA;AAAA,MACL,OAAS,EAAA,aAAA;AAAA,KAAA;AAAA,oBAETA,cAAA,CAAA,aAAA,CAAC,IAAK,EAAA,EAAA,IAAA,EAAK,QAAS,EAAA,CAAA;AAAA,IACnB,gBAAA,IAAoB,IAAI,OACvB,oBAAAA,cAAA,CAAA,aAAA;AAAA,MAAC,OAAA;AAAA,MAAA;AAAA,QACC,yBAAUA,cAAA,CAAA,aAAA,CAAA,WAAA,EAAA,EAAY,QAAgB,WAA0B,EAAA,KAAA,EAAc,SAAS,cAAgB,EAAA,CAAA;AAAA,QACvG,SAAU,EAAA,cAAA;AAAA,QACV,kBAAkB,GAAI,CAAA,OAAA;AAAA,QACtB,IAAI,EAAA,IAAA;AAAA,OAAA;AAAA,KACN;AAAA,GAEJ,CAAA;AAEJ,EAAA;AAEA,MAAM,SAAA,GAAY,CAAC,KAA0B,MAAA;AAAA,EAC3C,iBAAmB,EAAA,GAAA,CAAA;AAAA;AAAA,WAER,EAAA,KAAA,CAAM,OAAO,OAAQ,CAAA,IAAA,CAAA;AAAA,EAAA,CAAA;AAAA,EAEhC,kBAAoB,EAAA,GAAA,CAAA;AAAA;AAAA,WAET,EAAA,KAAA,CAAM,OAAO,IAAK,CAAA,QAAA,CAAA;AAAA,EAAA,CAAA;AAE/B,CAAA,CAAA;;;;"}