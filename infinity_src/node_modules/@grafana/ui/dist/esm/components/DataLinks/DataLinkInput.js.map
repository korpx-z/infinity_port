{"version":3,"file":"DataLinkInput.js","sources":["../../../../src/components/DataLinks/DataLinkInput.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport Prism, { Grammar, LanguageMap } from 'prismjs';\nimport React, { memo, useEffect, useMemo, useRef, useState } from 'react';\nimport { Popper as ReactPopper } from 'react-popper';\nimport usePrevious from 'react-use/lib/usePrevious';\nimport { Value } from 'slate';\nimport Plain from 'slate-plain-serializer';\nimport { Editor } from 'slate-react';\n\nimport { DataLinkBuiltInVars, GrafanaTheme2, VariableOrigin, VariableSuggestion } from '@grafana/data';\n\nimport { makeValue } from '../../index';\nimport { SlatePrism } from '../../slate-plugins';\nimport { useStyles2 } from '../../themes';\nimport { SCHEMA } from '../../utils/slate';\nimport CustomScrollbar from '../CustomScrollbar/CustomScrollbar';\nimport { getInputStyles } from '../Input/Input';\nimport { Portal } from '../index';\n\nimport { DataLinkSuggestions } from './DataLinkSuggestions';\nimport { SelectionReference } from './SelectionReference';\n\nconst modulo = (a: number, n: number) => a - n * Math.floor(a / n);\n\ninterface DataLinkInputProps {\n  value: string;\n  onChange: (url: string, callback?: () => void) => void;\n  suggestions: VariableSuggestion[];\n  placeholder?: string;\n}\n\nconst datalinksSyntax: Grammar = {\n  builtInVariable: {\n    pattern: /(\\${\\S+?})/,\n  },\n};\n\nconst plugins = [\n  SlatePrism(\n    {\n      onlyIn: (node: any) => node.type === 'code_block',\n      getSyntax: () => 'links',\n    },\n    { ...(Prism.languages as LanguageMap), links: datalinksSyntax }\n  ),\n];\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  input: getInputStyles({ theme, invalid: false }).input,\n  editor: css`\n    .token.builtInVariable {\n      color: ${theme.colors.success.text};\n    }\n    .token.variable {\n      color: ${theme.colors.primary.text};\n    }\n  `,\n  suggestionsWrapper: css`\n    box-shadow: ${theme.shadows.z2};\n  `,\n  // Wrapper with child selector needed.\n  // When classnames are applied to the same element as the wrapper, it causes the suggestions to stop working\n  wrapperOverrides: css`\n    width: 100%;\n    > .slate-query-field__wrapper {\n      padding: 0;\n      background-color: transparent;\n      border: none;\n    }\n  `,\n});\n\n// This memoised also because rerendering the slate editor grabs focus which created problem in some cases this\n// was used and changes to different state were propagated here.\nexport const DataLinkInput = memo(\n  ({\n    value,\n    onChange,\n    suggestions,\n    placeholder = 'http://your-grafana.com/d/000000010/annotations',\n  }: DataLinkInputProps) => {\n    const editorRef = useRef<Editor>(null);\n    const styles = useStyles2(getStyles);\n    const [showingSuggestions, setShowingSuggestions] = useState(false);\n    const [suggestionsIndex, setSuggestionsIndex] = useState(0);\n    const [linkUrl, setLinkUrl] = useState<Value>(makeValue(value));\n    const prevLinkUrl = usePrevious<Value>(linkUrl);\n    const [scrollTop, setScrollTop] = useState(0);\n\n    // Workaround for https://github.com/ianstormtaylor/slate/issues/2927\n    const stateRef = useRef({ showingSuggestions, suggestions, suggestionsIndex, linkUrl, onChange });\n    stateRef.current = { showingSuggestions, suggestions, suggestionsIndex, linkUrl, onChange };\n\n    // Used to get the height of the suggestion elements in order to scroll to them.\n    const activeRef = useRef<HTMLDivElement>(null);\n    useEffect(() => {\n      setScrollTop(getElementPosition(activeRef.current, suggestionsIndex));\n    }, [suggestionsIndex]);\n\n    // SelectionReference is used to position the variables suggestion relatively to current DOM selection\n    const selectionRef = useMemo(() => new SelectionReference(), []);\n\n    const onKeyDown = React.useCallback((event: React.KeyboardEvent, next: () => any) => {\n      if (!stateRef.current.showingSuggestions) {\n        if (event.key === '=' || event.key === '$' || (event.keyCode === 32 && event.ctrlKey)) {\n          return setShowingSuggestions(true);\n        }\n        return next();\n      }\n\n      switch (event.key) {\n        case 'Backspace':\n        case 'Escape':\n          setShowingSuggestions(false);\n          return setSuggestionsIndex(0);\n\n        case 'Enter':\n          event.preventDefault();\n          return onVariableSelect(stateRef.current.suggestions[stateRef.current.suggestionsIndex]);\n\n        case 'ArrowDown':\n        case 'ArrowUp':\n          event.preventDefault();\n          const direction = event.key === 'ArrowDown' ? 1 : -1;\n          return setSuggestionsIndex((index) => modulo(index + direction, stateRef.current.suggestions.length));\n        default:\n          return next();\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(() => {\n      // Update the state of the link in the parent. This is basically done on blur but we need to do it after\n      // our state have been updated. The duplicity of state is done for perf reasons and also because local\n      // state also contains things like selection and formating.\n      if (prevLinkUrl && prevLinkUrl.selection.isFocused && !linkUrl.selection.isFocused) {\n        stateRef.current.onChange(Plain.serialize(linkUrl));\n      }\n    }, [linkUrl, prevLinkUrl]);\n\n    const onUrlChange = React.useCallback(({ value }: { value: Value }) => {\n      setLinkUrl(value);\n    }, []);\n\n    const onVariableSelect = (item: VariableSuggestion, editor = editorRef.current!) => {\n      const precedingChar: string = getCharactersAroundCaret();\n      const precedingDollar = precedingChar === '$';\n      if (item.origin !== VariableOrigin.Template || item.value === DataLinkBuiltInVars.includeVars) {\n        editor.insertText(`${precedingDollar ? '' : '$'}\\{${item.value}}`);\n      } else {\n        editor.insertText(`${precedingDollar ? '' : '$'}\\{${item.value}:queryparam}`);\n      }\n\n      setLinkUrl(editor.value);\n      setShowingSuggestions(false);\n\n      setSuggestionsIndex(0);\n      stateRef.current.onChange(Plain.serialize(editor.value));\n    };\n\n    const getCharactersAroundCaret = () => {\n      const input: HTMLSpanElement | null = document.getElementById('data-link-input')!;\n      let precedingChar = '',\n        sel: Selection | null,\n        range: Range;\n      if (window.getSelection) {\n        sel = window.getSelection();\n        if (sel && sel.rangeCount > 0) {\n          range = sel.getRangeAt(0).cloneRange();\n          // Collapse to the start of the range\n          range.collapse(true);\n          range.setStart(input, 0);\n          precedingChar = range.toString().slice(-1);\n        }\n      }\n      return precedingChar;\n    };\n\n    return (\n      <div className={styles.wrapperOverrides}>\n        <div className=\"slate-query-field__wrapper\">\n          <div id=\"data-link-input\" className=\"slate-query-field\">\n            {showingSuggestions && (\n              <Portal>\n                <ReactPopper\n                  referenceElement={selectionRef}\n                  placement=\"bottom-end\"\n                  modifiers={[\n                    {\n                      name: 'preventOverflow',\n                      enabled: true,\n                      options: {\n                        rootBoundary: 'viewport',\n                      },\n                    },\n                    {\n                      name: 'arrow',\n                      enabled: false,\n                    },\n                    {\n                      name: 'offset',\n                      options: {\n                        offset: [250, 0],\n                      },\n                    },\n                  ]}\n                >\n                  {({ ref, style, placement }) => {\n                    return (\n                      <div ref={ref} style={style} data-placement={placement} className={styles.suggestionsWrapper}>\n                        <CustomScrollbar\n                          scrollTop={scrollTop}\n                          autoHeightMax=\"300px\"\n                          setScrollTop={({ scrollTop }) => setScrollTop(scrollTop)}\n                        >\n                          <DataLinkSuggestions\n                            activeRef={activeRef}\n                            suggestions={stateRef.current.suggestions}\n                            onSuggestionSelect={onVariableSelect}\n                            onClose={() => setShowingSuggestions(false)}\n                            activeIndex={suggestionsIndex}\n                          />\n                        </CustomScrollbar>\n                      </div>\n                    );\n                  }}\n                </ReactPopper>\n              </Portal>\n            )}\n            <Editor\n              schema={SCHEMA}\n              ref={editorRef}\n              placeholder={placeholder}\n              value={stateRef.current.linkUrl}\n              onChange={onUrlChange}\n              onKeyDown={(event, _editor, next) => onKeyDown(event, next)}\n              plugins={plugins}\n              className={cx(\n                styles.editor,\n                styles.input,\n                css`\n                  padding: 3px 8px;\n                `\n              )}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n);\n\nDataLinkInput.displayName = 'DataLinkInput';\n\nfunction getElementPosition(suggestionElement: HTMLElement | null, activeIndex: number) {\n  return (suggestionElement?.clientHeight ?? 0) * activeIndex;\n}\n"],"names":["React","value","ReactPopper","scrollTop"],"mappings":"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"}