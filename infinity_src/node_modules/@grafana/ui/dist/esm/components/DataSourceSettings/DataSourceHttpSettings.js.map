{"version":3,"file":"DataSourceHttpSettings.js","sources":["../../../../src/components/DataSourceSettings/DataSourceHttpSettings.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport React, { useState, useCallback } from 'react';\n\nimport { DataSourceSettings, SelectableValue } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\n\nimport { useTheme2 } from '../../themes';\nimport { FormField } from '../FormField/FormField';\nimport { InlineFormLabel } from '../FormLabel/FormLabel';\nimport { InlineField } from '../Forms/InlineField';\nimport { Input } from '../Forms/Legacy/Input/Input';\nimport { Icon } from '../Icon/Icon';\nimport { Select } from '../Select/Select';\nimport { InlineSwitch } from '../Switch/Switch';\nimport { TagsInput } from '../TagsInput/TagsInput';\n\nimport { BasicAuthSettings } from './BasicAuthSettings';\nimport { CustomHeadersSettings } from './CustomHeadersSettings';\nimport { HttpProxySettings } from './HttpProxySettings';\nimport { TLSAuthSettings } from './TLSAuthSettings';\nimport { HttpSettingsProps } from './types';\n\nconst ACCESS_OPTIONS: Array<SelectableValue<string>> = [\n  {\n    label: 'Server (default)',\n    value: 'proxy',\n  },\n  {\n    label: 'Browser',\n    value: 'direct',\n  },\n];\n\nconst DEFAULT_ACCESS_OPTION = {\n  label: 'Server (default)',\n  value: 'proxy',\n};\n\nconst HttpAccessHelp = () => (\n  <div className=\"grafana-info-box m-t-2\">\n    <p>\n      Access mode controls how requests to the data source will be handled.\n      <strong>\n        &nbsp;<i>Server</i>\n      </strong>{' '}\n      should be the preferred way if nothing else is stated.\n    </p>\n    <div className=\"alert-title\">Server access mode (Default):</div>\n    <p>\n      All requests will be made from the browser to Grafana backend/server which in turn will forward the requests to\n      the data source and by that circumvent possible Cross-Origin Resource Sharing (CORS) requirements. The URL needs\n      to be accessible from the grafana backend/server if you select this access mode.\n    </p>\n    <div className=\"alert-title\">Browser access mode:</div>\n    <p>\n      All requests will be made from the browser directly to the data source and may be subject to Cross-Origin Resource\n      Sharing (CORS) requirements. The URL needs to be accessible from the browser if you select this access mode.\n    </p>\n  </div>\n);\n\nconst LABEL_WIDTH = 26;\n\nexport const DataSourceHttpSettings = (props: HttpSettingsProps) => {\n  const {\n    defaultUrl,\n    dataSourceConfig,\n    onChange,\n    showAccessOptions,\n    sigV4AuthToggleEnabled,\n    showForwardOAuthIdentityOption,\n    azureAuthSettings,\n    renderSigV4Editor,\n  } = props;\n  let urlTooltip;\n  const [isAccessHelpVisible, setIsAccessHelpVisible] = useState(false);\n  const theme = useTheme2();\n\n  const onSettingsChange = useCallback(\n    (change: Partial<DataSourceSettings<any, any>>) => {\n      onChange({\n        ...dataSourceConfig,\n        ...change,\n      });\n    },\n    [dataSourceConfig, onChange]\n  );\n\n  switch (dataSourceConfig.access) {\n    case 'direct':\n      urlTooltip = (\n        <>\n          Your access method is <em>Browser</em>, this means the URL needs to be accessible from the browser.\n        </>\n      );\n      break;\n    case 'proxy':\n      urlTooltip = (\n        <>\n          Your access method is <em>Server</em>, this means the URL needs to be accessible from the grafana\n          backend/server.\n        </>\n      );\n      break;\n    default:\n      urlTooltip = 'Specify a complete HTTP URL (for example http://your_server:8080)';\n  }\n\n  const accessSelect = (\n    <Select\n      aria-label=\"Access\"\n      className=\"width-20 gf-form-input\"\n      options={ACCESS_OPTIONS}\n      value={ACCESS_OPTIONS.filter((o) => o.value === dataSourceConfig.access)[0] || DEFAULT_ACCESS_OPTION}\n      onChange={(selectedValue) => onSettingsChange({ access: selectedValue.value })}\n      disabled={dataSourceConfig.readOnly}\n    />\n  );\n\n  const isValidUrl = /^(ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?$/.test(\n    dataSourceConfig.url\n  );\n\n  const notValidStyle = css`\n    box-shadow: inset 0 0px 5px ${theme.v1.palette.red};\n  `;\n\n  const inputStyle = cx({ [`width-20`]: true, [notValidStyle]: !isValidUrl });\n\n  const urlInput = (\n    <Input\n      className={inputStyle}\n      placeholder={defaultUrl}\n      value={dataSourceConfig.url}\n      aria-label={selectors.components.DataSource.DataSourceHttpSettings.urlInput}\n      onChange={(event) => onSettingsChange({ url: event.currentTarget.value })}\n      disabled={dataSourceConfig.readOnly}\n    />\n  );\n\n  const azureAuthEnabled: boolean =\n    (azureAuthSettings?.azureAuthSupported && azureAuthSettings.getAzureAuthEnabled(dataSourceConfig)) || false;\n\n  return (\n    <div className=\"gf-form-group\">\n      <>\n        <h3 className=\"page-heading\">HTTP</h3>\n        <div className=\"gf-form-group\">\n          <div className=\"gf-form\">\n            <FormField label=\"URL\" labelWidth={13} tooltip={urlTooltip} inputEl={urlInput} />\n          </div>\n\n          {showAccessOptions && (\n            <>\n              <div className=\"gf-form-inline\">\n                <div className=\"gf-form\">\n                  <FormField label=\"Access\" labelWidth={13} inputWidth={20} inputEl={accessSelect} />\n                </div>\n                <div className=\"gf-form\">\n                  <button\n                    type=\"button\"\n                    className=\"gf-form-label query-keyword pointer\"\n                    onClick={() => setIsAccessHelpVisible((isVisible) => !isVisible)}\n                  >\n                    Help&nbsp;\n                    <Icon name={isAccessHelpVisible ? 'angle-down' : 'angle-right'} style={{ marginBottom: 0 }} />\n                  </button>\n                </div>\n              </div>\n              {isAccessHelpVisible && <HttpAccessHelp />}\n            </>\n          )}\n          {dataSourceConfig.access === 'proxy' && (\n            <div className=\"gf-form-group\">\n              <div className=\"gf-form\">\n                <InlineFormLabel\n                  width={13}\n                  tooltip=\"Grafana proxy deletes forwarded cookies by default. Specify cookies by name that should be forwarded to the data source.\"\n                >\n                  Allowed cookies\n                </InlineFormLabel>\n                <TagsInput\n                  tags={dataSourceConfig.jsonData.keepCookies}\n                  width={40}\n                  onChange={(cookies) =>\n                    onSettingsChange({ jsonData: { ...dataSourceConfig.jsonData, keepCookies: cookies } })\n                  }\n                  disabled={dataSourceConfig.readOnly}\n                />\n              </div>\n              <div className=\"gf-form\">\n                <FormField\n                  label=\"Timeout\"\n                  type=\"number\"\n                  labelWidth={13}\n                  inputWidth={20}\n                  tooltip=\"HTTP request timeout in seconds\"\n                  placeholder=\"Timeout in seconds\"\n                  aria-label=\"Timeout in seconds\"\n                  value={dataSourceConfig.jsonData.timeout}\n                  onChange={(event) => {\n                    onSettingsChange({\n                      jsonData: { ...dataSourceConfig.jsonData, timeout: parseInt(event.currentTarget.value, 10) },\n                    });\n                  }}\n                  disabled={dataSourceConfig.readOnly}\n                />\n              </div>\n            </div>\n          )}\n        </div>\n      </>\n\n      <>\n        <h3 className=\"page-heading\">Auth</h3>\n        <div className=\"gf-form-group\">\n          <div className=\"gf-form-inline\">\n            <InlineField label=\"Basic auth\" labelWidth={LABEL_WIDTH} disabled={dataSourceConfig.readOnly}>\n              <InlineSwitch\n                id=\"http-settings-basic-auth\"\n                value={dataSourceConfig.basicAuth}\n                onChange={(event) => {\n                  onSettingsChange({ basicAuth: event!.currentTarget.checked });\n                }}\n              />\n            </InlineField>\n\n            <InlineField\n              label=\"With Credentials\"\n              tooltip=\"Whether credentials such as cookies or auth headers should be sent with cross-site requests.\"\n              labelWidth={LABEL_WIDTH}\n              disabled={dataSourceConfig.readOnly}\n            >\n              <InlineSwitch\n                id=\"http-settings-with-credentials\"\n                value={dataSourceConfig.withCredentials}\n                onChange={(event) => {\n                  onSettingsChange({ withCredentials: event!.currentTarget.checked });\n                }}\n              />\n            </InlineField>\n          </div>\n\n          {azureAuthSettings?.azureAuthSupported && (\n            <div className=\"gf-form-inline\">\n              <InlineField\n                label=\"Azure Authentication\"\n                tooltip=\"Use Azure authentication for Azure endpoint.\"\n                labelWidth={LABEL_WIDTH}\n                disabled={dataSourceConfig.readOnly}\n              >\n                <InlineSwitch\n                  id=\"http-settings-azure-auth\"\n                  value={azureAuthEnabled}\n                  onChange={(event) => {\n                    onSettingsChange(\n                      azureAuthSettings.setAzureAuthEnabled(dataSourceConfig, event!.currentTarget.checked)\n                    );\n                  }}\n                />\n              </InlineField>\n            </div>\n          )}\n\n          {sigV4AuthToggleEnabled && (\n            <div className=\"gf-form-inline\">\n              <InlineField label=\"SigV4 auth\" labelWidth={LABEL_WIDTH} disabled={dataSourceConfig.readOnly}>\n                <InlineSwitch\n                  id=\"http-settings-sigv4-auth\"\n                  value={dataSourceConfig.jsonData.sigV4Auth || false}\n                  onChange={(event) => {\n                    onSettingsChange({\n                      jsonData: { ...dataSourceConfig.jsonData, sigV4Auth: event!.currentTarget.checked },\n                    });\n                  }}\n                />\n              </InlineField>\n            </div>\n          )}\n\n          {dataSourceConfig.access === 'proxy' && (\n            <HttpProxySettings\n              dataSourceConfig={dataSourceConfig}\n              onChange={(jsonData) => onSettingsChange({ jsonData })}\n              showForwardOAuthIdentityOption={showForwardOAuthIdentityOption}\n            />\n          )}\n        </div>\n        {dataSourceConfig.basicAuth && (\n          <>\n            <h6>Basic Auth Details</h6>\n            <div className=\"gf-form-group\">\n              <BasicAuthSettings {...props} />\n            </div>\n          </>\n        )}\n\n        {azureAuthSettings?.azureAuthSupported && azureAuthEnabled && azureAuthSettings.azureSettingsUI && (\n          <azureAuthSettings.azureSettingsUI dataSourceConfig={dataSourceConfig} onChange={onChange} />\n        )}\n\n        {dataSourceConfig.jsonData.sigV4Auth && sigV4AuthToggleEnabled && renderSigV4Editor}\n        {(dataSourceConfig.jsonData.tlsAuth || dataSourceConfig.jsonData.tlsAuthWithCACert) && (\n          <TLSAuthSettings dataSourceConfig={dataSourceConfig} onChange={onChange} />\n        )}\n\n        {dataSourceConfig.access === 'proxy' && (\n          <CustomHeadersSettings dataSourceConfig={dataSourceConfig} onChange={onChange} />\n        )}\n      </>\n    </div>\n  );\n};\n"],"names":["React"],"mappings":"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"}