{"version":3,"file":"index.js","sources":["../src/themes/stylesFactory.ts","../src/themes/ThemeContext.tsx","../src/components/Icon/iconBundle.ts","../src/components/Icon/utils.ts","../src/components/Icon/Icon.tsx","../src/utils/tooltipUtils.ts","../src/themes/getTheme.ts","../src/themes/GlobalStyles/angularPanelStyles.ts","../src/themes/GlobalStyles/card.ts","../src/themes/mixins.ts","../src/themes/GlobalStyles/elements.ts","../src/themes/GlobalStyles/forms.ts","../src/themes/GlobalStyles/markdownStyles.ts","../src/themes/GlobalStyles/page.ts","../src/themes/GlobalStyles/GlobalStyles.tsx","../src/components/Portal/Portal.tsx","../src/components/Tooltip/Tooltip.tsx","../src/components/Tooltip/PopoverController.tsx","../src/components/FormLabel/FormLabel.tsx","../src/components/FormField/FormField.tsx","../src/utils/dom.ts","../src/utils/reactUtils.ts","../src/utils/colors.ts","../src/utils/validate.ts","../src/utils/slate.ts","../src/utils/dataLinks.ts","../src/utils/tags.ts","../src/utils/scrollbar.ts","../src/utils/table.ts","../src/utils/measureText.ts","../src/utils/useForceUpdate.ts","../src/utils/fuzzy.ts","../src/utils/searchFunctions.ts","../src/utils/logger.ts","../src/utils/debug.ts","../src/utils/nodeGraph.ts","../src/components/Forms/Legacy/Input/Input.tsx","../src/components/Forms/Legacy/Select/IndicatorsContainer.tsx","../src/components/Forms/Legacy/Select/NoOptionsMessage.tsx","../src/components/CustomScrollbar/ScrollIndicators.tsx","../src/components/CustomScrollbar/CustomScrollbar.tsx","../src/components/Select/SelectOptionGroup.tsx","../src/utils/useDelayedSwitch.ts","../src/components/Spinner/Spinner.tsx","../src/components/transitions/FadeTransition.tsx","../src/components/transitions/SlideOutTransition.tsx","../src/components/Select/SingleValue.tsx","../src/components/Select/resetSelectStyles.ts","../src/components/Forms/Legacy/Select/SelectOption.tsx","../src/components/Forms/Legacy/Select/Select.tsx","../src/components/Forms/Legacy/Switch/Switch.tsx","../src/components/Forms/commonStyles.ts","../src/components/Button/Button.tsx","../src/components/SecretFormField/SecretFormField.tsx","../src/components/IconButton/IconButton.tsx","../src/components/Button/ButtonGroup.tsx","../src/components/ConfirmButton/ConfirmButton.tsx","../src/components/ConfirmButton/DeleteButton.tsx","../src/components/Tooltip/Popover.tsx","../src/components/Toggletip/Toggletip.tsx","../src/components/TabbedContainer/TabbedContainer.tsx","../src/utils/i18n.tsx","../src/components/InlineToast/InlineToast.tsx","../src/components/ClipboardButton/ClipboardButton.tsx","../src/components/Input/Input.tsx","../src/components/Select/DropdownIndicator.tsx","../src/components/Select/IndicatorsContainer.tsx","../src/components/Select/InputControl.tsx","../src/components/Select/getSelectStyles.ts","../src/components/Select/MultiValue.tsx","../src/components/Select/SelectContainer.tsx","../src/components/Select/SelectMenu.tsx","../src/components/Select/ValueContainer.tsx","../src/components/Select/utils.ts","../src/components/Select/SelectBase.tsx","../src/components/Select/Select.tsx","../src/components/Cascader/optionMappings.ts","../src/components/Cascader/Cascader.tsx","../src/components/ButtonCascader/ButtonCascader.tsx","../src/components/LoadingPlaceholder/LoadingPlaceholder.tsx","../src/components/LoadingBar/LoadingBar.tsx","../src/utils/closePopover.ts","../src/components/ColorPicker/ColorSwatch.tsx","../src/utils/reverseMap.ts","../src/components/ColorPicker/NamedColorsGroup.tsx","../src/components/ColorPicker/NamedColorsPalette.tsx","../src/components/ColorPicker/ColorInput.tsx","../src/components/ColorPicker/SpectrumPalette.tsx","../src/components/ColorPicker/ColorPickerPopover.tsx","../src/components/ColorPicker/SeriesColorPickerPopover.tsx","../src/components/ColorPicker/ColorPicker.tsx","../src/components/ClickOutsideWrapper/ClickOutsideWrapper.tsx","../src/components/ColorPicker/ColorPickerInput.tsx","../src/components/EmptySearchResult/EmptySearchResult.tsx","../src/components/UnitPicker/UnitPicker.tsx","../src/components/StatsPicker/StatsPicker.tsx","../src/components/Menu/MenuDivider.tsx","../src/components/Menu/MenuGroup.tsx","../src/components/Menu/hooks.ts","../src/components/Menu/utils.ts","../src/components/Menu/SubMenu.tsx","../src/components/Menu/MenuItem.tsx","../src/components/Menu/Menu.tsx","../src/components/ToolbarButton/ToolbarButton.tsx","../src/components/ToolbarButton/ToolbarButtonRow.tsx","../src/components/Dropdown/ButtonSelect.tsx","../src/components/RefreshPicker/RefreshPicker.tsx","../src/components/Modal/getModalStyles.ts","../src/components/DateTimePickers/TimeZonePicker/TimeZoneGroup.tsx","../src/components/DateTimePickers/TimeZonePicker/TimeZoneOffset.tsx","../src/components/DateTimePickers/TimeZonePicker/TimeZoneDescription.tsx","../src/components/DateTimePickers/TimeZonePicker/TimeZoneTitle.tsx","../src/components/DateTimePickers/TimeZonePicker/TimeZoneOption.tsx","../src/components/DateTimePickers/TimeZonePicker.tsx","../src/components/DateTimePickers/options.ts","../src/components/DateTimePickers/TimeRangePicker/TimePickerFooter.tsx","../src/components/DateTimePickers/TimeRangePicker/TimePickerTitle.tsx","../src/components/Forms/FieldValidationMessage.tsx","../src/components/Forms/Label.tsx","../src/components/Forms/Field.tsx","../src/components/DateTimePickers/TimeRangePicker/CalendarBody.tsx","../src/components/DateTimePickers/TimeRangePicker/CalendarFooter.tsx","../src/components/DateTimePickers/TimeRangePicker/CalendarHeader.tsx","../src/components/DateTimePickers/TimeRangePicker/TimePickerCalendar.tsx","../src/components/DateTimePickers/TimeRangePicker/TimeRangeContent.tsx","../src/components/DateTimePickers/TimeRangePicker/TimeRangeOption.tsx","../src/components/DateTimePickers/TimeRangePicker/TimeRangeList.tsx","../src/components/DateTimePickers/TimeRangePicker/mapper.ts","../src/components/DateTimePickers/TimeRangePicker/TimePickerContent.tsx","../src/components/DateTimePickers/TimeRangePicker.tsx","../src/components/DateTimePickers/TimeOfDayPicker.tsx","../src/components/DateTimePickers/WeekStartPicker.tsx","../src/components/DateTimePickers/DatePicker/DatePicker.tsx","../src/components/DateTimePickers/DatePickerWithInput/DatePickerWithInput.tsx","../src/components/DateTimePickers/utils.ts","../src/components/DateTimePickers/DateTimePicker/DateTimePicker.tsx","../src/components/List/AbstractList.tsx","../src/components/List/List.tsx","../src/components/InteractiveTable/ExpanderCell.tsx","../src/components/InteractiveTable/utils.ts","../src/components/InteractiveTable/InteractiveTable.tsx","../src/components/TagsInput/TagItem.tsx","../src/components/TagsInput/TagsInput.tsx","../src/components/Pagination/Pagination.tsx","../src/components/Tags/Tag.tsx","../src/components/Tags/TagList.tsx","../src/components/FilterPill/FilterPill.tsx","../src/components/Layout/Layout.tsx","../src/components/Modal/ModalHeader.tsx","../src/components/Modal/Modal.tsx","../src/components/ConfirmModal/ConfirmModal.tsx","../src/slate-plugins/braces.ts","../src/slate-plugins/clear.ts","../src/slate-plugins/clipboard.ts","../src/slate-plugins/indentation.ts","../src/slate-plugins/newline.ts","../src/slate-plugins/runner.ts","../src/slate-plugins/selection_shortcuts.ts","../src/slate-plugins/slate-prism/TOKEN_MARK.ts","../src/slate-plugins/slate-prism/options.tsx","../src/slate-plugins/slate-prism/index.ts","../src/types/completion.ts","../src/utils/typeahead.ts","../src/components/Typeahead/TypeaheadInfo.tsx","../src/components/Typeahead/PartialHighlighter.tsx","../src/components/Typeahead/TypeaheadItem.tsx","../src/components/Typeahead/Typeahead.tsx","../src/slate-plugins/suggestions.tsx","../src/components/QueryField/QueryField.tsx","../src/utils/useAsyncDependency.ts","../src/components/Monaco/ReactMonacoEditorLazy.tsx","../src/components/Monaco/types.ts","../src/components/Monaco/suggestions.ts","../src/components/Monaco/CodeEditor.tsx","../src/components/Monaco/utils.ts","../src/components/Tabs/Counter.tsx","../src/components/Tabs/Tab.tsx","../src/components/Tabs/TabsBar.tsx","../src/components/Modal/ModalTabsHeader.tsx","../src/components/Modal/ModalTabContent.tsx","../src/components/Modal/ModalsContext.tsx","../src/components/PageLayout/PageToolbar.tsx","../src/components/SetInterval/SetInterval.tsx","../src/components/Table/FooterCell.tsx","../src/components/Table/FooterRow.tsx","../src/types/icon.ts","../src/components/Table/FilterList.tsx","../src/components/FormattedValueDisplay/FormattedValueDisplay.tsx","../src/components/BarGauge/BarGauge.tsx","../src/components/ContextMenu/ContextMenu.tsx","../src/components/ContextMenu/WithContextMenu.tsx","../src/components/DataLinks/DataLinksContextMenu.tsx","../src/components/Table/types.ts","../src/components/Table/BarGaugeCell.tsx","../src/components/Table/TableCellInspectModal.tsx","../src/components/Table/CellActions.tsx","../src/components/Table/DefaultCell.tsx","../src/components/Table/GeoCell.tsx","../src/components/Table/ImageCell.tsx","../src/components/Table/JSONViewCell.tsx","../src/components/Table/RowExpander.tsx","../src/components/PanelChrome/PanelContext.ts","../src/components/VizLayout/VizLayout.tsx","../src/components/GraphNG/GraphNG.tsx","../src/components/GraphNG/nullInsertThreshold.ts","../src/components/GraphNG/nullToUndefThreshold.ts","../src/components/GraphNG/utils.ts","../src/components/uPlot/utils.ts","../src/components/uPlot/Plot.tsx","../src/components/uPlot/types.ts","../src/components/uPlot/config/UPlotScaleBuilder.ts","../src/components/uPlot/config/UPlotAxisBuilder.ts","../src/components/uPlot/config/gradientFills.ts","../src/components/uPlot/config/UPlotSeriesBuilder.ts","../src/components/uPlot/config/UPlotThresholds.ts","../src/components/uPlot/config/UPlotConfigBuilder.ts","../src/components/Sparkline/utils.ts","../src/components/Sparkline/Sparkline.tsx","../src/components/Table/SparklineCell.tsx","../src/components/Table/utils.ts","../src/components/Table/FilterPopup.tsx","../src/components/Table/Filter.tsx","../src/components/Table/HeaderRow.tsx","../src/components/Table/TableCell.tsx","../src/components/Table/hooks.ts","../src/components/Table/reducer.ts","../src/components/Table/styles.ts","../src/components/Table/Table.tsx","../src/components/TextArea/TextArea.tsx","../src/components/TableInputCSV/TableInputCSV.tsx","../src/components/Tabs/VerticalTab.tsx","../src/components/Tabs/TabContent.tsx","../src/components/RenderUserContentAsHTML/RenderUserContentAsHTML.tsx","../src/components/BigValue/BigValueLayout.tsx","../src/components/BigValue/BigValue.tsx","../src/components/Gauge/utils.ts","../src/components/Gauge/Gauge.tsx","../src/components/VizTooltip/utils.ts","../src/components/VizTooltip/VizTooltipContainer.tsx","../src/components/VizTooltip/VizTooltip.tsx","../src/components/VizLegend/SeriesIcon.tsx","../src/components/VizTooltip/SeriesTable.tsx","../src/components/Graph/GraphContextMenu.tsx","../src/components/Graph/utils.ts","../src/components/Graph/GraphTooltip/MultiModeGraphTooltip.tsx","../src/components/Graph/GraphTooltip/SingleModeGraphTooltip.tsx","../src/components/Graph/GraphTooltip/GraphTooltip.tsx","../src/components/Graph/Graph.tsx","../src/themes/default.ts","../src/components/PanelChrome/ErrorIndicator.tsx","../src/components/PanelChrome/LoadingIndicator.tsx","../src/utils/DelayRender.tsx","../src/components/Dropdown/Dropdown.tsx","../src/components/PanelChrome/PanelMenu.tsx","../src/components/PanelChrome/HoverWidget.tsx","../src/components/PanelChrome/TitleItem.tsx","../src/components/PanelChrome/PanelDescription.tsx","../src/components/PanelChrome/PanelStatus.tsx","../src/components/PanelChrome/PanelChrome.tsx","../src/components/PanelChrome/types.ts","../src/components/PanelChrome/index.ts","../src/components/List/InlineList.tsx","../src/components/VizLegend/VizLegendSeriesIcon.tsx","../src/components/VizLegend/VizLegendStatsList.tsx","../src/components/VizLegend/VizLegendListItem.tsx","../src/components/VizLegend/VizLegendList.tsx","../src/components/VizLegend/VizLegendTableItem.tsx","../src/components/VizLegend/VizLegendTable.tsx","../src/components/VizLegend/types.ts","../src/components/VizLegend/utils.ts","../src/components/VizLegend/VizLegend.tsx","../src/components/Graph/GraphWithLegend.tsx","../src/utils/squares.ts","../src/components/VizRepeater/VizRepeater.tsx","../src/components/Alert/Alert.tsx","../src/components/Graph/GraphSeriesToggler.tsx","../src/components/Collapse/Collapse.tsx","../src/components/Collapse/CollapsableSection.tsx","../src/components/Logs/LogLabels.tsx","../src/components/Logs/LogMessageAnsi.tsx","../src/components/DataLinks/DataLinkButton.tsx","../src/components/Logs/LogLabelStatsRow.tsx","../src/components/Logs/LogLabelStats.tsx","../src/components/Logs/getLogRowStyles.ts","../src/components/Logs/LogDetailsRow.tsx","../src/components/Logs/LogRowContext.tsx","../src/components/Logs/LogRowMessage.tsx","../src/components/Logs/logParser.ts","../src/components/Logs/LogDetails.tsx","../src/components/Logs/LogRowContextProvider.tsx","../src/components/Logs/LogRowMessageDetectedFields.tsx","../src/components/Logs/LogRow.tsx","../src/components/Logs/LogRows.tsx","../src/components/DataLinks/FieldLinkList.tsx","../src/components/Button/FullWidthButtonContainer.tsx","../src/components/SingleStatShared/SingleStatBaseOptions.ts","../src/components/CallToActionCard/CallToActionCard.tsx","../src/components/Switch/Switch.tsx","../src/components/DataLinks/DataLinkSuggestions.tsx","../src/components/DataLinks/SelectionReference.ts","../src/components/DataLinks/DataLinkInput.tsx","../src/components/DataLinks/DataLinkEditor.tsx","../src/components/DataLinks/DataLinksInlineEditor/DataLinkEditorModalContent.tsx","../src/components/DataLinks/DataLinksInlineEditor/DataLinksListItem.tsx","../src/components/DataLinks/DataLinksInlineEditor/DataLinksInlineEditor.tsx","../src/components/InfoBox/InfoBox.tsx","../src/components/Badge/Badge.tsx","../src/components/InfoBox/FeatureInfoBox.tsx","../src/components/JSONFormatter/json_explorer/helpers.ts","../src/components/JSONFormatter/json_explorer/json_explorer.ts","../src/components/JSONFormatter/JSONFormatter.tsx","../src/components/ErrorBoundary/ErrorWithStack.tsx","../src/components/ErrorBoundary/ErrorBoundary.tsx","../src/components/Forms/InlineLabel.tsx","../src/components/Forms/InlineField.tsx","../src/components/DataSourceSettings/BasicAuthSettings.tsx","../src/components/DataSourceSettings/CustomHeadersSettings.tsx","../src/components/DataSourceSettings/HttpProxySettings.tsx","../src/components/Forms/InlineFieldRow.tsx","../src/components/DataSourceSettings/CertificationKey.tsx","../src/components/DataSourceSettings/TLSAuthSettings.tsx","../src/components/DataSourceSettings/DataSourceHttpSettings.tsx","../src/components/DataSourceSettings/AlertingSettings.tsx","../src/components/DataSourceSettings/SecureSocksProxySettings.tsx","../src/components/Segment/styles.ts","../src/components/Segment/Segment.tsx","../src/components/Segment/SegmentSelect.tsx","../src/components/Segment/SegmentAsync.tsx","../src/components/Segment/SegmentInput.tsx","../src/components/Segment/SegmentSection.tsx","../src/components/Segment/useExpandableLabel.tsx","../src/components/Drawer/Drawer.tsx","../src/components/Slider/styles.ts","../src/components/Slider/Slider.tsx","../src/components/Slider/HandleTooltip.tsx","../src/components/Slider/RangeSlider.tsx","../src/components/Forms/Form.tsx","../src/components/InputControl.tsx","../src/components/ValuePicker/ValuePicker.tsx","../src/components/MatchersUI/FieldNameByRegexMatcherEditor.tsx","../src/components/MatchersUI/utils.ts","../src/components/MatchersUI/FieldNameMatcherEditor.tsx","../src/components/MatchersUI/FieldNamesMatcherEditor.tsx","../src/components/MatchersUI/FieldTypeMatcherEditor.tsx","../src/components/MatchersUI/FieldValueMatcher.tsx","../src/components/MatchersUI/FieldsByFrameRefIdMatcher.tsx","../src/components/MatchersUI/fieldMatchersUI.ts","../src/components/Link/Link.tsx","../src/components/Forms/Legend.tsx","../src/components/Forms/FieldSet.tsx","../src/components/Forms/InlineSegmentGroup.tsx","../src/components/Forms/FieldArray.tsx","../src/components/Forms/RadioButtonGroup/RadioButton.tsx","../src/components/Forms/RadioButtonGroup/RadioButtonGroup.tsx","../src/components/Forms/RadioButtonList/RadioButtonDot.tsx","../src/components/Forms/RadioButtonList/RadioButtonList.tsx","../src/components/Input/AutoSizeInput.tsx","../src/utils/useCombinedRefs.ts","../src/components/FilterInput/FilterInput.tsx","../src/components/SecretInput/SecretInput.tsx","../src/components/SecretTextArea/SecretTextArea.tsx","../src/components/Forms/Checkbox.tsx","../src/utils/file.ts","../src/components/FileUpload/FileUpload.tsx","../src/components/FileDropzone/FileListItem.tsx","../src/components/FileDropzone/FileDropzone.tsx","../src/components/DateTimePickers/TimeRangeInput.tsx","../src/components/DateTimePickers/RelativeTimeRangePicker/utils.ts","../src/components/DateTimePickers/RelativeTimeRangePicker/RelativeTimeRangePicker.tsx","../src/components/Card/CardContainer.tsx","../src/components/Card/Card.tsx","../src/components/PluginSignatureBadge/PluginSignatureBadge.tsx","../src/components/uPlot/config.ts","../src/components/uPlot/PlotLegend.tsx","../src/components/uPlot/geometries/Marker.tsx","../src/components/uPlot/geometries/XYCanvas.tsx","../src/components/uPlot/geometries/EventsCanvas.tsx","../src/components/uPlot/plugins/ZoomPlugin.tsx","../src/components/uPlot/plugins/TooltipPlugin.tsx","../src/components/uPlot/plugins/KeyboardPlugin.tsx","../src/components/TimeSeries/utils.ts","../src/components/TimeSeries/TimeSeries.tsx","../src/components/GraphNG/hooks.ts","../src/components/BrowserLabel/Label.tsx","../src/components/PanelContainer/PanelContainer.tsx","../src/components/index.ts","../src/options/builder/axis.tsx","../src/options/builder/hideSeries.tsx","../src/options/builder/legend.tsx","../src/options/builder/tooltip.tsx","../src/options/builder/text.tsx","../src/options/builder/stacking.tsx"],"sourcesContent":["import memoizeOne from 'memoize-one';\n\n/**\n * @public\n * @deprecated use useStyles hook\n *  Creates memoized version of styles creator\n * @param stylesCreator function accepting dependencies based on which styles are created\n */\nexport function stylesFactory<ResultFn extends (this: any, ...newArgs: any[]) => ReturnType<ResultFn>>(\n  stylesCreator: ResultFn\n) {\n  return memoizeOne(stylesCreator);\n}\n","import hoistNonReactStatics from 'hoist-non-react-statics';\nimport React, { useContext } from 'react';\n\nimport { createTheme, GrafanaTheme, GrafanaTheme2 } from '@grafana/data';\n\nimport { Themeable, Themeable2 } from '../types/theme';\n\nimport { stylesFactory } from './stylesFactory';\n\ntype Omit<T, K> = Pick<T, Exclude<keyof T, K>>;\ntype Subtract<T, K> = Omit<T, keyof K>;\n\n/**\n * Mock used in tests\n */\nlet ThemeContextMock: React.Context<GrafanaTheme2> | null = null;\n\n// Used by useStyles()\nexport const memoizedStyleCreators = new WeakMap();\n\n// Use Grafana Dark theme by default\n/** @public */\nexport const ThemeContext = React.createContext(createTheme());\n\nThemeContext.displayName = 'ThemeContext';\n\n/** @deprecated use withTheme2 */\n/** @public */\nexport const withTheme = <P extends Themeable, S extends {} = {}>(Component: React.ComponentType<P>) => {\n  const WithTheme: React.FunctionComponent<Subtract<P, Themeable>> = (props) => {\n    /**\n     * If theme context is mocked, let's use it instead of the original context\n     * This is used in tests when mocking theme using mockThemeContext function defined below\n     */\n    const ContextComponent = ThemeContextMock || ThemeContext;\n    return (\n      // @ts-ignore\n      <ContextComponent.Consumer>{(theme) => <Component {...props} theme={theme.v1} />}</ContextComponent.Consumer>\n    );\n  };\n\n  WithTheme.displayName = `WithTheme(${Component.displayName})`;\n  hoistNonReactStatics(WithTheme, Component);\n  type Hoisted = typeof WithTheme & S;\n  return WithTheme as Hoisted;\n};\n\n/** @alpha */\nexport const withTheme2 = <P extends Themeable2, S extends {} = {}>(Component: React.ComponentType<P>) => {\n  const WithTheme: React.FunctionComponent<Subtract<P, Themeable2>> = (props) => {\n    /**\n     * If theme context is mocked, let's use it instead of the original context\n     * This is used in tests when mocking theme using mockThemeContext function defined below\n     */\n    const ContextComponent = ThemeContextMock || ThemeContext;\n    return (\n      // @ts-ignore\n      <ContextComponent.Consumer>{(theme) => <Component {...props} theme={theme} />}</ContextComponent.Consumer>\n    );\n  };\n\n  WithTheme.displayName = `WithTheme(${Component.displayName})`;\n  hoistNonReactStatics(WithTheme, Component);\n  type Hoisted = typeof WithTheme & S;\n  return WithTheme as Hoisted;\n};\n\n/** @deprecated use useTheme2 */\n/** @public */\nexport function useTheme(): GrafanaTheme {\n  return useContext(ThemeContextMock || ThemeContext).v1;\n}\n\n/** @public */\nexport function useTheme2(): GrafanaTheme2 {\n  return useContext(ThemeContextMock || ThemeContext);\n}\n\n/**\n * Hook for using memoized styles with access to the theme.\n *\n * NOTE: For memoization to work, you need to ensure that the function\n * you pass in doesn't change, or only if it needs to. (i.e. declare\n * your style creator outside of a function component or use `useCallback()`.)\n * */\n/** @deprecated use useStyles2 */\n/** @public */\nexport function useStyles<T>(getStyles: (theme: GrafanaTheme) => T) {\n  const theme = useTheme();\n\n  let memoizedStyleCreator = memoizedStyleCreators.get(getStyles) as typeof getStyles;\n  if (!memoizedStyleCreator) {\n    memoizedStyleCreator = stylesFactory(getStyles);\n    memoizedStyleCreators.set(getStyles, memoizedStyleCreator);\n  }\n\n  return memoizedStyleCreator(theme);\n}\n\n/**\n * Hook for using memoized styles with access to the theme.\n *\n * NOTE: For memoization to work, you need to ensure that the function\n * you pass in doesn't change, or only if it needs to. (i.e. declare\n * your style creator outside of a function component or use `useCallback()`.)\n * */\n/** @public */\nexport function useStyles2<T>(getStyles: (theme: GrafanaTheme2) => T) {\n  const theme = useTheme2();\n\n  let memoizedStyleCreator = memoizedStyleCreators.get(getStyles) as typeof getStyles;\n  if (!memoizedStyleCreator) {\n    memoizedStyleCreator = stylesFactory(getStyles);\n    memoizedStyleCreators.set(getStyles, memoizedStyleCreator);\n  }\n\n  return memoizedStyleCreator(theme);\n}\n\n/**\n * Enables theme context  mocking\n */\n/** @public */\nexport const mockThemeContext = (theme: Partial<GrafanaTheme2>) => {\n  ThemeContextMock = React.createContext(theme as GrafanaTheme2);\n\n  return () => {\n    ThemeContextMock = null;\n  };\n};\n","/* eslint-disable import/order */\n// DO NOT EDIT THIS FILE\n// This file is automatically generated  (do not edit it here)\n// see @grafana/ui/scripts/generate-icon-bundle.js\n\nimport { cacheStore } from 'react-inlinesvg';\n\n// do not edit this list directly\n// the list of icons live here: @grafana/ui/components/Icon/cached.json\nimport u1000 from '../../../../../public/img/icons/unicons/at.svg';\nimport u1001 from '../../../../../public/img/icons/unicons/adjust-circle.svg';\nimport u1002 from '../../../../../public/img/icons/unicons/angle-double-down.svg';\nimport u1003 from '../../../../../public/img/icons/unicons/angle-double-right.svg';\nimport u1004 from '../../../../../public/img/icons/unicons/angle-down.svg';\nimport u1005 from '../../../../../public/img/icons/unicons/angle-left.svg';\nimport u1006 from '../../../../../public/img/icons/unicons/angle-right.svg';\nimport u1007 from '../../../../../public/img/icons/unicons/angle-up.svg';\nimport u1008 from '../../../../../public/img/icons/unicons/apps.svg';\nimport u1009 from '../../../../../public/img/icons/unicons/arrow.svg';\nimport u1010 from '../../../../../public/img/icons/unicons/arrow-down.svg';\nimport u1011 from '../../../../../public/img/icons/unicons/arrow-from-right.svg';\nimport u1012 from '../../../../../public/img/icons/unicons/arrow-left.svg';\nimport u1013 from '../../../../../public/img/icons/unicons/arrow-random.svg';\nimport u1014 from '../../../../../public/img/icons/unicons/arrow-right.svg';\nimport u1015 from '../../../../../public/img/icons/unicons/arrow-to-right.svg';\nimport u1016 from '../../../../../public/img/icons/unicons/arrow-up.svg';\nimport u1017 from '../../../../../public/img/icons/unicons/arrows-h.svg';\nimport u1018 from '../../../../../public/img/icons/unicons/backward.svg';\nimport u1019 from '../../../../../public/img/icons/unicons/bars.svg';\nimport u1020 from '../../../../../public/img/icons/unicons/bell.svg';\nimport u1021 from '../../../../../public/img/icons/unicons/bell-slash.svg';\nimport u1022 from '../../../../../public/img/icons/unicons/bolt.svg';\nimport u1023 from '../../../../../public/img/icons/unicons/book.svg';\nimport u1024 from '../../../../../public/img/icons/unicons/book-open.svg';\nimport u1025 from '../../../../../public/img/icons/unicons/brackets-curly.svg';\nimport u1026 from '../../../../../public/img/icons/unicons/bug.svg';\nimport u1027 from '../../../../../public/img/icons/unicons/building.svg';\nimport u1028 from '../../../../../public/img/icons/unicons/calculator-alt.svg';\nimport u1029 from '../../../../../public/img/icons/unicons/calendar-alt.svg';\nimport u1030 from '../../../../../public/img/icons/unicons/calendar-slash.svg';\nimport u1031 from '../../../../../public/img/icons/unicons/camera.svg';\nimport u1032 from '../../../../../public/img/icons/unicons/channel-add.svg';\nimport u1033 from '../../../../../public/img/icons/unicons/chart-line.svg';\nimport u1034 from '../../../../../public/img/icons/unicons/check.svg';\nimport u1035 from '../../../../../public/img/icons/unicons/check-circle.svg';\nimport u1036 from '../../../../../public/img/icons/unicons/circle.svg';\nimport u1037 from '../../../../../public/img/icons/unicons/clipboard-alt.svg';\nimport u1038 from '../../../../../public/img/icons/unicons/clock-nine.svg';\nimport u1039 from '../../../../../public/img/icons/unicons/cloud.svg';\nimport u1040 from '../../../../../public/img/icons/unicons/cloud-download.svg';\nimport u1041 from '../../../../../public/img/icons/unicons/code-branch.svg';\nimport u1042 from '../../../../../public/img/icons/unicons/cog.svg';\nimport u1043 from '../../../../../public/img/icons/unicons/columns.svg';\nimport u1044 from '../../../../../public/img/icons/unicons/comment-alt.svg';\nimport u1045 from '../../../../../public/img/icons/unicons/comment-alt-share.svg';\nimport u1046 from '../../../../../public/img/icons/unicons/comments-alt.svg';\nimport u1047 from '../../../../../public/img/icons/unicons/compass.svg';\nimport u1048 from '../../../../../public/img/icons/unicons/copy.svg';\nimport u1049 from '../../../../../public/img/icons/unicons/corner-down-right-alt.svg';\nimport u1050 from '../../../../../public/img/icons/unicons/cube.svg';\nimport u1051 from '../../../../../public/img/icons/unicons/dashboard.svg';\nimport u1052 from '../../../../../public/img/icons/unicons/database.svg';\nimport u1053 from '../../../../../public/img/icons/unicons/document-info.svg';\nimport u1054 from '../../../../../public/img/icons/unicons/download-alt.svg';\nimport u1055 from '../../../../../public/img/icons/unicons/draggabledots.svg';\nimport u1056 from '../../../../../public/img/icons/unicons/edit.svg';\nimport u1057 from '../../../../../public/img/icons/unicons/ellipsis-v.svg';\nimport u1058 from '../../../../../public/img/icons/unicons/ellipsis-h.svg';\nimport u1059 from '../../../../../public/img/icons/unicons/envelope.svg';\nimport u1060 from '../../../../../public/img/icons/unicons/exchange-alt.svg';\nimport u1061 from '../../../../../public/img/icons/unicons/exclamation-triangle.svg';\nimport u1062 from '../../../../../public/img/icons/unicons/external-link-alt.svg';\nimport u1063 from '../../../../../public/img/icons/unicons/eye.svg';\nimport u1064 from '../../../../../public/img/icons/unicons/eye-slash.svg';\nimport u1065 from '../../../../../public/img/icons/unicons/file-alt.svg';\nimport u1066 from '../../../../../public/img/icons/unicons/file-blank.svg';\nimport u1067 from '../../../../../public/img/icons/unicons/filter.svg';\nimport u1068 from '../../../../../public/img/icons/unicons/folder.svg';\nimport u1069 from '../../../../../public/img/icons/unicons/folder-open.svg';\nimport u1070 from '../../../../../public/img/icons/unicons/folder-plus.svg';\nimport u1071 from '../../../../../public/img/icons/unicons/folder-upload.svg';\nimport u1072 from '../../../../../public/img/icons/unicons/forward.svg';\nimport u1073 from '../../../../../public/img/icons/unicons/graph-bar.svg';\nimport u1074 from '../../../../../public/img/icons/unicons/history.svg';\nimport u1075 from '../../../../../public/img/icons/unicons/home-alt.svg';\nimport u1076 from '../../../../../public/img/icons/unicons/import.svg';\nimport u1077 from '../../../../../public/img/icons/unicons/info.svg';\nimport u1078 from '../../../../../public/img/icons/unicons/info-circle.svg';\nimport u1079 from '../../../../../public/img/icons/unicons/k6.svg';\nimport u1080 from '../../../../../public/img/icons/unicons/key-skeleton-alt.svg';\nimport u1081 from '../../../../../public/img/icons/unicons/keyboard.svg';\nimport u1082 from '../../../../../public/img/icons/unicons/link.svg';\nimport u1083 from '../../../../../public/img/icons/unicons/list-ul.svg';\nimport u1084 from '../../../../../public/img/icons/unicons/lock.svg';\nimport u1085 from '../../../../../public/img/icons/unicons/minus.svg';\nimport u1086 from '../../../../../public/img/icons/unicons/minus-circle.svg';\nimport u1087 from '../../../../../public/img/icons/unicons/mobile-android.svg';\nimport u1088 from '../../../../../public/img/icons/unicons/monitor.svg';\nimport u1089 from '../../../../../public/img/icons/unicons/pause.svg';\nimport u1090 from '../../../../../public/img/icons/unicons/pen.svg';\nimport u1091 from '../../../../../public/img/icons/unicons/play.svg';\nimport u1092 from '../../../../../public/img/icons/unicons/plug.svg';\nimport u1093 from '../../../../../public/img/icons/unicons/plus.svg';\nimport u1094 from '../../../../../public/img/icons/unicons/plus-circle.svg';\nimport u1095 from '../../../../../public/img/icons/unicons/power.svg';\nimport u1096 from '../../../../../public/img/icons/unicons/presentation-play.svg';\nimport u1097 from '../../../../../public/img/icons/unicons/process.svg';\nimport u1098 from '../../../../../public/img/icons/unicons/question-circle.svg';\nimport u1099 from '../../../../../public/img/icons/unicons/repeat.svg';\nimport u1100 from '../../../../../public/img/icons/unicons/rocket.svg';\nimport u1101 from '../../../../../public/img/icons/unicons/rss.svg';\nimport u1102 from '../../../../../public/img/icons/unicons/save.svg';\nimport u1103 from '../../../../../public/img/icons/unicons/search.svg';\nimport u1104 from '../../../../../public/img/icons/unicons/search-minus.svg';\nimport u1105 from '../../../../../public/img/icons/unicons/search-plus.svg';\nimport u1106 from '../../../../../public/img/icons/unicons/share-alt.svg';\nimport u1107 from '../../../../../public/img/icons/unicons/shield.svg';\nimport u1108 from '../../../../../public/img/icons/unicons/signal.svg';\nimport u1109 from '../../../../../public/img/icons/unicons/signin.svg';\nimport u1110 from '../../../../../public/img/icons/unicons/signout.svg';\nimport u1111 from '../../../../../public/img/icons/unicons/sitemap.svg';\nimport u1112 from '../../../../../public/img/icons/unicons/slack.svg';\nimport u1113 from '../../../../../public/img/icons/unicons/sliders-v-alt.svg';\nimport u1114 from '../../../../../public/img/icons/unicons/sort-amount-down.svg';\nimport u1115 from '../../../../../public/img/icons/unicons/sort-amount-up.svg';\nimport u1116 from '../../../../../public/img/icons/unicons/square-shape.svg';\nimport u1117 from '../../../../../public/img/icons/unicons/star.svg';\nimport u1118 from '../../../../../public/img/icons/unicons/step-backward.svg';\nimport u1119 from '../../../../../public/img/icons/unicons/sync.svg';\nimport u1120 from '../../../../../public/img/icons/unicons/table.svg';\nimport u1121 from '../../../../../public/img/icons/unicons/tag-alt.svg';\nimport u1122 from '../../../../../public/img/icons/unicons/times.svg';\nimport u1123 from '../../../../../public/img/icons/unicons/trash-alt.svg';\nimport u1124 from '../../../../../public/img/icons/unicons/unlock.svg';\nimport u1125 from '../../../../../public/img/icons/unicons/upload.svg';\nimport u1126 from '../../../../../public/img/icons/unicons/user.svg';\nimport u1127 from '../../../../../public/img/icons/unicons/users-alt.svg';\nimport u1128 from '../../../../../public/img/icons/unicons/wrap-text.svg';\nimport u1129 from '../../../../../public/img/icons/unicons/cloud-upload.svg';\nimport u1130 from '../../../../../public/img/icons/unicons/credit-card.svg';\nimport u1131 from '../../../../../public/img/icons/unicons/file-copy-alt.svg';\nimport u1132 from '../../../../../public/img/icons/unicons/fire.svg';\nimport u1133 from '../../../../../public/img/icons/unicons/hourglass.svg';\nimport u1134 from '../../../../../public/img/icons/unicons/layer-group.svg';\nimport u1135 from '../../../../../public/img/icons/unicons/layers-alt.svg';\nimport u1136 from '../../../../../public/img/icons/unicons/line-alt.svg';\nimport u1137 from '../../../../../public/img/icons/unicons/list-ui-alt.svg';\nimport u1138 from '../../../../../public/img/icons/unicons/message.svg';\nimport u1139 from '../../../../../public/img/icons/unicons/palette.svg';\nimport u1140 from '../../../../../public/img/icons/unicons/percentage.svg';\nimport u1141 from '../../../../../public/img/icons/unicons/shield-exclamation.svg';\nimport u1142 from '../../../../../public/img/icons/unicons/plus-square.svg';\nimport u1143 from '../../../../../public/img/icons/unicons/x.svg';\nimport u1144 from '../../../../../public/img/icons/unicons/capture.svg';\nimport u1145 from '../../../../../public/img/icons/custom/gf-grid.svg';\nimport u1146 from '../../../../../public/img/icons/custom/gf-landscape.svg';\nimport u1147 from '../../../../../public/img/icons/custom/gf-layout-simple.svg';\nimport u1148 from '../../../../../public/img/icons/custom/gf-portrait.svg';\nimport u1149 from '../../../../../public/img/icons/custom/gf-bar-alignment-after.svg';\nimport u1150 from '../../../../../public/img/icons/custom/gf-bar-alignment-before.svg';\nimport u1151 from '../../../../../public/img/icons/custom/gf-bar-alignment-center.svg';\nimport u1152 from '../../../../../public/img/icons/custom/gf-interpolation-linear.svg';\nimport u1153 from '../../../../../public/img/icons/custom/gf-interpolation-smooth.svg';\nimport u1154 from '../../../../../public/img/icons/custom/gf-interpolation-step-after.svg';\nimport u1155 from '../../../../../public/img/icons/custom/gf-interpolation-step-before.svg';\nimport u1156 from '../../../../../public/img/icons/custom/gf-logs.svg';\nimport u1157 from '../../../../../public/img/icons/custom/gf-movepane-left.svg';\nimport u1158 from '../../../../../public/img/icons/custom/gf-movepane-right.svg';\nimport u1159 from '../../../../../public/img/icons/mono/favorite.svg';\nimport u1160 from '../../../../../public/img/icons/mono/grafana.svg';\nimport u1161 from '../../../../../public/img/icons/mono/heart.svg';\nimport u1162 from '../../../../../public/img/icons/mono/heart-break.svg';\nimport u1163 from '../../../../../public/img/icons/mono/panel-add.svg';\nimport u1164 from '../../../../../public/img/icons/mono/library-panel.svg';\nimport u1165 from '../../../../../public/img/icons/unicons/record-audio.svg';\n// do not edit this list directly\n// the list of icons live here: @grafana/ui/components/Icon/cached.json\n\nexport let cacheInitialized = false;\nexport let iconRoot = 'public/img/icons/';\n\nexport function cacheItem(content: string, path: string) {\n  cacheStore[iconRoot + path] = { content, status: 'loaded' };\n}\n\nexport function initIconCache() {\n  cacheInitialized = true;\n\n  // This function needs to be called after index.js loads to give the\n  // application time to modify __webpack_public_path__ with a CDN path\n  const grafanaPublicPath = typeof window !== 'undefined' && window.__grafana_public_path__;\n  if (grafanaPublicPath) {\n    iconRoot = grafanaPublicPath + 'img/icons/';\n  }\n\n  // do not edit this list directly\n  // the list of icons live here: @grafana/ui/components/Icon/cached.json\n  cacheItem(u1000, 'unicons/at.svg');\n  cacheItem(u1001, 'unicons/adjust-circle.svg');\n  cacheItem(u1002, 'unicons/angle-double-down.svg');\n  cacheItem(u1003, 'unicons/angle-double-right.svg');\n  cacheItem(u1004, 'unicons/angle-down.svg');\n  cacheItem(u1005, 'unicons/angle-left.svg');\n  cacheItem(u1006, 'unicons/angle-right.svg');\n  cacheItem(u1007, 'unicons/angle-up.svg');\n  cacheItem(u1008, 'unicons/apps.svg');\n  cacheItem(u1009, 'unicons/arrow.svg');\n  cacheItem(u1010, 'unicons/arrow-down.svg');\n  cacheItem(u1011, 'unicons/arrow-from-right.svg');\n  cacheItem(u1012, 'unicons/arrow-left.svg');\n  cacheItem(u1013, 'unicons/arrow-random.svg');\n  cacheItem(u1014, 'unicons/arrow-right.svg');\n  cacheItem(u1015, 'unicons/arrow-to-right.svg');\n  cacheItem(u1016, 'unicons/arrow-up.svg');\n  cacheItem(u1017, 'unicons/arrows-h.svg');\n  cacheItem(u1018, 'unicons/backward.svg');\n  cacheItem(u1019, 'unicons/bars.svg');\n  cacheItem(u1020, 'unicons/bell.svg');\n  cacheItem(u1021, 'unicons/bell-slash.svg');\n  cacheItem(u1022, 'unicons/bolt.svg');\n  cacheItem(u1023, 'unicons/book.svg');\n  cacheItem(u1024, 'unicons/book-open.svg');\n  cacheItem(u1025, 'unicons/brackets-curly.svg');\n  cacheItem(u1026, 'unicons/bug.svg');\n  cacheItem(u1027, 'unicons/building.svg');\n  cacheItem(u1028, 'unicons/calculator-alt.svg');\n  cacheItem(u1029, 'unicons/calendar-alt.svg');\n  cacheItem(u1030, 'unicons/calendar-slash.svg');\n  cacheItem(u1031, 'unicons/camera.svg');\n  cacheItem(u1032, 'unicons/channel-add.svg');\n  cacheItem(u1033, 'unicons/chart-line.svg');\n  cacheItem(u1034, 'unicons/check.svg');\n  cacheItem(u1035, 'unicons/check-circle.svg');\n  cacheItem(u1036, 'unicons/circle.svg');\n  cacheItem(u1037, 'unicons/clipboard-alt.svg');\n  cacheItem(u1038, 'unicons/clock-nine.svg');\n  cacheItem(u1039, 'unicons/cloud.svg');\n  cacheItem(u1040, 'unicons/cloud-download.svg');\n  cacheItem(u1041, 'unicons/code-branch.svg');\n  cacheItem(u1042, 'unicons/cog.svg');\n  cacheItem(u1043, 'unicons/columns.svg');\n  cacheItem(u1044, 'unicons/comment-alt.svg');\n  cacheItem(u1045, 'unicons/comment-alt-share.svg');\n  cacheItem(u1046, 'unicons/comments-alt.svg');\n  cacheItem(u1047, 'unicons/compass.svg');\n  cacheItem(u1048, 'unicons/copy.svg');\n  cacheItem(u1049, 'unicons/corner-down-right-alt.svg');\n  cacheItem(u1050, 'unicons/cube.svg');\n  cacheItem(u1051, 'unicons/dashboard.svg');\n  cacheItem(u1052, 'unicons/database.svg');\n  cacheItem(u1053, 'unicons/document-info.svg');\n  cacheItem(u1054, 'unicons/download-alt.svg');\n  cacheItem(u1055, 'unicons/draggabledots.svg');\n  cacheItem(u1056, 'unicons/edit.svg');\n  cacheItem(u1057, 'unicons/ellipsis-v.svg');\n  cacheItem(u1058, 'unicons/ellipsis-h.svg');\n  cacheItem(u1059, 'unicons/envelope.svg');\n  cacheItem(u1060, 'unicons/exchange-alt.svg');\n  cacheItem(u1061, 'unicons/exclamation-triangle.svg');\n  cacheItem(u1062, 'unicons/external-link-alt.svg');\n  cacheItem(u1063, 'unicons/eye.svg');\n  cacheItem(u1064, 'unicons/eye-slash.svg');\n  cacheItem(u1065, 'unicons/file-alt.svg');\n  cacheItem(u1066, 'unicons/file-blank.svg');\n  cacheItem(u1067, 'unicons/filter.svg');\n  cacheItem(u1068, 'unicons/folder.svg');\n  cacheItem(u1069, 'unicons/folder-open.svg');\n  cacheItem(u1070, 'unicons/folder-plus.svg');\n  cacheItem(u1071, 'unicons/folder-upload.svg');\n  cacheItem(u1072, 'unicons/forward.svg');\n  cacheItem(u1073, 'unicons/graph-bar.svg');\n  cacheItem(u1074, 'unicons/history.svg');\n  cacheItem(u1075, 'unicons/home-alt.svg');\n  cacheItem(u1076, 'unicons/import.svg');\n  cacheItem(u1077, 'unicons/info.svg');\n  cacheItem(u1078, 'unicons/info-circle.svg');\n  cacheItem(u1079, 'unicons/k6.svg');\n  cacheItem(u1080, 'unicons/key-skeleton-alt.svg');\n  cacheItem(u1081, 'unicons/keyboard.svg');\n  cacheItem(u1082, 'unicons/link.svg');\n  cacheItem(u1083, 'unicons/list-ul.svg');\n  cacheItem(u1084, 'unicons/lock.svg');\n  cacheItem(u1085, 'unicons/minus.svg');\n  cacheItem(u1086, 'unicons/minus-circle.svg');\n  cacheItem(u1087, 'unicons/mobile-android.svg');\n  cacheItem(u1088, 'unicons/monitor.svg');\n  cacheItem(u1089, 'unicons/pause.svg');\n  cacheItem(u1090, 'unicons/pen.svg');\n  cacheItem(u1091, 'unicons/play.svg');\n  cacheItem(u1092, 'unicons/plug.svg');\n  cacheItem(u1093, 'unicons/plus.svg');\n  cacheItem(u1094, 'unicons/plus-circle.svg');\n  cacheItem(u1095, 'unicons/power.svg');\n  cacheItem(u1096, 'unicons/presentation-play.svg');\n  cacheItem(u1097, 'unicons/process.svg');\n  cacheItem(u1098, 'unicons/question-circle.svg');\n  cacheItem(u1099, 'unicons/repeat.svg');\n  cacheItem(u1100, 'unicons/rocket.svg');\n  cacheItem(u1101, 'unicons/rss.svg');\n  cacheItem(u1102, 'unicons/save.svg');\n  cacheItem(u1103, 'unicons/search.svg');\n  cacheItem(u1104, 'unicons/search-minus.svg');\n  cacheItem(u1105, 'unicons/search-plus.svg');\n  cacheItem(u1106, 'unicons/share-alt.svg');\n  cacheItem(u1107, 'unicons/shield.svg');\n  cacheItem(u1108, 'unicons/signal.svg');\n  cacheItem(u1109, 'unicons/signin.svg');\n  cacheItem(u1110, 'unicons/signout.svg');\n  cacheItem(u1111, 'unicons/sitemap.svg');\n  cacheItem(u1112, 'unicons/slack.svg');\n  cacheItem(u1113, 'unicons/sliders-v-alt.svg');\n  cacheItem(u1114, 'unicons/sort-amount-down.svg');\n  cacheItem(u1115, 'unicons/sort-amount-up.svg');\n  cacheItem(u1116, 'unicons/square-shape.svg');\n  cacheItem(u1117, 'unicons/star.svg');\n  cacheItem(u1118, 'unicons/step-backward.svg');\n  cacheItem(u1119, 'unicons/sync.svg');\n  cacheItem(u1120, 'unicons/table.svg');\n  cacheItem(u1121, 'unicons/tag-alt.svg');\n  cacheItem(u1122, 'unicons/times.svg');\n  cacheItem(u1123, 'unicons/trash-alt.svg');\n  cacheItem(u1124, 'unicons/unlock.svg');\n  cacheItem(u1125, 'unicons/upload.svg');\n  cacheItem(u1126, 'unicons/user.svg');\n  cacheItem(u1127, 'unicons/users-alt.svg');\n  cacheItem(u1128, 'unicons/wrap-text.svg');\n  cacheItem(u1129, 'unicons/cloud-upload.svg');\n  cacheItem(u1130, 'unicons/credit-card.svg');\n  cacheItem(u1131, 'unicons/file-copy-alt.svg');\n  cacheItem(u1132, 'unicons/fire.svg');\n  cacheItem(u1133, 'unicons/hourglass.svg');\n  cacheItem(u1134, 'unicons/layer-group.svg');\n  cacheItem(u1135, 'unicons/layers-alt.svg');\n  cacheItem(u1136, 'unicons/line-alt.svg');\n  cacheItem(u1137, 'unicons/list-ui-alt.svg');\n  cacheItem(u1138, 'unicons/message.svg');\n  cacheItem(u1139, 'unicons/palette.svg');\n  cacheItem(u1140, 'unicons/percentage.svg');\n  cacheItem(u1141, 'unicons/shield-exclamation.svg');\n  cacheItem(u1142, 'unicons/plus-square.svg');\n  cacheItem(u1143, 'unicons/x.svg');\n  cacheItem(u1144, 'unicons/capture.svg');\n  cacheItem(u1145, 'custom/gf-grid.svg');\n  cacheItem(u1146, 'custom/gf-landscape.svg');\n  cacheItem(u1147, 'custom/gf-layout-simple.svg');\n  cacheItem(u1148, 'custom/gf-portrait.svg');\n  cacheItem(u1149, 'custom/gf-bar-alignment-after.svg');\n  cacheItem(u1150, 'custom/gf-bar-alignment-before.svg');\n  cacheItem(u1151, 'custom/gf-bar-alignment-center.svg');\n  cacheItem(u1152, 'custom/gf-interpolation-linear.svg');\n  cacheItem(u1153, 'custom/gf-interpolation-smooth.svg');\n  cacheItem(u1154, 'custom/gf-interpolation-step-after.svg');\n  cacheItem(u1155, 'custom/gf-interpolation-step-before.svg');\n  cacheItem(u1156, 'custom/gf-logs.svg');\n  cacheItem(u1157, 'custom/gf-movepane-left.svg');\n  cacheItem(u1158, 'custom/gf-movepane-right.svg');\n  cacheItem(u1159, 'mono/favorite.svg');\n  cacheItem(u1160, 'mono/grafana.svg');\n  cacheItem(u1161, 'mono/heart.svg');\n  cacheItem(u1162, 'mono/heart-break.svg');\n  cacheItem(u1163, 'mono/panel-add.svg');\n  cacheItem(u1164, 'mono/library-panel.svg');\n  cacheItem(u1165, 'unicons/record-audio.svg');\n  // do not edit this list directly\n  // the list of icons live here: @grafana/ui/components/Icon/cached.json\n}\n","import { IconName, IconSize } from '../../types/icon';\n\nconst alwaysMonoIcons: IconName[] = [\n  'grafana',\n  'favorite',\n  'heart-break',\n  'heart',\n  'panel-add',\n  'library-panel',\n  'circle-mono',\n];\n\nexport function getIconSubDir(name: IconName, type: string): string {\n  if (name?.startsWith('gf-')) {\n    return 'custom';\n  } else if (alwaysMonoIcons.includes(name)) {\n    return 'mono';\n  } else if (type === 'default') {\n    return 'unicons';\n  } else if (type === 'solid') {\n    return 'solid';\n  } else {\n    return 'mono';\n  }\n}\n\n/* Transform string with px to number and add 2 pxs as path in svg is 2px smaller */\nexport function getSvgSize(size: IconSize) {\n  switch (size) {\n    case 'xs':\n      return 12;\n    case 'sm':\n      return 14;\n    case 'md':\n      return 16;\n    case 'lg':\n      return 18;\n    case 'xl':\n      return 24;\n    case 'xxl':\n      return 36;\n    case 'xxxl':\n      return 48;\n  }\n}\n","import { css, cx } from '@emotion/css';\nimport React from 'react';\nimport SVG from 'react-inlinesvg';\n\nimport { GrafanaTheme2, isIconName } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes/ThemeContext';\nimport { IconName, IconType, IconSize } from '../../types/icon';\n\nimport { cacheInitialized, initIconCache, iconRoot } from './iconBundle';\nimport { getIconSubDir, getSvgSize } from './utils';\n\nexport interface IconProps extends React.HTMLAttributes<HTMLDivElement> {\n  name: IconName;\n  size?: IconSize;\n  type?: IconType;\n  title?: string;\n}\n\nconst getIconStyles = (theme: GrafanaTheme2) => {\n  return {\n    // line-height: 0; is needed for correct icon alignment in Safari\n    container: css`\n      label: Icon;\n      display: inline-block;\n      line-height: 0;\n    `,\n    icon: css`\n      vertical-align: middle;\n      display: inline-block;\n      fill: currentColor;\n    `,\n    orange: css`\n      fill: ${theme.v1.palette.orange};\n    `,\n  };\n};\n\nexport const Icon = React.forwardRef<HTMLDivElement, IconProps>(\n  ({ size = 'md', type = 'default', name, className, style, title = '', ...divElementProps }, ref) => {\n    const styles = useStyles2(getIconStyles);\n\n    /* Temporary solution to display also font awesome icons */\n    if (name?.startsWith('fa fa-')) {\n      return <i className={getFontAwesomeIconStyles(name, className)} {...divElementProps} style={style} />;\n    }\n\n    if (!cacheInitialized) {\n      initIconCache();\n    }\n\n    if (!isIconName(name)) {\n      console.warn('Icon component passed an invalid icon name', name);\n    }\n\n    if (!name || name.includes('..')) {\n      return <div ref={ref}>invalid icon name</div>;\n    }\n\n    const svgSize = getSvgSize(size);\n    const svgHgt = svgSize;\n    const svgWid = name.startsWith('gf-bar-align') ? 16 : name.startsWith('gf-interp') ? 30 : svgSize;\n    const subDir = getIconSubDir(name, type);\n    const svgPath = `${iconRoot}${subDir}/${name}.svg`;\n\n    return (\n      <div className={styles.container} {...divElementProps} ref={ref}>\n        <SVG\n          src={svgPath}\n          width={svgWid}\n          height={svgHgt}\n          title={title}\n          className={cx(styles.icon, className, type === 'mono' ? { [styles.orange]: name === 'favorite' } : '')}\n          style={style}\n        />\n      </div>\n    );\n  }\n);\n\nIcon.displayName = 'Icon';\n\nfunction getFontAwesomeIconStyles(iconName: string, className?: string): string {\n  return cx(\n    iconName,\n    {\n      'fa-spin': iconName === 'fa fa-spinner',\n    },\n    className\n  );\n}\n","import { css } from '@emotion/css';\n\nimport { colorManipulator, GrafanaTheme2 } from '@grafana/data';\n\nexport function buildTooltipTheme(\n  theme: GrafanaTheme2,\n  tooltipBg: string,\n  toggletipBorder: string,\n  tooltipText: string,\n  tooltipPadding: { topBottom: number; rightLeft: number }\n) {\n  return {\n    arrow: css`\n      height: 1rem;\n      width: 1rem;\n      position: absolute;\n      pointer-events: none;\n\n      &::before {\n        border-style: solid;\n        content: '';\n        display: block;\n        height: 0;\n        margin: auto;\n        width: 0;\n      }\n\n      &::after {\n        border-style: solid;\n        content: '';\n        display: block;\n        height: 0;\n        margin: auto;\n        position: absolute;\n        width: 0;\n      }\n    `,\n    container: css`\n      background-color: ${tooltipBg};\n      border-radius: ${theme.shape.radius.default};\n      border: 1px solid ${toggletipBorder};\n      box-shadow: ${theme.shadows.z2};\n      color: ${tooltipText};\n      font-size: ${theme.typography.bodySmall.fontSize};\n      padding: ${theme.spacing(tooltipPadding.topBottom, tooltipPadding.rightLeft)};\n      transition: opacity 0.3s;\n      z-index: ${theme.zIndex.tooltip};\n      max-width: 400px;\n      overflow-wrap: break-word;\n\n      &[data-popper-interactive='false'] {\n        pointer-events: none;\n      }\n\n      &[data-popper-placement*='bottom'] > div[data-popper-arrow='true'] {\n        left: 0;\n        margin-top: -7px;\n        top: 0;\n\n        &::before {\n          border-color: transparent transparent ${toggletipBorder} transparent;\n          border-width: 0 8px 7px 8px;\n          position: absolute;\n          top: -1px;\n        }\n\n        &::after {\n          border-color: transparent transparent ${tooltipBg} transparent;\n          border-width: 0 8px 7px 8px;\n        }\n      }\n\n      &[data-popper-placement*='top'] > div[data-popper-arrow='true'] {\n        bottom: 0;\n        left: 0;\n        margin-bottom: -14px;\n\n        &::before {\n          border-color: ${toggletipBorder} transparent transparent transparent;\n          border-width: 7px 8px 0 7px;\n          position: absolute;\n          top: 1px;\n        }\n\n        &::after {\n          border-color: ${tooltipBg} transparent transparent transparent;\n          border-width: 7px 8px 0 7px;\n        }\n      }\n\n      &[data-popper-placement*='right'] > div[data-popper-arrow='true'] {\n        left: 0;\n        margin-left: -10px;\n\n        &::before {\n          border-color: transparent ${toggletipBorder} transparent transparent;\n          border-width: 7px 6px 7px 0;\n        }\n\n        &::after {\n          border-color: transparent ${tooltipBg} transparent transparent;\n          border-width: 6px 7px 7px 0;\n          left: 2px;\n          top: 1px;\n        }\n      }\n\n      &[data-popper-placement*='left'] > div[data-popper-arrow='true'] {\n        margin-right: -11px;\n        right: 0;\n\n        &::before {\n          border-color: transparent transparent transparent ${toggletipBorder};\n          border-width: 7px 0 6px 7px;\n        }\n\n        &::after {\n          border-color: transparent transparent transparent ${tooltipBg};\n          border-width: 6px 0 5px 5px;\n          left: 1px;\n          top: 1px;\n        }\n      }\n\n      code {\n        border: none;\n        display: inline;\n        background: ${colorManipulator.darken(tooltipBg, 0.1)};\n        color: ${tooltipText};\n      }\n\n      pre {\n        background: ${colorManipulator.darken(tooltipBg, 0.1)};\n        color: ${tooltipText};\n      }\n\n      a {\n        color: ${tooltipText};\n        text-decoration: underline;\n      }\n\n      a:hover {\n        text-decoration: none;\n      }\n    `,\n    headerClose: css`\n      color: ${theme.colors.text.secondary};\n      position: absolute;\n      right: ${theme.spacing(1)};\n      top: ${theme.spacing(1.5)};\n      background-color: transparent;\n      border: 0;\n    `,\n    header: css`\n      padding-top: ${theme.spacing(1)};\n      padding-bottom: ${theme.spacing(2)};\n    `,\n    body: css`\n      padding-top: ${theme.spacing(1)};\n      padding-bottom: ${theme.spacing(1)};\n    `,\n    footer: css`\n      padding-top: ${theme.spacing(2)};\n      padding-bottom: ${theme.spacing(1)};\n    `,\n  };\n}\n","import { createTheme, GrafanaTheme } from '@grafana/data';\n\nlet themeMock: ((name?: string) => GrafanaTheme) | null;\n\n/** @public */\nexport const getTheme = (mode: 'dark' | 'light' = 'dark') => {\n  if (themeMock) {\n    return themeMock(mode);\n  }\n\n  return createTheme({ colors: { mode } }).v1;\n};\n\n/** @public */\nexport const mockTheme = (mock: (name?: string) => GrafanaTheme) => {\n  themeMock = mock;\n  return () => {\n    themeMock = null;\n  };\n};\n","import { css } from '@emotion/react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nexport function getAgularPanelStyles(theme: GrafanaTheme2) {\n  return css`\n    .panel-options-group {\n      border-bottom: 1px solid ${theme.colors.border.weak};\n    }\n\n    .panel-options-group__header {\n      padding: ${theme.spacing(1, 2, 1, 1)};\n      position: relative;\n      display: flex;\n      align-items: center;\n      cursor: pointer;\n      font-weight: 500;\n      color: ${theme.colors.text.primary};\n\n      &:hover {\n        background: ${theme.colors.emphasize(theme.colors.background.primary, 0.03)};\n      }\n    }\n\n    .panel-options-group__icon {\n      color: ${theme.colors.text.secondary};\n      margin-right: ${theme.spacing(1)};\n      padding: ${theme.spacing(0, 0.9, 0, 0.6)};\n    }\n\n    .panel-options-group__title {\n      position: relative;\n    }\n\n    .panel-options-group__body {\n      padding: ${theme.spacing(1, 2, 1, 4)};\n    }\n  `;\n}\n","import { css } from '@emotion/react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nexport function getCardStyles(theme: GrafanaTheme2) {\n  return css`\n    .card-section {\n      margin-bottom: ${theme.spacing(4)};\n    }\n\n    .card-list {\n      display: flex;\n      flex-direction: row;\n      flex-wrap: wrap;\n      list-style-type: none;\n    }\n\n    .card-item {\n      display: block;\n      height: 100%;\n      background: ${theme.colors.background.secondary};\n      box-shadow: none;\n      padding: ${theme.spacing(2)};\n      border-radius: 4px;\n\n      &:hover {\n        background: ${theme.colors.emphasize(theme.colors.background.secondary, 0.03)};\n      }\n\n      .label-tag {\n        margin-left: ${theme.spacing(1)};\n        font-size: 11px;\n        padding: 2px 6px;\n      }\n    }\n\n    .card-item-body {\n      display: flex;\n      overflow: hidden;\n    }\n\n    .card-item-details {\n      overflow: hidden;\n    }\n\n    .card-item-header {\n      margin-bottom: ${theme.spacing(2)};\n    }\n\n    .card-item-type {\n      color: ${theme.colors.text.secondary};\n      text-transform: uppercase;\n      font-size: ${theme.typography.size.sm};\n      font-weight: ${theme.typography.fontWeightMedium};\n    }\n\n    .card-item-badge {\n      margin: 6px 0;\n    }\n\n    .card-item-notice {\n      font-size: ${theme.typography.size.sm};\n    }\n\n    .card-item-name {\n      color: ${theme.colors.text.primary};\n      overflow: hidden;\n      text-overflow: ellipsis;\n      width: 100%;\n    }\n\n    .card-item-label {\n      margin-left: ${theme.spacing(1)};\n    }\n\n    .card-item-sub-name {\n      color: ${theme.colors.text.secondary};\n      overflow: hidden;\n      text-overflow: ellipsis;\n      width: 100%;\n    }\n\n    .card-item-sub-name--header {\n      color: ${theme.colors.text.secondary};\n      text-transform: uppercase;\n      margin-bottom: ${theme.spacing(2)};\n      font-size: ${theme.typography.size.sm};\n      font-weight: bold;\n    }\n\n    .card-list-layout-grid {\n      .card-item-type {\n        display: inline-block;\n      }\n\n      .card-item-notice {\n        font-size: ${theme.typography.size.sm};\n        display: inline-block;\n        margin-left: ${theme.spacing(2)};\n      }\n\n      .card-item-header-action {\n        float: right;\n      }\n\n      .card-item-wrapper {\n        width: 100%;\n        padding: ${theme.spacing(0, 2, 2, 0)};\n      }\n\n      .card-item-wrapper--clickable {\n        cursor: pointer;\n      }\n\n      .card-item-figure {\n        margin: ${theme.spacing(0, 2, 2, 0)}0;\n        height: 80px;\n\n        img {\n          width: 80px;\n        }\n      }\n\n      .card-item-name {\n        font-size: ${theme.typography.h3.fontSize};\n      }\n\n      ${theme.breakpoints.up('md')} {\n        .card-item-wrapper {\n          width: 50%;\n        }\n      }\n\n      ${theme.breakpoints.up('lg')} {\n        .card-item-wrapper {\n          width: 33.333333%;\n        }\n      }\n\n      &.card-list-layout-grid--max-2-col {\n        ${theme.breakpoints.up('lg')} {\n          .card-item-wrapper {\n            width: 50%;\n          }\n        }\n      }\n    }\n\n    .card-list-layout-list {\n      .card-item-wrapper {\n        padding: 0;\n        width: 100%;\n        margin-bottom: ${theme.spacing(1)};\n      }\n\n      .card-item-wrapper--clickable {\n        cursor: pointer;\n      }\n\n      .card-item {\n        border-radius: 2px;\n      }\n\n      .card-item-header {\n        float: right;\n        text-align: right;\n      }\n\n      .card-item-figure {\n        margin: ${theme.spacing(0, 2, 0, 0)};\n        img {\n          width: 48px;\n        }\n      }\n\n      .card-item-name {\n        font-size: ${theme.typography.h4.fontSize};\n      }\n\n      .card-item-sub-name {\n        font-size: ${theme.typography.size.sm};\n      }\n\n      .layout-selector {\n        margin-right: 0;\n      }\n    }\n  `;\n}\n","import { CSSObject } from '@emotion/css';\nimport tinycolor from 'tinycolor2';\n\nimport { GrafanaTheme, GrafanaTheme2 } from '@grafana/data';\n\nexport function cardChrome(theme: GrafanaTheme2): string {\n  return `\n    background: ${theme.colors.background.secondary};\n    &:hover {\n      background: ${hoverColor(theme.colors.background.secondary, theme)};\n    }\n    box-shadow: ${theme.components.panel.boxShadow};\n    border-radius: ${theme.shape.radius.default};\n`;\n}\n\nexport function hoverColor(color: string, theme: GrafanaTheme2): string {\n  return theme.isDark ? tinycolor(color).brighten(2).toString() : tinycolor(color).darken(2).toString();\n}\n\nexport function listItem(theme: GrafanaTheme2): string {\n  return `\n  background: ${theme.colors.background.secondary};\n  &:hover {\n    background: ${hoverColor(theme.colors.background.secondary, theme)};\n  }\n  box-shadow: ${theme.components.panel.boxShadow};\n  border-radius: ${theme.shape.radius.default};\n`;\n}\n\nexport function listItemSelected(theme: GrafanaTheme2): string {\n  return `\n    background: ${hoverColor(theme.colors.background.secondary, theme)};\n    color: ${theme.colors.text.maxContrast};\n`;\n}\n\nexport function mediaUp(breakpoint: string) {\n  return `only screen and (min-width: ${breakpoint})`;\n}\n\nconst isGrafanaTheme2 = (theme: GrafanaTheme | GrafanaTheme2): theme is GrafanaTheme2 => theme.hasOwnProperty('v1');\nexport const focusCss = (theme: GrafanaTheme | GrafanaTheme2) => {\n  const isTheme2 = isGrafanaTheme2(theme);\n  const firstColor = isTheme2 ? theme.colors.background.canvas : theme.colors.bodyBg;\n  const secondColor = isTheme2 ? theme.colors.primary.main : theme.colors.formFocusOutline;\n\n  return `\n  outline: 2px dotted transparent;\n  outline-offset: 2px;\n  box-shadow: 0 0 0 2px ${firstColor}, 0 0 0px 4px ${secondColor};\n  transition-property: outline, outline-offset, box-shadow;\n  transition-duration: 0.2s;\n  transition-timing-function: cubic-bezier(0.19, 1, 0.22, 1);`;\n};\n\nexport function getMouseFocusStyles(theme: GrafanaTheme | GrafanaTheme2): CSSObject {\n  return {\n    outline: 'none',\n    boxShadow: `none`,\n  };\n}\n\nexport function getFocusStyles(theme: GrafanaTheme2): CSSObject {\n  return {\n    outline: '2px dotted transparent',\n    outlineOffset: '2px',\n    boxShadow: `0 0 0 2px ${theme.colors.background.canvas}, 0 0 0px 4px ${theme.colors.primary.main}`,\n    transitionTimingFunction: `cubic-bezier(0.19, 1, 0.22, 1)`,\n    transitionDuration: '0.2s',\n    transitionProperty: 'outline, outline-offset, box-shadow',\n  };\n}\n\n// max-width is set up based on .grafana-tooltip class that's used in dashboard\nexport const getTooltipContainerStyles = (theme: GrafanaTheme2) => `\n  overflow: hidden;\n  background: ${theme.colors.background.secondary};\n  box-shadow: ${theme.shadows.z2};\n  max-width: 800px;\n  padding: ${theme.spacing(1)};\n  border-radius: ${theme.shape.radius.default};\n  z-index: ${theme.zIndex.tooltip};\n`;\n","import { css } from '@emotion/react';\n\nimport { GrafanaTheme2, ThemeTypographyVariant } from '@grafana/data';\n\nimport { getFocusStyles } from '../mixins';\n\nexport function getElementStyles(theme: GrafanaTheme2) {\n  return css`\n    html {\n      -ms-overflow-style: scrollbar;\n      -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n      height: 100%;\n      font-size: ${theme.typography.htmlFontSize}px;\n      font-family: ${theme.typography.fontFamily};\n      line-height: ${theme.typography.body.lineHeight};\n      font-kerning: normal;\n    }\n\n    :root {\n      color-scheme: ${theme.colors.mode};\n    }\n\n    body {\n      height: 100%;\n      width: 100%;\n      position: absolute;\n      color: ${theme.colors.text.primary};\n      background-color: ${theme.colors.background.canvas};\n      ${getVariantStyles(theme.typography.body)}\n    }\n\n    h1,\n    .h1 {\n      ${getVariantStyles(theme.typography.h1)}\n    }\n    h2,\n    .h2 {\n      ${getVariantStyles(theme.typography.h2)}\n    }\n    h3,\n    .h3 {\n      ${getVariantStyles(theme.typography.h3)}\n    }\n    h4,\n    .h4 {\n      ${getVariantStyles(theme.typography.h4)}\n    }\n    h5,\n    .h5 {\n      ${getVariantStyles(theme.typography.h5)}\n    }\n    h6,\n    .h6 {\n      ${getVariantStyles(theme.typography.h6)}\n    }\n\n    p {\n      margin: 0 0 ${theme.spacing(2)};\n    }\n\n    button {\n      letter-spacing: ${theme.typography.body.letterSpacing};\n\n      &:focus-visible {\n        outline: ${getFocusStyles(theme)};\n      }\n      &:focus {\n        outline: none;\n      }\n    }\n\n    // Ex: 14px base font * 85% = about 12px\n    small {\n      font-size: ${theme.typography.bodySmall.fontSize};\n    }\n\n    b,\n    strong {\n      font-weight: ${theme.typography.fontWeightMedium};\n    }\n\n    em {\n      font-style: italic;\n      color: ${theme.colors.text.primary};\n    }\n\n    cite {\n      font-style: normal;\n    }\n\n    // Utility classes\n    .muted {\n      color: ${theme.colors.text.secondary};\n    }\n\n    a.muted:hover,\n    a.muted:focus {\n      color: ${theme.colors.text.primary};\n    }\n\n    .text-warning {\n      color: ${theme.colors.warning.text};\n\n      &:hover,\n      &:focus {\n        color: ${theme.colors.emphasize(theme.colors.warning.text, 0.15)};\n      }\n    }\n\n    .text-error {\n      color: ${theme.colors.error.text};\n\n      &:hover,\n      &:focus {\n        color: ${theme.colors.emphasize(theme.colors.error.text, 0.15)};\n      }\n    }\n\n    .text-success {\n      color: $success-text-color;\n\n      &:hover,\n      &:focus {\n        color: ${theme.colors.emphasize(theme.colors.success.text, 0.15)};\n      }\n    }\n\n    a {\n      cursor: pointer;\n      color: ${theme.colors.text.primary};\n      text-decoration: none;\n\n      &:focus {\n        outline: none;\n      }\n\n      &:focus-visible {\n        ${getFocusStyles(theme)}\n      }\n\n      &: [disabled] {\n        cursor: default;\n        pointer-events: none !important;\n      }\n    }\n\n    .text-link {\n      text-decoration: underline;\n    }\n\n    .text-left {\n      text-align: left;\n    }\n\n    .text-right {\n      text-align: right;\n    }\n\n    .text-center {\n      text-align: center;\n    }\n\n    .highlight-search-match {\n      background: ${theme.components.textHighlight.background};\n      color: ${theme.components.textHighlight.text};\n      padding: 0;\n    }\n  `;\n}\n\nexport function getVariantStyles(variant: ThemeTypographyVariant) {\n  return `\n    margin: 0;\n    font-size: ${variant.fontSize};\n    line-height: ${variant.lineHeight};\n    font-weight: ${variant.fontWeight};\n    letter-spacing: ${variant.letterSpacing};\n    font-family: ${variant.fontFamily};\n    margin-bottom: 0.45em;\n  `;\n}\n","import { css } from '@emotion/react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nexport function getFormElementStyles(theme: GrafanaTheme2) {\n  return css`\n    input,\n    button,\n    select,\n    textarea {\n      font-size: ${theme.typography.body.fontSize};\n      font-weight: ${theme.typography.body.fontWeight};\n      line-height: ${theme.typography.body.lineHeight};\n    }\n    input,\n    button,\n    select,\n    textarea {\n      font-family: ${theme.typography.body.fontFamily};\n    }\n\n    input,\n    select {\n      background-color: ${theme.components.input.background};\n      color: ${theme.components.input.text};\n      border: none;\n      box-shadow: none;\n    }\n\n    textarea {\n      height: auto;\n    }\n\n    // Reset width of input images, buttons, radios, checkboxes\n    input[type='file'],\n    input[type='image'],\n    input[type='submit'],\n    input[type='reset'],\n    input[type='button'],\n    input[type='radio'],\n    input[type='checkbox'] {\n      width: auto; // Override of generic input selector\n    }\n  `;\n}\n","import { css } from '@emotion/react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nexport function getMarkdownStyles(theme: GrafanaTheme2) {\n  return css`\n    // TODO copy from _utils.scss\n  `;\n}\n","import { css } from '@emotion/react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nexport function getPageStyles(theme: GrafanaTheme2) {\n  const maxWidthBreakpoint =\n    theme.breakpoints.values.xxl + theme.spacing.gridSize * 2 + theme.components.sidemenu.width;\n\n  return css`\n    .grafana-app {\n      display: flex;\n      align-items: stretch;\n      position: absolute;\n      width: 100%;\n      height: 100%;\n      top: 0;\n      left: 0;\n    }\n\n    .main-view {\n      position: relative;\n      display: flex;\n      flex-direction: column;\n      flex-grow: 1;\n      height: 100%;\n      flex: 1 1 0;\n      min-width: 0;\n    }\n\n    .page-scrollbar-content {\n      display: flex;\n      min-height: 100%;\n      flex-direction: column;\n      width: 100%;\n      height: 100%;\n    }\n\n    .page-container {\n      flex-grow: 1;\n      flex-basis: 100%;\n      padding-left: ${theme.spacing(2)};\n      padding-right: ${theme.spacing(2)};\n\n      ${theme.breakpoints.up('sm')} {\n        margin: ${theme.spacing(0, 1)};\n      }\n\n      ${theme.breakpoints.up('md')} {\n        margin: ${theme.spacing(0, 2)};\n      }\n\n      @media (min-width: ${maxWidthBreakpoint}px) {\n        max-width: ${theme.breakpoints.values.xxl}px;\n        margin-left: auto;\n        margin-right: auto;\n        width: 100%;\n      }\n    }\n\n    .page-full {\n      margin-left: ${theme.spacing(2)};\n      padding-left: ${theme.spacing(2)};\n      padding-right: ${theme.spacing(2)};\n    }\n\n    .page-body {\n      padding: ${theme.spacing(1)};\n      background: ${theme.components.panel.background};\n      border: 1px solid ${theme.components.panel.borderColor};\n      margin-bottom: 32px;\n\n      ${theme.breakpoints.up('md')} {\n        padding: ${theme.spacing(2)};\n      }\n\n      ${theme.breakpoints.up('lg')} {\n        padding: ${theme.spacing(3)};\n      }\n    }\n\n    .page-heading {\n      font-size: ${theme.typography.h4.fontSize};\n      margin-top: 0;\n      margin-bottom: ${theme.spacing(2)};\n    }\n\n    .page-action-bar {\n      margin-bottom: ${theme.spacing(2)};\n      display: flex;\n      align-items: flex-start;\n\n      > a,\n      > button,\n      > div:nth-child(2) {\n        margin-left: ${theme.spacing(2)};\n      }\n    }\n\n    .page-action-bar--narrow {\n      margin-bottom: 0;\n    }\n\n    .page-action-bar__spacer {\n      width: ${theme.spacing(2)};\n      flex-grow: 1;\n    }\n\n    .page-sub-heading {\n      margin-bottom: ${theme.spacing(2)};\n    }\n\n    .page-sub-heading-icon {\n      margin-left: ${theme.spacing(1)};\n      margin-top: ${theme.spacing(0.5)};\n    }\n\n    .page-hidden {\n      display: none;\n    }\n  `;\n}\n","import { Global } from '@emotion/react';\nimport React from 'react';\n\nimport { useTheme2 } from '..';\n\nimport { getAgularPanelStyles } from './angularPanelStyles';\nimport { getCardStyles } from './card';\nimport { getElementStyles } from './elements';\nimport { getFormElementStyles } from './forms';\nimport { getMarkdownStyles } from './markdownStyles';\nimport { getPageStyles } from './page';\n\n/** @internal */\nexport function GlobalStyles() {\n  const theme = useTheme2();\n\n  return (\n    <Global\n      styles={[\n        getElementStyles(theme),\n        getFormElementStyles(theme),\n        getPageStyles(theme),\n        getCardStyles(theme),\n        getAgularPanelStyles(theme),\n        getMarkdownStyles(theme),\n      ]}\n    />\n  );\n}\n","﻿import React, { PropsWithChildren, useLayoutEffect, useRef } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { useTheme2 } from '../../themes';\n\ninterface Props {\n  className?: string;\n  root?: HTMLElement;\n  forwardedRef?: React.ForwardedRef<HTMLDivElement>;\n}\n\nexport function Portal(props: PropsWithChildren<Props>) {\n  const { children, className, root, forwardedRef } = props;\n  const theme = useTheme2();\n  const node = useRef<HTMLDivElement | null>(null);\n  const portalRoot = root ?? getPortalContainer();\n\n  if (!node.current) {\n    node.current = document.createElement('div');\n    if (className) {\n      node.current.className = className;\n    }\n    node.current.style.position = 'relative';\n    node.current.style.zIndex = `${theme.zIndex.portal}`;\n  }\n\n  useLayoutEffect(() => {\n    if (node.current) {\n      portalRoot.appendChild(node.current);\n    }\n\n    return () => {\n      if (node.current) {\n        portalRoot.removeChild(node.current);\n      }\n    };\n  }, [portalRoot]);\n\n  return ReactDOM.createPortal(<div ref={forwardedRef}>{children}</div>, node.current);\n}\n\n/** @internal */\nexport function getPortalContainer() {\n  return window.document.getElementById('grafana-portal-container') ?? document.body;\n}\n\n/** @internal */\nexport function PortalContainer() {\n  return <div id=\"grafana-portal-container\" />;\n}\n\nexport const RefForwardingPortal = React.forwardRef<HTMLDivElement, Props>((props, ref) => {\n  return <Portal {...props} forwardedRef={ref} />;\n});\n\nRefForwardingPortal.displayName = 'RefForwardingPortal';\n","import React, { useEffect } from 'react';\nimport { usePopperTooltip } from 'react-popper-tooltip';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes/ThemeContext';\nimport { buildTooltipTheme } from '../../utils/tooltipUtils';\nimport { Portal } from '../Portal/Portal';\n\nimport { PopoverContent, TooltipPlacement } from './types';\n\nexport interface TooltipProps {\n  theme?: 'info' | 'error' | 'info-alt';\n  show?: boolean;\n  placement?: TooltipPlacement;\n  content: PopoverContent;\n  children: JSX.Element;\n  /**\n   * Set to true if you want the tooltip to stay long enough so the user can move mouse over content to select text or click a link\n   */\n  interactive?: boolean;\n}\n\nexport const Tooltip = React.memo(({ children, theme, interactive, show, placement, content }: TooltipProps) => {\n  const [controlledVisible, setControlledVisible] = React.useState(show);\n\n  useEffect(() => {\n    if (controlledVisible !== false) {\n      const handleKeyDown = (enterKey: KeyboardEvent) => {\n        if (enterKey.key === 'Escape') {\n          setControlledVisible(false);\n        }\n      };\n      document.addEventListener('keydown', handleKeyDown);\n      return () => {\n        document.removeEventListener('keydown', handleKeyDown);\n      };\n    } else {\n      return;\n    }\n  }, [controlledVisible]);\n\n  const { getArrowProps, getTooltipProps, setTooltipRef, setTriggerRef, visible, update } = usePopperTooltip({\n    visible: controlledVisible,\n    placement: placement,\n    interactive: interactive,\n    delayHide: interactive ? 100 : 0,\n    delayShow: 150,\n    offset: [0, 8],\n    trigger: ['hover', 'focus'],\n    onVisibleChange: setControlledVisible,\n  });\n\n  const styles = useStyles2(getStyles);\n  const style = styles[theme ?? 'info'];\n\n  return (\n    <>\n      {React.cloneElement(children, {\n        ref: setTriggerRef,\n        tabIndex: 0, // tooltip should be keyboard focusable\n      })}\n      {visible && (\n        <Portal>\n          <div ref={setTooltipRef} {...getTooltipProps({ className: style.container })}>\n            <div {...getArrowProps({ className: style.arrow })} />\n            {typeof content === 'string' && content}\n            {React.isValidElement(content) && React.cloneElement(content)}\n            {typeof content === 'function' &&\n              update &&\n              content({\n                updatePopperPosition: update,\n              })}\n          </div>\n        </Portal>\n      )}\n    </>\n  );\n});\n\nTooltip.displayName = 'Tooltip';\n\nexport const getStyles = (theme: GrafanaTheme2) => {\n  const info = buildTooltipTheme(\n    theme,\n    theme.components.tooltip.background,\n    theme.components.tooltip.background,\n    theme.components.tooltip.text,\n    { topBottom: 0.5, rightLeft: 1 }\n  );\n  const error = buildTooltipTheme(\n    theme,\n    theme.colors.error.main,\n    theme.colors.error.main,\n    theme.colors.error.contrastText,\n    { topBottom: 0.5, rightLeft: 1 }\n  );\n\n  return {\n    info,\n    ['info-alt']: info,\n    error,\n  };\n};\n","import { Placement } from '@popperjs/core';\nimport { Component } from 'react';\n\nimport { PopoverContent } from './types';\n\ntype PopperControllerRenderProp = (\n  showPopper: () => void,\n  hidePopper: () => void,\n  popperProps: {\n    show: boolean;\n    placement: Placement;\n    content: PopoverContent;\n  }\n) => JSX.Element;\n\ninterface Props {\n  placement?: Placement;\n  content: PopoverContent;\n  className?: string;\n  children: PopperControllerRenderProp;\n  hideAfter?: number;\n}\n\ninterface State {\n  show: boolean;\n}\n\nclass PopoverController extends Component<Props, State> {\n  private hideTimeout: ReturnType<typeof setTimeout> | null = null;\n  state = { show: false };\n\n  showPopper = () => {\n    if (this.hideTimeout) {\n      clearTimeout(this.hideTimeout);\n    }\n    this.setState({ show: true });\n  };\n\n  hidePopper = () => {\n    this.hideTimeout = setTimeout(() => {\n      this.setState({ show: false });\n    }, this.props.hideAfter);\n  };\n\n  render() {\n    const { children, content, placement = 'auto' } = this.props;\n    const { show } = this.state;\n\n    return children(this.showPopper, this.hidePopper, {\n      show,\n      placement,\n      content,\n    });\n  }\n}\n\nexport { PopoverController };\n","import classNames from 'classnames';\nimport React, { ReactNode } from 'react';\n\nimport { Icon } from '../Icon/Icon';\nimport { Tooltip, PopoverContent } from '../Tooltip';\n\ninterface Props {\n  children: ReactNode;\n  className?: string;\n  htmlFor?: string;\n  isFocused?: boolean;\n  isInvalid?: boolean;\n  tooltip?: PopoverContent;\n  width?: number | 'auto';\n  /** Make tooltip interactive */\n  interactive?: boolean;\n}\n\nexport const FormLabel = ({\n  children,\n  isFocused,\n  isInvalid,\n  className,\n  htmlFor,\n  tooltip,\n  width,\n  interactive,\n  ...rest\n}: Props) => {\n  const classes = classNames(className, `gf-form-label width-${width ? width : '10'}`, {\n    'gf-form-label--is-focused': isFocused,\n    'gf-form-label--is-invalid': isInvalid,\n  });\n\n  return (\n    <label className={classes} {...rest} htmlFor={htmlFor}>\n      {children}\n      {tooltip && (\n        <Tooltip placement=\"top\" content={tooltip} theme={'info'} interactive={interactive}>\n          <Icon tabIndex={0} name=\"info-circle\" size=\"sm\" style={{ marginLeft: '10px' }} />\n        </Tooltip>\n      )}\n    </label>\n  );\n};\n\nexport const InlineFormLabel = FormLabel;\n","import { css, cx } from '@emotion/css';\nimport React, { InputHTMLAttributes } from 'react';\n\nimport { InlineFormLabel } from '../FormLabel/FormLabel';\nimport { PopoverContent } from '../Tooltip';\n\nexport interface Props extends InputHTMLAttributes<HTMLInputElement> {\n  label: string;\n  tooltip?: PopoverContent;\n  labelWidth?: number;\n  // If null no width will be specified not even default one\n  inputWidth?: number | null;\n  inputEl?: React.ReactNode;\n  /** Make tooltip interactive */\n  interactive?: boolean;\n}\n\nconst defaultProps = {\n  labelWidth: 6,\n  inputWidth: 12,\n};\n\n/**\n * Default form field including label used in Grafana UI. Default input element is simple <input />. You can also pass\n * custom inputEl if required in which case inputWidth and inputProps are ignored.\n */\nexport const FormField = ({\n  label,\n  tooltip,\n  labelWidth,\n  inputWidth,\n  inputEl,\n  className,\n  interactive,\n  ...inputProps\n}: Props) => {\n  const styles = getStyles();\n  return (\n    <div className={cx(styles.formField, className)}>\n      <InlineFormLabel width={labelWidth} tooltip={tooltip} interactive={interactive}>\n        {label}\n      </InlineFormLabel>\n      {inputEl || (\n        <input\n          type=\"text\"\n          className={`gf-form-input ${inputWidth ? `width-${inputWidth}` : ''}`}\n          {...inputProps}\n          disabled={inputProps.disabled}\n        />\n      )}\n    </div>\n  );\n};\n\nFormField.displayName = 'FormField';\nFormField.defaultProps = defaultProps;\n\nconst getStyles = () => {\n  return {\n    formField: css`\n      display: flex;\n      flex-direction: row;\n      align-items: flex-start;\n      text-align: left;\n      position: relative;\n    `,\n  };\n};\n","// Node.closest() polyfill\nif (typeof window !== 'undefined' && 'Element' in window && !Element.prototype.closest) {\n  Element.prototype.closest = function (this: any, s: string) {\n    const matches = (this.document || this.ownerDocument).querySelectorAll(s);\n    let el = this;\n    let i;\n    // eslint-disable-next-line\n    do {\n      i = matches.length;\n      // eslint-disable-next-line\n      while (--i >= 0 && matches.item(i) !== el) {}\n      el = el.parentElement;\n    } while (i < 0 && el);\n    return el;\n  };\n}\n\nexport function getPreviousCousin(node: any, selector: string) {\n  let sibling = node.parentElement.previousSibling;\n  let el;\n  while (sibling) {\n    el = sibling.querySelector(selector);\n    if (el) {\n      return el;\n    }\n    sibling = sibling.previousSibling;\n  }\n  return undefined;\n}\n\nexport function getNextCharacter(global?: any) {\n  const selection = (global || window).getSelection();\n  if (!selection || !selection.anchorNode) {\n    return null;\n  }\n\n  const range = selection.getRangeAt(0);\n  const text = selection.anchorNode.textContent;\n  const offset = range.startOffset;\n  return text!.slice(offset, offset + 1);\n}\n","import React, { ReactElement } from 'react';\n\n/** Returns the ID value of the first, and only, child element  */\nexport function getChildId(children: ReactElement): string | undefined {\n  let inputId: unknown;\n\n  // Get the first, and only, child to retrieve form input's id\n  const child = React.Children.only(children);\n\n  // Retrieve input's id to apply on the label for correct click interaction\n  // For some components (like Select), we want to get the ID from a different prop\n  if ('id' in child?.props) {\n    inputId = child.props.id;\n  } else if ('inputId' in child.props) {\n    inputId = child?.props.inputId;\n  }\n\n  return typeof inputId === 'string' ? inputId : undefined;\n}\n\n/**\n * Given react node or function returns element accordingly\n *\n * @param itemToRender\n * @param props props to be passed to the function if item provided as such\n */\nexport function renderOrCallToRender<TProps = {}>(\n  itemToRender: ((props?: TProps) => React.ReactNode) | React.ReactNode,\n  props?: TProps\n): React.ReactNode {\n  if (React.isValidElement(itemToRender) || typeof itemToRender === 'string' || typeof itemToRender === 'number') {\n    return itemToRender;\n  }\n\n  if (typeof itemToRender === 'function') {\n    return itemToRender(props);\n  }\n\n  throw new Error(`${itemToRender} is not a React element nor a function that returns React element`);\n}\n","import { map, sortBy, flattenDeep, chunk, zip } from 'lodash';\nimport tinycolor from 'tinycolor2';\n\nconst PALETTE_ROWS = 4;\n\n/**\n * @alpha\n */\nexport const DEFAULT_ANNOTATION_COLOR = 'rgba(0, 211, 255, 1)';\n\n/**\n * @alpha\n */\nexport const OK_COLOR = 'rgba(11, 237, 50, 1)';\n\n/**\n * @alpha\n */\nexport const ALERTING_COLOR = 'rgba(237, 46, 24, 1)';\n\n/**\n * @alpha\n */\nexport const NO_DATA_COLOR = 'rgba(150, 150, 150, 1)';\n\n/**\n * @alpha\n */\nexport const PENDING_COLOR = 'rgba(247, 149, 32, 1)';\n\n/**\n * @alpha\n */\nexport const REGION_FILL_ALPHA = 0.09;\nexport const colors = [\n  '#7EB26D', // 0: pale green\n  '#EAB839', // 1: mustard\n  '#6ED0E0', // 2: light blue\n  '#EF843C', // 3: orange\n  '#E24D42', // 4: red\n  '#1F78C1', // 5: ocean\n  '#BA43A9', // 6: purple\n  '#705DA0', // 7: violet\n  '#508642', // 8: dark green\n  '#CCA300', // 9: dark sand\n  '#447EBC',\n  '#C15C17',\n  '#890F02',\n  '#0A437C',\n  '#6D1F62',\n  '#584477',\n  '#B7DBAB',\n  '#F4D598',\n  '#70DBED',\n  '#F9BA8F',\n  '#F29191',\n  '#82B5D8',\n  '#E5A8E2',\n  '#AEA2E0',\n  '#629E51',\n  '#E5AC0E',\n  '#64B0C8',\n  '#E0752D',\n  '#BF1B00',\n  '#0A50A1',\n  '#962D82',\n  '#614D93',\n  '#9AC48A',\n  '#F2C96D',\n  '#65C5DB',\n  '#F9934E',\n  '#EA6460',\n  '#5195CE',\n  '#D683CE',\n  '#806EB7',\n  '#3F6833',\n  '#967302',\n  '#2F575E',\n  '#99440A',\n  '#58140C',\n  '#052B51',\n  '#511749',\n  '#3F2B5B',\n  '#E0F9D7',\n  '#FCEACA',\n  '#CFFAFF',\n  '#F9E2D2',\n  '#FCE2DE',\n  '#BADFF4',\n  '#F9D9F9',\n  '#DEDAF7',\n];\n\nfunction sortColorsByHue(hexColors: string[]) {\n  const hslColors = map(hexColors, hexToHsl);\n\n  const sortedHSLColors = sortBy(hslColors, ['h']);\n  const chunkedHSLColors = chunk(sortedHSLColors, PALETTE_ROWS);\n  const sortedChunkedHSLColors = map(chunkedHSLColors, (chunk) => {\n    return sortBy(chunk, 'l');\n  });\n  const flattenedZippedSortedChunkedHSLColors = flattenDeep(zip(...sortedChunkedHSLColors));\n\n  return map(flattenedZippedSortedChunkedHSLColors, hslToHex);\n}\n\nfunction hexToHsl(color: string) {\n  return tinycolor(color).toHsl();\n}\n\nfunction hslToHex(color: tinycolor.ColorFormats.HSLA) {\n  return tinycolor(color).toHexString();\n}\n\nexport function getTextColorForBackground(color: string) {\n  const b = tinycolor(color).getBrightness();\n\n  return b > 180 ? 'rgb(32, 34, 38)' : 'rgb(247, 248, 250)';\n}\n\nexport function getTextColorForAlphaBackground(color: string, themeIsDark: boolean) {\n  const tcolor = tinycolor(color);\n  const b = tcolor.getBrightness();\n  const a = tcolor.getAlpha();\n\n  if (a < 0.3) {\n    return themeIsDark ? 'rgb(247, 248, 250)' : 'rgb(32, 34, 38)';\n  }\n\n  return b > 180 ? 'rgb(32, 34, 38)' : 'rgb(247, 248, 250)';\n}\n\nexport let sortedColors = sortColorsByHue(colors);\n","import { ValidationRule, ValidationEvents } from '../types/input';\n\nexport enum EventsWithValidation {\n  onBlur = 'onBlur',\n  onFocus = 'onFocus',\n  onChange = 'onChange',\n}\n\nexport const validate = (value: string, validationRules: ValidationRule[]) => {\n  const errors = validationRules.reduce<string[]>((acc, currRule) => {\n    if (!currRule.rule(value)) {\n      return acc.concat(currRule.errorMessage);\n    }\n    return acc;\n  }, []);\n  return errors.length > 0 ? errors : null;\n};\n\nexport const hasValidationEvent = (event: EventsWithValidation, validationEvents: ValidationEvents | undefined) => {\n  return validationEvents && validationEvents[event];\n};\n\nexport const regexValidation = (pattern: string | RegExp, errorMessage?: string): ValidationRule => {\n  return {\n    rule: (valueToValidate: string) => {\n      return !!valueToValidate.match(pattern);\n    },\n    errorMessage: errorMessage || 'Value is not valid',\n  };\n};\n","import { Block, Document, Text, Value, SchemaProperties } from 'slate';\n\nexport const SCHEMA: SchemaProperties = {\n  document: {\n    nodes: [\n      {\n        match: [{ type: 'paragraph' }, { type: 'code_block' }, { type: 'code_line' }],\n      },\n    ],\n  },\n  inlines: {},\n};\n\nexport const makeFragment = (text: string, syntax?: string): Document => {\n  const lines = text.split('\\n').map((line) =>\n    Block.create({\n      type: 'code_line',\n      nodes: [Text.create(line)],\n    })\n  );\n\n  const block = Block.create({\n    data: {\n      syntax,\n    },\n    type: 'code_block',\n    nodes: lines,\n  });\n\n  return Document.create({\n    nodes: [block],\n  });\n};\n\nexport const makeValue = (text: string, syntax?: string): Value => {\n  const fragment = makeFragment(text, syntax);\n\n  return Value.create({\n    document: fragment,\n  });\n};\n","import { LinkModel } from '@grafana/data';\n\nimport { MenuItemProps } from '../components/Menu/MenuItem';\n\n/**\n * Delays creating links until we need to open the ContextMenu\n */\nexport const linkModelToContextMenuItems: (links: () => LinkModel[]) => MenuItemProps[] = (links) => {\n  return links().map((link) => {\n    return {\n      label: link.title,\n      ariaLabel: link.title,\n      // TODO: rename to href\n      url: link.href,\n      target: link.target,\n      icon: `${link.target === '_blank' ? 'external-link-alt' : 'link'}`,\n      onClick: link.onClick,\n    };\n  });\n};\n\nexport const isCompactUrl = (url: string) => {\n  const compactExploreUrlRegex = /\\/explore\\?.*&(left|right)=\\[(.*\\,){2,}(.*){1}\\]/;\n  return compactExploreUrlRegex.test(url);\n};\n","const TAG_COLORS = [\n  '#D32D20',\n  '#1E72B8',\n  '#B240A2',\n  '#705DA0',\n  '#466803',\n  '#497A3C',\n  '#3D71AA',\n  '#B15415',\n  '#890F02',\n  '#6E6E6E',\n  '#0A437C',\n  '#6D1F62',\n  '#584477',\n  '#4C7A3F',\n  '#2F4F4F',\n  '#BF1B00',\n  '#7662B1',\n  '#8A2EB8',\n  '#517A00',\n  '#000000',\n  '#3F6833',\n  '#2F575E',\n  '#99440A',\n  '#AE561A',\n  '#0E4AB4',\n  '#58140C',\n  '#052B51',\n  '#511749',\n  '#3F2B5B',\n];\n\nconst TAG_BORDER_COLORS = [\n  '#FF7368',\n  '#459EE7',\n  '#E069CF',\n  '#9683C6',\n  '#6C8E29',\n  '#76AC68',\n  '#6AA4E2',\n  '#E7823D',\n  '#AF3528',\n  '#9B9B9B',\n  '#3069A2',\n  '#934588',\n  '#7E6A9D',\n  '#88C477',\n  '#557575',\n  '#E54126',\n  '#A694DD',\n  '#B054DE',\n  '#8FC426',\n  '#262626',\n  '#658E59',\n  '#557D84',\n  '#BF6A30',\n  '#FF9B53',\n  '#3470DA',\n  '#7E3A32',\n  '#2B5177',\n  '#773D6F',\n  '#655181',\n];\n\n/**\n * Returns tag badge background and border colors based on hashed tag name.\n * @param name tag name\n */\nexport function getTagColorsFromName(name = ''): { color: string; borderColor: string } {\n  const hash = djb2(name.toLowerCase());\n  const index = Math.abs(hash % TAG_COLORS.length);\n  return getTagColor(index);\n}\n\nexport function getTagColor(index: number): { color: string; borderColor: string } {\n  return { color: TAG_COLORS[index], borderColor: TAG_BORDER_COLORS[index] };\n}\n\nfunction djb2(str: string) {\n  let hash = 5381;\n  for (let i = 0; i < str.length; i++) {\n    hash = (hash << 5) + hash + str.charCodeAt(i); /* hash * 33 + c */\n  }\n  return hash;\n}\n\nexport default {\n  getTagColorsFromName,\n};\n","// Slightly modified, but without dependancies:\n// https://raw.githubusercontent.com/malte-wessel/react-custom-scrollbars/master/src/utils/getScrollbarWidth.js\nlet scrollbarWidth: number | null = null;\n\nexport function getScrollbarWidth() {\n  if (scrollbarWidth !== null) {\n    return scrollbarWidth;\n  }\n\n  if (typeof document !== 'undefined') {\n    const div = document.createElement('div');\n    const newStyles = {\n      width: '100px',\n      height: '100px',\n      position: 'absolute',\n      top: '-9999px',\n      overflow: 'scroll',\n      MsOverflowStyle: 'scrollbar',\n    };\n\n    Object.keys(newStyles).map((style) => {\n      // @ts-ignore\n      div.style[style] = newStyles[style];\n    });\n\n    document.body.appendChild(div);\n    scrollbarWidth = div.offsetWidth - div.clientWidth;\n    document.body.removeChild(div);\n  } else {\n    scrollbarWidth = 0;\n  }\n\n  return scrollbarWidth || 0;\n}\n","import { Row } from 'react-table';\n\nimport { Field, LinkModel } from '@grafana/data';\n\n/**\n * @internal\n */\nexport const getCellLinks = (field: Field, row: Row<any>) => {\n  let links: Array<LinkModel<unknown>> | undefined;\n  if (field.getLinks) {\n    links = field.getLinks({\n      valueRowIndex: row.index,\n    });\n  }\n\n  if (!links) {\n    return;\n  }\n\n  for (let i = 0; i < links?.length; i++) {\n    if (links[i].onClick) {\n      const origOnClick = links[i].onClick;\n\n      links[i].onClick = (event) => {\n        // Allow opening in new tab\n        if (!(event.ctrlKey || event.metaKey || event.shiftKey)) {\n          event.preventDefault();\n          origOnClick!(event, {\n            field,\n            rowIndex: row.index,\n          });\n        }\n      };\n    }\n  }\n\n  return links;\n};\n","let _context: CanvasRenderingContext2D;\nconst cache = new Map<string, TextMetrics>();\nconst cacheLimit = 500;\nlet ctxFontStyle = '';\n\n/**\n * @internal\n */\nexport function getCanvasContext() {\n  if (!_context) {\n    _context = document.createElement('canvas').getContext('2d')!;\n  }\n  return _context;\n}\n\n/**\n * @beta\n */\nexport function measureText(text: string, fontSize: number, fontWeight = 400): TextMetrics {\n  const fontStyle = `${fontWeight} ${fontSize}px 'Inter'`;\n  const cacheKey = text + fontStyle;\n  const fromCache = cache.get(cacheKey);\n\n  if (fromCache) {\n    return fromCache;\n  }\n\n  const context = getCanvasContext();\n\n  if (ctxFontStyle !== fontStyle) {\n    context.font = ctxFontStyle = fontStyle;\n  }\n\n  const metrics = context.measureText(text);\n\n  if (cache.size === cacheLimit) {\n    cache.clear();\n  }\n\n  cache.set(cacheKey, metrics);\n\n  return metrics;\n}\n\n/**\n * @beta\n */\nexport function calculateFontSize(\n  text: string,\n  width: number,\n  height: number,\n  lineHeight: number,\n  maxSize?: number,\n  fontWeight?: number\n) {\n  // calculate width in 14px\n  const textSize = measureText(text, 14, fontWeight);\n  // how much bigger than 14px can we make it while staying within our width constraints\n  const fontSizeBasedOnWidth = (width / (textSize.width + 2)) * 14;\n  const fontSizeBasedOnHeight = height / lineHeight;\n\n  // final fontSize\n  const optimalSize = Math.min(fontSizeBasedOnHeight, fontSizeBasedOnWidth);\n  return Math.min(optimalSize, maxSize ?? optimalSize);\n}\n","import { useState } from 'react';\n\n/** @internal */\nexport function useForceUpdate() {\n  const [_, setValue] = useState(0); // integer state\n  return () => setValue((prevState) => prevState + 1); // update the state to force render\n}\n","import { last } from 'lodash';\n\nimport { HighlightPart } from '../types';\n\ntype FuzzyMatch = {\n  /**\n   * Total number of unmatched letters between matched letters\n   */\n  distance: number;\n  ranges: HighlightPart[];\n  found: boolean;\n};\n\n/**\n * Attempts to do a partial input search, e.g. allowing to search for a text (needle)\n * in another text (stack) by skipping some letters in-between. All letters from\n * the needle must exist in the stack in the same order to find a match.\n *\n * The search is case sensitive. Convert stack and needle to lower case\n * to make it case insensitive.\n *\n * @param stack - main text to be searched\n * @param needle - partial text to find in the stack\n *\n * @internal\n */\nexport function fuzzyMatch(stack: string, needle: string): FuzzyMatch {\n  let distance = 0,\n    searchIndex = stack.indexOf(needle);\n  // Remove whitespace from needle as a temporary solution to treat separate string\n  // queries as 'AND'\n  needle = needle.replace(/\\s/g, '');\n\n  const ranges: HighlightPart[] = [];\n\n  if (searchIndex !== -1) {\n    return {\n      distance: 0,\n      found: true,\n      ranges: [{ start: searchIndex, end: searchIndex + needle.length - 1 }],\n    };\n  }\n\n  for (const letter of needle) {\n    const letterIndex = stack.indexOf(letter, searchIndex);\n\n    if (letterIndex === -1) {\n      return { distance: Infinity, ranges: [], found: false };\n    }\n    // do not cumulate the distance if it's the first letter\n    if (searchIndex !== -1) {\n      distance += letterIndex - searchIndex;\n    }\n    searchIndex = letterIndex + 1;\n\n    if (ranges.length === 0) {\n      ranges.push({ start: letterIndex, end: letterIndex });\n    } else {\n      const lastRange = last(ranges)!;\n      if (letterIndex === lastRange.end + 1) {\n        lastRange.end++;\n      } else {\n        ranges.push({ start: letterIndex, end: letterIndex });\n      }\n    }\n  }\n\n  return {\n    distance: distance,\n    ranges,\n    found: true,\n  };\n}\n","import { CompletionItem, SearchFunction } from '../types';\n\nimport { fuzzyMatch } from './fuzzy';\n\n/**\n * List of auto-complete search function used by SuggestionsPlugin.handleTypeahead()\n * @alpha\n */\nexport enum SearchFunctionType {\n  Word = 'Word',\n  Prefix = 'Prefix',\n  Fuzzy = 'Fuzzy',\n}\n\n/**\n * Exact-word matching for auto-complete suggestions.\n * - Returns items containing the searched text.\n * @internal\n */\nconst wordSearch: SearchFunction = (items: CompletionItem[], text: string): CompletionItem[] => {\n  return items.filter((c) => (c.filterText || c.label).includes(text));\n};\n\n/**\n * Prefix-based search for auto-complete suggestions.\n * - Returns items starting with the searched text.\n * @internal\n */\nconst prefixSearch: SearchFunction = (items: CompletionItem[], text: string): CompletionItem[] => {\n  return items.filter((c) => (c.filterText || c.label).startsWith(text));\n};\n\n/**\n * Fuzzy search for auto-complete suggestions.\n * - Returns items containing all letters from the search text occurring in the same order.\n * - Stores highlight parts with parts of the text phrase found by fuzzy search\n * @internal\n */\nconst fuzzySearch: SearchFunction = (items: CompletionItem[], text: string): CompletionItem[] => {\n  text = text.toLowerCase();\n  return items.filter((item) => {\n    const { distance, ranges, found } = fuzzyMatch(item.label.toLowerCase(), text);\n    if (!found) {\n      return false;\n    }\n    item.sortValue = distance;\n    item.highlightParts = ranges;\n    return true;\n  });\n};\n\n/**\n * @internal\n */\nexport const SearchFunctionMap = {\n  [SearchFunctionType.Word]: wordSearch,\n  [SearchFunctionType.Prefix]: prefixSearch,\n  [SearchFunctionType.Fuzzy]: fuzzySearch,\n};\n","import { throttle } from 'lodash';\n\n/**\n * @internal\n * */\nconst throttledLog = throttle((...t: any[]) => {\n  console.log(...t);\n}, 500);\n\n/**\n * @internal\n */\nexport interface Logger {\n  logger: (...t: any[]) => void;\n  enable: () => void;\n  disable: () => void;\n  isEnabled: () => boolean;\n}\n\n/** @internal */\nexport const createLogger = (name: string): Logger => {\n  let LOGGIN_ENABLED = false;\n  return {\n    logger: (id: string, throttle = false, ...t: any[]) => {\n      if (process.env.NODE_ENV === 'production' || process.env.NODE_ENV === 'test' || !LOGGIN_ENABLED) {\n        return;\n      }\n      const fn = throttle ? throttledLog : console.log;\n      fn(`[${name}: ${id}]: `, ...t);\n    },\n    enable: () => (LOGGIN_ENABLED = true),\n    disable: () => (LOGGIN_ENABLED = false),\n    isEnabled: () => LOGGIN_ENABLED,\n  };\n};\n","import { Logger } from './logger';\n\n/**\n * Allows debug helpers attachement to the window object\n * @internal\n */\nexport function attachDebugger(key: string, thebugger?: any, logger?: Logger) {\n  if (process.env.NODE_ENV === 'production') {\n    return;\n  }\n  let completeDebugger = thebugger || {};\n\n  if (logger !== undefined) {\n    completeDebugger = { ...completeDebugger, enable: () => logger.enable(), disable: () => logger.disable() };\n  }\n\n  // @ts-ignore\n  let debugGlobal = (typeof window !== 'undefined' && window['_debug']) ?? {};\n  debugGlobal[key] = completeDebugger;\n  if (typeof window !== 'undefined') {\n    // @ts-ignore\n    window['_debug'] = debugGlobal;\n  }\n}\n","/**\n * @deprecated use it from @grafana/data. Kept here for backward compatibility.\n */\nexport enum NodeGraphDataFrameFieldNames {\n  id = 'id',\n  title = 'title',\n  subTitle = 'subTitle',\n  mainStat = 'mainStat',\n  secondaryStat = 'secondaryStat',\n  source = 'source',\n  target = 'target',\n  detail = 'detail__',\n  arc = 'arc__',\n  color = 'color',\n}\n","import classNames from 'classnames';\nimport React, { PureComponent, ChangeEvent } from 'react';\n\nimport { ValidationEvents, ValidationRule } from '../../../../types';\nimport { validate, EventsWithValidation, hasValidationEvent } from '../../../../utils';\n\nexport enum LegacyInputStatus {\n  Invalid = 'invalid',\n  Valid = 'valid',\n}\n\nexport interface Props extends React.HTMLProps<HTMLInputElement> {\n  validationEvents?: ValidationEvents;\n  hideErrorMessage?: boolean;\n  inputRef?: React.LegacyRef<HTMLInputElement>;\n\n  // Override event props and append status as argument\n  onBlur?: (event: React.FocusEvent<HTMLInputElement>, status?: LegacyInputStatus) => void;\n  onFocus?: (event: React.FocusEvent<HTMLInputElement>, status?: LegacyInputStatus) => void;\n  onChange?: (event: React.ChangeEvent<HTMLInputElement>, status?: LegacyInputStatus) => void;\n}\n\ninterface State {\n  error: string | null;\n}\n\nexport class Input extends PureComponent<Props, State> {\n  static defaultProps = {\n    className: '',\n  };\n\n  state: State = {\n    error: null,\n  };\n\n  get status() {\n    return this.state.error ? LegacyInputStatus.Invalid : LegacyInputStatus.Valid;\n  }\n\n  get isInvalid() {\n    return this.status === LegacyInputStatus.Invalid;\n  }\n\n  validatorAsync = (validationRules: ValidationRule[]) => {\n    return (evt: ChangeEvent<HTMLInputElement>) => {\n      const errors = validate(evt.target.value, validationRules);\n      this.setState((prevState) => {\n        return { ...prevState, error: errors ? errors[0] : null };\n      });\n    };\n  };\n\n  populateEventPropsWithStatus = (restProps: any, validationEvents: ValidationEvents | undefined) => {\n    const inputElementProps = { ...restProps };\n    if (!validationEvents) {\n      return inputElementProps;\n    }\n    Object.keys(EventsWithValidation).forEach((eventName) => {\n      if (hasValidationEvent(eventName as EventsWithValidation, validationEvents) || restProps[eventName]) {\n        inputElementProps[eventName] = async (evt: ChangeEvent<HTMLInputElement>) => {\n          evt.persist(); // Needed for async. https://reactjs.org/docs/events.html#event-pooling\n          if (hasValidationEvent(eventName as EventsWithValidation, validationEvents)) {\n            await this.validatorAsync(validationEvents[eventName]).apply(this, [evt]);\n          }\n          if (restProps[eventName]) {\n            restProps[eventName].apply(null, [evt, this.status]);\n          }\n        };\n      }\n    });\n    return inputElementProps;\n  };\n\n  render() {\n    const { validationEvents, className, hideErrorMessage, inputRef, ...restProps } = this.props;\n    const { error } = this.state;\n    const inputClassName = classNames('gf-form-input', { invalid: this.isInvalid }, className);\n    const inputElementProps = this.populateEventPropsWithStatus(restProps, validationEvents);\n\n    return (\n      <div style={{ flexGrow: 1 }}>\n        <input {...inputElementProps} ref={inputRef} className={inputClassName} />\n        {error && !hideErrorMessage && <span>{error}</span>}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { components } from 'react-select';\n\nimport { Icon } from '../../../Icon/Icon';\n\nexport const IndicatorsContainer = (props: any) => {\n  const isOpen = props.selectProps.menuIsOpen;\n  return (\n    <components.IndicatorsContainer {...props}>\n      <Icon name={isOpen ? 'angle-up' : 'angle-down'} style={{ marginTop: '7px' }} />\n    </components.IndicatorsContainer>\n  );\n};\n\nexport default IndicatorsContainer;\n","import React from 'react';\nimport { components, NoticeProps, GroupBase } from 'react-select';\n\nimport { SelectableValue } from '@grafana/data';\n\nexport type Props<T> = NoticeProps<SelectableValue<T>, boolean, GroupBase<SelectableValue<T>>>;\n\nexport const NoOptionsMessage = <T extends unknown>(props: Props<T>) => {\n  const { children } = props;\n  return (\n    <components.NoOptionsMessage {...props}>\n      <div className=\"gf-form-select-box__desc-option\">\n        <div className=\"gf-form-select-box__desc-option__body\">{children}</div>\n      </div>\n    </components.NoOptionsMessage>\n  );\n};\n\nexport default NoOptionsMessage;\n","import { css, cx } from '@emotion/css';\nimport classNames from 'classnames';\nimport React, { useEffect, useRef, useState } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\nimport { Icon } from '../Icon/Icon';\n\nexport const ScrollIndicators = ({ children }: React.PropsWithChildren<{}>) => {\n  const [showScrollTopIndicator, setShowTopScrollIndicator] = useState(false);\n  const [showScrollBottomIndicator, setShowBottomScrollIndicator] = useState(false);\n  const scrollTopMarker = useRef<HTMLDivElement>(null);\n  const scrollBottomMarker = useRef<HTMLDivElement>(null);\n  const styles = useStyles2(getStyles);\n\n  // Here we observe the top and bottom markers to determine if we should show the scroll indicators\n  useEffect(() => {\n    const intersectionObserver = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        if (entry.target === scrollTopMarker.current) {\n          setShowTopScrollIndicator(!entry.isIntersecting);\n        } else if (entry.target === scrollBottomMarker.current) {\n          setShowBottomScrollIndicator(!entry.isIntersecting);\n        }\n      });\n    });\n    [scrollTopMarker, scrollBottomMarker].forEach((ref) => {\n      if (ref.current) {\n        intersectionObserver.observe(ref.current);\n      }\n    });\n    return () => intersectionObserver.disconnect();\n  }, []);\n\n  return (\n    <>\n      <div\n        className={cx(styles.scrollIndicator, styles.scrollTopIndicator, {\n          [styles.scrollIndicatorVisible]: showScrollTopIndicator,\n        })}\n      >\n        <Icon className={classNames(styles.scrollIcon, styles.scrollTopIcon)} name=\"angle-up\" />\n      </div>\n      <div className={styles.scrollContent}>\n        <div ref={scrollTopMarker} />\n        {children}\n        <div ref={scrollBottomMarker} />\n      </div>\n      <div\n        className={cx(styles.scrollIndicator, styles.scrollBottomIndicator, {\n          [styles.scrollIndicatorVisible]: showScrollBottomIndicator,\n        })}\n      >\n        <Icon className={classNames(styles.scrollIcon, styles.scrollBottomIcon)} name=\"angle-down\" />\n      </div>\n    </>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    scrollContent: css({\n      flex: 1,\n      position: 'relative',\n    }),\n    scrollIndicator: css({\n      height: theme.spacing(6),\n      left: 0,\n      opacity: 0,\n      pointerEvents: 'none',\n      position: 'absolute',\n      right: 0,\n      transition: theme.transitions.create('opacity'),\n      zIndex: 1,\n    }),\n    scrollTopIndicator: css({\n      background: `linear-gradient(0deg, transparent, ${theme.colors.background.canvas})`,\n      top: 0,\n    }),\n    scrollBottomIndicator: css({\n      background: `linear-gradient(180deg, transparent, ${theme.colors.background.canvas})`,\n      bottom: 0,\n    }),\n    scrollIndicatorVisible: css({\n      opacity: 1,\n    }),\n    scrollIcon: css({\n      left: '50%',\n      position: 'absolute',\n      transform: 'translateX(-50%)',\n    }),\n    scrollTopIcon: css({\n      top: 0,\n    }),\n    scrollBottomIcon: css({\n      bottom: 0,\n    }),\n  };\n};\n","import { css, cx } from '@emotion/css';\nimport React, { RefCallback, useCallback, useEffect, useRef } from 'react';\nimport Scrollbars, { positionValues } from 'react-custom-scrollbars-2';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\n\nimport { ScrollIndicators } from './ScrollIndicators';\n\nexport type ScrollbarPosition = positionValues;\n\ninterface Props {\n  className?: string;\n  testId?: string;\n  autoHide?: boolean;\n  autoHideTimeout?: number;\n  autoHeightMax?: string;\n  hideTracksWhenNotNeeded?: boolean;\n  hideHorizontalTrack?: boolean;\n  hideVerticalTrack?: boolean;\n  scrollRefCallback?: RefCallback<HTMLDivElement>;\n  scrollTop?: number;\n  setScrollTop?: (position: ScrollbarPosition) => void;\n  showScrollIndicators?: boolean;\n  autoHeightMin?: number | string;\n  updateAfterMountMs?: number;\n  onScroll?: React.UIEventHandler;\n}\n\n/**\n * Wraps component into <Scrollbars> component from `react-custom-scrollbars`\n */\nexport const CustomScrollbar = ({\n  autoHide = false,\n  autoHideTimeout = 200,\n  setScrollTop,\n  className,\n  testId,\n  autoHeightMin = '0',\n  autoHeightMax = '100%',\n  hideTracksWhenNotNeeded = false,\n  hideHorizontalTrack,\n  hideVerticalTrack,\n  scrollRefCallback,\n  showScrollIndicators = false,\n  updateAfterMountMs,\n  scrollTop,\n  onScroll,\n  children,\n}: React.PropsWithChildren<Props>) => {\n  const ref = useRef<Scrollbars & { view: HTMLDivElement; update: () => void }>(null);\n  const styles = useStyles2(getStyles);\n\n  useEffect(() => {\n    if (ref.current && scrollRefCallback) {\n      scrollRefCallback(ref.current.view);\n    }\n  }, [ref, scrollRefCallback]);\n\n  useEffect(() => {\n    if (ref.current && scrollTop != null) {\n      ref.current.scrollTop(scrollTop);\n    }\n  }, [scrollTop]);\n\n  /**\n   * Special logic for doing a update a few milliseconds after mount to check for\n   * updated height due to dynamic content\n   */\n  useEffect(() => {\n    if (!updateAfterMountMs) {\n      return;\n    }\n    setTimeout(() => {\n      const scrollbar = ref.current;\n      if (scrollbar?.update) {\n        scrollbar.update();\n      }\n    }, updateAfterMountMs);\n  }, [updateAfterMountMs]);\n\n  function renderTrack(className: string, hideTrack: boolean | undefined, passedProps: JSX.IntrinsicElements['div']) {\n    if (passedProps.style && hideTrack) {\n      passedProps.style.display = 'none';\n    }\n\n    return <div {...passedProps} className={className} />;\n  }\n\n  const renderTrackHorizontal = useCallback(\n    (passedProps: JSX.IntrinsicElements['div']) => {\n      return renderTrack('track-horizontal', hideHorizontalTrack, passedProps);\n    },\n    [hideHorizontalTrack]\n  );\n\n  const renderTrackVertical = useCallback(\n    (passedProps: JSX.IntrinsicElements['div']) => {\n      return renderTrack('track-vertical', hideVerticalTrack, passedProps);\n    },\n    [hideVerticalTrack]\n  );\n\n  const renderThumbHorizontal = useCallback((passedProps: JSX.IntrinsicElements['div']) => {\n    return <div {...passedProps} className=\"thumb-horizontal\" />;\n  }, []);\n\n  const renderThumbVertical = useCallback((passedProps: JSX.IntrinsicElements['div']) => {\n    return <div {...passedProps} className=\"thumb-vertical\" />;\n  }, []);\n\n  const renderView = useCallback((passedProps: JSX.IntrinsicElements['div']) => {\n    // fixes issues of visibility on safari and ios devices\n    if (passedProps.style && passedProps.style['WebkitOverflowScrolling'] === 'touch') {\n      passedProps.style['WebkitOverflowScrolling'] = 'auto';\n    }\n\n    return <div {...passedProps} className=\"scrollbar-view\" />;\n  }, []);\n\n  const onScrollStop = useCallback(() => {\n    ref.current && setScrollTop && setScrollTop(ref.current.getValues());\n  }, [setScrollTop]);\n\n  return (\n    <Scrollbars\n      data-testid={testId}\n      ref={ref}\n      className={cx(styles.customScrollbar, className, {\n        [styles.scrollbarWithScrollIndicators]: showScrollIndicators,\n      })}\n      onScrollStop={onScrollStop}\n      autoHeight={true}\n      autoHide={autoHide}\n      autoHideTimeout={autoHideTimeout}\n      hideTracksWhenNotNeeded={hideTracksWhenNotNeeded}\n      // These autoHeightMin & autoHeightMax options affect firefox and chrome differently.\n      // Before these where set to inherit but that caused problems with cut of legends in firefox\n      autoHeightMax={autoHeightMax}\n      autoHeightMin={autoHeightMin}\n      renderTrackHorizontal={renderTrackHorizontal}\n      renderTrackVertical={renderTrackVertical}\n      renderThumbHorizontal={renderThumbHorizontal}\n      renderThumbVertical={renderThumbVertical}\n      renderView={renderView}\n      onScroll={onScroll}\n    >\n      {showScrollIndicators ? <ScrollIndicators>{children}</ScrollIndicators> : children}\n    </Scrollbars>\n  );\n};\n\nexport default CustomScrollbar;\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    customScrollbar: css`\n      // Fix for Firefox. For some reason sometimes .view container gets a height of its content, but in order to\n      // make scroll working it should fit outer container size (scroll appears only when inner container size is\n      // greater than outer one).\n      display: flex;\n      flex-grow: 1;\n      .scrollbar-view {\n        display: flex;\n        flex-grow: 1;\n        flex-direction: column;\n      }\n      .track-vertical {\n        border-radius: ${theme.shape.borderRadius(2)};\n        width: ${theme.spacing(1)} !important;\n        right: 0px;\n        bottom: ${theme.spacing(0.25)};\n        top: ${theme.spacing(0.25)};\n      }\n      .track-horizontal {\n        border-radius: ${theme.shape.borderRadius(2)};\n        height: ${theme.spacing(1)} !important;\n        right: ${theme.spacing(0.25)};\n        bottom: ${theme.spacing(0.25)};\n        left: ${theme.spacing(0.25)};\n      }\n      .thumb-vertical {\n        background: ${theme.colors.action.focus};\n        border-radius: ${theme.shape.borderRadius(2)};\n        opacity: 0;\n      }\n      .thumb-horizontal {\n        background: ${theme.colors.action.focus};\n        border-radius: ${theme.shape.borderRadius(2)};\n        opacity: 0;\n      }\n      &:hover {\n        .thumb-vertical,\n        .thumb-horizontal {\n          opacity: 1;\n          transition: opacity 0.3s ease-in-out;\n        }\n      }\n    `,\n    // override the scroll container position so that the scroll indicators\n    // are positioned at the top and bottom correctly.\n    // react-custom-scrollbars doesn't provide any way for us to hook in nicely,\n    // so we have to override with !important. feelsbad.\n    scrollbarWithScrollIndicators: css`\n      .scrollbar-view {\n        position: static !important;\n      }\n    `,\n  };\n};\n","import { css } from '@emotion/css';\nimport React, { PureComponent } from 'react';\nimport { GroupProps } from 'react-select';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { stylesFactory, withTheme2 } from '../../themes';\nimport { Themeable2 } from '../../types';\nimport { Icon } from '../Icon/Icon';\n\ninterface ExtendedGroupProps extends Omit<GroupProps<any, any>, 'theme'>, Themeable2 {\n  data: {\n    label: string;\n    expanded: boolean;\n    options: any[];\n  };\n}\n\ninterface State {\n  expanded: boolean;\n}\n\nconst getSelectOptionGroupStyles = stylesFactory((theme: GrafanaTheme2) => {\n  return {\n    header: css`\n      display: flex;\n      align-items: center;\n      justify-content: flex-start;\n      justify-items: center;\n      cursor: pointer;\n      padding: 7px 10px;\n      width: 100%;\n      border-bottom: 1px solid ${theme.colors.background.secondary};\n\n      &:hover {\n        color: ${theme.colors.text.maxContrast};\n      }\n    `,\n    label: css`\n      flex-grow: 1;\n    `,\n    icon: css`\n      padding-right: 2px;\n    `,\n  };\n});\n\nclass UnthemedSelectOptionGroup extends PureComponent<ExtendedGroupProps, State> {\n  state = {\n    expanded: false,\n  };\n\n  componentDidMount() {\n    if (this.props.data.expanded) {\n      this.setState({ expanded: true });\n    } else if (this.props.selectProps && this.props.selectProps.value) {\n      const { value } = this.props.selectProps.value;\n\n      if (value && this.props.options.some((option) => option.value === value)) {\n        this.setState({ expanded: true });\n      }\n    }\n  }\n\n  componentDidUpdate(nextProps: ExtendedGroupProps) {\n    if (nextProps.selectProps.inputValue !== '') {\n      this.setState({ expanded: true });\n    }\n  }\n\n  onToggleChildren = () => {\n    this.setState((prevState) => ({\n      expanded: !prevState.expanded,\n    }));\n  };\n\n  render() {\n    const { children, label, theme } = this.props;\n    const { expanded } = this.state;\n    const styles = getSelectOptionGroupStyles(theme);\n\n    return (\n      <div>\n        <div className={styles.header} onClick={this.onToggleChildren}>\n          <span className={styles.label}>{label}</span>\n          <Icon className={styles.icon} name={expanded ? 'angle-up' : 'angle-down'} />{' '}\n        </div>\n        {expanded && children}\n      </div>\n    );\n  }\n}\n\nexport const SelectOptionGroup = withTheme2(UnthemedSelectOptionGroup);\n","import { useEffect, useRef, useState } from 'react';\n\ntype DelayOptions = {\n  // Minimal amount of time the switch will be on.\n  duration?: number;\n  // Delay after which switch will turn on.\n  delay?: number;\n};\n\n/**\n * Hook that delays changing of boolean switch to prevent too much time spent in \"on\" state. It is kind of a throttle\n * but you can specify different time for on and off throttling so this only allows a boolean values and also prefers\n * to stay \"off\" so turning \"on\" is always delayed while turning \"off\" is throttled.\n *\n * This is useful for showing loading elements to prevent it flashing too much in case of quick loading time or\n * prevent it flash if loaded state comes right after switch to loading.\n */\nexport function useDelayedSwitch(value: boolean, options: DelayOptions = {}): boolean {\n  const { duration = 250, delay = 250 } = options;\n\n  const [delayedValue, setDelayedValue] = useState(value);\n  const onStartTime = useRef<Date | undefined>();\n\n  useEffect(() => {\n    let timeout: ReturnType<typeof setTimeout> | undefined;\n    if (value) {\n      // If toggling to \"on\" state we always setTimeout no matter how long we have been \"off\".\n      timeout = setTimeout(() => {\n        onStartTime.current = new Date();\n        setDelayedValue(value);\n      }, delay);\n    } else {\n      // If toggling to \"off\" state we check how much time we were already \"on\".\n      const timeSpent = onStartTime.current ? Date.now() - onStartTime.current.valueOf() : 0;\n      const turnOff = () => {\n        onStartTime.current = undefined;\n        setDelayedValue(value);\n      };\n      if (timeSpent >= duration) {\n        // We already spent enough time \"on\" so change right away.\n        turnOff();\n      } else {\n        timeout = setTimeout(turnOff, duration - timeSpent);\n      }\n    }\n    return () => {\n      if (timeout) {\n        clearTimeout(timeout);\n        timeout = undefined;\n      }\n    };\n  }, [value, duration, delay]);\n\n  return delayedValue;\n}\n","import { cx, css } from '@emotion/css';\nimport React from 'react';\n\nimport { stylesFactory } from '../../themes';\nimport { Icon } from '../Icon/Icon';\n\nconst getStyles = stylesFactory((size: number, inline: boolean) => {\n  return {\n    wrapper: css`\n      font-size: ${size}px;\n      ${inline\n        ? css`\n            display: inline-block;\n          `\n        : ''}\n    `,\n  };\n});\n\nexport type Props = {\n  className?: string;\n  style?: React.CSSProperties;\n  iconClassName?: string;\n  inline?: boolean;\n  size?: number;\n};\n\n/**\n * @public\n */\nexport const Spinner = ({ className, inline = false, iconClassName, style, size = 16 }: Props) => {\n  const styles = getStyles(size, inline);\n  return (\n    <div data-testid=\"Spinner\" style={style} className={cx(styles.wrapper, className)}>\n      <Icon className={cx('fa-spin', iconClassName)} name=\"fa fa-spinner\" />\n    </div>\n  );\n};\n","import { css } from '@emotion/css';\nimport React from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nimport { stylesFactory } from '../../themes';\n\nconst getStyles = stylesFactory((duration: number) => {\n  return {\n    enter: css`\n      label: enter;\n      opacity: 0;\n    `,\n    enterActive: css`\n      label: enterActive;\n      opacity: 1;\n      transition: opacity ${duration}ms ease-out;\n    `,\n    exit: css`\n      label: exit;\n      opacity: 1;\n    `,\n    exitActive: css`\n      label: exitActive;\n      opacity: 0;\n      transition: opacity ${duration}ms ease-out;\n    `,\n  };\n});\n\ntype Props = {\n  children: React.ReactNode;\n  visible: boolean;\n  duration?: number;\n};\n\nexport function FadeTransition(props: Props) {\n  const { visible, children, duration = 250 } = props;\n  const styles = getStyles(duration);\n  return (\n    <CSSTransition in={visible} mountOnEnter={true} unmountOnExit={true} timeout={duration} classNames={styles}>\n      {children}\n    </CSSTransition>\n  );\n}\n","import { css } from '@emotion/css';\nimport React from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nimport { stylesFactory } from '../../themes';\n\nconst getStyles = stylesFactory((duration: number, measurement: 'width' | 'height', size: number) => {\n  return {\n    enter: css`\n      label: enter;\n      ${measurement}: 0;\n      opacity: 0;\n    `,\n    enterActive: css`\n      label: enterActive;\n      ${measurement}: ${size}px;\n      opacity: 1;\n      transition: opacity ${duration}ms ease-out, ${measurement} ${duration}ms ease-out;\n    `,\n    exit: css`\n      label: exit;\n      ${measurement}: ${size}px;\n      opacity: 1;\n    `,\n    exitActive: css`\n      label: exitActive;\n      opacity: 0;\n      ${measurement}: 0;\n      transition: opacity ${duration}ms ease-out, ${measurement} ${duration}ms ease-out;\n    `,\n  };\n});\n\ntype Props = {\n  children: React.ReactNode;\n  visible: boolean;\n  size: number;\n\n  duration?: number;\n  horizontal?: boolean;\n};\n\nexport function SlideOutTransition(props: Props) {\n  const { visible, children, duration = 250, horizontal, size } = props;\n  const styles = getStyles(duration, horizontal ? 'width' : 'height', size);\n  return (\n    <CSSTransition in={visible} mountOnEnter={true} unmountOnExit={true} timeout={duration} classNames={styles}>\n      {children}\n    </CSSTransition>\n  );\n}\n","import { css, cx } from '@emotion/css';\nimport React from 'react';\nimport { components, GroupBase, SingleValueProps } from 'react-select';\n\nimport { GrafanaTheme2, SelectableValue, toIconName } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\nimport { useDelayedSwitch } from '../../utils/useDelayedSwitch';\nimport { Icon } from '../Icon/Icon';\nimport { Spinner } from '../Spinner/Spinner';\nimport { FadeTransition } from '../transitions/FadeTransition';\nimport { SlideOutTransition } from '../transitions/SlideOutTransition';\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    singleValue: css`\n      label: singleValue;\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      box-sizing: border-box;\n      max-width: 100%;\n      grid-area: 1 / 1 / 2 / 3;\n    `,\n    spinnerWrapper: css`\n      width: 16px;\n      height: 16px;\n      display: inline-block;\n      margin-right: 10px;\n      position: relative;\n      vertical-align: middle;\n      overflow: hidden;\n    `,\n    spinnerIcon: css`\n      width: 100%;\n      height: 100%;\n      position: absolute;\n    `,\n    optionIcon: css`\n      margin-right: ${theme.spacing(1)};\n      color: ${theme.colors.text.secondary};\n    `,\n    disabled: css`\n      color: ${theme.colors.text.disabled};\n    `,\n    isOpen: css`\n      color: ${theme.colors.text.disabled};\n    `,\n  };\n};\n\ntype StylesType = ReturnType<typeof getStyles>;\n\nexport type Props<T> = SingleValueProps<SelectableValue<T>, boolean, GroupBase<SelectableValue<T>>>;\n\nexport const SingleValue = <T extends unknown>(props: Props<T>) => {\n  const { children, data, isDisabled } = props;\n  const styles = useStyles2(getStyles);\n  const loading = useDelayedSwitch(data.loading || false, { delay: 250, duration: 750 });\n  const icon = data.icon ? toIconName(data.icon) : undefined;\n\n  return (\n    <components.SingleValue\n      {...props}\n      className={cx(styles.singleValue, isDisabled && styles.disabled, props.selectProps.menuIsOpen && styles.isOpen)}\n    >\n      {data.imgUrl ? (\n        <FadeWithImage\n          loading={loading}\n          imgUrl={data.imgUrl}\n          styles={styles}\n          alt={(data.label ?? data.value) as string}\n        />\n      ) : (\n        <>\n          <SlideOutTransition horizontal size={16} visible={loading} duration={150}>\n            <div className={styles.spinnerWrapper}>\n              <Spinner className={styles.spinnerIcon} inline />\n            </div>\n          </SlideOutTransition>\n          {icon && <Icon name={icon} role=\"img\" className={styles.optionIcon} />}\n        </>\n      )}\n\n      {!data.hideText && children}\n    </components.SingleValue>\n  );\n};\n\nconst FadeWithImage = (props: { loading: boolean; imgUrl: string; styles: StylesType; alt?: string }) => {\n  return (\n    <div className={props.styles.spinnerWrapper}>\n      <FadeTransition duration={150} visible={props.loading}>\n        <Spinner className={props.styles.spinnerIcon} inline />\n      </FadeTransition>\n      <FadeTransition duration={150} visible={!props.loading}>\n        <img className={props.styles.spinnerIcon} src={props.imgUrl} alt={props.alt} />\n      </FadeTransition>\n    </div>\n  );\n};\n","import { useMemo } from 'react';\nimport { CSSObjectWithLabel } from 'react-select';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nexport default function resetSelectStyles(theme: GrafanaTheme2) {\n  return {\n    clearIndicator: () => ({}),\n    container: () => ({}),\n    control: () => ({}),\n    dropdownIndicator: () => ({}),\n    group: () => ({}),\n    groupHeading: () => ({}),\n    indicatorsContainer: () => ({}),\n    indicatorSeparator: () => ({}),\n    input: function (originalStyles: CSSObjectWithLabel): CSSObjectWithLabel {\n      return {\n        ...originalStyles,\n        color: 'inherit',\n        margin: 0,\n        padding: 0,\n        // Set an explicit z-index here to ensure this element always overlays the singleValue\n        zIndex: 1,\n      };\n    },\n    loadingIndicator: () => ({}),\n    loadingMessage: () => ({}),\n    menu: () => ({}),\n    menuList: ({ maxHeight }: { maxHeight: number }) => ({\n      maxHeight,\n    }),\n    multiValue: () => ({}),\n    multiValueLabel: () => ({}),\n    multiValueRemove: () => ({}),\n    noOptionsMessage: () => ({}),\n    option: () => ({}),\n    placeholder: (originalStyles: CSSObjectWithLabel): CSSObjectWithLabel => ({\n      ...originalStyles,\n      color: theme.colors.text.secondary,\n    }),\n    singleValue: () => ({}),\n    valueContainer: () => ({}),\n  };\n}\n\nexport function useCustomSelectStyles(theme: GrafanaTheme2, width: number | string | undefined) {\n  return useMemo(() => {\n    return {\n      ...resetSelectStyles(theme),\n      menuPortal: (base: any) => {\n        // Would like to correct top position when menu is placed bottom, but have props are not sent to this style function.\n        // Only state is. https://github.com/JedWatson/react-select/blob/master/packages/react-select/src/components/Menu.tsx#L605\n        return {\n          ...base,\n          zIndex: theme.zIndex.portal,\n        };\n      },\n      //These are required for the menu positioning to function\n      menu: ({ top, bottom, position }: any) => {\n        return {\n          top,\n          bottom,\n          position,\n          minWidth: '100%',\n          zIndex: theme.zIndex.dropdown,\n        };\n      },\n      container: () => ({\n        width: width ? theme.spacing(width) : '100%',\n        display: width === 'auto' ? 'inline-flex' : 'flex',\n      }),\n      option: (provided: any, state: any) => ({\n        ...provided,\n        opacity: state.isDisabled ? 0.5 : 1,\n      }),\n    };\n  }, [theme, width]);\n}\n","import React from 'react';\nimport { components, OptionProps } from 'react-select';\n\nimport { Icon } from '../../../Icon/Icon';\n\n// https://github.com/JedWatson/react-select/issues/3038\nexport interface ExtendedOptionProps extends OptionProps<any, any> {\n  data: {\n    description?: string;\n    imgUrl?: string;\n  };\n}\n\nexport const SelectOption = (props: ExtendedOptionProps) => {\n  const { children, isSelected, data } = props;\n\n  return (\n    <components.Option {...props}>\n      <div className=\"gf-form-select-box__desc-option\">\n        {data.imgUrl && <img className=\"gf-form-select-box__desc-option__img\" src={data.imgUrl} alt=\"\" />}\n        <div className=\"gf-form-select-box__desc-option__body\">\n          <div>{children}</div>\n          {data.description && <div className=\"gf-form-select-box__desc-option__desc\">{data.description}</div>}\n        </div>\n        {isSelected && <Icon name=\"check\" aria-hidden=\"true\" />}\n      </div>\n    </components.Option>\n  );\n};\n\nexport default SelectOption;\n","// Libraries\nimport classNames from 'classnames';\nimport React, { PureComponent } from 'react';\nimport { default as ReactSelect, components, MenuListProps } from 'react-select';\nimport { default as ReactAsyncSelect } from 'react-select/async';\nimport Creatable from 'react-select/creatable';\n\n// Components\nimport { SelectableValue } from '@grafana/data';\n\nimport { ThemeContext } from '../../../../themes';\nimport { CustomScrollbar } from '../../../CustomScrollbar/CustomScrollbar';\nimport { SelectOptionGroup } from '../../../Select/SelectOptionGroup';\nimport { SingleValue } from '../../../Select/SingleValue';\nimport resetSelectStyles from '../../../Select/resetSelectStyles';\nimport { SelectCommonProps, SelectAsyncProps } from '../../../Select/types';\nimport { Tooltip, PopoverContent } from '../../../Tooltip';\n\nimport IndicatorsContainer from './IndicatorsContainer';\nimport NoOptionsMessage from './NoOptionsMessage';\nimport { SelectOption } from './SelectOption';\n\n/**\n * Changes in new selects:\n * - noOptionsMessage & loadingMessage is of string type\n * - isDisabled is renamed to disabled\n */\ntype LegacyCommonProps<T> = Omit<SelectCommonProps<T>, 'noOptionsMessage' | 'disabled' | 'value' | 'loadingMessage'>;\n\ninterface AsyncProps<T> extends LegacyCommonProps<T>, Omit<SelectAsyncProps<T>, 'loadingMessage'> {\n  loadingMessage?: () => string;\n  noOptionsMessage?: () => string;\n  tooltipContent?: PopoverContent;\n  isDisabled?: boolean;\n  value?: SelectableValue<T>;\n}\n\nexport interface LegacySelectProps<T> extends LegacyCommonProps<T> {\n  tooltipContent?: PopoverContent;\n  noOptionsMessage?: () => string;\n  isDisabled?: boolean;\n  value?: SelectableValue<T>;\n}\n\nexport const MenuList = (props: MenuListProps) => {\n  return (\n    <components.MenuList {...props}>\n      <CustomScrollbar autoHide={false} autoHeightMax=\"inherit\">\n        {props.children}\n      </CustomScrollbar>\n    </components.MenuList>\n  );\n};\nexport class Select<T> extends PureComponent<LegacySelectProps<T>> {\n  declare context: React.ContextType<typeof ThemeContext>;\n  static contextType = ThemeContext;\n\n  static defaultProps: Partial<LegacySelectProps<unknown>> = {\n    className: '',\n    isDisabled: false,\n    isSearchable: true,\n    isClearable: false,\n    isMulti: false,\n    openMenuOnFocus: false,\n    autoFocus: false,\n    isLoading: false,\n    backspaceRemovesValue: true,\n    maxMenuHeight: 300,\n    tabSelectsValue: true,\n    allowCustomValue: false,\n    components: {\n      Option: SelectOption,\n      SingleValue,\n      IndicatorsContainer,\n      MenuList,\n      Group: SelectOptionGroup,\n    },\n  };\n\n  render() {\n    const {\n      defaultValue,\n      getOptionLabel,\n      getOptionValue,\n      onChange,\n      options,\n      placeholder,\n      width,\n      value,\n      className,\n      isDisabled,\n      isLoading,\n      isSearchable,\n      isClearable,\n      backspaceRemovesValue,\n      isMulti,\n      autoFocus,\n      openMenuOnFocus,\n      onBlur,\n      maxMenuHeight,\n      noOptionsMessage,\n      isOpen,\n      components,\n      tooltipContent,\n      tabSelectsValue,\n      onCloseMenu,\n      onOpenMenu,\n      allowCustomValue,\n      formatCreateLabel,\n      'aria-label': ariaLabel,\n    } = this.props;\n\n    let widthClass = '';\n    if (width) {\n      widthClass = 'width-' + width;\n    }\n\n    let SelectComponent = ReactSelect;\n    const creatableOptions: any = {};\n\n    if (allowCustomValue) {\n      SelectComponent = Creatable;\n      creatableOptions.formatCreateLabel = formatCreateLabel ?? ((input: string) => input);\n    }\n\n    const selectClassNames = classNames('gf-form-input', 'gf-form-input--form-dropdown', widthClass, className);\n    const selectComponents = { ...Select.defaultProps.components, ...components };\n    return (\n      <WrapInTooltip onCloseMenu={onCloseMenu} onOpenMenu={onOpenMenu} tooltipContent={tooltipContent} isOpen={isOpen}>\n        {(onOpenMenuInternal, onCloseMenuInternal) => {\n          return (\n            <SelectComponent\n              captureMenuScroll={false}\n              classNamePrefix=\"gf-form-select-box\"\n              className={selectClassNames}\n              components={selectComponents}\n              defaultValue={defaultValue}\n              value={value}\n              getOptionLabel={getOptionLabel}\n              getOptionValue={getOptionValue}\n              menuShouldScrollIntoView={false}\n              isSearchable={isSearchable}\n              onChange={onChange}\n              options={options}\n              placeholder={placeholder || 'Choose'}\n              styles={resetSelectStyles(this.context)}\n              isDisabled={isDisabled}\n              isLoading={isLoading}\n              isClearable={isClearable}\n              autoFocus={autoFocus}\n              onBlur={onBlur}\n              openMenuOnFocus={openMenuOnFocus}\n              maxMenuHeight={maxMenuHeight}\n              noOptionsMessage={noOptionsMessage}\n              isMulti={isMulti}\n              backspaceRemovesValue={backspaceRemovesValue}\n              menuIsOpen={isOpen}\n              onMenuOpen={onOpenMenuInternal}\n              onMenuClose={onCloseMenuInternal}\n              tabSelectsValue={tabSelectsValue}\n              aria-label={ariaLabel}\n              {...creatableOptions}\n            />\n          );\n        }}\n      </WrapInTooltip>\n    );\n  }\n}\n\nexport class AsyncSelect<T> extends PureComponent<AsyncProps<T>> {\n  static contextType = ThemeContext;\n\n  static defaultProps: Partial<AsyncProps<unknown>> = {\n    className: '',\n    components: {},\n    loadingMessage: () => 'Loading...',\n    isDisabled: false,\n    isClearable: false,\n    isMulti: false,\n    isSearchable: true,\n    backspaceRemovesValue: true,\n    autoFocus: false,\n    openMenuOnFocus: false,\n    maxMenuHeight: 300,\n  };\n\n  render() {\n    const {\n      defaultValue,\n      getOptionLabel,\n      getOptionValue,\n      onChange,\n      placeholder,\n      width,\n      value,\n      className,\n      loadOptions,\n      defaultOptions,\n      isLoading,\n      loadingMessage,\n      noOptionsMessage,\n      isDisabled,\n      isSearchable,\n      isClearable,\n      backspaceRemovesValue,\n      autoFocus,\n      onBlur,\n      openMenuOnFocus,\n      maxMenuHeight,\n      isMulti,\n      tooltipContent,\n      onCloseMenu,\n      onOpenMenu,\n      isOpen,\n    } = this.props;\n\n    let widthClass = '';\n    if (width) {\n      widthClass = 'width-' + width;\n    }\n\n    const selectClassNames = classNames('gf-form-input', 'gf-form-input--form-dropdown', widthClass, className);\n\n    return (\n      <WrapInTooltip onCloseMenu={onCloseMenu} onOpenMenu={onOpenMenu} tooltipContent={tooltipContent} isOpen={isOpen}>\n        {(onOpenMenuInternal, onCloseMenuInternal) => {\n          return (\n            <ReactAsyncSelect\n              captureMenuScroll={false}\n              classNamePrefix=\"gf-form-select-box\"\n              className={selectClassNames}\n              components={{\n                Option: SelectOption,\n                SingleValue,\n                IndicatorsContainer,\n                NoOptionsMessage,\n              }}\n              defaultValue={defaultValue}\n              value={value}\n              //@ts-expect-error\n              getOptionLabel={getOptionLabel}\n              getOptionValue={getOptionValue}\n              menuShouldScrollIntoView={false}\n              onChange={onChange}\n              loadOptions={loadOptions}\n              isLoading={isLoading}\n              defaultOptions={defaultOptions}\n              placeholder={placeholder || 'Choose'}\n              //@ts-expect-error\n              styles={resetSelectStyles(this.context)}\n              loadingMessage={loadingMessage}\n              noOptionsMessage={noOptionsMessage}\n              isDisabled={isDisabled}\n              isSearchable={isSearchable}\n              isClearable={isClearable}\n              autoFocus={autoFocus}\n              onBlur={onBlur}\n              openMenuOnFocus={openMenuOnFocus}\n              maxMenuHeight={maxMenuHeight}\n              isMulti={isMulti}\n              backspaceRemovesValue={backspaceRemovesValue}\n            />\n          );\n        }}\n      </WrapInTooltip>\n    );\n  }\n}\n\nexport interface TooltipWrapperProps {\n  children: (onOpenMenu: () => void, onCloseMenu: () => void) => React.ReactNode;\n  onOpenMenu?: () => void;\n  onCloseMenu?: () => void;\n  isOpen?: boolean;\n  tooltipContent?: PopoverContent;\n}\n\nexport interface TooltipWrapperState {\n  isOpenInternal: boolean;\n}\n\nexport class WrapInTooltip extends PureComponent<TooltipWrapperProps, TooltipWrapperState> {\n  state: TooltipWrapperState = {\n    isOpenInternal: false,\n  };\n\n  onOpenMenu = () => {\n    const { onOpenMenu } = this.props;\n    if (onOpenMenu) {\n      onOpenMenu();\n    }\n    this.setState({ isOpenInternal: true });\n  };\n\n  onCloseMenu = () => {\n    const { onCloseMenu } = this.props;\n    if (onCloseMenu) {\n      onCloseMenu();\n    }\n    this.setState({ isOpenInternal: false });\n  };\n\n  render() {\n    const { children, isOpen, tooltipContent } = this.props;\n    const { isOpenInternal } = this.state;\n\n    let showTooltip: boolean | undefined = undefined;\n\n    if (isOpenInternal || isOpen) {\n      showTooltip = false;\n    }\n\n    if (tooltipContent) {\n      return (\n        <Tooltip show={showTooltip} content={tooltipContent} placement=\"bottom\">\n          <div>\n            {/* div needed for tooltip */}\n            {children(this.onOpenMenu, this.onCloseMenu)}\n          </div>\n        </Tooltip>\n      );\n    } else {\n      return <div>{children(this.onOpenMenu, this.onCloseMenu)}</div>;\n    }\n  }\n}\n\nexport default Select;\n","import { Placement } from '@popperjs/core';\nimport { uniqueId } from 'lodash';\nimport React, { PureComponent } from 'react';\n\nimport { Icon } from '../../..';\nimport { Tooltip } from '../../../Tooltip/Tooltip';\n\nexport interface Props {\n  label: string;\n  checked: boolean;\n  disabled?: boolean;\n  className?: string;\n  labelClass?: string;\n  switchClass?: string;\n  tooltip?: string;\n  tooltipPlacement?: Placement;\n  transparent?: boolean;\n  onChange: (event: React.SyntheticEvent<HTMLInputElement>) => void;\n}\n\nexport interface State {\n  id: string;\n}\n\nexport class Switch extends PureComponent<Props, State> {\n  state = {\n    id: uniqueId(),\n  };\n\n  internalOnChange = (event: React.FormEvent<HTMLInputElement>) => {\n    event.stopPropagation();\n    this.props.onChange(event);\n  };\n\n  render() {\n    const {\n      labelClass = '',\n      switchClass = '',\n      label,\n      checked,\n      disabled,\n      transparent,\n      className,\n      tooltip,\n      tooltipPlacement,\n    } = this.props;\n\n    const labelId = this.state.id;\n    const labelClassName = `gf-form-label ${labelClass} ${transparent ? 'gf-form-label--transparent' : ''} pointer`;\n    const switchClassName = `gf-form-switch ${switchClass} ${transparent ? 'gf-form-switch--transparent' : ''}`;\n\n    return (\n      <div className=\"gf-form-switch-container-react\">\n        <label htmlFor={labelId} className={`gf-form gf-form-switch-container ${className || ''}`}>\n          {label && (\n            <div className={labelClassName}>\n              {label}\n              {tooltip && (\n                <Tooltip placement={tooltipPlacement ? tooltipPlacement : 'auto'} content={tooltip} theme={'info'}>\n                  <div className=\"gf-form-help-icon gf-form-help-icon--right-normal\">\n                    <Icon name=\"info-circle\" size=\"sm\" style={{ marginLeft: '10px' }} />\n                  </div>\n                </Tooltip>\n              )}\n            </div>\n          )}\n          <div className={switchClassName}>\n            <input\n              disabled={disabled}\n              id={labelId}\n              type=\"checkbox\"\n              checked={checked}\n              onChange={this.internalOnChange}\n            />\n            <span className=\"gf-form-switch__slider\" />\n          </div>\n        </label>\n      </div>\n    );\n  }\n}\n","import { css, cx } from '@emotion/css';\n\nimport { GrafanaTheme, GrafanaTheme2 } from '@grafana/data';\n\nimport { focusCss } from '../../themes/mixins';\nimport { ComponentSize } from '../../types/size';\n\nexport const getFocusStyle = (theme: GrafanaTheme | GrafanaTheme2) => css`\n  &:focus {\n    ${focusCss(theme)}\n  }\n`;\n\nexport const sharedInputStyle = (theme: GrafanaTheme2, invalid = false) => {\n  const borderColor = invalid ? theme.colors.error.border : theme.components.input.borderColor;\n  const borderColorHover = invalid ? theme.colors.error.shade : theme.components.input.borderHover;\n  const background = theme.components.input.background;\n  const textColor = theme.components.input.text;\n\n  // Cannot use our normal borders for this color for some reason due the alpha values in them.\n  // Need to colors without alpha channel\n  const autoFillBorder = theme.isDark ? '#2e2f35' : '#bab4ca';\n\n  return cx(\n    inputPadding(theme),\n    css`\n      background: ${background};\n      line-height: ${theme.typography.body.lineHeight};\n      font-size: ${theme.typography.size.md};\n      color: ${textColor};\n      border: 1px solid ${borderColor};\n\n      &:-webkit-autofill,\n      &:-webkit-autofill:hover {\n        /* Welcome to 2005. This is a HACK to get rid od Chromes default autofill styling */\n        box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0), inset 0 0 0 100px ${background}!important;\n        -webkit-text-fill-color: ${textColor} !important;\n        border-color: ${autoFillBorder};\n      }\n\n      &:-webkit-autofill:focus {\n        /* Welcome to 2005. This is a HACK to get rid od Chromes default autofill styling */\n        box-shadow: 0 0 0 2px ${theme.colors.background.primary}, 0 0 0px 4px ${theme.colors.primary.main},\n          inset 0 0 0 1px rgba(255, 255, 255, 0), inset 0 0 0 100px ${background}!important;\n        -webkit-text-fill-color: ${textColor} !important;\n      }\n\n      &:hover {\n        border-color: ${borderColorHover};\n      }\n\n      &:focus {\n        outline: none;\n      }\n\n      &:disabled {\n        background-color: ${theme.colors.action.disabledBackground};\n        color: ${theme.colors.action.disabledText};\n        border: 1px solid ${theme.colors.action.disabledBackground};\n\n        &:hover {\n          border-color: ${borderColor};\n        }\n      }\n\n      &::placeholder {\n        color: ${theme.colors.text.disabled};\n        opacity: 1;\n      }\n    `\n  );\n};\n\nexport const inputPadding = (theme: GrafanaTheme2) => {\n  return css`\n    padding: ${theme.spacing(0, 1, 0, 1)};\n  `;\n};\n\nexport const inputSizes = () => {\n  return {\n    sm: css`\n      width: ${inputSizesPixels('sm')};\n    `,\n    md: css`\n      width: ${inputSizesPixels('md')};\n    `,\n    lg: css`\n      width: ${inputSizesPixels('lg')};\n    `,\n    auto: css`\n      width: ${inputSizesPixels('auto')};\n    `,\n  };\n};\n\nexport const inputSizesPixels = (size: string) => {\n  switch (size) {\n    case 'sm':\n      return '200px';\n    case 'md':\n      return '320px';\n    case 'lg':\n      return '580px';\n    case 'auto':\n    default:\n      return 'auto';\n  }\n};\n\nexport function getPropertiesForButtonSize(size: ComponentSize, theme: GrafanaTheme2) {\n  switch (size) {\n    case 'sm':\n      return {\n        padding: 1,\n        fontSize: theme.typography.size.sm,\n        height: theme.components.height.sm,\n      };\n\n    case 'lg':\n      return {\n        padding: 3,\n        fontSize: theme.typography.size.lg,\n        height: theme.components.height.lg,\n      };\n    case 'md':\n    default:\n      return {\n        padding: 2,\n        fontSize: theme.typography.size.md,\n        height: theme.components.height.md,\n      };\n  }\n}\n","import { css, CSSObject, cx } from '@emotion/css';\nimport React, { AnchorHTMLAttributes, ButtonHTMLAttributes } from 'react';\n\nimport { colorManipulator, GrafanaTheme2, ThemeRichColor } from '@grafana/data';\n\nimport { useTheme2 } from '../../themes';\nimport { getFocusStyles, getMouseFocusStyles } from '../../themes/mixins';\nimport { IconName } from '../../types/icon';\nimport { ComponentSize } from '../../types/size';\nimport { getPropertiesForButtonSize } from '../Forms/commonStyles';\nimport { Icon } from '../Icon/Icon';\nimport { PopoverContent, Tooltip, TooltipPlacement } from '../Tooltip';\n\nexport type ButtonVariant = 'primary' | 'secondary' | 'destructive' | 'success';\nexport const allButtonVariants: ButtonVariant[] = ['primary', 'secondary', 'destructive'];\nexport type ButtonFill = 'solid' | 'outline' | 'text';\nexport const allButtonFills: ButtonFill[] = ['solid', 'outline', 'text'];\n\ntype CommonProps = {\n  size?: ComponentSize;\n  variant?: ButtonVariant;\n  fill?: ButtonFill;\n  icon?: IconName;\n  className?: string;\n  children?: React.ReactNode;\n  fullWidth?: boolean;\n  type?: string;\n  /** Tooltip content to display on hover */\n  tooltip?: PopoverContent;\n  /** Position of the tooltip */\n  tooltipPlacement?: TooltipPlacement;\n};\n\nexport type ButtonProps = CommonProps & ButtonHTMLAttributes<HTMLButtonElement>;\n\nexport const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  (\n    {\n      variant = 'primary',\n      size = 'md',\n      fill = 'solid',\n      icon,\n      fullWidth,\n      children,\n      className,\n      type = 'button',\n      tooltip,\n      tooltipPlacement,\n      ...otherProps\n    },\n    ref\n  ) => {\n    const theme = useTheme2();\n    const styles = getButtonStyles({\n      theme,\n      size,\n      variant,\n      fill,\n      fullWidth,\n      iconOnly: !children,\n    });\n\n    const button = (\n      <button className={cx(styles.button, className)} type={type} {...otherProps} ref={ref}>\n        {icon && <Icon name={icon} size={size} className={styles.icon} />}\n        {children && <span className={styles.content}>{children}</span>}\n      </button>\n    );\n\n    if (tooltip) {\n      return (\n        <Tooltip content={tooltip} placement={tooltipPlacement}>\n          {button}\n        </Tooltip>\n      );\n    }\n\n    return button;\n  }\n);\n\nButton.displayName = 'Button';\n\ntype ButtonLinkProps = CommonProps & ButtonHTMLAttributes<HTMLButtonElement> & AnchorHTMLAttributes<HTMLAnchorElement>;\n\nexport const LinkButton = React.forwardRef<HTMLAnchorElement, ButtonLinkProps>(\n  (\n    {\n      variant = 'primary',\n      size = 'md',\n      fill = 'solid',\n      icon,\n      fullWidth,\n      children,\n      className,\n      onBlur,\n      onFocus,\n      disabled,\n      tooltip,\n      tooltipPlacement,\n      ...otherProps\n    },\n    ref\n  ) => {\n    const theme = useTheme2();\n    const styles = getButtonStyles({\n      theme,\n      fullWidth,\n      size,\n      variant,\n      fill,\n      iconOnly: !children,\n    });\n\n    const linkButtonStyles = cx(\n      styles.button,\n      {\n        [css(styles.disabled, {\n          pointerEvents: 'none',\n        })]: disabled,\n      },\n      className\n    );\n\n    const button = (\n      <a className={linkButtonStyles} {...otherProps} tabIndex={disabled ? -1 : 0} ref={ref}>\n        {icon && <Icon name={icon} size={size} className={styles.icon} />}\n        {children && <span className={styles.content}>{children}</span>}\n      </a>\n    );\n\n    if (tooltip) {\n      return (\n        <Tooltip content={tooltip} placement={tooltipPlacement}>\n          {button}\n        </Tooltip>\n      );\n    }\n\n    return button;\n  }\n);\n\nLinkButton.displayName = 'LinkButton';\n\nexport interface StyleProps {\n  size: ComponentSize;\n  variant: ButtonVariant;\n  fill?: ButtonFill;\n  iconOnly?: boolean;\n  theme: GrafanaTheme2;\n  fullWidth?: boolean;\n  narrow?: boolean;\n}\n\nexport const getButtonStyles = (props: StyleProps) => {\n  const { theme, variant, fill = 'solid', size, iconOnly, fullWidth } = props;\n  const { height, padding, fontSize } = getPropertiesForButtonSize(size, theme);\n  const variantStyles = getPropertiesForVariant(theme, variant, fill);\n  const disabledStyles = getPropertiesForDisabled(theme, variant, fill);\n  const focusStyle = getFocusStyles(theme);\n  const paddingMinusBorder = theme.spacing.gridSize * padding - 1;\n\n  return {\n    button: css({\n      label: 'button',\n      display: 'inline-flex',\n      alignItems: 'center',\n      fontSize: fontSize,\n      fontWeight: theme.typography.fontWeightMedium,\n      fontFamily: theme.typography.fontFamily,\n      padding: `0 ${paddingMinusBorder}px`,\n      height: theme.spacing(height),\n      // Deduct border from line-height for perfect vertical centering on windows and linux\n      lineHeight: `${theme.spacing.gridSize * height - 2}px`,\n      verticalAlign: 'middle',\n      cursor: 'pointer',\n      borderRadius: theme.shape.borderRadius(1),\n      '&:focus': focusStyle,\n      '&:focus-visible': focusStyle,\n      '&:focus:not(:focus-visible)': getMouseFocusStyles(theme),\n      ...(fullWidth && {\n        flexGrow: 1,\n        justifyContent: 'center',\n      }),\n      ...variantStyles,\n      ':disabled': disabledStyles,\n      '&[disabled]': disabledStyles,\n    }),\n    disabled: css(disabledStyles),\n    img: css`\n      width: 16px;\n      height: 16px;\n      margin: ${theme.spacing(0, 1, 0, 0.5)};\n    `,\n    icon: iconOnly\n      ? css({\n          // Important not to set margin bottom here as it would override internal icon bottom margin\n          marginRight: theme.spacing(-padding / 2),\n          marginLeft: theme.spacing(-padding / 2),\n        })\n      : css({\n          marginRight: theme.spacing(padding / 2),\n        }),\n    content: css`\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n      white-space: nowrap;\n      height: 100%;\n    `,\n  };\n};\n\nfunction getButtonVariantStyles(theme: GrafanaTheme2, color: ThemeRichColor, fill: ButtonFill): CSSObject {\n  if (fill === 'outline') {\n    return {\n      background: 'transparent',\n      color: color.text,\n      border: `1px solid ${color.border}`,\n      transition: theme.transitions.create(['background-color', 'border-color', 'color'], {\n        duration: theme.transitions.duration.short,\n      }),\n\n      '&:hover': {\n        background: colorManipulator.alpha(color.main, theme.colors.action.hoverOpacity),\n        borderColor: theme.colors.emphasize(color.border, 0.25),\n        color: color.text,\n      },\n    };\n  }\n\n  if (fill === 'text') {\n    return {\n      background: 'transparent',\n      color: color.text,\n      border: '1px solid transparent',\n      transition: theme.transitions.create(['background-color', 'color'], {\n        duration: theme.transitions.duration.short,\n      }),\n\n      '&:focus': {\n        outline: 'none',\n        textDecoration: 'none',\n      },\n\n      '&:hover': {\n        background: colorManipulator.alpha(color.shade, theme.colors.action.hoverOpacity),\n        textDecoration: 'none',\n      },\n    };\n  }\n\n  return {\n    background: color.main,\n    color: color.contrastText,\n    border: `1px solid transparent`,\n    transition: theme.transitions.create(['background-color', 'box-shadow', 'border-color', 'color'], {\n      duration: theme.transitions.duration.short,\n    }),\n\n    '&:hover': {\n      background: color.shade,\n      color: color.contrastText,\n      boxShadow: theme.shadows.z1,\n    },\n  };\n}\n\nfunction getPropertiesForDisabled(theme: GrafanaTheme2, variant: ButtonVariant, fill: ButtonFill) {\n  const disabledStyles: CSSObject = {\n    cursor: 'not-allowed',\n    boxShadow: 'none',\n    color: theme.colors.text.disabled,\n    transition: 'none',\n  };\n\n  if (fill === 'text') {\n    return {\n      ...disabledStyles,\n      background: 'transparent',\n      border: `1px solid transparent`,\n    };\n  }\n\n  if (fill === 'outline') {\n    return {\n      ...disabledStyles,\n      background: 'transparent',\n      border: `1px solid ${theme.colors.action.disabledText}`,\n    };\n  }\n\n  return {\n    ...disabledStyles,\n    background: theme.colors.action.disabledBackground,\n    border: `1px solid transparent`,\n  };\n}\n\nexport function getPropertiesForVariant(theme: GrafanaTheme2, variant: ButtonVariant, fill: ButtonFill) {\n  switch (variant) {\n    case 'secondary':\n      return getButtonVariantStyles(theme, theme.colors.secondary, fill);\n\n    case 'destructive':\n      return getButtonVariantStyles(theme, theme.colors.error, fill);\n\n    case 'success':\n      return getButtonVariantStyles(theme, theme.colors.success, fill);\n\n    case 'primary':\n    default:\n      return getButtonVariantStyles(theme, theme.colors.primary, fill);\n  }\n}\n\nexport const clearButtonStyles = (theme: GrafanaTheme2) => {\n  return css`\n    background: transparent;\n    color: ${theme.colors.text.primary};\n    border: none;\n    padding: 0;\n  `;\n};\n\nexport const clearLinkButtonStyles = (theme: GrafanaTheme2) => {\n  return css`\n    background: transparent;\n    border: none;\n    padding: 0;\n    font-family: inherit;\n    color: inherit;\n    height: 100%;\n    &:hover {\n      background: transparent;\n      color: inherit;\n    }\n  `;\n};\n","import { css, cx } from '@emotion/css';\nimport { omit } from 'lodash';\nimport React, { InputHTMLAttributes } from 'react';\n\nimport { Button } from '../Button/Button';\nimport { FormField } from '../FormField/FormField';\nimport { PopoverContent } from '../Tooltip';\n\nexport interface Props extends Omit<InputHTMLAttributes<HTMLInputElement>, 'onReset'> {\n  // Function to use when reset is clicked. Means you have to reset the input value yourself as this is  uncontrolled\n  // component (or do something else if required).\n  onReset: (event: React.SyntheticEvent<HTMLButtonElement>) => void;\n  isConfigured: boolean;\n\n  label?: string;\n  tooltip?: PopoverContent;\n  labelWidth?: number;\n  inputWidth?: number;\n  // Placeholder of the input field when in non configured state.\n  placeholder?: string;\n  interactive?: boolean;\n}\n\nconst getSecretFormFieldStyles = () => {\n  return {\n    noRadiusInput: css`\n      border-bottom-right-radius: 0 !important;\n      border-top-right-radius: 0 !important;\n    `,\n    noRadiusButton: css`\n      border-bottom-left-radius: 0 !important;\n      border-top-left-radius: 0 !important;\n    `,\n  };\n};\n/**\n * Form field that has 2 states configured and not configured. If configured it will not show its contents and adds\n * a reset button that will clear the input and makes it accessible. In non configured state it behaves like normal\n * form field. This is used for passwords or anything that is encrypted on the server and is later returned encrypted\n * to the user (like datasource passwords).\n */\nexport const SecretFormField = ({\n  label = 'Password',\n  labelWidth,\n  inputWidth = 12,\n  onReset,\n  isConfigured,\n  tooltip,\n  placeholder = 'Password',\n  interactive,\n  ...inputProps\n}: Props) => {\n  const styles = getSecretFormFieldStyles();\n  return (\n    <FormField\n      label={label!}\n      tooltip={tooltip}\n      interactive={interactive}\n      labelWidth={labelWidth}\n      inputEl={\n        isConfigured ? (\n          <>\n            <input\n              type=\"text\"\n              className={cx(`gf-form-input width-${inputWidth}`, styles.noRadiusInput)}\n              disabled={true}\n              value=\"configured\"\n              {...omit(inputProps, 'value')}\n            />\n            <Button onClick={onReset} variant=\"secondary\" type=\"button\">\n              Reset\n            </Button>\n          </>\n        ) : (\n          <input\n            type=\"password\"\n            className={`gf-form-input width-${inputWidth}`}\n            placeholder={placeholder}\n            {...inputProps}\n          />\n        )\n      }\n    />\n  );\n};\n\nSecretFormField.displayName = 'SecretFormField';\n","import { css, cx } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2, colorManipulator } from '@grafana/data';\n\nimport { useTheme2 } from '../../themes/ThemeContext';\nimport { getFocusStyles, getMouseFocusStyles } from '../../themes/mixins';\nimport { stylesFactory } from '../../themes/stylesFactory';\nimport { IconName, IconSize, IconType } from '../../types/icon';\nimport { Icon } from '../Icon/Icon';\nimport { getSvgSize } from '../Icon/utils';\nimport { TooltipPlacement, PopoverContent, Tooltip } from '../Tooltip';\n\nexport type IconButtonVariant = 'primary' | 'secondary' | 'destructive';\n\nexport interface Props extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  /** Name of the icon **/\n  name: IconName;\n  /** Icon size */\n  size?: IconSize;\n  /** Type of the icon - mono or default */\n  iconType?: IconType;\n  /** Tooltip content to display on hover */\n  tooltip?: PopoverContent;\n  /** Position of the tooltip */\n  tooltipPlacement?: TooltipPlacement;\n  /** Variant to change the color of the Icon */\n  variant?: IconButtonVariant;\n  /** Text avilable ony for screenscreen readers. Will use tooltip text as fallback. */\n  ariaLabel?: string;\n}\n\nexport const IconButton = React.forwardRef<HTMLButtonElement, Props>(\n  (\n    {\n      name,\n      size = 'md',\n      iconType,\n      tooltip,\n      tooltipPlacement,\n      ariaLabel,\n      className,\n      variant = 'secondary',\n      ...restProps\n    },\n    ref\n  ) => {\n    const theme = useTheme2();\n    const styles = getStyles(theme, size, variant);\n    const tooltipString = typeof tooltip === 'string' ? tooltip : '';\n\n    const button = (\n      <button ref={ref} aria-label={ariaLabel || tooltipString} {...restProps} className={cx(styles.button, className)}>\n        <Icon name={name} size={size} className={styles.icon} type={iconType} />\n      </button>\n    );\n\n    if (tooltip) {\n      return (\n        <Tooltip content={tooltip} placement={tooltipPlacement}>\n          {button}\n        </Tooltip>\n      );\n    }\n\n    return button;\n  }\n);\n\nIconButton.displayName = 'IconButton';\n\nconst getStyles = stylesFactory((theme: GrafanaTheme2, size: IconSize, variant: IconButtonVariant) => {\n  const pixelSize = getSvgSize(size);\n  const hoverSize = Math.max(pixelSize / 3, 8);\n  let iconColor = theme.colors.text.primary;\n\n  if (variant === 'primary') {\n    iconColor = theme.colors.primary.text;\n  } else if (variant === 'destructive') {\n    iconColor = theme.colors.error.text;\n  }\n\n  return {\n    button: css`\n      width: ${pixelSize}px;\n      height: ${pixelSize}px;\n      background: transparent;\n      border: none;\n      color: ${iconColor};\n      padding: 0;\n      margin: 0;\n      outline: none;\n      box-shadow: none;\n      display: inline-flex;\n      align-items: center;\n      justify-content: center;\n      position: relative;\n      border-radius: ${theme.shape.borderRadius()};\n      z-index: 0;\n      margin-right: ${theme.spacing(0.5)};\n\n      &[disabled],\n      &:disabled {\n        cursor: not-allowed;\n        color: ${theme.colors.action.disabledText};\n        opacity: 0.65;\n        box-shadow: none;\n      }\n\n      &:before {\n        content: '';\n        display: block;\n        opacity: 1;\n        position: absolute;\n        transition-duration: 0.2s;\n        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n        z-index: -1;\n        bottom: -${hoverSize}px;\n        left: -${hoverSize}px;\n        right: -${hoverSize}px;\n        top: -${hoverSize}px;\n        background: none;\n        border-radius: 50%;\n        box-sizing: border-box;\n        transform: scale(0);\n        transition-property: transform, opacity;\n      }\n\n      &:focus,\n      &:focus-visible {\n        ${getFocusStyles(theme)}\n      }\n\n      &:focus:not(:focus-visible) {\n        ${getMouseFocusStyles(theme)}\n      }\n\n      &:hover {\n        color: ${iconColor};\n\n        &:before {\n          background-color: ${variant === 'secondary'\n            ? theme.colors.action.hover\n            : colorManipulator.alpha(iconColor, 0.12)};\n          border: none;\n          box-shadow: none;\n          opacity: 1;\n          transform: scale(0.8);\n        }\n      }\n    `,\n    icon: css`\n      vertical-align: baseline;\n      display: flex;\n    `,\n  };\n});\n","import { css, cx } from '@emotion/css';\nimport React, { forwardRef, HTMLAttributes } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\n\nexport interface Props extends HTMLAttributes<HTMLDivElement> {\n  className?: string;\n}\n\nexport const ButtonGroup = forwardRef<HTMLDivElement, Props>(({ className, children, ...rest }, ref) => {\n  const styles = useStyles2(getStyles);\n\n  return (\n    <div ref={ref} className={cx('button-group', styles.wrapper, className)} {...rest}>\n      {children}\n    </div>\n  );\n});\n\nButtonGroup.displayName = 'ButtonGroup';\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  wrapper: css`\n    display: flex;\n\n    > .button-group:not(:first-child) > button,\n    > button:not(:first-child) {\n      border-top-left-radius: 0;\n      border-bottom-left-radius: 0;\n    }\n\n    > .button-group:not(:last-child) > button,\n    > button:not(:last-child) {\n      border-top-right-radius: 0;\n      border-bottom-right-radius: 0;\n      border-right-width: 0;\n    }\n  `,\n});\n","import { cx, css } from '@emotion/css';\nimport React, { PureComponent, SyntheticEvent } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { stylesFactory, withTheme2 } from '../../themes';\nimport { Themeable2 } from '../../types';\nimport { ComponentSize } from '../../types/size';\nimport { Button, ButtonVariant } from '../Button';\n\nexport interface Props extends Themeable2 {\n  /** Confirm action callback */\n  onConfirm(): void;\n  /** Custom button styles */\n  className?: string;\n  /** Button size */\n  size?: ComponentSize;\n  /** Text for the Confirm button */\n  confirmText?: string;\n  /** Disable button click action */\n  disabled?: boolean;\n  /** Variant of the Confirm button */\n  confirmVariant?: ButtonVariant;\n  /** Hide confirm actions when after of them is clicked */\n  closeOnConfirm?: boolean;\n  /** Move focus to button when mounted */\n  autoFocus?: boolean;\n\n  /** Optional on click handler for the original button */\n  onClick?(): void;\n  /** Callback for the cancel action */\n  onCancel?(): void;\n}\n\ninterface State {\n  showConfirm: boolean;\n}\n\nclass UnThemedConfirmButton extends PureComponent<React.PropsWithChildren<Props>, State> {\n  mainButtonRef = React.createRef<HTMLButtonElement>();\n  confirmButtonRef = React.createRef<HTMLButtonElement>();\n  state: State = {\n    showConfirm: false,\n  };\n\n  onClickButton = (event: SyntheticEvent) => {\n    if (event) {\n      event.preventDefault();\n    }\n\n    this.setState(\n      {\n        showConfirm: true,\n      },\n      () => {\n        if (this.props.autoFocus && this.confirmButtonRef.current) {\n          this.confirmButtonRef.current.focus();\n        }\n      }\n    );\n\n    if (this.props.onClick) {\n      this.props.onClick();\n    }\n  };\n\n  onClickCancel = (event: SyntheticEvent) => {\n    if (event) {\n      event.preventDefault();\n    }\n    this.setState(\n      {\n        showConfirm: false,\n      },\n      () => {\n        this.mainButtonRef.current?.focus();\n      }\n    );\n    if (this.props.onCancel) {\n      this.props.onCancel();\n    }\n  };\n  onConfirm = (event: SyntheticEvent) => {\n    if (event) {\n      event.preventDefault();\n    }\n    this.props.onConfirm();\n    if (this.props.closeOnConfirm) {\n      this.setState({\n        showConfirm: false,\n      });\n    }\n  };\n\n  render() {\n    const {\n      theme,\n      className,\n      size,\n      disabled,\n      confirmText,\n      confirmVariant: confirmButtonVariant,\n      children,\n    } = this.props;\n    const styles = getStyles(theme);\n    const buttonClass = cx(\n      className,\n      this.state.showConfirm ? styles.buttonHide : styles.buttonShow,\n      disabled && styles.buttonDisabled\n    );\n    const confirmButtonClass = cx(\n      styles.confirmButton,\n      this.state.showConfirm ? styles.confirmButtonShow : styles.confirmButtonHide\n    );\n\n    const onClick = disabled ? () => {} : this.onClickButton;\n\n    return (\n      <span className={styles.buttonContainer}>\n        <div className={cx(disabled && styles.disabled)}>\n          {typeof children === 'string' ? (\n            <span className={buttonClass}>\n              <Button size={size} fill=\"text\" onClick={onClick} ref={this.mainButtonRef}>\n                {children}\n              </Button>\n            </span>\n          ) : (\n            <span className={buttonClass} onClick={onClick}>\n              {children}\n            </span>\n          )}\n        </div>\n        <span className={confirmButtonClass}>\n          <Button size={size} variant={confirmButtonVariant} onClick={this.onConfirm} ref={this.confirmButtonRef}>\n            {confirmText}\n          </Button>\n          <Button size={size} fill=\"text\" onClick={this.onClickCancel}>\n            Cancel\n          </Button>\n        </span>\n      </span>\n    );\n  }\n}\n\nexport const ConfirmButton = withTheme2(UnThemedConfirmButton);\n\nconst getStyles = stylesFactory((theme: GrafanaTheme2) => {\n  return {\n    buttonContainer: css`\n      display: flex;\n      align-items: center;\n      justify-content: flex-end;\n    `,\n    buttonDisabled: css`\n      text-decoration: none;\n      color: ${theme.colors.text.primary};\n      opacity: 0.65;\n      pointer-events: none;\n    `,\n    buttonShow: css`\n      opacity: 1;\n      transition: opacity 0.1s ease;\n      z-index: 2;\n    `,\n    buttonHide: css`\n      opacity: 0;\n      transition: opacity 0.1s ease, visibility 0 0.1s;\n      visibility: hidden;\n      z-index: 0;\n    `,\n    confirmButton: css`\n      align-items: flex-start;\n      background: ${theme.colors.background.primary};\n      display: flex;\n      position: absolute;\n      pointer-events: none;\n    `,\n    confirmButtonShow: css`\n      z-index: 1;\n      opacity: 1;\n      transition: opacity 0.08s ease-out, transform 0.1s ease-out;\n      transform: translateX(0);\n      pointer-events: all;\n    `,\n    confirmButtonHide: css`\n      opacity: 0;\n      visibility: hidden;\n      transition: opacity 0.12s ease-in, transform 0.14s ease-in, visibility 0s 0.12s;\n      transform: translateX(100px);\n    `,\n    disabled: css`\n      cursor: not-allowed;\n    `,\n  };\n});\n\n// Declare defaultProps directly on the themed component so they are displayed\n// in the props table\nConfirmButton.defaultProps = {\n  size: 'md',\n  confirmText: 'Save',\n  disabled: false,\n  confirmVariant: 'primary',\n};\nConfirmButton.displayName = 'ConfirmButton';\n","import React from 'react';\n\nimport { ComponentSize } from '../../types/size';\nimport { Button } from '../Button';\n\nimport { ConfirmButton } from './ConfirmButton';\n\nexport interface Props {\n  /** Confirm action callback */\n  onConfirm(): void;\n  /** Button size */\n  size?: ComponentSize;\n  /** Disable button click action */\n  disabled?: boolean;\n  'aria-label'?: string;\n  /** Close after delete button is clicked */\n  closeOnConfirm?: boolean;\n}\n\nexport const DeleteButton = ({ size, disabled, onConfirm, 'aria-label': ariaLabel, closeOnConfirm }: Props) => {\n  return (\n    <ConfirmButton\n      confirmText=\"Delete\"\n      confirmVariant=\"destructive\"\n      size={size || 'md'}\n      disabled={disabled}\n      onConfirm={onConfirm}\n      closeOnConfirm={closeOnConfirm}\n    >\n      <Button aria-label={ariaLabel} variant=\"destructive\" icon=\"times\" size={size || 'sm'} />\n    </ConfirmButton>\n  );\n};\n","﻿import { Placement, VirtualElement } from '@popperjs/core';\nimport React, { PureComponent } from 'react';\nimport { Manager, Popper as ReactPopper, PopperArrowProps } from 'react-popper';\nimport Transition from 'react-transition-group/Transition';\n\nimport { Portal } from '../Portal/Portal';\n\nimport { PopoverContent } from './types';\n\nconst defaultTransitionStyles = {\n  transitionProperty: 'opacity',\n  transitionDuration: '200ms',\n  transitionTimingFunction: 'linear',\n  opacity: 0,\n};\n\nconst transitionStyles: { [key: string]: object } = {\n  exited: { opacity: 0 },\n  entering: { opacity: 0 },\n  entered: { opacity: 1, transitionDelay: '0s' },\n  exiting: { opacity: 0, transitionDelay: '500ms' },\n};\n\nexport type RenderPopperArrowFn = (props: { arrowProps: PopperArrowProps; placement: string }) => JSX.Element;\n\ninterface Props extends React.HTMLAttributes<HTMLDivElement> {\n  show: boolean;\n  placement?: Placement;\n  content: PopoverContent;\n  referenceElement: HTMLElement | VirtualElement;\n  wrapperClassName?: string;\n  renderArrow?: RenderPopperArrowFn;\n}\n\nclass Popover extends PureComponent<Props> {\n  render() {\n    const {\n      content,\n      show,\n      placement,\n      onMouseEnter,\n      onMouseLeave,\n      className,\n      wrapperClassName,\n      renderArrow,\n      referenceElement,\n      onKeyDown,\n    } = this.props;\n\n    return (\n      <Manager>\n        <Transition in={show} timeout={100} mountOnEnter={true} unmountOnExit={true}>\n          {(transitionState) => {\n            return (\n              <Portal>\n                <ReactPopper\n                  placement={placement}\n                  referenceElement={referenceElement}\n                  modifiers={[\n                    { name: 'preventOverflow', enabled: true, options: { rootBoundary: 'viewport' } },\n                    {\n                      name: 'eventListeners',\n                      options: { scroll: true, resize: true },\n                    },\n                  ]}\n                >\n                  {({ ref, style, placement, arrowProps, update }) => {\n                    return (\n                      <div\n                        onMouseEnter={onMouseEnter}\n                        onMouseLeave={onMouseLeave}\n                        onKeyDown={onKeyDown}\n                        ref={ref}\n                        style={{\n                          ...style,\n                          ...defaultTransitionStyles,\n                          ...transitionStyles[transitionState],\n                        }}\n                        data-placement={placement}\n                        className={`${wrapperClassName}`}\n                      >\n                        <div className={className}>\n                          {typeof content === 'string' && content}\n                          {React.isValidElement(content) && React.cloneElement(content)}\n                          {typeof content === 'function' &&\n                            content({\n                              updatePopperPosition: update,\n                            })}\n                          {renderArrow &&\n                            renderArrow({\n                              arrowProps,\n                              placement,\n                            })}\n                        </div>\n                      </div>\n                    );\n                  }}\n                </ReactPopper>\n              </Portal>\n            );\n          }}\n        </Transition>\n      </Manager>\n    );\n  }\n}\n\nexport { Popover };\n","import { Placement } from '@popperjs/core';\nimport React, { useCallback, useEffect, useRef } from 'react';\nimport { usePopperTooltip } from 'react-popper-tooltip';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes/ThemeContext';\nimport { buildTooltipTheme } from '../../utils/tooltipUtils';\nimport { IconButton } from '../IconButton/IconButton';\nimport { Portal } from '../Portal/Portal';\n\nimport { ToggletipContent } from './types';\n\nexport interface ToggletipProps {\n  /** The theme used to display the toggletip */\n  theme?: 'info' | 'error';\n  /** The title to be displayed on the header */\n  title?: JSX.Element | string;\n  /** determine whether to show or not the close button **/\n  closeButton?: boolean;\n  /** Callback function to be called when the toggletip is closed */\n  onClose?: Function;\n  /** The preferred placement of the toggletip */\n  placement?: Placement;\n  /** The text or component that houses the content of the toggleltip */\n  content: ToggletipContent;\n  /** The text or component to be displayed on the toggletip's bottom */\n  footer?: JSX.Element | string;\n  /** The UI control users interact with to display toggletips */\n  children: JSX.Element;\n}\n\nexport const Toggletip = React.memo(\n  ({\n    children,\n    theme = 'info',\n    placement = 'auto',\n    content,\n    title,\n    closeButton = true,\n    onClose,\n    footer,\n  }: ToggletipProps) => {\n    const styles = useStyles2(getStyles);\n    const style = styles[theme];\n    const contentRef = useRef(null);\n    const [controlledVisible, setControlledVisible] = React.useState(false);\n\n    const closeToggletip = useCallback(() => {\n      setControlledVisible(false);\n      onClose?.();\n    }, [onClose]);\n\n    useEffect(() => {\n      if (controlledVisible) {\n        const handleKeyDown = (enterKey: KeyboardEvent) => {\n          if (enterKey.key === 'Escape') {\n            closeToggletip();\n          }\n        };\n        document.addEventListener('keydown', handleKeyDown);\n        return () => {\n          document.removeEventListener('keydown', handleKeyDown);\n        };\n      }\n      return;\n    }, [controlledVisible, closeToggletip]);\n\n    const { getArrowProps, getTooltipProps, setTooltipRef, setTriggerRef, visible, update } = usePopperTooltip({\n      visible: controlledVisible,\n      placement: placement,\n      interactive: true,\n      offset: [0, 8],\n      trigger: 'click',\n      onVisibleChange: (value: boolean) => {\n        setControlledVisible(value);\n        if (!value) {\n          onClose?.();\n        }\n      },\n    });\n\n    return (\n      <>\n        {React.cloneElement(children, {\n          ref: setTriggerRef,\n          tabIndex: 0,\n        })}\n        {visible && (\n          <Portal>\n            <div\n              data-testid=\"toggletip-content\"\n              ref={setTooltipRef}\n              {...getTooltipProps({ className: style.container })}\n            >\n              {Boolean(title) && <div className={style.header}>{title}</div>}\n              {closeButton && (\n                <div className={style.headerClose}>\n                  <IconButton\n                    aria-label=\"Close Toggletip\"\n                    name=\"times\"\n                    size=\"md\"\n                    data-testid=\"toggletip-header-close\"\n                    onClick={closeToggletip}\n                  />\n                </div>\n              )}\n              <div ref={contentRef} {...getArrowProps({ className: style.arrow })} />\n              <div className={style.body}>\n                {(typeof content === 'string' || React.isValidElement(content)) && content}\n                {typeof content === 'function' && update && content({ update })}\n              </div>\n              {Boolean(footer) && <div className={style.footer}>{footer}</div>}\n            </div>\n          </Portal>\n        )}\n      </>\n    );\n  }\n);\n\nToggletip.displayName = 'Toggletip';\n\nexport const getStyles = (theme: GrafanaTheme2) => {\n  const info = buildTooltipTheme(\n    theme,\n    theme.components.tooltip.background,\n    theme.components.tooltip.background,\n    theme.components.tooltip.text,\n    { topBottom: 3, rightLeft: 3 }\n  );\n  const error = buildTooltipTheme(\n    theme,\n    theme.colors.error.main,\n    theme.colors.error.main,\n    theme.colors.error.contrastText,\n    { topBottom: 3, rightLeft: 3 }\n  );\n\n  return {\n    info,\n    error,\n  };\n};\n","import { css } from '@emotion/css';\nimport React, { useState } from 'react';\n\nimport { SelectableValue, GrafanaTheme2 } from '@grafana/data';\n\nimport { IconName, TabsBar, Tab, IconButton, CustomScrollbar, TabContent } from '../..';\nimport { stylesFactory, useTheme2 } from '../../themes';\n\nexport interface TabConfig {\n  label: string;\n  value: string;\n  content: React.ReactNode;\n  icon: IconName;\n}\n\nexport interface TabbedContainerProps {\n  tabs: TabConfig[];\n  defaultTab?: string;\n  closeIconTooltip?: string;\n  onClose: () => void;\n}\n\nconst getStyles = stylesFactory((theme: GrafanaTheme2) => {\n  return {\n    container: css`\n      height: 100%;\n    `,\n    tabContent: css`\n      padding: ${theme.spacing(2)};\n      background-color: ${theme.colors.background.primary};\n      height: calc(100% - ${theme.components.menuTabs.height}px);\n    `,\n    close: css`\n      position: absolute;\n      right: 16px;\n      top: 5px;\n      cursor: pointer;\n      font-size: ${theme.typography.size.lg};\n    `,\n    tabs: css`\n      padding-top: ${theme.spacing(1)};\n      border-color: ${theme.colors.border.weak};\n      ul {\n        margin-left: ${theme.spacing(2)};\n      }\n    `,\n  };\n});\n\nexport function TabbedContainer(props: TabbedContainerProps) {\n  const [activeTab, setActiveTab] = useState(\n    props.tabs.some((tab) => tab.value === props.defaultTab) ? props.defaultTab : props.tabs?.[0].value\n  );\n\n  const onSelectTab = (item: SelectableValue<string>) => {\n    setActiveTab(item.value!);\n  };\n\n  const { tabs, onClose, closeIconTooltip } = props;\n  const theme = useTheme2();\n  const styles = getStyles(theme);\n\n  return (\n    <div className={styles.container}>\n      <TabsBar className={styles.tabs}>\n        {tabs.map((t) => (\n          <Tab\n            key={t.value}\n            label={t.label}\n            active={t.value === activeTab}\n            onChangeTab={() => onSelectTab(t)}\n            icon={t.icon}\n          />\n        ))}\n        <IconButton className={styles.close} onClick={onClose} name=\"times\" title={closeIconTooltip ?? 'Close'} />\n      </TabsBar>\n      <CustomScrollbar autoHeightMin=\"100%\">\n        <TabContent className={styles.tabContent}>{tabs.find((t) => t.value === activeTab)?.content}</TabContent>\n      </CustomScrollbar>\n    </div>\n  );\n}\n","import i18next from 'i18next';\nimport React from 'react';\nimport { Trans as I18NextTrans, initReactI18next } from 'react-i18next'; // eslint-disable-line no-restricted-imports\n\n// We want to translate grafana-ui without introducing any breaking changes for consumers\n// who use grafana-ui outside of grafana (such as grafana.com self serve). The other struggle\n// is that grafana-ui does not require a top-level provider component, so we don't get the\n// chance to do the mandatory i18next setup that <Trans /> and t() requires\n//\n// We wrap <Trans /> and t() and do a simple check if it hasn't already been set up\n// (Grafana will init i18next in app.ts), and just set it up with a minimal config\n// to use the default phrases in the source jsx.\n\n// Creates a default, english i18next instance when running outside of grafana.\n// we don't support changing the locale of grafana ui when outside of Grafana\nfunction initI18n() {\n  if (!i18next.options.lng) {\n    i18next.use(initReactI18next).init({\n      resources: {},\n      returnEmptyString: false,\n      lng: 'en-US', // this should be the locale of the phrases in our source JSX\n    });\n  }\n}\n\nexport const Trans: typeof I18NextTrans = (props) => {\n  initI18n();\n  return <I18NextTrans {...props} />;\n};\n\n// Reassign t() so i18next-parser doesn't warn on dynamic key, and we can have 'failOnWarnings' enabled\nconst tFunc = i18next.t;\n\nexport const t = (id: string, defaultMessage: string, values?: Record<string, unknown>) => {\n  initI18n();\n\n  return tFunc(id, defaultMessage, values);\n};\n","import { css, cx, keyframes } from '@emotion/css';\nimport { BasePlacement } from '@popperjs/core';\nimport React, { useState } from 'react';\nimport { usePopper } from 'react-popper';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\nimport { IconName } from '../../types';\nimport { Icon } from '../Icon/Icon';\nimport { Portal } from '../Portal/Portal';\n\nexport interface InlineToastProps {\n  children: React.ReactNode;\n  suffixIcon?: IconName;\n  referenceElement: HTMLElement | null;\n  placement: BasePlacement;\n}\n\nexport function InlineToast({ referenceElement, children, suffixIcon, placement }: InlineToastProps) {\n  const [indicatorElement, setIndicatorElement] = useState<HTMLElement | null>(null);\n  const popper = usePopper(referenceElement, indicatorElement, { placement });\n  const styles = useStyles2(getStyles);\n  const placementStyles = useStyles2(getPlacementStyles);\n\n  return (\n    <Portal>\n      <div\n        style={{ display: 'inline-block', ...popper.styles.popper }}\n        {...popper.attributes.popper}\n        ref={setIndicatorElement}\n      >\n        <span className={cx(styles.root, placementStyles[placement])}>\n          {children && <span>{children}</span>}\n          {suffixIcon && <Icon name={suffixIcon} />}\n        </span>\n      </div>\n    </Portal>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    root: css({\n      ...theme.typography.bodySmall,\n      willChange: 'transform',\n      background: theme.components.tooltip.background,\n      color: theme.components.tooltip.text,\n      padding: theme.spacing(0.5, 1.5), // get's an extra .5 of vertical padding to account for the rounded corners\n      borderRadius: 100, // just a sufficiently large value to ensure ends are completely rounded\n      display: 'inline-flex',\n      gap: theme.spacing(0.5),\n      alignItems: 'center',\n    }),\n  };\n};\n\nconst createAnimation = (fromX: string | number, fromY: string | number) =>\n  keyframes({\n    from: {\n      opacity: 0,\n      transform: `translate(${fromX}, ${fromY})`,\n    },\n\n    to: {\n      opacity: 1,\n      transform: 'translate(0, 0px)',\n    },\n  });\n\nconst getPlacementStyles = (theme: GrafanaTheme2): Record<InlineToastProps['placement'], string> => {\n  const gap = 1;\n\n  const placementTopAnimation = createAnimation(0, theme.spacing(gap));\n  const placementBottomAnimation = createAnimation(0, theme.spacing(gap * -1));\n  const placementLeftAnimation = createAnimation(theme.spacing(gap), 0);\n  const placementRightAnimation = createAnimation(theme.spacing(gap * -1), 0);\n\n  return {\n    top: css({\n      marginBottom: theme.spacing(gap),\n      animation: `${placementTopAnimation} ease-out 100ms`,\n    }),\n    bottom: css({\n      marginTop: theme.spacing(gap),\n      animation: `${placementBottomAnimation} ease-out 100ms`,\n    }),\n    left: css({\n      marginRight: theme.spacing(gap),\n      animation: `${placementLeftAnimation} ease-out 100ms`,\n    }),\n    right: css({\n      marginLeft: theme.spacing(gap),\n      animation: `${placementRightAnimation} ease-out 100ms`,\n    }),\n  };\n};\n","import { css, cx } from '@emotion/css';\nimport React, { useCallback, useRef, useState, useEffect } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { Trans } from '../../../src/utils/i18n';\nimport { useStyles2 } from '../../themes';\nimport { Button, ButtonProps } from '../Button';\nimport { Icon } from '../Icon/Icon';\nimport { InlineToast } from '../InlineToast/InlineToast';\n\nexport interface Props extends ButtonProps {\n  /** A function that returns text to be copied */\n  getText(): string;\n  /** Callback when the text has been successfully copied */\n  onClipboardCopy?(copiedText: string): void;\n  /** Callback when there was an error copying the text */\n  onClipboardError?(copiedText: string, error: unknown): void;\n}\n\nconst SHOW_SUCCESS_DURATION = 2 * 1000;\n\nexport function ClipboardButton({\n  onClipboardCopy,\n  onClipboardError,\n  children,\n  getText,\n  icon,\n  variant,\n  ...buttonProps\n}: Props) {\n  const styles = useStyles2(getStyles);\n  const [showCopySuccess, setShowCopySuccess] = useState(false);\n\n  useEffect(() => {\n    let timeoutId: ReturnType<typeof setTimeout>;\n\n    if (showCopySuccess) {\n      timeoutId = setTimeout(() => {\n        setShowCopySuccess(false);\n      }, SHOW_SUCCESS_DURATION);\n    }\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [showCopySuccess]);\n\n  const buttonRef = useRef<null | HTMLButtonElement>(null);\n  const copyTextCallback = useCallback(async () => {\n    const textToCopy = getText();\n\n    try {\n      await copyText(textToCopy, buttonRef);\n      setShowCopySuccess(true);\n      onClipboardCopy?.(textToCopy);\n    } catch (e) {\n      onClipboardError?.(textToCopy, e);\n    }\n  }, [getText, onClipboardCopy, onClipboardError]);\n\n  return (\n    <>\n      {showCopySuccess && (\n        <InlineToast placement=\"top\" referenceElement={buttonRef.current}>\n          <Trans i18nKey=\"clipboard-button.inline-toast.success\">Copied</Trans>\n        </InlineToast>\n      )}\n\n      <Button\n        onClick={copyTextCallback}\n        icon={icon}\n        variant={showCopySuccess ? 'success' : variant}\n        aria-label={showCopySuccess ? 'Copied' : undefined}\n        {...buttonProps}\n        className={cx(styles.button, showCopySuccess && styles.successButton)}\n        ref={buttonRef}\n      >\n        {children}\n\n        {showCopySuccess && (\n          <div className={styles.successOverlay}>\n            <Icon name=\"check\" />\n          </div>\n        )}\n      </Button>\n    </>\n  );\n}\n\nconst copyText = async (text: string, buttonRef: React.MutableRefObject<HTMLButtonElement | null>) => {\n  if (navigator.clipboard && window.isSecureContext) {\n    return navigator.clipboard.writeText(text);\n  } else {\n    // Use a fallback method for browsers/contexts that don't support the Clipboard API.\n    // See https://web.dev/async-clipboard/#feature-detection.\n    // Use textarea so the user can copy multi-line content.\n    const textarea = document.createElement('textarea');\n    // Normally we'd append this to the body. However if we're inside a focus manager\n    // from react-aria, we can't focus anything outside of the managed area.\n    // Instead, let's append it to the button. Then we're guaranteed to be able to focus + copy.\n    buttonRef.current?.appendChild(textarea);\n    textarea.value = text;\n    textarea.focus();\n    textarea.select();\n    document.execCommand('copy');\n    textarea.remove();\n  }\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    button: css({\n      position: 'relative',\n    }),\n    successButton: css({\n      '> *': css({\n        visibility: 'hidden',\n      }),\n    }),\n    successOverlay: css({\n      position: 'absolute',\n      top: 0,\n      bottom: 0,\n      right: 0,\n      left: 0,\n      visibility: 'visible', // re-visible the overlay\n    }),\n  };\n};\n","import { css, cx } from '@emotion/css';\nimport React, { HTMLProps, ReactNode } from 'react';\nimport useMeasure from 'react-use/lib/useMeasure';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { stylesFactory, useTheme2 } from '../../themes';\nimport { getFocusStyle, sharedInputStyle } from '../Forms/commonStyles';\nimport { Spinner } from '../Spinner/Spinner';\n\nexport interface Props extends Omit<HTMLProps<HTMLInputElement>, 'prefix' | 'size'> {\n  /** Sets the width to a multiple of 8px. Should only be used with inline forms. Setting width of the container is preferred in other cases.*/\n  width?: number;\n  /** Show an invalid state around the input */\n  invalid?: boolean;\n  /** Show an icon as a prefix in the input */\n  prefix?: ReactNode;\n  /** Show an icon as a suffix in the input */\n  suffix?: ReactNode;\n  /** Show a loading indicator as a suffix in the input */\n  loading?: boolean;\n  /** Add a component as an addon before the input  */\n  addonBefore?: ReactNode;\n  /** Add a component as an addon after the input */\n  addonAfter?: ReactNode;\n}\n\ninterface StyleDeps {\n  theme: GrafanaTheme2;\n  invalid?: boolean;\n  width?: number;\n}\n\nexport const Input = React.forwardRef<HTMLInputElement, Props>((props, ref) => {\n  const { className, addonAfter, addonBefore, prefix, suffix, invalid, loading, width = 0, ...restProps } = props;\n  /**\n   * Prefix & suffix are positioned absolutely within inputWrapper. We use client rects below to apply correct padding to the input\n   * when prefix/suffix is larger than default (28px = 16px(icon) + 12px(left/right paddings)).\n   * Thanks to that prefix/suffix do not overflow the input element itself.\n   */\n  const [prefixRef, prefixRect] = useMeasure<HTMLDivElement>();\n  const [suffixRef, suffixRect] = useMeasure<HTMLDivElement>();\n\n  const theme = useTheme2();\n  const styles = getInputStyles({ theme, invalid: !!invalid, width });\n\n  return (\n    <div className={cx(styles.wrapper, className)} data-testid={'input-wrapper'}>\n      {!!addonBefore && <div className={styles.addon}>{addonBefore}</div>}\n\n      <div className={styles.inputWrapper}>\n        {prefix && (\n          <div className={styles.prefix} ref={prefixRef}>\n            {prefix}\n          </div>\n        )}\n\n        <input\n          ref={ref}\n          className={styles.input}\n          {...restProps}\n          style={{\n            paddingLeft: prefix ? prefixRect.width + 12 : undefined,\n            paddingRight: suffix || loading ? suffixRect.width + 12 : undefined,\n          }}\n        />\n\n        {(suffix || loading) && (\n          <div className={styles.suffix} ref={suffixRef}>\n            {loading && <Spinner className={styles.loadingIndicator} inline={true} />}\n            {suffix}\n          </div>\n        )}\n      </div>\n\n      {!!addonAfter && <div className={styles.addon}>{addonAfter}</div>}\n    </div>\n  );\n});\n\nInput.displayName = 'Input';\n\nexport const getInputStyles = stylesFactory(({ theme, invalid = false, width }: StyleDeps) => {\n  const prefixSuffixStaticWidth = '28px';\n  const prefixSuffix = css`\n    position: absolute;\n    top: 0;\n    z-index: 1;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-grow: 0;\n    flex-shrink: 0;\n    font-size: ${theme.typography.size.md};\n    height: 100%;\n    /* Min width specified for prefix/suffix classes used outside React component*/\n    min-width: ${prefixSuffixStaticWidth};\n    color: ${theme.colors.text.secondary};\n  `;\n\n  return {\n    // Wraps inputWrapper and addons\n    wrapper: cx(\n      css`\n        label: input-wrapper;\n        display: flex;\n        width: ${width ? `${theme.spacing(width)}` : '100%'};\n        height: ${theme.spacing(theme.components.height.md)};\n        border-radius: ${theme.shape.borderRadius()};\n        &:hover {\n          > .prefix,\n          .suffix,\n          .input {\n            border-color: ${invalid ? theme.colors.error.border : theme.colors.primary.border};\n          }\n\n          // only show number buttons on hover\n          input[type='number'] {\n            -moz-appearance: number-input;\n            -webkit-appearance: number-input;\n            appearance: textfield;\n          }\n\n          input[type='number']::-webkit-inner-spin-button,\n          input[type='number']::-webkit-outer-spin-button {\n            -webkit-appearance: inner-spin-button !important;\n            opacity: 1;\n          }\n        }\n      `\n    ),\n    // Wraps input and prefix/suffix\n    inputWrapper: css`\n      label: input-inputWrapper;\n      position: relative;\n      flex-grow: 1;\n      /* we want input to be above addons, especially for focused state */\n      z-index: 1;\n\n      /* when input rendered with addon before only*/\n      &:not(:first-child):last-child {\n        > input {\n          border-left: none;\n          border-top-left-radius: 0;\n          border-bottom-left-radius: 0;\n        }\n      }\n\n      /* when input rendered with addon after only*/\n      &:first-child:not(:last-child) {\n        > input {\n          border-right: none;\n          border-top-right-radius: 0;\n          border-bottom-right-radius: 0;\n        }\n      }\n\n      /* when rendered with addon before and after */\n      &:not(:first-child):not(:last-child) {\n        > input {\n          border-right: none;\n          border-top-right-radius: 0;\n          border-bottom-right-radius: 0;\n          border-top-left-radius: 0;\n          border-bottom-left-radius: 0;\n        }\n      }\n\n      input {\n        /* paddings specified for classes used outside React component */\n        &:not(:first-child) {\n          padding-left: ${prefixSuffixStaticWidth};\n        }\n        &:not(:last-child) {\n          padding-right: ${prefixSuffixStaticWidth};\n        }\n        &[readonly] {\n          cursor: default;\n        }\n      }\n    `,\n\n    input: cx(\n      getFocusStyle(theme),\n      sharedInputStyle(theme, invalid),\n      css`\n        label: input-input;\n        position: relative;\n        z-index: 0;\n        flex-grow: 1;\n        border-radius: ${theme.shape.borderRadius()};\n        height: 100%;\n        width: 100%;\n      `\n    ),\n    inputDisabled: css`\n      background-color: ${theme.colors.action.disabledBackground};\n      color: ${theme.colors.action.disabledText};\n      border: 1px solid ${theme.colors.action.disabledBackground};\n      &:focus {\n        box-shadow: none;\n      }\n    `,\n    addon: css`\n      label: input-addon;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      flex-grow: 0;\n      flex-shrink: 0;\n      position: relative;\n\n      &:first-child {\n        border-top-right-radius: 0;\n        border-bottom-right-radius: 0;\n        > :last-child {\n          border-top-right-radius: 0;\n          border-bottom-right-radius: 0;\n        }\n      }\n\n      &:last-child {\n        border-top-left-radius: 0;\n        border-bottom-left-radius: 0;\n        > :first-child {\n          border-top-left-radius: 0;\n          border-bottom-left-radius: 0;\n        }\n      }\n      > *:focus {\n        /* we want anything that has focus and is an addon to be above input */\n        z-index: 2;\n      }\n    `,\n    prefix: cx(\n      prefixSuffix,\n      css`\n        label: input-prefix;\n        padding-left: ${theme.spacing(1)};\n        padding-right: ${theme.spacing(0.5)};\n        border-right: none;\n        border-top-right-radius: 0;\n        border-bottom-right-radius: 0;\n      `\n    ),\n    suffix: cx(\n      prefixSuffix,\n      css`\n        label: input-suffix;\n        padding-left: ${theme.spacing(1)};\n        padding-right: ${theme.spacing(1)};\n        margin-bottom: -2px;\n        border-left: none;\n        border-top-left-radius: 0;\n        border-bottom-left-radius: 0;\n        right: 0;\n      `\n    ),\n    loadingIndicator: css`\n      & + * {\n        margin-left: ${theme.spacing(0.5)};\n      }\n    `,\n  };\n});\n","import React from 'react';\n\nimport { Icon } from '../Icon/Icon';\n\ninterface DropdownIndicatorProps {\n  isOpen: boolean;\n}\n\nexport const DropdownIndicator = ({ isOpen }: DropdownIndicatorProps) => {\n  const icon = isOpen ? 'search' : 'angle-down';\n  const size = isOpen ? 'sm' : 'md';\n  return <Icon name={icon} size={size} />;\n};\n","import { cx, css } from '@emotion/css';\nimport React from 'react';\n\nimport { useTheme2 } from '../../themes/ThemeContext';\nimport { getInputStyles } from '../Input/Input';\n\nexport const IndicatorsContainer = React.forwardRef<HTMLDivElement, React.PropsWithChildren<any>>((props, ref) => {\n  const { children } = props;\n  const theme = useTheme2();\n  const styles = getInputStyles({ theme, invalid: false });\n\n  return (\n    <div\n      className={cx(\n        styles.suffix,\n        css`\n          position: relative;\n        `\n      )}\n      ref={ref}\n    >\n      {children}\n    </div>\n  );\n});\n\nIndicatorsContainer.displayName = 'IndicatorsContainer';\n","import { css, cx } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { stylesFactory } from '../../themes';\nimport { useTheme2 } from '../../themes/ThemeContext';\nimport { inputPadding } from '../Forms/commonStyles';\nimport { getInputStyles } from '../Input/Input';\n\ninterface InputControlProps {\n  /** Show an icon as a prefix in the input */\n  prefix?: JSX.Element | string | null;\n  focused: boolean;\n  invalid: boolean;\n  disabled: boolean;\n  innerProps: JSX.IntrinsicElements['div'];\n}\n\nconst getInputControlStyles = stylesFactory((theme: GrafanaTheme2, invalid: boolean, withPrefix: boolean) => {\n  const styles = getInputStyles({ theme, invalid });\n\n  return {\n    input: cx(\n      inputPadding(theme),\n      css`\n        width: 100%;\n        max-width: 100%;\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: space-between;\n        padding-right: 0;\n        position: relative;\n        box-sizing: border-box;\n      `,\n      withPrefix &&\n        css`\n          padding-left: 0;\n        `\n    ),\n    prefix: cx(\n      styles.prefix,\n      css`\n        position: relative;\n      `\n    ),\n  };\n});\n\nexport const InputControl = React.forwardRef<HTMLDivElement, React.PropsWithChildren<InputControlProps>>(\n  function InputControl({ focused, invalid, disabled, children, innerProps, prefix, ...otherProps }, ref) {\n    const theme = useTheme2();\n    const styles = getInputControlStyles(theme, invalid, !!prefix);\n    return (\n      <div className={styles.input} {...innerProps} ref={ref}>\n        {prefix && <div className={cx(styles.prefix)}>{prefix}</div>}\n        {children}\n      </div>\n    );\n  }\n);\n","import { css } from '@emotion/css';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { stylesFactory } from '../../themes/stylesFactory';\n\nexport const getSelectStyles = stylesFactory((theme: GrafanaTheme2) => {\n  return {\n    menu: css`\n      label: grafana-select-menu;\n      background: ${theme.components.dropdown.background};\n      box-shadow: ${theme.shadows.z3};\n      position: relative;\n      min-width: 100%;\n      z-index: 1;\n    `,\n    option: css`\n      label: grafana-select-option;\n      padding: 8px;\n      display: flex;\n      align-items: center;\n      flex-direction: row;\n      flex-shrink: 0;\n      white-space: nowrap;\n      cursor: pointer;\n      border-left: 2px solid transparent;\n\n      &:hover {\n        background: ${theme.colors.action.hover};\n      }\n    `,\n    optionIcon: css`\n      margin-right: ${theme.spacing(1)};\n    `,\n    optionImage: css`\n      label: grafana-select-option-image;\n      width: 16px;\n      margin-right: 10px;\n    `,\n    optionDescription: css`\n      label: grafana-select-option-description;\n      font-weight: normal;\n      font-size: ${theme.typography.size.sm};\n      color: ${theme.colors.text.secondary};\n      white-space: normal;\n      line-height: ${theme.typography.body.lineHeight};\n    `,\n    optionBody: css`\n      label: grafana-select-option-body;\n      display: flex;\n      font-weight: ${theme.typography.fontWeightMedium};\n      flex-direction: column;\n      flex-grow: 1;\n    `,\n    optionFocused: css`\n      label: grafana-select-option-focused;\n      background: ${theme.colors.action.focus};\n    `,\n    optionSelected: css`\n      background: ${theme.colors.action.selected};\n    `,\n    optionDisabled: css`\n      label: grafana-select-option-disabled;\n      background-color: ${theme.colors.action.disabledBackground};\n      color: ${theme.colors.action.disabledText};\n      cursor: not-allowed;\n    `,\n    singleValue: css`\n      label: grafana-select-single-value;\n      color: ${theme.components.input.text};\n      grid-area: 1 / 1 / 2 / 3;\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      box-sizing: border-box;\n      max-width: 100%;\n    `,\n    valueContainer: css`\n      label: grafana-select-value-container;\n      align-items: center;\n      display: grid;\n      position: relative;\n      box-sizing: border-box;\n      flex: 1 1 0%;\n      outline: none;\n      overflow: hidden;\n    `,\n    valueContainerMulti: css`\n      label: grafana-select-value-container-multi;\n      flex-wrap: wrap;\n      display: flex;\n    `,\n    loadingMessage: css`\n      label: grafana-select-loading-message;\n      padding: ${theme.spacing(1)};\n      text-align: center;\n      width: 100%;\n    `,\n    multiValueContainer: css`\n      label: grafana-select-multi-value-container;\n      display: flex;\n      align-items: center;\n      line-height: 1;\n      background: ${theme.colors.background.secondary};\n      border-radius: ${theme.shape.borderRadius()};\n      margin: ${theme.spacing(0.25, 1, 0.25, 0)};\n      padding: ${theme.spacing(0.25, 0, 0.25, 1)};\n      color: ${theme.colors.text.primary};\n      font-size: ${theme.typography.size.sm};\n\n      &:hover {\n        background: ${theme.colors.emphasize(theme.colors.background.secondary)};\n      }\n    `,\n    multiValueRemove: css`\n      label: grafana-select-multi-value-remove;\n      margin: ${theme.spacing(0, 0.5)};\n      cursor: pointer;\n      svg {\n        margin-bottom: 0;\n      }\n    `,\n    singleValueRemove: css`\n      cursor: pointer;\n      &:hover {\n        color: ${theme.colors.text.primary};\n      }\n    `,\n  };\n});\n","import React from 'react';\n\nimport { useTheme2 } from '../../themes';\nimport { IconButton, Props as IconButtonProps } from '../IconButton/IconButton';\n\nimport { getSelectStyles } from './getSelectStyles';\n\ninterface MultiValueContainerProps {\n  innerProps: JSX.IntrinsicElements['div'];\n}\n\nexport const MultiValueContainer = ({ innerProps, children }: React.PropsWithChildren<MultiValueContainerProps>) => {\n  const theme = useTheme2();\n  const styles = getSelectStyles(theme);\n\n  return (\n    <div {...innerProps} className={styles.multiValueContainer}>\n      {children}\n    </div>\n  );\n};\n\nexport type MultiValueRemoveProps = {\n  innerProps: IconButtonProps;\n};\n\nexport const MultiValueRemove = ({ children, innerProps }: React.PropsWithChildren<MultiValueRemoveProps>) => {\n  const theme = useTheme2();\n  const styles = getSelectStyles(theme);\n  return <IconButton {...innerProps} name=\"times\" size=\"sm\" className={styles.multiValueRemove} />;\n};\n","import { css, cx } from '@emotion/css';\nimport React from 'react';\nimport { components, ContainerProps as BaseContainerProps, GroupBase } from 'react-select';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { stylesFactory } from '../../themes';\nimport { useTheme2 } from '../../themes/ThemeContext';\nimport { focusCss } from '../../themes/mixins';\nimport { sharedInputStyle } from '../Forms/commonStyles';\nimport { getInputStyles } from '../Input/Input';\n\nimport { CustomComponentProps } from './types';\n\n// prettier-ignore\nexport type SelectContainerProps<Option, isMulti extends boolean, Group extends GroupBase<Option>> =\n  BaseContainerProps<Option, isMulti, Group> & CustomComponentProps<Option, isMulti, Group>;\n\nexport const SelectContainer = <Option, isMulti extends boolean, Group extends GroupBase<Option>>(\n  props: SelectContainerProps<Option, isMulti, Group>\n) => {\n  const {\n    isDisabled,\n    isFocused,\n    children,\n    selectProps: { invalid = false },\n  } = props;\n\n  const theme = useTheme2();\n  const styles = getSelectContainerStyles(theme, isFocused, isDisabled, invalid);\n\n  return (\n    <components.SelectContainer {...props} className={cx(styles.wrapper, props.className)}>\n      {children}\n    </components.SelectContainer>\n  );\n};\n\nconst getSelectContainerStyles = stylesFactory(\n  (theme: GrafanaTheme2, focused: boolean, disabled: boolean, invalid: boolean) => {\n    const styles = getInputStyles({ theme, invalid });\n\n    return {\n      wrapper: cx(\n        styles.wrapper,\n        sharedInputStyle(theme, invalid),\n        focused &&\n          css`\n            ${focusCss(theme.v1)}\n          `,\n        disabled && styles.inputDisabled,\n        css`\n          position: relative;\n          box-sizing: border-box;\n          /* The display property is set by the styles prop in SelectBase because it's dependant on the width prop  */\n          flex-direction: row;\n          flex-wrap: wrap;\n          align-items: stretch;\n          justify-content: space-between;\n\n          min-height: 32px;\n          height: auto;\n          max-width: 100%;\n\n          /* Input padding is applied to the InputControl so the menu is aligned correctly */\n          padding: 0;\n          cursor: ${disabled ? 'not-allowed' : 'pointer'};\n        `\n      ),\n    };\n  }\n);\n","import { cx } from '@emotion/css';\nimport { max } from 'lodash';\nimport React, { RefCallback } from 'react';\nimport { MenuListProps } from 'react-select';\nimport { FixedSizeList as List } from 'react-window';\n\nimport { SelectableValue, toIconName } from '@grafana/data';\n\nimport { useTheme2 } from '../../themes/ThemeContext';\nimport { CustomScrollbar } from '../CustomScrollbar/CustomScrollbar';\nimport { Icon } from '../Icon/Icon';\n\nimport { getSelectStyles } from './getSelectStyles';\n\ninterface SelectMenuProps {\n  maxHeight: number;\n  innerRef: RefCallback<HTMLDivElement>;\n  innerProps: {};\n}\n\nexport const SelectMenu = ({ children, maxHeight, innerRef, innerProps }: React.PropsWithChildren<SelectMenuProps>) => {\n  const theme = useTheme2();\n  const styles = getSelectStyles(theme);\n\n  return (\n    <div {...innerProps} className={styles.menu} style={{ maxHeight }} aria-label=\"Select options menu\">\n      <CustomScrollbar scrollRefCallback={innerRef} autoHide={false} autoHeightMax=\"inherit\" hideHorizontalTrack>\n        {children}\n      </CustomScrollbar>\n    </div>\n  );\n};\n\nSelectMenu.displayName = 'SelectMenu';\n\nconst VIRTUAL_LIST_ITEM_HEIGHT = 37;\nconst VIRTUAL_LIST_WIDTH_ESTIMATE_MULTIPLIER = 7;\n\n// A virtualized version of the SelectMenu, descriptions for SelectableValue options not supported since those are of a variable height.\n//\n// To support the virtualized list we have to \"guess\" the width of the menu container based on the longest available option.\n// the reason for this is because all of the options will be positioned absolute, this takes them out of the document and no space\n// is created for them, thus the container can't grow to accomodate.\n//\n// VIRTUAL_LIST_ITEM_HEIGHT and WIDTH_ESTIMATE_MULTIPLIER are both magic numbers.\n// Some characters (such as emojis and other unicode characters) may consist of multiple code points in which case the width would be inaccurate (but larger than needed).\nexport const VirtualizedSelectMenu = ({ children, maxHeight, options, getValue }: MenuListProps<SelectableValue>) => {\n  const theme = useTheme2();\n  const styles = getSelectStyles(theme);\n  const [value] = getValue();\n\n  const valueIndex = value ? options.findIndex((option: SelectableValue<unknown>) => option.value === value.value) : 0;\n  const initialOffset = valueIndex * VIRTUAL_LIST_ITEM_HEIGHT;\n\n  if (!Array.isArray(children)) {\n    return null;\n  }\n\n  const longestOption = max(options.map((option) => option.label?.length)) ?? 0;\n  const widthEstimate = longestOption * VIRTUAL_LIST_WIDTH_ESTIMATE_MULTIPLIER;\n  const heightEstimate = Math.min(options.length * VIRTUAL_LIST_ITEM_HEIGHT, maxHeight);\n\n  return (\n    <List\n      className={styles.menu}\n      height={heightEstimate}\n      width={widthEstimate}\n      aria-label=\"Select options menu\"\n      itemCount={children.length}\n      itemSize={VIRTUAL_LIST_ITEM_HEIGHT}\n      initialScrollOffset={initialOffset}\n    >\n      {({ index, style }) => <div style={{ ...style, overflow: 'hidden' }}>{children[index]}</div>}\n    </List>\n  );\n};\n\nVirtualizedSelectMenu.displayName = 'VirtualizedSelectMenu';\n\ninterface SelectMenuOptionProps<T> {\n  isDisabled: boolean;\n  isFocused: boolean;\n  isSelected: boolean;\n  innerProps: JSX.IntrinsicElements['div'];\n  innerRef: RefCallback<HTMLDivElement>;\n  renderOptionLabel?: (value: SelectableValue<T>) => JSX.Element;\n  data: SelectableValue<T>;\n}\n\nexport const SelectMenuOptions = ({\n  children,\n  data,\n  innerProps,\n  innerRef,\n  isFocused,\n  isSelected,\n  renderOptionLabel,\n}: React.PropsWithChildren<SelectMenuOptionProps<any>>) => {\n  const theme = useTheme2();\n  const styles = getSelectStyles(theme);\n  const icon = data.icon ? toIconName(data.icon) : undefined;\n\n  return (\n    <div\n      ref={innerRef}\n      className={cx(\n        styles.option,\n        isFocused && styles.optionFocused,\n        isSelected && styles.optionSelected,\n        data.isDisabled && styles.optionDisabled\n      )}\n      {...innerProps}\n      aria-label=\"Select option\"\n      title={data.title}\n    >\n      {icon && <Icon name={icon} className={styles.optionIcon} />}\n      {data.imgUrl && <img className={styles.optionImage} src={data.imgUrl} alt={data.label || data.value} />}\n      <div className={styles.optionBody}>\n        <span>{renderOptionLabel ? renderOptionLabel(data) : children}</span>\n        {data.description && <div className={styles.optionDescription}>{data.description}</div>}\n        {data.component && <data.component />}\n      </div>\n    </div>\n  );\n};\n\nSelectMenuOptions.displayName = 'SelectMenuOptions';\n","import { cx } from '@emotion/css';\nimport React, { Component, ReactNode } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { withTheme2 } from '../../themes/ThemeContext';\n\nimport { getSelectStyles } from './getSelectStyles';\n\nclass UnthemedValueContainer extends Component<any & { theme: GrafanaTheme2 }> {\n  render() {\n    const { children } = this.props;\n    const { selectProps } = this.props;\n\n    if (\n      selectProps &&\n      Array.isArray(children) &&\n      Array.isArray(children[0]) &&\n      selectProps.maxVisibleValues !== undefined &&\n      !(selectProps.showAllSelectedWhenOpen && selectProps.menuIsOpen)\n    ) {\n      const [valueChildren, ...otherChildren] = children;\n      const truncatedValues = valueChildren.slice(0, selectProps.maxVisibleValues);\n\n      return this.renderContainer([truncatedValues, ...otherChildren]);\n    }\n\n    return this.renderContainer(children);\n  }\n\n  renderContainer(children?: ReactNode) {\n    const { isMulti, theme } = this.props;\n    const styles = getSelectStyles(theme);\n    const className = cx(styles.valueContainer, isMulti && styles.valueContainerMulti);\n    return <div className={className}>{children}</div>;\n  }\n}\n\nexport const ValueContainer = withTheme2(UnthemedValueContainer);\n","import { SelectableValue } from '@grafana/data';\n\nimport { SelectableOptGroup } from './types';\n\n/**\n * Normalize the value format to SelectableValue[] | []. Only used for single select\n */\nexport const cleanValue = (\n  value: unknown,\n  options: Array<SelectableValue | SelectableOptGroup | SelectableOptGroup[]>\n) => {\n  if (Array.isArray(value)) {\n    const filtered = value.filter(Boolean);\n    return filtered?.length ? filtered : undefined;\n  }\n  if (typeof value === 'object') {\n    // we want to allow null through into here, so the Select value can be unset\n    return [value];\n  }\n  if (typeof value === 'string' || typeof value === 'number') {\n    const selectedValue = findSelectedValue(value, options);\n    if (selectedValue) {\n      return [selectedValue];\n    }\n  }\n  return undefined;\n};\n\n/**\n * Find the label for a string|number value inside array of options or optgroups\n */\nexport const findSelectedValue = (\n  value: string | number,\n  options: Array<SelectableValue | SelectableOptGroup | SelectableOptGroup[]>\n): SelectableValue | null => {\n  for (const option of options) {\n    if ('options' in option) {\n      let found = findSelectedValue(value, option.options);\n      if (found) {\n        return found;\n      }\n    } else if ('value' in option && option.value === value) {\n      return option;\n    }\n  }\n\n  return null;\n};\n\n/**\n * Omit descriptions from an array of options\n */\nexport const omitDescriptions = (options: SelectableValue[]): SelectableValue[] => {\n  return options.map(({ description, ...rest }) => rest);\n};\n","import React, { ComponentProps, useCallback, useEffect, useRef, useState } from 'react';\nimport { default as ReactSelect } from 'react-select';\nimport { default as ReactAsyncSelect } from 'react-select/async';\nimport { default as AsyncCreatable } from 'react-select/async-creatable';\nimport Creatable from 'react-select/creatable';\n\nimport { SelectableValue, toOption } from '@grafana/data';\n\nimport { useTheme2 } from '../../themes';\nimport { Icon } from '../Icon/Icon';\nimport { Spinner } from '../Spinner/Spinner';\n\nimport { DropdownIndicator } from './DropdownIndicator';\nimport { IndicatorsContainer } from './IndicatorsContainer';\nimport { InputControl } from './InputControl';\nimport { MultiValueContainer, MultiValueRemove } from './MultiValue';\nimport { SelectContainer } from './SelectContainer';\nimport { SelectMenu, SelectMenuOptions, VirtualizedSelectMenu } from './SelectMenu';\nimport { SelectOptionGroup } from './SelectOptionGroup';\nimport { SingleValue } from './SingleValue';\nimport { ValueContainer } from './ValueContainer';\nimport { getSelectStyles } from './getSelectStyles';\nimport { useCustomSelectStyles } from './resetSelectStyles';\nimport { ActionMeta, SelectBaseProps } from './types';\nimport { cleanValue, findSelectedValue, omitDescriptions } from './utils';\n\ninterface ExtraValuesIndicatorProps {\n  maxVisibleValues?: number | undefined;\n  selectedValuesCount: number;\n  menuIsOpen: boolean;\n  showAllSelectedWhenOpen: boolean;\n}\n\nconst renderExtraValuesIndicator = (props: ExtraValuesIndicatorProps) => {\n  const { maxVisibleValues, selectedValuesCount, menuIsOpen, showAllSelectedWhenOpen } = props;\n\n  if (\n    maxVisibleValues !== undefined &&\n    selectedValuesCount > maxVisibleValues &&\n    !(showAllSelectedWhenOpen && menuIsOpen)\n  ) {\n    return (\n      <span key=\"excess-values\" id=\"excess-values\">\n        (+{selectedValuesCount - maxVisibleValues})\n      </span>\n    );\n  }\n\n  return null;\n};\n\nconst CustomControl = (props: any) => {\n  const {\n    children,\n    innerProps,\n    selectProps: { menuIsOpen, onMenuClose, onMenuOpen },\n    isFocused,\n    isMulti,\n    getValue,\n    innerRef,\n  } = props;\n  const selectProps = props.selectProps as SelectBaseProps<any>;\n\n  if (selectProps.renderControl) {\n    return React.createElement(selectProps.renderControl, {\n      isOpen: menuIsOpen,\n      value: isMulti ? getValue() : getValue()[0],\n      ref: innerRef,\n      onClick: menuIsOpen ? onMenuClose : onMenuOpen,\n      onBlur: onMenuClose,\n      disabled: !!selectProps.disabled,\n      invalid: !!selectProps.invalid,\n    });\n  }\n\n  return (\n    <InputControl\n      ref={innerRef}\n      innerProps={innerProps}\n      prefix={selectProps.prefix}\n      focused={isFocused}\n      invalid={!!selectProps.invalid}\n      disabled={!!selectProps.disabled}\n    >\n      {children}\n    </InputControl>\n  );\n};\n\nexport function SelectBase<T>({\n  allowCustomValue = false,\n  allowCreateWhileLoading = false,\n  'aria-label': ariaLabel,\n  autoFocus = false,\n  backspaceRemovesValue = true,\n  cacheOptions,\n  className,\n  closeMenuOnSelect = true,\n  components,\n  createOptionPosition = 'last',\n  defaultOptions,\n  defaultValue,\n  disabled = false,\n  filterOption,\n  formatCreateLabel,\n  getOptionLabel,\n  getOptionValue,\n  inputValue,\n  invalid,\n  isClearable = false,\n  id,\n  isLoading = false,\n  isMulti = false,\n  inputId,\n  isOpen,\n  isOptionDisabled,\n  isSearchable = true,\n  loadOptions,\n  loadingMessage = 'Loading options...',\n  maxMenuHeight = 300,\n  minMenuHeight,\n  maxVisibleValues,\n  menuPlacement = 'auto',\n  menuPosition,\n  menuShouldPortal = true,\n  noOptionsMessage = 'No options found',\n  onBlur,\n  onChange,\n  onCloseMenu,\n  onCreateOption,\n  onInputChange,\n  onKeyDown,\n  onOpenMenu,\n  onFocus,\n  openMenuOnFocus = false,\n  options = [],\n  placeholder = 'Choose',\n  prefix,\n  renderControl,\n  showAllSelectedWhenOpen = true,\n  tabSelectsValue = true,\n  value,\n  virtualized = false,\n  width,\n  isValidNewOption,\n  formatOptionLabel,\n}: SelectBaseProps<T>) {\n  const theme = useTheme2();\n  const styles = getSelectStyles(theme);\n\n  const reactSelectRef = useRef<{ controlRef: HTMLElement }>(null);\n  const [closeToBottom, setCloseToBottom] = useState<boolean>(false);\n  const selectStyles = useCustomSelectStyles(theme, width);\n\n  // Infer the menu position for asynchronously loaded options. menuPlacement=\"auto\" doesn't work when the menu is\n  // automatically opened when the component is created (it happens in SegmentSelect by setting menuIsOpen={true}).\n  // We can remove this workaround when the bug in react-select is fixed: https://github.com/JedWatson/react-select/issues/4936\n  // Note: we use useEffect instead of hooking into onMenuOpen due to another bug: https://github.com/JedWatson/react-select/issues/3375\n  useEffect(() => {\n    if (\n      loadOptions &&\n      isOpen &&\n      reactSelectRef.current &&\n      reactSelectRef.current.controlRef &&\n      menuPlacement === 'auto'\n    ) {\n      const distance = window.innerHeight - reactSelectRef.current.controlRef.getBoundingClientRect().bottom;\n      setCloseToBottom(distance < maxMenuHeight);\n    }\n  }, [maxMenuHeight, menuPlacement, loadOptions, isOpen]);\n\n  const onChangeWithEmpty = useCallback(\n    (value: SelectableValue<T>, action: ActionMeta) => {\n      if (isMulti && (value === undefined || value === null)) {\n        return onChange([], action);\n      }\n      onChange(value, action);\n    },\n    [isMulti, onChange]\n  );\n\n  let ReactSelectComponent = ReactSelect;\n\n  const creatableProps: ComponentProps<typeof Creatable<SelectableValue<T>>> = {};\n  let asyncSelectProps: any = {};\n  let selectedValue;\n  if (isMulti && loadOptions) {\n    selectedValue = value as any;\n  } else {\n    // If option is passed as a plain value (value property from SelectableValue property)\n    // we are selecting the corresponding value from the options\n    if (isMulti && value && Array.isArray(value) && !loadOptions) {\n      selectedValue = value.map((v) => {\n        // @ts-ignore\n        const selectableValue = findSelectedValue(v.value ?? v, options);\n        // If the select allows custom values there likely won't be a selectableValue in options\n        // so we must return a new selectableValue\n        if (!allowCustomValue || selectableValue) {\n          return selectableValue;\n        }\n        return typeof v === 'string' ? toOption(v) : v;\n      });\n    } else if (loadOptions) {\n      const hasValue = defaultValue || value;\n      selectedValue = hasValue ? [hasValue] : [];\n    } else {\n      selectedValue = cleanValue(value, options);\n    }\n  }\n\n  const commonSelectProps = {\n    'aria-label': ariaLabel,\n    autoFocus,\n    backspaceRemovesValue,\n    captureMenuScroll: false,\n    closeMenuOnSelect,\n    // We don't want to close if we're actually scrolling the menu\n    // So only close if none of the parents are the select menu itself\n    defaultValue,\n    // Also passing disabled, as this is the new Select API, and I want to use this prop instead of react-select's one\n    disabled,\n    filterOption,\n    getOptionLabel,\n    getOptionValue,\n    inputValue,\n    invalid,\n    isClearable,\n    id,\n    // Passing isDisabled as react-select accepts this prop\n    isDisabled: disabled,\n    isLoading,\n    isMulti,\n    inputId,\n    isOptionDisabled,\n    isSearchable,\n    maxMenuHeight,\n    minMenuHeight,\n    maxVisibleValues,\n    menuIsOpen: isOpen,\n    menuPlacement: menuPlacement === 'auto' && closeToBottom ? 'top' : menuPlacement,\n    menuPosition,\n    menuShouldBlockScroll: true,\n    menuPortalTarget: menuShouldPortal && typeof document !== 'undefined' ? document.body : undefined,\n    menuShouldScrollIntoView: false,\n    onBlur,\n    onChange: onChangeWithEmpty,\n    onInputChange,\n    onKeyDown,\n    onMenuClose: onCloseMenu,\n    onMenuOpen: onOpenMenu,\n    onFocus,\n    formatOptionLabel,\n    openMenuOnFocus,\n    options: virtualized ? omitDescriptions(options) : options,\n    placeholder,\n    prefix,\n    renderControl,\n    showAllSelectedWhenOpen,\n    tabSelectsValue,\n    value: isMulti ? selectedValue : selectedValue?.[0],\n  };\n\n  if (allowCustomValue) {\n    ReactSelectComponent = Creatable as any;\n    creatableProps.allowCreateWhileLoading = allowCreateWhileLoading;\n    creatableProps.formatCreateLabel = formatCreateLabel ?? defaultFormatCreateLabel;\n    creatableProps.onCreateOption = onCreateOption;\n    creatableProps.createOptionPosition = createOptionPosition;\n    creatableProps.isValidNewOption = isValidNewOption;\n  }\n\n  // Instead of having AsyncSelect, as a separate component we render ReactAsyncSelect\n  if (loadOptions) {\n    ReactSelectComponent = (allowCustomValue ? AsyncCreatable : ReactAsyncSelect) as any;\n    asyncSelectProps = {\n      loadOptions,\n      cacheOptions,\n      defaultOptions,\n    };\n  }\n\n  const SelectMenuComponent = virtualized ? VirtualizedSelectMenu : SelectMenu;\n\n  return (\n    <>\n      <ReactSelectComponent\n        ref={reactSelectRef}\n        components={{\n          MenuList: SelectMenuComponent,\n          Group: SelectOptionGroup,\n          ValueContainer,\n          IndicatorsContainer(props: any) {\n            const { selectProps } = props;\n            const { value, showAllSelectedWhenOpen, maxVisibleValues, menuIsOpen } = selectProps;\n\n            if (maxVisibleValues !== undefined) {\n              const selectedValuesCount = value.length;\n              const indicatorChildren = [...props.children];\n              indicatorChildren.splice(\n                -1,\n                0,\n                renderExtraValuesIndicator({\n                  maxVisibleValues,\n                  selectedValuesCount,\n                  showAllSelectedWhenOpen,\n                  menuIsOpen,\n                })\n              );\n              return <IndicatorsContainer {...props}>{indicatorChildren}</IndicatorsContainer>;\n            }\n\n            return <IndicatorsContainer {...props} />;\n          },\n          IndicatorSeparator() {\n            return <></>;\n          },\n          Control: CustomControl,\n          Option: SelectMenuOptions,\n          ClearIndicator(props: any) {\n            const { clearValue } = props;\n            return (\n              <Icon\n                name=\"times\"\n                role=\"button\"\n                aria-label=\"select-clear-value\"\n                className={styles.singleValueRemove}\n                onMouseDown={(e) => {\n                  e.preventDefault();\n                  e.stopPropagation();\n                  clearValue();\n                }}\n              />\n            );\n          },\n          LoadingIndicator() {\n            return <Spinner inline />;\n          },\n          LoadingMessage() {\n            return <div className={styles.loadingMessage}>{loadingMessage}</div>;\n          },\n          NoOptionsMessage() {\n            return (\n              <div className={styles.loadingMessage} aria-label=\"No options provided\">\n                {noOptionsMessage}\n              </div>\n            );\n          },\n          DropdownIndicator(props) {\n            return <DropdownIndicator isOpen={props.selectProps.menuIsOpen} />;\n          },\n          SingleValue(props: any) {\n            return <SingleValue {...props} disabled={disabled} />;\n          },\n          SelectContainer,\n          MultiValueContainer: MultiValueContainer,\n          MultiValueRemove: MultiValueRemove,\n          ...components,\n        }}\n        styles={selectStyles}\n        className={className}\n        {...commonSelectProps}\n        {...creatableProps}\n        {...asyncSelectProps}\n      />\n    </>\n  );\n}\n\nfunction defaultFormatCreateLabel(input: string) {\n  return (\n    <div style={{ display: 'flex', gap: '8px', alignItems: 'center' }}>\n      <div>{input}</div>\n      <div style={{ flexGrow: 1 }} />\n      <div className=\"muted small\" style={{ display: 'flex', gap: '8px', alignItems: 'center' }}>\n        Hit enter to add\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\n\nimport { SelectableValue } from '@grafana/data';\n\nimport { SelectBase } from './SelectBase';\nimport { SelectContainer, SelectContainerProps } from './SelectContainer';\nimport {\n  SelectCommonProps,\n  MultiSelectCommonProps,\n  SelectAsyncProps,\n  VirtualizedSelectProps,\n  VirtualizedSelectAsyncProps,\n} from './types';\n\nexport function Select<T>(props: SelectCommonProps<T>) {\n  return <SelectBase {...props} />;\n}\n\nexport function MultiSelect<T>(props: MultiSelectCommonProps<T>) {\n  // @ts-ignore\n  return <SelectBase {...props} isMulti />;\n}\n\nexport interface AsyncSelectProps<T> extends Omit<SelectCommonProps<T>, 'options'>, SelectAsyncProps<T> {\n  // AsyncSelect has options stored internally. We cannot enable plain values as we don't have access to the fetched options\n  value?: T | SelectableValue<T> | null;\n}\n\nexport function AsyncSelect<T>(props: AsyncSelectProps<T>) {\n  return <SelectBase {...props} />;\n}\n\nexport function VirtualizedSelect<T>(props: VirtualizedSelectProps<T>) {\n  return <SelectBase virtualized {...props} />;\n}\n\nexport function AsyncVirtualizedSelect<T>(props: VirtualizedSelectAsyncProps<T>) {\n  return <SelectBase virtualized {...props} />;\n}\n\ninterface AsyncMultiSelectProps<T> extends Omit<MultiSelectCommonProps<T>, 'options'>, SelectAsyncProps<T> {\n  // AsyncSelect has options stored internally. We cannot enable plain values as we don't have access to the fetched options\n  value?: Array<SelectableValue<T>>;\n}\n\nexport function AsyncMultiSelect<T>(props: AsyncMultiSelectProps<T>) {\n  // @ts-ignore\n  return <SelectBase {...props} isMulti />;\n}\n\nexport { SelectContainer, type SelectContainerProps };\n","import { SingleValueType, BaseOptionType as RCCascaderOption } from 'rc-cascader/lib/Cascader';\n\nimport { CascaderOption } from './Cascader';\n\ntype onChangeType = ((values: string[], options: CascaderOption[]) => void) | undefined;\n\nexport const onChangeCascader = (onChanged: onChangeType) => (values: SingleValueType, options: RCCascaderOption[]) => {\n  if (onChanged) {\n    // map values to strings for backwards compatibility with Cascader components\n    onChanged(\n      values.map((value) => String(value)),\n      fromRCOptions(options)\n    );\n  }\n};\n\ntype onLoadDataType = ((options: CascaderOption[]) => void) | undefined;\n\nexport const onLoadDataCascader = (onLoadData: onLoadDataType) => (options: RCCascaderOption[]) => {\n  if (onLoadData) {\n    onLoadData(fromRCOptions(options));\n  }\n};\n\nconst fromRCOptions = (options: RCCascaderOption[]): CascaderOption[] => {\n  return options.map(fromRCOption);\n};\n\nconst fromRCOption = (option: RCCascaderOption): CascaderOption => {\n  return {\n    value: option.value ?? '',\n    label: option.label,\n  };\n};\n","import { css } from '@emotion/css';\nimport memoizeOne from 'memoize-one';\nimport RCCascader from 'rc-cascader';\nimport React, { PureComponent } from 'react';\n\nimport { SelectableValue } from '@grafana/data';\n\nimport { Icon } from '../Icon/Icon';\nimport { Input } from '../Input/Input';\nimport { Select } from '../Select/Select';\n\nimport { onChangeCascader } from './optionMappings';\n\nexport interface CascaderProps {\n  /** The separator between levels in the search */\n  separator?: string;\n  placeholder?: string;\n  options: CascaderOption[];\n  /** Changes the value for every selection, including branch nodes. Defaults to true. */\n  changeOnSelect?: boolean;\n  onSelect(val: string): void;\n  /** Sets the width to a multiple of 8px. Should only be used with inline forms. Setting width of the container is preferred in other cases.*/\n  width?: number;\n  initialValue?: string;\n  allowCustomValue?: boolean;\n  /** A function for formatting the message for custom value creation. Only applies when allowCustomValue is set to true*/\n  formatCreateLabel?: (val: string) => string;\n  /** If true all levels are shown in the input by simple concatenating the labels */\n  displayAllSelectedLevels?: boolean;\n  onBlur?: () => void;\n  /** When mounted focus automatically on the input */\n  autoFocus?: boolean;\n  /** Keep the dropdown open all the time, useful in case whole cascader visibility is controlled by the parent */\n  alwaysOpen?: boolean;\n  /** Don't show what is selected in the cascader input/search. Useful when input is used just as search and the\n      cascader is hidden after selection. */\n  hideActiveLevelLabel?: boolean;\n}\n\ninterface CascaderState {\n  isSearching: boolean;\n  focusCascade: boolean;\n  //Array for cascade navigation\n  rcValue: SelectableValue<string[]>;\n  activeLabel: string;\n}\n\nexport interface CascaderOption {\n  /**\n   *  The value used under the hood\n   */\n  value: any;\n  /**\n   *  The label to display in the UI\n   */\n  label: string;\n  /** Items will be just flattened into the main list of items recursively. */\n  items?: CascaderOption[];\n  disabled?: boolean;\n  /** Avoid using */\n  title?: string;\n  /**  Children will be shown in a submenu. Use 'items' instead, as 'children' exist to ensure backwards compatibility.*/\n  children?: CascaderOption[];\n}\n\nconst disableDivFocus = css(`\n&:focus{\n  outline: none;\n}\n`);\n\nconst DEFAULT_SEPARATOR = '/';\n\nexport class Cascader extends PureComponent<CascaderProps, CascaderState> {\n  constructor(props: CascaderProps) {\n    super(props);\n    const searchableOptions = this.getSearchableOptions(props.options);\n    const { rcValue, activeLabel } = this.setInitialValue(searchableOptions, props.initialValue);\n    this.state = {\n      isSearching: false,\n      focusCascade: false,\n      rcValue,\n      activeLabel,\n    };\n  }\n\n  static defaultProps = { changeOnSelect: true };\n\n  flattenOptions = (options: CascaderOption[], optionPath: CascaderOption[] = []) => {\n    let selectOptions: Array<SelectableValue<string[]>> = [];\n    for (const option of options) {\n      const cpy = [...optionPath];\n      cpy.push(option);\n      if (!option.items) {\n        selectOptions.push({\n          singleLabel: cpy[cpy.length - 1].label,\n          label: cpy.map((o) => o.label).join(this.props.separator || ` ${DEFAULT_SEPARATOR} `),\n          value: cpy.map((o) => o.value),\n        });\n      } else {\n        selectOptions = [...selectOptions, ...this.flattenOptions(option.items, cpy)];\n      }\n    }\n    return selectOptions;\n  };\n\n  getSearchableOptions = memoizeOne((options: CascaderOption[]) => this.flattenOptions(options));\n\n  setInitialValue(searchableOptions: Array<SelectableValue<string[]>>, initValue?: string) {\n    if (!initValue) {\n      return { rcValue: [], activeLabel: '' };\n    }\n    for (const option of searchableOptions) {\n      const optionPath = option.value || [];\n\n      if (optionPath.indexOf(initValue) === optionPath.length - 1) {\n        return {\n          rcValue: optionPath,\n          activeLabel: this.props.displayAllSelectedLevels ? option.label : option.singleLabel || '',\n        };\n      }\n    }\n    if (this.props.allowCustomValue) {\n      return { rcValue: [], activeLabel: initValue };\n    }\n    return { rcValue: [], activeLabel: '' };\n  }\n\n  //For rc-cascader\n  onChange = (value: string[], selectedOptions: CascaderOption[]) => {\n    const activeLabel = this.props.hideActiveLevelLabel\n      ? ''\n      : this.props.displayAllSelectedLevels\n      ? selectedOptions.map((option) => option.label).join(this.props.separator || DEFAULT_SEPARATOR)\n      : selectedOptions[selectedOptions.length - 1].label;\n    this.setState({\n      rcValue: value,\n      focusCascade: true,\n      activeLabel,\n    });\n\n    this.props.onSelect(selectedOptions[selectedOptions.length - 1].value);\n  };\n\n  //For select\n  onSelect = (obj: SelectableValue<string[]>) => {\n    const valueArray = obj.value || [];\n    this.setState({\n      activeLabel: this.props.displayAllSelectedLevels ? obj.label : obj.singleLabel || '',\n      rcValue: valueArray,\n      isSearching: false,\n    });\n    this.props.onSelect(valueArray[valueArray.length - 1]);\n  };\n\n  onCreateOption = (value: string) => {\n    this.setState({\n      activeLabel: value,\n      rcValue: [],\n      isSearching: false,\n    });\n    this.props.onSelect(value);\n  };\n\n  onBlur = () => {\n    this.setState({\n      isSearching: false,\n      focusCascade: false,\n    });\n\n    if (this.state.activeLabel === '') {\n      this.setState({\n        rcValue: [],\n      });\n    }\n    this.props.onBlur?.();\n  };\n\n  onBlurCascade = () => {\n    this.setState({\n      focusCascade: false,\n    });\n\n    this.props.onBlur?.();\n  };\n\n  onInputKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (['ArrowDown', 'ArrowUp', 'Enter', 'ArrowLeft', 'ArrowRight', 'Backspace'].includes(e.key)) {\n      return;\n    }\n    this.setState({\n      focusCascade: false,\n      isSearching: true,\n    });\n  };\n\n  onSelectInputChange = (value: string) => {\n    if (value === '') {\n      this.setState({\n        isSearching: false,\n      });\n    }\n  };\n\n  render() {\n    const { allowCustomValue, formatCreateLabel, placeholder, width, changeOnSelect, options } = this.props;\n    const { focusCascade, isSearching, rcValue, activeLabel } = this.state;\n\n    const searchableOptions = this.getSearchableOptions(options);\n\n    return (\n      <div>\n        {isSearching ? (\n          <Select\n            allowCustomValue={allowCustomValue}\n            placeholder={placeholder}\n            autoFocus={!focusCascade}\n            onChange={this.onSelect}\n            onBlur={this.onBlur}\n            options={searchableOptions}\n            onCreateOption={this.onCreateOption}\n            formatCreateLabel={formatCreateLabel}\n            width={width}\n            onInputChange={this.onSelectInputChange}\n          />\n        ) : (\n          <RCCascader\n            onChange={onChangeCascader(this.onChange)}\n            options={options}\n            changeOnSelect={changeOnSelect}\n            value={rcValue.value}\n            fieldNames={{ label: 'label', value: 'value', children: 'items' }}\n            expandIcon={null}\n            open={this.props.alwaysOpen}\n          >\n            <div className={disableDivFocus}>\n              <Input\n                autoFocus={this.props.autoFocus}\n                width={width}\n                placeholder={placeholder}\n                onBlur={this.onBlurCascade}\n                value={activeLabel}\n                onKeyDown={this.onInputKeyDown}\n                onChange={() => {}}\n                suffix={\n                  focusCascade ? (\n                    <Icon name=\"angle-up\" />\n                  ) : (\n                    <Icon name=\"angle-down\" style={{ marginBottom: 0, marginLeft: '4px' }} />\n                  )\n                }\n              />\n            </div>\n          </RCCascader>\n        )}\n      </div>\n    );\n  }\n}\n","import { css } from '@emotion/css';\nimport RCCascader from 'rc-cascader';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { stylesFactory, useTheme2 } from '../../themes';\nimport { IconName } from '../../types/icon';\nimport { Button, ButtonProps } from '../Button';\nimport { CascaderOption } from '../Cascader/Cascader';\nimport { onChangeCascader, onLoadDataCascader } from '../Cascader/optionMappings';\nimport { Icon } from '../Icon/Icon';\n\nexport interface ButtonCascaderProps {\n  options: CascaderOption[];\n  children?: string;\n  icon?: IconName;\n  disabled?: boolean;\n  value?: string[];\n  fieldNames?: { label: string; value: string; children: string };\n  loadData?: (selectedOptions: CascaderOption[]) => void;\n  onChange?: (value: string[], selectedOptions: CascaderOption[]) => void;\n  onPopupVisibleChange?: (visible: boolean) => void;\n  className?: string;\n  variant?: ButtonProps['variant'];\n  buttonProps?: ButtonProps;\n  hideDownIcon?: boolean;\n}\n\nconst getStyles = stylesFactory((theme: GrafanaTheme2) => {\n  return {\n    popup: css`\n      label: popup;\n      z-index: ${theme.zIndex.dropdown};\n    `,\n    icons: {\n      right: css`\n        margin: 1px 0 0 4px;\n      `,\n      left: css`\n        margin: -1px 4px 0 0;\n      `,\n    },\n  };\n});\n\nexport const ButtonCascader = (props: ButtonCascaderProps) => {\n  const { onChange, className, loadData, icon, buttonProps, hideDownIcon, variant, disabled, ...rest } = props;\n  const theme = useTheme2();\n  const styles = getStyles(theme);\n\n  // Weird way to do this bit it goes around a styling issue in Button where even null/undefined child triggers\n  // styling change which messes up the look if there is only single icon content.\n  let content: React.ReactNode = props.children;\n  if (!hideDownIcon) {\n    content = [props.children, <Icon key={'down-icon'} name=\"angle-down\" className={styles.icons.right} />];\n  }\n\n  return (\n    <RCCascader\n      onChange={onChangeCascader(onChange)}\n      loadData={onLoadDataCascader(loadData)}\n      dropdownClassName={styles.popup}\n      {...rest}\n      expandIcon={null}\n    >\n      <Button icon={icon} disabled={disabled} variant={variant} {...(buttonProps ?? {})}>\n        {content}\n      </Button>\n    </RCCascader>\n  );\n};\n\nButtonCascader.displayName = 'ButtonCascader';\n","import { css, cx } from '@emotion/css';\nimport React, { HTMLAttributes } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\nimport { Spinner } from '../Spinner/Spinner';\n\n/**\n * @public\n */\nexport interface LoadingPlaceholderProps extends HTMLAttributes<HTMLDivElement> {\n  text: React.ReactNode;\n}\n\n/**\n * @public\n */\nexport const LoadingPlaceholder = ({ text, className, ...rest }: LoadingPlaceholderProps) => {\n  const styles = useStyles2(getStyles);\n  return (\n    <div className={cx(styles.container, className)} {...rest}>\n      {text} <Spinner inline={true} />\n    </div>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    container: css`\n      margin-bottom: ${theme.spacing(4)};\n    `,\n  };\n};\n","import { css, keyframes } from '@emotion/css';\nimport React, { CSSProperties } from 'react';\n\nimport { useStyles2 } from '../../themes';\n\nexport interface LoadingBarProps {\n  width: number;\n  ariaLabel?: string;\n}\n\nconst MILLISECONDS_PER_PIXEL = 2.4;\nconst MIN_DURATION_MS = 500;\nconst MAX_DURATION_MS = 4000;\n\nexport function LoadingBar({ width, ariaLabel = 'Loading bar' }: LoadingBarProps) {\n  const styles = useStyles2(getStyles);\n  const durationMs = Math.min(Math.max(Math.round(width * MILLISECONDS_PER_PIXEL), MIN_DURATION_MS), MAX_DURATION_MS);\n  const containerStyles: CSSProperties = {\n    width: '100%',\n    animation: `${styles.animation} ${durationMs}ms infinite linear`,\n    willChange: 'transform',\n  };\n\n  return (\n    <div style={containerStyles}>\n      <div aria-label={ariaLabel} className={styles.bar} />\n    </div>\n  );\n}\n\nconst getStyles = () => {\n  return {\n    animation: keyframes({\n      '0%': {\n        transform: 'translateX(-50%)',\n      },\n      '100%': {\n        transform: `translateX(100%)`,\n      },\n    }),\n    bar: css({\n      width: '28%',\n      height: 1,\n      background: 'linear-gradient(90deg, rgba(110, 159, 255, 0) 0%, #6E9FFF 80.75%, rgba(110, 159, 255, 0) 100%)',\n    }),\n  };\n};\n","export const closePopover = (event: React.KeyboardEvent, hidePopper: () => void) => {\n  if (event.key === 'Tab' || event.altKey || event.ctrlKey || event.metaKey) {\n    return;\n  }\n\n  event.stopPropagation();\n\n  if (event.key === 'Escape') {\n    hidePopper();\n  }\n\n  return;\n};\n","import { css } from '@emotion/css';\nimport { useFocusRing } from '@react-aria/focus';\nimport React from 'react';\nimport tinycolor from 'tinycolor2';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\n\nimport { useTheme2 } from '../../themes/ThemeContext';\n\n/** @internal */\nexport enum ColorSwatchVariant {\n  Small = 'small',\n  Large = 'large',\n}\n\n/** @internal */\nexport interface Props extends React.HTMLAttributes<HTMLDivElement> {\n  color: string;\n  label?: string;\n  variant?: ColorSwatchVariant;\n  isSelected?: boolean;\n}\n\n/** @internal */\nexport const ColorSwatch = React.forwardRef<HTMLDivElement, Props>(\n  ({ color, label, variant = ColorSwatchVariant.Small, isSelected, 'aria-label': ariaLabel, ...otherProps }, ref) => {\n    const theme = useTheme2();\n    const { isFocusVisible, focusProps } = useFocusRing();\n    const styles = getStyles(theme, variant, color, isFocusVisible, isSelected);\n    const hasLabel = !!label;\n    const colorLabel = `${ariaLabel || label} color`;\n\n    return (\n      <div ref={ref} className={styles.wrapper} data-testid={selectors.components.ColorSwatch.name} {...otherProps}>\n        {hasLabel && <span className={styles.label}>{label}</span>}\n        <button className={styles.swatch} {...focusProps} aria-label={colorLabel} />\n      </div>\n    );\n  }\n);\n\nconst getStyles = (\n  theme: GrafanaTheme2,\n  variant: ColorSwatchVariant,\n  color: string,\n  isFocusVisible: boolean,\n  isSelected?: boolean\n) => {\n  const tc = tinycolor(color);\n  const isSmall = variant === ColorSwatchVariant.Small;\n  const swatchSize = isSmall ? '16px' : '32px';\n  let border = 'none';\n\n  if (tc.getAlpha() < 0.1) {\n    border = `2px solid ${theme.colors.border.medium}`;\n  }\n\n  return {\n    wrapper: css({\n      display: 'flex',\n      alignItems: 'center',\n      cursor: 'pointer',\n    }),\n    label: css({\n      marginRight: theme.spacing(1),\n    }),\n    swatch: css({\n      width: swatchSize,\n      height: swatchSize,\n      background: `${color}`,\n      border,\n      borderRadius: '50%',\n      outlineOffset: '1px',\n      outline: isFocusVisible ? `2px solid  ${theme.colors.primary.main}` : 'none',\n      boxShadow: isSelected\n        ? `inset 0 0 0 2px ${color}, inset 0 0 0 4px ${theme.colors.getContrastText(color)}`\n        : 'none',\n      transition: theme.transitions.create(['transform'], {\n        duration: theme.transitions.duration.short,\n      }),\n      '&:hover': {\n        transform: 'scale(1.1)',\n      },\n    }),\n  };\n};\n\nColorSwatch.displayName = 'ColorSwatch';\n","export function reverseMap<T, Q>(arr: ArrayLike<T>, callbackfn: (value: T, index: number, array: ArrayLike<T>) => Q) {\n  const reversedAndMapped = new Array<Q>(arr.length);\n  for (let i = 0; i < arr.length; i++) {\n    const reverseIndex = arr.length - 1 - i;\n    reversedAndMapped[i] = callbackfn(arr[reverseIndex], reverseIndex, arr);\n  }\n\n  return reversedAndMapped;\n}\n","import { css } from '@emotion/css';\nimport { Property } from 'csstype';\nimport { upperFirst } from 'lodash';\nimport React from 'react';\n\nimport { GrafanaTheme2, ThemeVizHue } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes/ThemeContext';\nimport { reverseMap } from '../../utils/reverseMap';\n\nimport { ColorSwatch, ColorSwatchVariant } from './ColorSwatch';\n\ninterface NamedColorsGroupProps {\n  hue: ThemeVizHue;\n  selectedColor?: Property.Color;\n  onColorSelect: (colorName: string) => void;\n  key?: string;\n}\n\nconst NamedColorsGroup = ({ hue, selectedColor, onColorSelect, ...otherProps }: NamedColorsGroupProps) => {\n  const label = upperFirst(hue.name);\n  const styles = useStyles2(getStyles);\n\n  return (\n    <div className={styles.colorRow}>\n      <div className={styles.colorLabel}>{label}</div>\n      <div {...otherProps} className={styles.swatchRow}>\n        {reverseMap(hue.shades, (shade) => (\n          <ColorSwatch\n            key={shade.name}\n            aria-label={shade.name}\n            variant={shade.primary ? ColorSwatchVariant.Large : ColorSwatchVariant.Small}\n            isSelected={shade.name === selectedColor}\n            color={shade.color}\n            onClick={() => onColorSelect(shade.name)}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default NamedColorsGroup;\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    colorRow: css`\n      display: grid;\n      grid-template-columns: 25% 1fr;\n      grid-column-gap: ${theme.spacing(2)};\n      padding: ${theme.spacing(0.5, 0)};\n\n      &:hover {\n        background: ${theme.colors.background.secondary};\n      }\n    `,\n    colorLabel: css`\n      padding-left: ${theme.spacing(2)};\n      display: flex;\n      align-items: center;\n    `,\n    swatchRow: css`\n      display: flex;\n      gap: ${theme.spacing(1)};\n      align-items: center;\n      justify-content: space-around;\n      flex-direction: row;\n    `,\n  };\n};\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2, useTheme2 } from '../../themes/ThemeContext';\n\nimport { ColorSwatch } from './ColorSwatch';\nimport NamedColorsGroup from './NamedColorsGroup';\n\nexport interface NamedColorsPaletteProps {\n  color?: string;\n  onChange: (colorName: string) => void;\n}\n\nexport const NamedColorsPalette = ({ color, onChange }: NamedColorsPaletteProps) => {\n  const theme = useTheme2();\n  const styles = useStyles2(getStyles);\n\n  const swatches: JSX.Element[] = [];\n  for (const hue of theme.visualization.hues) {\n    swatches.push(<NamedColorsGroup key={hue.name} selectedColor={color} hue={hue} onColorSelect={onChange} />);\n  }\n\n  return (\n    <>\n      <div className={styles.swatches}>{swatches}</div>\n      <div className={styles.extraColors}>\n        <ColorSwatch\n          isSelected={color === 'transparent'}\n          color={'rgba(0,0,0,0)'}\n          label=\"Transparent\"\n          onClick={() => onChange('transparent')}\n        />\n        <ColorSwatch\n          isSelected={color === 'text'}\n          color={theme.colors.text.primary}\n          label=\"Text color\"\n          onClick={() => onChange('text')}\n        />\n      </div>\n    </>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    container: css`\n      display: flex;\n      flex-direction: column;\n    `,\n    extraColors: css`\n      display: flex;\n      align-items: center;\n      justify-content: space-around;\n      gap: ${theme.spacing(1)};\n      padding: ${theme.spacing(1, 0)};\n    `,\n    swatches: css`\n      display: grid;\n      flex-grow: 1;\n    `,\n  };\n};\n","import { cx, css } from '@emotion/css';\nimport { debounce } from 'lodash';\nimport React, { forwardRef, useState, useEffect, useMemo } from 'react';\nimport tinycolor from 'tinycolor2';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\nimport { Input, Props as InputProps } from '../Input/Input';\n\nimport { ColorPickerProps } from './ColorPickerPopover';\n\ninterface ColorInputProps extends ColorPickerProps, Omit<InputProps, 'color' | 'onChange'> {\n  isClearable?: boolean;\n  buttonAriaLabel?: string;\n}\n\nconst ColorInput = forwardRef<HTMLInputElement, ColorInputProps>(\n  ({ color, onChange, isClearable = false, onClick, onBlur, disabled, buttonAriaLabel, ...inputProps }, ref) => {\n    const [value, setValue] = useState(color);\n    const [previousColor, setPreviousColor] = useState(color);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const updateColor = useMemo(() => debounce(onChange, 100), []);\n\n    useEffect(() => {\n      const newColor = tinycolor(color);\n      if (newColor.isValid() && color !== previousColor) {\n        setValue(newColor.toString());\n        setPreviousColor(color);\n      }\n    }, [color, previousColor]);\n\n    const onChangeColor = (event: React.SyntheticEvent<HTMLInputElement>) => {\n      const { value: colorValue } = event.currentTarget;\n\n      setValue(colorValue);\n      if (colorValue === '' && isClearable) {\n        updateColor(colorValue);\n        return;\n      }\n      const newColor = tinycolor(colorValue);\n\n      if (newColor.isValid()) {\n        updateColor(newColor.toString());\n      }\n    };\n\n    const onBlurInput = (event: React.FocusEvent<HTMLInputElement>) => {\n      const newColor = tinycolor(value);\n\n      if (!newColor.isValid()) {\n        setValue(color);\n      }\n\n      onBlur?.(event);\n    };\n\n    return (\n      <Input\n        {...inputProps}\n        value={value}\n        onChange={onChangeColor}\n        disabled={disabled}\n        onClick={onClick}\n        onBlur={onBlurInput}\n        addonBefore={<ColorPreview onClick={onClick} ariaLabel={buttonAriaLabel} disabled={disabled} color={color} />}\n        ref={ref}\n      />\n    );\n  }\n);\n\nColorInput.displayName = 'ColorInput';\n\nexport default ColorInput;\n\ninterface ColorPreviewProps {\n  color: string;\n  onClick?: React.MouseEventHandler<HTMLElement>;\n  disabled?: boolean;\n  ariaLabel?: string;\n}\n\nconst ColorPreview = ({ color, onClick, disabled, ariaLabel }: ColorPreviewProps) => {\n  const styles = useStyles2(getColorPreviewStyles);\n\n  return (\n    <button\n      type=\"button\"\n      onClick={onClick}\n      aria-label={ariaLabel}\n      disabled={disabled || !onClick}\n      className={cx(\n        styles,\n        css`\n          background-color: ${color};\n        `\n      )}\n    />\n  );\n};\n\nconst getColorPreviewStyles = (theme: GrafanaTheme2) => css`\n  height: 100%;\n  width: ${theme.spacing.gridSize * 4}px;\n  border-radius: ${theme.shape.borderRadius()} 0 0 ${theme.shape.borderRadius()};\n  border: 1px solid ${theme.colors.border.medium};\n`;\n","import { css } from '@emotion/css';\nimport React, { useMemo, useState } from 'react';\nimport { RgbaStringColorPicker } from 'react-colorful';\nimport { useThrottleFn } from 'react-use';\nimport tinycolor from 'tinycolor2';\n\nimport { GrafanaTheme2, colorManipulator } from '@grafana/data';\n\nimport { useStyles2, useTheme2 } from '../../themes';\n\nimport ColorInput from './ColorInput';\n\nexport interface SpectrumPaletteProps {\n  color: string;\n  onChange: (color: string) => void;\n}\n\nconst SpectrumPalette = ({ color, onChange }: SpectrumPaletteProps) => {\n  const [currentColor, setColor] = useState(color);\n\n  useThrottleFn(\n    (c) => {\n      onChange(colorManipulator.asHexString(theme.visualization.getColorByName(c)));\n    },\n    500,\n    [currentColor]\n  );\n\n  const theme = useTheme2();\n  const styles = useStyles2(getStyles);\n\n  const rgbaString = useMemo(() => {\n    return currentColor.startsWith('rgba')\n      ? currentColor\n      : tinycolor(theme.visualization.getColorByName(color)).toRgbString();\n  }, [currentColor, theme, color]);\n\n  return (\n    <div className={styles.wrapper}>\n      <RgbaStringColorPicker className={styles.root} color={rgbaString} onChange={setColor} />\n      <ColorInput theme={theme} color={rgbaString} onChange={setColor} className={styles.colorInput} />\n    </div>\n  );\n};\n\nexport const getStyles = (theme: GrafanaTheme2) => ({\n  wrapper: css`\n    flex-grow: 1;\n  `,\n  root: css`\n    &.react-colorful {\n      width: auto;\n    }\n\n    .react-colorful {\n      &__saturation {\n        border-radius: ${theme.shape.borderRadius(1)} ${theme.shape.borderRadius(1)} 0 0;\n      }\n      &__alpha {\n        border-radius: 0 0 ${theme.shape.borderRadius(1)} ${theme.shape.borderRadius(1)};\n      }\n      &__alpha,\n      &__hue {\n        height: ${theme.spacing(2)};\n        position: relative;\n      }\n      &__pointer {\n        height: ${theme.spacing(2)};\n        width: ${theme.spacing(2)};\n      }\n    }\n  `,\n  colorInput: css`\n    margin-top: ${theme.spacing(2)};\n  `,\n});\n\nexport default SpectrumPalette;\n","import { css } from '@emotion/css';\nimport { FocusScope } from '@react-aria/focus';\nimport React, { Component } from 'react';\n\nimport { GrafanaTheme2, colorManipulator } from '@grafana/data';\n\nimport { stylesFactory, withTheme2 } from '../../themes';\nimport { Themeable2 } from '../../types/theme';\nimport { PopoverContentProps } from '../Tooltip';\n\nimport { NamedColorsPalette } from './NamedColorsPalette';\nimport SpectrumPalette from './SpectrumPalette';\n\nexport type ColorPickerChangeHandler = (color: string) => void;\n\nexport interface ColorPickerProps extends Themeable2 {\n  color: string;\n  onChange: ColorPickerChangeHandler;\n\n  enableNamedColors?: boolean;\n}\n\nexport interface Props<T> extends ColorPickerProps, PopoverContentProps {\n  customPickers?: T;\n}\n\ntype PickerType = 'palette' | 'spectrum';\n\nexport interface CustomPickersDescriptor {\n  [key: string]: {\n    tabComponent: React.ComponentType<ColorPickerProps>;\n    name: string;\n  };\n}\n\ninterface State<T> {\n  activePicker: PickerType | keyof T;\n}\n\nclass UnThemedColorPickerPopover<T extends CustomPickersDescriptor> extends Component<Props<T>, State<T>> {\n  constructor(props: Props<T>) {\n    super(props);\n    this.state = {\n      activePicker: 'palette',\n    };\n  }\n\n  getTabClassName = (tabName: PickerType | keyof T) => {\n    const { activePicker } = this.state;\n    return `ColorPickerPopover__tab ${activePicker === tabName && 'ColorPickerPopover__tab--active'}`;\n  };\n\n  handleChange = (color: string) => {\n    const { onChange, enableNamedColors, theme } = this.props;\n    if (enableNamedColors) {\n      return onChange(color);\n    }\n    onChange(colorManipulator.asHexString(theme.visualization.getColorByName(color)));\n  };\n\n  onTabChange = (tab: PickerType | keyof T) => {\n    return () => this.setState({ activePicker: tab });\n  };\n\n  renderPicker = () => {\n    const { activePicker } = this.state;\n    const { color } = this.props;\n\n    switch (activePicker) {\n      case 'spectrum':\n        return <SpectrumPalette color={color} onChange={this.handleChange} />;\n      case 'palette':\n        return <NamedColorsPalette color={color} onChange={this.handleChange} />;\n      default:\n        return this.renderCustomPicker(activePicker);\n    }\n  };\n\n  renderCustomPicker = (tabKey: keyof T) => {\n    const { customPickers, color, theme } = this.props;\n    if (!customPickers) {\n      return null;\n    }\n\n    return React.createElement(customPickers[tabKey].tabComponent, {\n      color,\n      theme,\n      onChange: this.handleChange,\n    });\n  };\n\n  renderCustomPickerTabs = () => {\n    const { customPickers } = this.props;\n\n    if (!customPickers) {\n      return null;\n    }\n\n    return (\n      <>\n        {Object.keys(customPickers).map((key) => {\n          return (\n            <button className={this.getTabClassName(key)} onClick={this.onTabChange(key)} key={key}>\n              {customPickers[key].name}\n            </button>\n          );\n        })}\n      </>\n    );\n  };\n\n  render() {\n    const { theme } = this.props;\n    const styles = getStyles(theme);\n    return (\n      <FocusScope contain restoreFocus autoFocus>\n        {/*\n          tabIndex=-1 is needed here to support highlighting text within the picker when using FocusScope\n          see https://github.com/adobe/react-spectrum/issues/1604#issuecomment-781574668\n        */}\n        <div tabIndex={-1} className={styles.colorPickerPopover}>\n          <div className={styles.colorPickerPopoverTabs}>\n            <button className={this.getTabClassName('palette')} onClick={this.onTabChange('palette')}>\n              Colors\n            </button>\n            <button className={this.getTabClassName('spectrum')} onClick={this.onTabChange('spectrum')}>\n              Custom\n            </button>\n            {this.renderCustomPickerTabs()}\n          </div>\n          <div className={styles.colorPickerPopoverContent}>{this.renderPicker()}</div>\n        </div>\n      </FocusScope>\n    );\n  }\n}\n\nexport const ColorPickerPopover = withTheme2(UnThemedColorPickerPopover);\nColorPickerPopover.displayName = 'ColorPickerPopover';\n\nconst getStyles = stylesFactory((theme: GrafanaTheme2) => {\n  return {\n    colorPickerPopover: css`\n      border-radius: ${theme.shape.borderRadius()};\n      box-shadow: ${theme.shadows.z3};\n      background: ${theme.colors.background.primary};\n      border: 1px solid ${theme.colors.border.medium};\n\n      .ColorPickerPopover__tab {\n        width: 50%;\n        text-align: center;\n        padding: ${theme.spacing(1, 0)};\n        background: ${theme.colors.background.secondary};\n        color: ${theme.colors.text.secondary};\n        font-size: ${theme.typography.bodySmall.fontSize};\n        cursor: pointer;\n        border: none;\n\n        &:focus:not(:focus-visible) {\n          outline: none;\n          box-shadow: none;\n        }\n\n        :focus-visible {\n          position: relative;\n        }\n      }\n\n      .ColorPickerPopover__tab--active {\n        color: ${theme.colors.text.primary};\n        font-weight: ${theme.typography.fontWeightMedium};\n        background: ${theme.colors.background.primary};\n      }\n    `,\n    colorPickerPopoverContent: css`\n      width: 246px;\n      font-size: ${theme.typography.bodySmall.fontSize};\n      min-height: 184px;\n      padding: ${theme.spacing(1)};\n      display: flex;\n      flex-direction: column;\n    `,\n    colorPickerPopoverTabs: css`\n      display: flex;\n      width: 100%;\n      border-radius: ${theme.shape.borderRadius()} ${theme.shape.borderRadius()} 0 0;\n    `,\n  };\n});\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { withTheme2, useStyles2 } from '../../themes';\nimport { Switch } from '../Forms/Legacy/Switch/Switch';\nimport { PopoverContentProps } from '../Tooltip';\n\nimport { ColorPickerPopover, ColorPickerProps } from './ColorPickerPopover';\n\nexport interface SeriesColorPickerPopoverProps extends ColorPickerProps, PopoverContentProps {\n  yaxis?: number;\n  onToggleAxis?: () => void;\n}\n\nexport const SeriesColorPickerPopover = (props: SeriesColorPickerPopoverProps) => {\n  const styles = useStyles2(getStyles);\n  const { yaxis, onToggleAxis, color, ...colorPickerProps } = props;\n\n  const customPickers = onToggleAxis\n    ? {\n        yaxis: {\n          name: 'Y-Axis',\n          tabComponent() {\n            return (\n              <Switch\n                key=\"yaxisSwitch\"\n                label=\"Use right y-axis\"\n                className={styles.colorPickerAxisSwitch}\n                labelClass={styles.colorPickerAxisSwitchLabel}\n                checked={yaxis === 2}\n                onChange={() => {\n                  if (onToggleAxis) {\n                    onToggleAxis();\n                  }\n                }}\n              />\n            );\n          },\n        },\n      }\n    : undefined;\n  return <ColorPickerPopover {...colorPickerProps} color={color || '#000000'} customPickers={customPickers} />;\n};\n\n// This component is to enable SeriesColorPickerPopover usage via series-color-picker-popover directive\nexport const SeriesColorPickerPopoverWithTheme = withTheme2(SeriesColorPickerPopover);\n\nconst getStyles = () => {\n  return {\n    colorPickerAxisSwitch: css`\n      width: 100%;\n    `,\n    colorPickerAxisSwitchLabel: css`\n      display: flex;\n      flex-grow: 1;\n    `,\n  };\n};\n","import { css } from '@emotion/css';\nimport React, { Component, createRef } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { withTheme2, stylesFactory } from '../../themes';\nimport { closePopover } from '../../utils/closePopover';\nimport { Popover } from '../Tooltip/Popover';\nimport { PopoverController } from '../Tooltip/PopoverController';\n\nimport { ColorPickerPopover, ColorPickerProps } from './ColorPickerPopover';\nimport { ColorSwatch } from './ColorSwatch';\nimport { SeriesColorPickerPopover } from './SeriesColorPickerPopover';\n\n/**\n * If you need custom trigger for the color picker you can do that with a render prop pattern and supply a function\n * as a child. You will get show/hide function which you can map to desired interaction (like onClick or onMouseLeave)\n * and a ref which needs to be passed to an HTMLElement for correct positioning. If you want to use class or functional\n * component as a custom trigger you will need to forward the reference to first HTMLElement child.\n */\ntype ColorPickerTriggerRenderer = (props: {\n  // This should be a React.RefObject<HTMLElement> but due to how object refs are defined you cannot downcast from that\n  // to a specific type like React.RefObject<HTMLDivElement> even though it would be fine in runtime.\n  ref: React.RefObject<any>;\n  showColorPicker: () => void;\n  hideColorPicker: () => void;\n}) => React.ReactNode;\n\nexport const colorPickerFactory = <T extends ColorPickerProps>(\n  popover: React.ComponentType<React.PropsWithChildren<T>>,\n  displayName = 'ColorPicker'\n) => {\n  return class ColorPicker extends Component<T & { children?: ColorPickerTriggerRenderer }> {\n    static displayName = displayName;\n    pickerTriggerRef = createRef<any>();\n\n    render() {\n      const { theme, children, onChange } = this.props;\n      const styles = getStyles(theme);\n      const popoverElement = React.createElement(popover, {\n        ...{ ...this.props, children: null },\n        onChange,\n      });\n\n      return (\n        <PopoverController content={popoverElement} hideAfter={300}>\n          {(showPopper, hidePopper, popperProps) => {\n            return (\n              <>\n                {this.pickerTriggerRef.current && (\n                  <Popover\n                    {...popperProps}\n                    referenceElement={this.pickerTriggerRef.current}\n                    wrapperClassName={styles.colorPicker}\n                    onMouseLeave={hidePopper}\n                    onMouseEnter={showPopper}\n                    onKeyDown={(event) => closePopover(event, hidePopper)}\n                  />\n                )}\n\n                {children ? (\n                  // Children have a bit weird type due to intersection used in the definition so we need to cast here,\n                  // but the definition is correct and should not allow to pass a children that does not conform to\n                  // ColorPickerTriggerRenderer type.\n                  (children as ColorPickerTriggerRenderer)({\n                    ref: this.pickerTriggerRef,\n                    showColorPicker: showPopper,\n                    hideColorPicker: hidePopper,\n                  })\n                ) : (\n                  <ColorSwatch\n                    ref={this.pickerTriggerRef}\n                    onClick={showPopper}\n                    onMouseLeave={hidePopper}\n                    color={theme.visualization.getColorByName(this.props.color || '#000000')}\n                  />\n                )}\n              </>\n            );\n          }}\n        </PopoverController>\n      );\n    }\n  };\n};\n\nexport const ColorPicker = withTheme2(colorPickerFactory(ColorPickerPopover, 'ColorPicker'));\nexport const SeriesColorPicker = withTheme2(colorPickerFactory(SeriesColorPickerPopover, 'SeriesColorPicker'));\n\nconst getStyles = stylesFactory((theme: GrafanaTheme2) => {\n  return {\n    colorPicker: css`\n      position: absolute;\n      z-index: ${theme.zIndex.tooltip};\n      color: ${theme.colors.text.primary};\n      max-width: 400px;\n      font-size: ${theme.typography.size.sm};\n      // !important because these styles are also provided to popper via .popper classes from Tooltip component\n      // hope to get rid of those soon\n      padding: 15px !important;\n      & [data-placement^='top'] {\n        padding-left: 0 !important;\n        padding-right: 0 !important;\n      }\n      & [data-placement^='bottom'] {\n        padding-left: 0 !important;\n        padding-right: 0 !important;\n      }\n      & [data-placement^='left'] {\n        padding-top: 0 !important;\n      }\n      & [data-placement^='right'] {\n        padding-top: 0 !important;\n      }\n    `,\n  };\n});\n","import React, { PureComponent, createRef } from 'react';\n\nexport interface Props {\n  /**\n   *  Callback to trigger when clicking outside of current element occurs.\n   */\n  onClick: () => void;\n  /**\n   *  Runs the 'onClick' function when pressing a key outside of the current element. Defaults to true.\n   */\n  includeButtonPress: boolean;\n  /** Object to attach the click event listener to. */\n  parent: Window | Document;\n  /**\n   * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener. Defaults to false.\n   */\n  useCapture?: boolean;\n}\n\ninterface State {\n  hasEventListener: boolean;\n}\n\nexport class ClickOutsideWrapper extends PureComponent<React.PropsWithChildren<Props>, State> {\n  static defaultProps = {\n    includeButtonPress: true,\n    parent: typeof window !== 'undefined' ? window : null,\n    useCapture: false,\n  };\n  myRef = createRef<HTMLDivElement>();\n  state = {\n    hasEventListener: false,\n  };\n\n  componentDidMount() {\n    this.props.parent.addEventListener('click', this.onOutsideClick, this.props.useCapture);\n    if (this.props.includeButtonPress) {\n      // Use keyup since keydown already has an event listener on window\n      this.props.parent.addEventListener('keyup', this.onOutsideClick, this.props.useCapture);\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.parent.removeEventListener('click', this.onOutsideClick, this.props.useCapture);\n    if (this.props.includeButtonPress) {\n      this.props.parent.removeEventListener('keyup', this.onOutsideClick, this.props.useCapture);\n    }\n  }\n\n  onOutsideClick = (event: any) => {\n    const domNode = this.myRef.current;\n\n    if (!domNode || !domNode.contains(event.target)) {\n      this.props.onClick();\n    }\n  };\n\n  render() {\n    return <div ref={this.myRef}>{this.props.children}</div>;\n  }\n}\n","import { css, cx } from '@emotion/css';\nimport React, { useState, forwardRef } from 'react';\nimport { RgbaStringColorPicker } from 'react-colorful';\nimport { useThrottleFn } from 'react-use';\n\nimport { colorManipulator, GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2, useTheme2 } from '../../themes';\nimport { ClickOutsideWrapper } from '../ClickOutsideWrapper/ClickOutsideWrapper';\nimport { Props as InputProps } from '../Input/Input';\n\nimport ColorInput from './ColorInput';\nimport { getStyles as getPaletteStyles } from './SpectrumPalette';\n\nexport interface ColorPickerInputProps extends Omit<InputProps, 'value' | 'onChange'> {\n  value?: string;\n  onChange: (color: string) => void;\n  /** Format for returning the color in onChange callback, defaults to 'rgb' */\n  returnColorAs?: 'rgb' | 'hex';\n}\n\nexport const ColorPickerInput = forwardRef<HTMLInputElement, ColorPickerInputProps>(\n  ({ value = '', onChange, returnColorAs = 'rgb', ...inputProps }, ref) => {\n    const [currentColor, setColor] = useState(value);\n    const [isOpen, setIsOpen] = useState(false);\n    const theme = useTheme2();\n    const styles = useStyles2(getStyles);\n    const paletteStyles = useStyles2(getPaletteStyles);\n\n    useThrottleFn(\n      (c) => {\n        if (c === value) {\n          return;\n        }\n        // Default to an empty string if no color value is available\n        if (!c) {\n          onChange('');\n          return;\n        }\n        const color = theme.visualization.getColorByName(c);\n        if (returnColorAs === 'rgb') {\n          onChange(colorManipulator.asRgbString(color));\n        } else {\n          onChange(colorManipulator.asHexString(color));\n        }\n      },\n      500,\n      [currentColor]\n    );\n\n    return (\n      <ClickOutsideWrapper onClick={() => setIsOpen(false)}>\n        <div className={styles.wrapper}>\n          {isOpen && !inputProps.disabled && (\n            <RgbaStringColorPicker\n              data-testid={'color-popover'}\n              color={currentColor}\n              onChange={setColor}\n              className={cx(paletteStyles.root, styles.picker)}\n            />\n          )}\n          <ColorInput\n            {...inputProps}\n            theme={theme}\n            color={currentColor}\n            onChange={setColor}\n            buttonAriaLabel=\"Open color picker\"\n            onClick={() => setIsOpen(true)}\n            onBlur={() => setIsOpen(false)}\n            ref={ref}\n            isClearable\n          />\n        </div>\n      </ClickOutsideWrapper>\n    );\n  }\n);\n\nColorPickerInput.displayName = 'ColorPickerInput';\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    wrapper: css`\n      position: relative;\n    `,\n    picker: css`\n      &.react-colorful {\n        position: absolute;\n        width: 100%;\n        z-index: 11;\n        bottom: 36px;\n      }\n    `,\n    inner: css`\n      position: absolute;\n    `,\n  };\n};\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\n\nexport interface Props {\n  children: JSX.Element | string;\n}\n\nconst EmptySearchResult = ({ children }: Props) => {\n  const styles = useStyles2(getStyles);\n  return <div className={styles.container}>{children}</div>;\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    container: css`\n      border-left: 3px solid ${theme.colors.info.main};\n      background-color: ${theme.colors.background.secondary};\n      padding: ${theme.spacing(2)};\n      min-width: 350px;\n      border-radius: ${theme.shape.radius.default};\n      margin-bottom: ${theme.spacing(4)};\n    `,\n  };\n};\nexport { EmptySearchResult };\n","import React, { PureComponent } from 'react';\n\nimport { getValueFormats, SelectableValue } from '@grafana/data';\n\nimport { Cascader, CascaderOption } from '../Cascader/Cascader';\n\nexport interface UnitPickerProps {\n  onChange: (item?: string) => void;\n  value?: string;\n  width?: number;\n}\n\nfunction formatCreateLabel(input: string) {\n  return `Custom unit: ${input}`;\n}\n\nexport class UnitPicker extends PureComponent<UnitPickerProps> {\n  onChange = (value: SelectableValue<string>) => {\n    this.props.onChange(value.value);\n  };\n\n  render() {\n    const { value, width } = this.props;\n\n    // Set the current selection\n    let current: SelectableValue<string> | undefined = undefined;\n\n    // All units\n    const unitGroups = getValueFormats();\n\n    // Need to transform the data structure to work well with Select\n    const groupOptions: CascaderOption[] = unitGroups.map((group) => {\n      const options = group.submenu.map((unit) => {\n        const sel = {\n          label: unit.text,\n          value: unit.value,\n        };\n        if (unit.value === value) {\n          current = sel;\n        }\n        return sel;\n      });\n\n      return {\n        label: group.text,\n        value: group.text,\n        items: options,\n      };\n    });\n\n    // Show the custom unit\n    if (value && !current) {\n      current = { value, label: value };\n    }\n\n    return (\n      <Cascader\n        width={width}\n        initialValue={current && current.label}\n        allowCustomValue\n        changeOnSelect={false}\n        formatCreateLabel={formatCreateLabel}\n        options={groupOptions}\n        placeholder=\"Choose\"\n        onSelect={this.props.onChange}\n      />\n    );\n  }\n}\n","import { difference } from 'lodash';\nimport React, { PureComponent } from 'react';\n\nimport { fieldReducers, SelectableValue } from '@grafana/data';\n\nimport { Select } from '../Select/Select';\n\nexport interface Props {\n  placeholder?: string;\n  onChange: (stats: string[]) => void;\n  stats: string[];\n  allowMultiple?: boolean;\n  defaultStat?: string;\n  className?: string;\n  width?: number;\n  menuPlacement?: 'auto' | 'bottom' | 'top';\n  inputId?: string;\n}\n\nexport class StatsPicker extends PureComponent<Props> {\n  static defaultProps: Partial<Props> = {\n    allowMultiple: false,\n  };\n\n  componentDidMount() {\n    this.checkInput();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    this.checkInput();\n  }\n\n  checkInput = () => {\n    const { stats, allowMultiple, defaultStat, onChange } = this.props;\n\n    const current = fieldReducers.list(stats);\n    if (current.length !== stats.length) {\n      const found = current.map((v) => v.id);\n      const notFound = difference(stats, found);\n      console.warn('Unknown stats', notFound, stats);\n      onChange(current.map((stat) => stat.id));\n    }\n\n    // Make sure there is only one\n    if (!allowMultiple && stats.length > 1) {\n      console.warn('Removing extra stat', stats);\n      onChange([stats[0]]);\n    }\n\n    // Set the reducer from callback\n    if (defaultStat && stats.length < 1) {\n      onChange([defaultStat]);\n    }\n  };\n\n  onSelectionChange = (item: SelectableValue<string>) => {\n    const { onChange } = this.props;\n    if (Array.isArray(item)) {\n      onChange(item.map((v) => v.value));\n    } else {\n      onChange(item && item.value ? [item.value] : []);\n    }\n  };\n\n  render() {\n    const { stats, allowMultiple, defaultStat, placeholder, className, menuPlacement, width, inputId } = this.props;\n\n    const select = fieldReducers.selectOptions(stats);\n    return (\n      <Select\n        value={select.current}\n        className={className}\n        isClearable={!defaultStat}\n        isMulti={allowMultiple}\n        width={width}\n        isSearchable={true}\n        options={select.options}\n        placeholder={placeholder}\n        onChange={this.onSelectionChange}\n        menuPlacement={menuPlacement}\n        inputId={inputId}\n      />\n    );\n  }\n}\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\n\nexport function MenuDivider() {\n  const styles = useStyles2(getStyles);\n  return <div className={styles.divider} />;\n}\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    divider: css({\n      height: 1,\n      backgroundColor: theme.colors.border.weak,\n      margin: theme.spacing(0.5, 0),\n    }),\n  };\n};\n","import { css } from '@emotion/css';\nimport { uniqueId } from 'lodash';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\n\nimport { MenuItemProps } from './MenuItem';\n\n/** @internal */\nexport interface MenuItemsGroup<T = any> {\n  /** Label for the menu items group */\n  label?: string;\n  /** Aria label for accessibility support */\n  ariaLabel?: string;\n  /** Items of the group */\n  items: Array<MenuItemProps<T>>;\n}\n\n/** @internal */\nexport interface MenuGroupProps extends Partial<MenuItemsGroup> {\n  /** special children prop to pass children elements */\n  children: React.ReactNode;\n}\n\n/** @internal */\nexport const MenuGroup = ({ label, ariaLabel, children }: MenuGroupProps) => {\n  const styles = useStyles2(getStyles);\n  const labelID = `group-label-${uniqueId()}`;\n\n  return (\n    <div role=\"group\" aria-labelledby={!ariaLabel && label ? labelID : undefined} aria-label={ariaLabel}>\n      {label && (\n        <label id={labelID} className={styles.groupLabel} aria-hidden>\n          {label}\n        </label>\n      )}\n      {children}\n    </div>\n  );\n};\nMenuGroup.displayName = 'MenuGroup';\n\n/** @internal */\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    groupLabel: css`\n      color: ${theme.colors.text.secondary};\n      font-size: ${theme.typography.size.sm};\n      padding: ${theme.spacing(0.5, 1)};\n    `,\n  };\n};\n","import { RefObject, useEffect, useState } from 'react';\nimport { useEffectOnce } from 'react-use';\n\nconst modulo = (a: number, n: number) => ((a % n) + n) % n;\nconst UNFOCUSED = -1;\n\n/** @internal */\nexport interface UseMenuFocusProps {\n  localRef: RefObject<HTMLDivElement>;\n  isMenuOpen?: boolean;\n  openedWithArrow?: boolean;\n  setOpenedWithArrow?: (openedWithArrow: boolean) => void;\n  close?: () => void;\n  onOpen?: (focusOnItem: (itemId: number) => void) => void;\n  onClose?: () => void;\n  onKeyDown?: React.KeyboardEventHandler;\n}\n\n/** @internal */\nexport type UseMenuFocusReturn = [(event: React.KeyboardEvent) => void];\n\n/** @internal */\nexport const useMenuFocus = ({\n  localRef,\n  isMenuOpen,\n  openedWithArrow,\n  setOpenedWithArrow,\n  close,\n  onOpen,\n  onClose,\n  onKeyDown,\n}: UseMenuFocusProps): UseMenuFocusReturn => {\n  const [focusedItem, setFocusedItem] = useState(UNFOCUSED);\n\n  useEffect(() => {\n    if (isMenuOpen && openedWithArrow) {\n      setFocusedItem(0);\n      setOpenedWithArrow?.(false);\n    }\n  }, [isMenuOpen, openedWithArrow, setOpenedWithArrow]);\n\n  useEffect(() => {\n    const menuItems = localRef?.current?.querySelectorAll<HTMLElement | HTMLButtonElement | HTMLAnchorElement>(\n      '[data-role=\"menuitem\"]:not([data-disabled])'\n    );\n    menuItems?.[focusedItem]?.focus();\n    menuItems?.forEach((menuItem, i) => {\n      menuItem.tabIndex = i === focusedItem ? 0 : -1;\n    });\n  }, [localRef, focusedItem]);\n\n  useEffectOnce(() => {\n    onOpen?.(setFocusedItem);\n  });\n\n  const handleKeys = (event: React.KeyboardEvent) => {\n    const menuItems = localRef?.current?.querySelectorAll<HTMLElement | HTMLButtonElement | HTMLAnchorElement>(\n      '[data-role=\"menuitem\"]:not([data-disabled])'\n    );\n    const menuItemsCount = menuItems?.length ?? 0;\n\n    switch (event.key) {\n      case 'ArrowUp':\n        event.preventDefault();\n        event.stopPropagation();\n        setFocusedItem(modulo(focusedItem - 1, menuItemsCount));\n        break;\n      case 'ArrowDown':\n        event.preventDefault();\n        event.stopPropagation();\n        setFocusedItem(modulo(focusedItem + 1, menuItemsCount));\n        break;\n      case 'ArrowLeft':\n        event.preventDefault();\n        event.stopPropagation();\n        setFocusedItem(UNFOCUSED);\n        close?.();\n        break;\n      case 'Home':\n        event.preventDefault();\n        event.stopPropagation();\n        setFocusedItem(0);\n        break;\n      case 'End':\n        event.preventDefault();\n        event.stopPropagation();\n        setFocusedItem(menuItemsCount - 1);\n        break;\n      case 'Enter':\n        event.preventDefault();\n        event.stopPropagation();\n        menuItems?.[focusedItem]?.click();\n        break;\n      case 'Escape':\n        onClose?.();\n        break;\n      case 'Tab':\n        event.preventDefault();\n        onClose?.();\n        break;\n      default:\n        break;\n    }\n\n    // Forward event to parent\n    onKeyDown?.(event);\n  };\n\n  return [handleKeys];\n};\n","/**\n * Returns whether the provided element overflows the viewport bounds\n *\n * @param element The element we want to know about\n */\nexport const isElementOverflowing = (element: HTMLElement | null) => {\n  if (!element) {\n    return false;\n  }\n\n  const wrapperPos = element.parentElement!.getBoundingClientRect();\n  const pos = element.getBoundingClientRect();\n\n  return pos.width !== 0 && wrapperPos.right + pos.width + 10 > window.innerWidth;\n};\n","import { css, cx } from '@emotion/css';\nimport React, { CSSProperties, ReactElement, useEffect, useRef, useState } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\n\nimport { useStyles2 } from '../../themes';\nimport { Icon } from '../Icon/Icon';\n\nimport { MenuItemProps } from './MenuItem';\nimport { useMenuFocus } from './hooks';\nimport { isElementOverflowing } from './utils';\n\n/** @internal */\nexport interface SubMenuProps {\n  /** List of menu items of the subMenu */\n  items?: Array<ReactElement<MenuItemProps>>;\n  /** Open */\n  isOpen: boolean;\n  /** Marks whether subMenu was opened with arrow */\n  openedWithArrow: boolean;\n  /** Changes value of openedWithArrow */\n  setOpenedWithArrow: (openedWithArrow: boolean) => void;\n  /** Closes the subMenu */\n  close: () => void;\n  /** Custom style */\n  customStyle?: CSSProperties;\n}\n\n/** @internal */\nexport const SubMenu = React.memo(\n  ({ items, isOpen, openedWithArrow, setOpenedWithArrow, close, customStyle }: SubMenuProps) => {\n    const styles = useStyles2(getStyles);\n    const localRef = useRef<HTMLDivElement>(null);\n    const [handleKeys] = useMenuFocus({\n      localRef,\n      isMenuOpen: isOpen,\n      openedWithArrow,\n      setOpenedWithArrow,\n      close,\n    });\n\n    const [pushLeft, setPushLeft] = useState(false);\n    useEffect(() => {\n      if (isOpen && localRef.current) {\n        setPushLeft(isElementOverflowing(localRef.current));\n      }\n    }, [isOpen]);\n\n    return (\n      <>\n        <div className={styles.iconWrapper} aria-label={selectors.components.Menu.SubMenu.icon}>\n          <Icon name=\"angle-right\" className={styles.icon} aria-hidden />\n        </div>\n        {isOpen && (\n          <div\n            ref={localRef}\n            className={cx(styles.subMenu, { [styles.pushLeft]: pushLeft })}\n            aria-label={selectors.components.Menu.SubMenu.container}\n            style={customStyle}\n          >\n            <div tabIndex={-1} className={styles.itemsWrapper} role=\"menu\" onKeyDown={handleKeys}>\n              {items}\n            </div>\n          </div>\n        )}\n      </>\n    );\n  }\n);\n\nSubMenu.displayName = 'SubMenu';\n\n/** @internal */\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    iconWrapper: css`\n      display: flex;\n      flex: 1;\n      justify-content: end;\n    `,\n    icon: css`\n      opacity: 0.7;\n      margin-left: ${theme.spacing(1)};\n      color: ${theme.colors.text.secondary};\n    `,\n    itemsWrapper: css`\n      background: ${theme.colors.background.primary};\n      box-shadow: ${theme.shadows.z3};\n      display: inline-block;\n      border-radius: ${theme.shape.borderRadius()};\n    `,\n    pushLeft: css`\n      right: 100%;\n      left: unset;\n    `,\n    subMenu: css`\n      position: absolute;\n      top: 0;\n      left: 100%;\n      z-index: ${theme.zIndex.dropdown};\n    `,\n  };\n};\n","import { css, cx } from '@emotion/css';\nimport React, { ReactElement, useCallback, useState, useRef, useImperativeHandle, CSSProperties } from 'react';\n\nimport { GrafanaTheme2, LinkTarget } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\nimport { getFocusStyles } from '../../themes/mixins';\nimport { IconName } from '../../types';\nimport { Icon } from '../Icon/Icon';\n\nimport { SubMenu } from './SubMenu';\n\n/** @internal */\nexport type MenuItemElement = HTMLAnchorElement & HTMLButtonElement & HTMLDivElement;\n\n/** @internal */\nexport interface MenuItemProps<T = any> {\n  /** Label of the menu item */\n  label: string;\n  /** Aria label for accessibility support */\n  ariaLabel?: string;\n  /** Aria checked for accessibility support */\n  ariaChecked?: boolean;\n  /** Target of the menu item (i.e. new window)  */\n  target?: LinkTarget;\n  /** Icon of the menu item */\n  icon?: IconName;\n  /** Role of the menu item */\n  role?: string;\n  /** Url of the menu item */\n  url?: string;\n  /** Handler for the click behaviour */\n  onClick?: (event: React.MouseEvent<HTMLElement>, payload?: T) => void;\n  /** Custom MenuItem styles*/\n  className?: string;\n  /** Active */\n  active?: boolean;\n  /** Disabled */\n  disabled?: boolean;\n  /** Show in destructive style (error color) */\n  destructive?: boolean;\n  tabIndex?: number;\n  /** List of menu items for the subMenu */\n  childItems?: Array<ReactElement<MenuItemProps>>;\n  /** Custom style for SubMenu */\n  customSubMenuContainerStyles?: CSSProperties;\n  /** Shortcut key combination */\n  shortcut?: string;\n  /** Test id for e2e tests and fullstory*/\n  testId?: string;\n}\n\n/** @internal */\nexport const MenuItem = React.memo(\n  React.forwardRef<MenuItemElement, MenuItemProps>((props, ref) => {\n    const {\n      url,\n      icon,\n      label,\n      ariaLabel,\n      ariaChecked,\n      target,\n      onClick,\n      className,\n      active,\n      disabled,\n      destructive,\n      childItems,\n      role = 'menuitem',\n      tabIndex = -1,\n      customSubMenuContainerStyles,\n      shortcut,\n      testId,\n    } = props;\n    const styles = useStyles2(getStyles);\n    const [isActive, setIsActive] = useState(active);\n    const [isSubMenuOpen, setIsSubMenuOpen] = useState(false);\n    const [openedWithArrow, setOpenedWithArrow] = useState(false);\n    const onMouseEnter = useCallback(() => {\n      if (disabled) {\n        return;\n      }\n\n      setIsSubMenuOpen(true);\n      setIsActive(true);\n    }, [disabled]);\n    const onMouseLeave = useCallback(() => {\n      if (disabled) {\n        return;\n      }\n\n      setIsSubMenuOpen(false);\n      setIsActive(false);\n    }, [disabled]);\n\n    const hasSubMenu = childItems && childItems.length > 0;\n    const ItemElement = hasSubMenu ? 'div' : url === undefined ? 'button' : 'a';\n    const itemStyle = cx(\n      {\n        [styles.item]: true,\n        [styles.active]: isActive,\n        [styles.disabled]: disabled,\n        [styles.destructive]: destructive && !disabled,\n      },\n      className\n    );\n    const disabledProps = {\n      [ItemElement === 'button' ? 'disabled' : 'aria-disabled']: disabled,\n      ...(ItemElement === 'a' && disabled && { href: undefined, onClick: undefined }),\n      ...(disabled && {\n        tabIndex: -1,\n        ['data-disabled']: disabled, // used to identify disabled items in Menu.tsx\n      }),\n    };\n\n    const localRef = useRef<MenuItemElement>(null);\n    useImperativeHandle(ref, () => localRef.current!);\n\n    const handleKeys = (event: React.KeyboardEvent) => {\n      switch (event.key) {\n        case 'ArrowRight':\n          event.preventDefault();\n          event.stopPropagation();\n          if (hasSubMenu) {\n            setIsSubMenuOpen(true);\n            setOpenedWithArrow(true);\n            setIsActive(true);\n          }\n          break;\n        default:\n          break;\n      }\n    };\n\n    const closeSubMenu = () => {\n      setIsSubMenuOpen(false);\n      setIsActive(false);\n      localRef?.current?.focus();\n    };\n\n    const hasShortcut = Boolean(shortcut && shortcut.length > 0);\n\n    return (\n      <ItemElement\n        target={target}\n        className={itemStyle}\n        rel={target === '_blank' ? 'noopener noreferrer' : undefined}\n        href={url}\n        onClick={onClick}\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={onMouseLeave}\n        onKeyDown={handleKeys}\n        role={url === undefined ? role : undefined}\n        data-role=\"menuitem\" // used to identify menuitem in Menu.tsx\n        ref={localRef}\n        data-testid={testId}\n        aria-label={ariaLabel}\n        aria-checked={ariaChecked}\n        tabIndex={tabIndex}\n        {...disabledProps}\n      >\n        <>\n          {icon && <Icon name={icon} className={styles.icon} aria-hidden />}\n          {label}\n\n          <div className={cx(styles.rightWrapper, { [styles.withShortcut]: hasShortcut })}>\n            {hasShortcut && (\n              <div className={styles.shortcut}>\n                <Icon name=\"keyboard\" aria-hidden />\n                {shortcut}\n              </div>\n            )}\n            {hasSubMenu && (\n              <SubMenu\n                items={childItems}\n                isOpen={isSubMenuOpen}\n                openedWithArrow={openedWithArrow}\n                setOpenedWithArrow={setOpenedWithArrow}\n                close={closeSubMenu}\n                customStyle={customSubMenuContainerStyles}\n              />\n            )}\n          </div>\n        </>\n      </ItemElement>\n    );\n  })\n);\n\nMenuItem.displayName = 'MenuItem';\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    item: css`\n      background: none;\n      cursor: pointer;\n      white-space: nowrap;\n      color: ${theme.colors.text.primary};\n      display: flex;\n      align-items: center;\n      padding: ${theme.spacing(0.5, 2)};\n      min-height: ${theme.spacing(4)};\n      margin: 0;\n      border: none;\n      width: 100%;\n      position: relative;\n\n      &:hover,\n      &:focus,\n      &:focus-visible {\n        background: ${theme.colors.action.hover};\n        color: ${theme.colors.text.primary};\n        text-decoration: none;\n      }\n\n      &:focus-visible {\n        ${getFocusStyles(theme)}\n      }\n    `,\n    active: css`\n      background: ${theme.colors.action.hover};\n    `,\n    destructive: css`\n      color: ${theme.colors.error.text};\n\n      svg {\n        color: ${theme.colors.error.text};\n      }\n\n      &:hover,\n      &:focus,\n      &:focus-visible {\n        background: ${theme.colors.error.main};\n        color: ${theme.colors.error.contrastText};\n\n        svg {\n          color: ${theme.colors.error.contrastText};\n        }\n      }\n    `,\n    disabled: css`\n      color: ${theme.colors.action.disabledText};\n\n      &:hover,\n      &:focus,\n      &:focus-visible {\n        cursor: not-allowed;\n        background: none;\n        color: ${theme.colors.action.disabledText};\n      }\n    `,\n    icon: css`\n      opacity: 0.7;\n      margin-right: 10px;\n      margin-left: -4px;\n      color: ${theme.colors.text.secondary};\n    `,\n    rightWrapper: css`\n      display: flex;\n      align-items: center;\n      margin-left: auto;\n    `,\n    shortcutIcon: css`\n      margin-right: ${theme.spacing(1)};\n    `,\n    withShortcut: css`\n      min-width: ${theme.spacing(10.5)};\n    `,\n    shortcut: css`\n      display: flex;\n      align-items: center;\n      gap: ${theme.spacing(1)};\n      margin-left: ${theme.spacing(2)};\n      color: ${theme.colors.text.secondary};\n      opacity: 0.7;\n    `,\n  };\n};\n","import { css, cx } from '@emotion/css';\nimport React, { useImperativeHandle, useRef } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\n\nimport { MenuDivider } from './MenuDivider';\nimport { MenuGroup } from './MenuGroup';\nimport { MenuItem } from './MenuItem';\nimport { useMenuFocus } from './hooks';\n\nexport interface MenuProps extends React.HTMLAttributes<HTMLDivElement> {\n  /** React element rendered at the top of the menu */\n  header?: React.ReactNode;\n  children: React.ReactNode;\n  ariaLabel?: string;\n  onOpen?: (focusOnItem: (itemId: number) => void) => void;\n  onClose?: () => void;\n  onKeyDown?: React.KeyboardEventHandler;\n}\n\nconst MenuComp = React.forwardRef<HTMLDivElement, MenuProps>(\n  ({ header, children, ariaLabel, onOpen, onClose, onKeyDown, ...otherProps }, forwardedRef) => {\n    const styles = useStyles2(getStyles);\n\n    const localRef = useRef<HTMLDivElement>(null);\n    useImperativeHandle(forwardedRef, () => localRef.current!);\n\n    const [handleKeys] = useMenuFocus({ localRef, onOpen, onClose, onKeyDown });\n\n    return (\n      <div\n        {...otherProps}\n        tabIndex={-1}\n        ref={localRef}\n        className={styles.wrapper}\n        role=\"menu\"\n        aria-label={ariaLabel}\n        onKeyDown={handleKeys}\n      >\n        {header && (\n          <div\n            className={cx(\n              styles.header,\n              Boolean(children) && React.Children.toArray(children).length > 0 && styles.headerBorder\n            )}\n          >\n            {header}\n          </div>\n        )}\n        {children}\n      </div>\n    );\n  }\n);\n\nMenuComp.displayName = 'Menu';\n\nexport const Menu = Object.assign(MenuComp, {\n  Item: MenuItem,\n  Divider: MenuDivider,\n  Group: MenuGroup,\n});\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    header: css({\n      padding: `${theme.spacing(0.5, 1, 1, 1)}`,\n    }),\n    headerBorder: css({\n      borderBottom: `1px solid ${theme.colors.border.weak}`,\n    }),\n    wrapper: css({\n      background: `${theme.colors.background.primary}`,\n      boxShadow: `${theme.shadows.z3}`,\n      display: `inline-block`,\n      borderRadius: `${theme.shape.borderRadius()}`,\n      padding: `${theme.spacing(0.5, 0)}`,\n    }),\n  };\n};\n","import { cx, css } from '@emotion/css';\nimport React, { forwardRef, ButtonHTMLAttributes } from 'react';\n\nimport { GrafanaTheme2, IconName, isIconName } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\n\nimport { styleMixins, useStyles2 } from '../../themes';\nimport { getFocusStyles, getMouseFocusStyles } from '../../themes/mixins';\nimport { IconSize } from '../../types/icon';\nimport { getPropertiesForVariant } from '../Button';\nimport { Icon } from '../Icon/Icon';\nimport { Tooltip } from '../Tooltip';\n\ntype CommonProps = {\n  /** Icon name */\n  icon?: IconName | React.ReactNode;\n  /** Icon size */\n  iconSize?: IconSize;\n  /** Tooltip */\n  tooltip?: string;\n  /** For image icons */\n  imgSrc?: string;\n  /** Alt text for imgSrc */\n  imgAlt?: string;\n  /** if true or false will show angle-down/up */\n  isOpen?: boolean;\n  /** Controls flex-grow: 1 */\n  fullWidth?: boolean;\n  /** reduces padding to xs */\n  narrow?: boolean;\n  /** variant */\n  variant?: ToolbarButtonVariant;\n  /** Hide any children and only show icon */\n  iconOnly?: boolean;\n  /** Show highlight dot */\n  isHighlighted?: boolean;\n};\n\nexport type ToolbarButtonProps = CommonProps & ButtonHTMLAttributes<HTMLButtonElement>;\n\nexport type ToolbarButtonVariant = 'default' | 'primary' | 'destructive' | 'active' | 'canvas';\n\nexport const ToolbarButton = forwardRef<HTMLButtonElement, ToolbarButtonProps>(\n  (\n    {\n      tooltip,\n      icon,\n      iconSize,\n      className,\n      children,\n      imgSrc,\n      imgAlt,\n      fullWidth,\n      isOpen,\n      narrow,\n      variant = 'default',\n      iconOnly,\n      'aria-label': ariaLabel,\n      isHighlighted,\n      ...rest\n    },\n    ref\n  ) => {\n    const styles = useStyles2(getStyles);\n\n    const buttonStyles = cx(\n      {\n        [styles.button]: true,\n        [styles.buttonFullWidth]: fullWidth,\n        [styles.narrow]: narrow,\n      },\n      styles[variant],\n      className\n    );\n\n    const contentStyles = cx({\n      [styles.content]: true,\n      [styles.contentWithIcon]: !!icon,\n      [styles.contentWithRightIcon]: isOpen !== undefined,\n    });\n\n    const body = (\n      <button\n        ref={ref}\n        className={buttonStyles}\n        aria-label={getButtonAriaLabel(ariaLabel, tooltip)}\n        aria-expanded={isOpen}\n        {...rest}\n      >\n        {renderIcon(icon, iconSize)}\n        {imgSrc && <img className={styles.img} src={imgSrc} alt={imgAlt ?? ''} />}\n        {children && !iconOnly && <div className={contentStyles}>{children}</div>}\n        {isOpen === false && <Icon name=\"angle-down\" />}\n        {isOpen === true && <Icon name=\"angle-up\" />}\n        {isHighlighted && <div className={styles.highlight} />}\n      </button>\n    );\n\n    return tooltip ? (\n      <Tooltip content={tooltip} placement=\"bottom\">\n        {body}\n      </Tooltip>\n    ) : (\n      body\n    );\n  }\n);\n\nToolbarButton.displayName = 'ToolbarButton';\n\nfunction getButtonAriaLabel(ariaLabel: string | undefined, tooltip: string | undefined) {\n  return ariaLabel ? ariaLabel : tooltip ? selectors.components.PageToolbar.item(tooltip) : undefined;\n}\n\nfunction renderIcon(icon: IconName | React.ReactNode, iconSize?: IconSize) {\n  if (!icon) {\n    return null;\n  }\n\n  if (isIconName(icon)) {\n    return <Icon name={icon} size={`${iconSize ? iconSize : 'lg'}`} />;\n  }\n\n  return icon;\n}\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  const primaryVariant = getPropertiesForVariant(theme, 'primary', 'solid');\n  const destructiveVariant = getPropertiesForVariant(theme, 'destructive', 'solid');\n\n  const defaultOld = css`\n    color: ${theme.colors.text.secondary};\n    background-color: ${theme.colors.background.primary};\n\n    &:hover {\n      color: ${theme.colors.text.primary};\n      background: ${theme.colors.background.secondary};\n    }\n  `;\n\n  const defaultTopNav = css`\n    color: ${theme.colors.text.secondary};\n    background: transparent;\n    border: 1px solid transparent;\n\n    &:hover {\n      color: ${theme.colors.text.primary};\n      background: ${theme.colors.background.secondary};\n    }\n  `;\n\n  return {\n    button: css`\n      label: toolbar-button;\n      position: relative;\n      display: flex;\n      align-items: center;\n      height: ${theme.spacing(theme.components.height.md)};\n      padding: ${theme.spacing(0, 1)};\n      border-radius: ${theme.shape.borderRadius()};\n      line-height: ${theme.components.height.md * theme.spacing.gridSize - 2}px;\n      font-weight: ${theme.typography.fontWeightMedium};\n      border: 1px solid ${theme.colors.border.weak};\n      white-space: nowrap;\n      transition: ${theme.transitions.create(['background', 'box-shadow', 'border-color', 'color'], {\n        duration: theme.transitions.duration.short,\n      })};\n\n      &:focus,\n      &:focus-visible {\n        ${getFocusStyles(theme)}\n        z-index: 1;\n      }\n\n      &:focus:not(:focus-visible) {\n        ${getMouseFocusStyles(theme)}\n      }\n\n      &:hover {\n        box-shadow: ${theme.shadows.z1};\n      }\n\n      &[disabled],\n      &:disabled {\n        cursor: not-allowed;\n        opacity: ${theme.colors.action.disabledOpacity};\n        background: ${theme.colors.action.disabledBackground};\n        box-shadow: none;\n\n        &:hover {\n          color: ${theme.colors.text.disabled};\n          background: ${theme.colors.action.disabledBackground};\n          box-shadow: none;\n        }\n      }\n    `,\n    default: theme.flags.topnav ? defaultTopNav : defaultOld,\n    canvas: defaultOld,\n    active: css`\n      color: ${theme.v1.palette.orangeDark};\n      border-color: ${theme.v1.palette.orangeDark};\n      background-color: transparent;\n\n      &:hover {\n        color: ${theme.colors.text.primary};\n        background: ${theme.colors.emphasize(theme.colors.background.canvas, 0.03)};\n      }\n    `,\n    primary: css(primaryVariant),\n    destructive: css(destructiveVariant),\n    narrow: css`\n      padding: 0 ${theme.spacing(0.5)};\n    `,\n    img: css`\n      width: 16px;\n      height: 16px;\n      margin-right: ${theme.spacing(1)};\n    `,\n    buttonFullWidth: css`\n      flex-grow: 1;\n    `,\n    content: css`\n      flex-grow: 1;\n    `,\n    contentWithIcon: css`\n      display: none;\n      padding-left: ${theme.spacing(1)};\n\n      @media ${styleMixins.mediaUp(theme.v1.breakpoints.md)} {\n        display: block;\n      }\n    `,\n    contentWithRightIcon: css`\n      padding-right: ${theme.spacing(0.5)};\n    `,\n    highlight: css`\n      background-color: ${theme.colors.success.main};\n      border-radius: 50%;\n      width: 6px;\n      height: 6px;\n      position: absolute;\n      top: -3px;\n      right: -3px;\n      z-index: 1;\n    `,\n  };\n};\n","import { css, cx } from '@emotion/css';\nimport { useDialog } from '@react-aria/dialog';\nimport { FocusScope } from '@react-aria/focus';\nimport { useOverlay } from '@react-aria/overlays';\nimport React, { forwardRef, HTMLAttributes, useState, useRef, useLayoutEffect, createRef } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useTheme2 } from '../../themes';\n\nimport { ToolbarButton } from './ToolbarButton';\nexport interface Props extends HTMLAttributes<HTMLDivElement> {\n  className?: string;\n  /** Determine flex-alignment of child buttons. Needed for overflow behaviour. */\n  alignment?: 'left' | 'right';\n}\n\nexport const ToolbarButtonRow = forwardRef<HTMLDivElement, Props>(\n  ({ alignment = 'left', className, children, ...rest }, ref) => {\n    // null is a valid react child so we need to filter it out to prevent unnecessary padding\n    const childrenWithoutNull = React.Children.toArray(children).filter((child) => child !== null);\n    const [childVisibility, setChildVisibility] = useState<boolean[]>(Array(childrenWithoutNull.length).fill(true));\n    const containerRef = useRef<HTMLDivElement>(null);\n    const [showOverflowItems, setShowOverflowItems] = useState(false);\n    const overflowRef = useRef<HTMLDivElement>(null);\n    const overflowItemsRef = createRef<HTMLDivElement>();\n    const { overlayProps } = useOverlay(\n      {\n        onClose: () => setShowOverflowItems(false),\n        isDismissable: true,\n        isOpen: showOverflowItems,\n        shouldCloseOnInteractOutside: (element: Element) => !overflowRef.current?.contains(element),\n      },\n      overflowItemsRef\n    );\n    const { dialogProps } = useDialog({}, overflowItemsRef);\n    const theme = useTheme2();\n    const overflowButtonOrder = alignment === 'left' ? childVisibility.indexOf(false) - 1 : childVisibility.length;\n    const styles = getStyles(theme, overflowButtonOrder, alignment);\n\n    useLayoutEffect(() => {\n      const intersectionObserver = new IntersectionObserver(\n        (entries) => {\n          entries.forEach((entry) => {\n            if (entry.target instanceof HTMLElement && entry.target.parentNode) {\n              const index = Array.prototype.indexOf.call(entry.target.parentNode.children, entry.target);\n              setChildVisibility((prev) => {\n                const newVisibility = [...prev];\n                newVisibility[index] = entry.isIntersecting;\n                return newVisibility;\n              });\n            }\n          });\n        },\n        {\n          threshold: 1,\n          root: containerRef.current,\n        }\n      );\n      if (containerRef.current) {\n        Array.from(containerRef.current.children).forEach((item) => {\n          // don't observe the overflow button\n          if (item instanceof HTMLElement && item !== overflowRef.current) {\n            intersectionObserver.observe(item);\n          }\n        });\n      }\n      return () => intersectionObserver.disconnect();\n    }, [children]);\n\n    return (\n      <div ref={containerRef} className={cx(styles.container, className)} {...rest}>\n        {childrenWithoutNull.map((child, index) => (\n          <div\n            key={index}\n            style={{ order: index, visibility: childVisibility[index] ? 'visible' : 'hidden' }}\n            className={styles.childWrapper}\n          >\n            {child}\n          </div>\n        ))}\n        {childVisibility.includes(false) && (\n          <div ref={overflowRef} className={styles.overflowButton}>\n            <ToolbarButton\n              variant={showOverflowItems ? 'active' : 'default'}\n              tooltip=\"Show more items\"\n              onClick={() => setShowOverflowItems(!showOverflowItems)}\n              icon=\"ellipsis-v\"\n              iconOnly\n              narrow\n            />\n            {showOverflowItems && (\n              <FocusScope contain autoFocus>\n                <div className={styles.overflowItems} ref={overflowItemsRef} {...overlayProps} {...dialogProps}>\n                  {childrenWithoutNull.map((child, index) => !childVisibility[index] && child)}\n                </div>\n              </FocusScope>\n            )}\n          </div>\n        )}\n      </div>\n    );\n  }\n);\n\nToolbarButtonRow.displayName = 'ToolbarButtonRow';\n\nconst getStyles = (theme: GrafanaTheme2, overflowButtonOrder: number, alignment: Props['alignment']) => ({\n  overflowButton: css`\n    order: ${overflowButtonOrder};\n  `,\n  overflowItems: css`\n    align-items: center;\n    background-color: ${theme.colors.background.primary};\n    border-radius: ${theme.shape.borderRadius()};\n    box-shadow: ${theme.shadows.z3};\n    display: flex;\n    flex-wrap: wrap;\n    gap: ${theme.spacing(1)};\n    margin-top: ${theme.spacing(1)};\n    max-width: 80vw;\n    padding: ${theme.spacing(0.5, 1)};\n    position: absolute;\n    right: 0;\n    top: 100%;\n    width: max-content;\n    z-index: ${theme.zIndex.sidemenu};\n  `,\n  container: css`\n    align-items: center;\n    display: flex;\n    gap: ${theme.spacing(1)};\n    justify-content: ${alignment === 'left' ? 'flex-start' : 'flex-end'};\n    min-width: 0;\n    position: relative;\n  `,\n  childWrapper: css`\n    align-items: center;\n    display: flex;\n    gap: ${theme.spacing(1)};\n  `,\n});\n","import { css } from '@emotion/css';\nimport { useButton } from '@react-aria/button';\nimport { FocusScope } from '@react-aria/focus';\nimport { useMenuTrigger } from '@react-aria/menu';\nimport { useMenuTriggerState } from '@react-stately/menu';\nimport React, { HTMLAttributes } from 'react';\n\nimport { GrafanaTheme2, SelectableValue } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes/ThemeContext';\nimport { ButtonGroup } from '../Button';\nimport { ClickOutsideWrapper } from '../ClickOutsideWrapper/ClickOutsideWrapper';\nimport { Menu } from '../Menu/Menu';\nimport { MenuItem } from '../Menu/MenuItem';\nimport { ToolbarButton, ToolbarButtonVariant } from '../ToolbarButton';\nimport { PopoverContent } from '../Tooltip';\n\nexport interface Props<T> extends HTMLAttributes<HTMLButtonElement> {\n  className?: string;\n  options: Array<SelectableValue<T>>;\n  value?: SelectableValue<T>;\n  onChange: (item: SelectableValue<T>) => void;\n  tooltipContent?: PopoverContent;\n  narrow?: boolean;\n  variant?: ToolbarButtonVariant;\n}\n\n/**\n * @internal\n * A temporary component until we have a proper dropdown component\n */\nconst ButtonSelectComponent = <T,>(props: Props<T>) => {\n  const { className, options, value, onChange, narrow, variant, ...restProps } = props;\n  const styles = useStyles2(getStyles);\n  const state = useMenuTriggerState({});\n\n  const ref = React.useRef(null);\n  const { menuTriggerProps, menuProps } = useMenuTrigger({}, state, ref);\n  const { buttonProps } = useButton(menuTriggerProps, ref);\n\n  const onChangeInternal = (item: SelectableValue<T>) => {\n    onChange(item);\n    state.close();\n  };\n\n  return (\n    <ButtonGroup className={styles.wrapper}>\n      <ToolbarButton\n        className={className}\n        isOpen={state.isOpen}\n        narrow={narrow}\n        variant={variant}\n        ref={ref}\n        {...buttonProps}\n        {...restProps}\n      >\n        {value?.label || (value?.value != null ? String(value?.value) : null)}\n      </ToolbarButton>\n      {state.isOpen && (\n        <div className={styles.menuWrapper}>\n          <ClickOutsideWrapper onClick={state.close} parent={document} includeButtonPress={false}>\n            <FocusScope contain autoFocus restoreFocus>\n              {/*\n                tabIndex=-1 is needed here to support highlighting text within the menu when using FocusScope\n                see https://github.com/adobe/react-spectrum/issues/1604#issuecomment-781574668\n              */}\n              <Menu tabIndex={-1} onClose={state.close} {...menuProps}>\n                {options.map((item) => (\n                  <MenuItem\n                    key={`${item.value}`}\n                    label={item.label ?? String(item.value)}\n                    onClick={() => onChangeInternal(item)}\n                    active={item.value === value?.value}\n                    ariaChecked={item.value === value?.value}\n                    ariaLabel={item.ariaLabel || item.label}\n                    role=\"menuitemradio\"\n                  />\n                ))}\n              </Menu>\n            </FocusScope>\n          </ClickOutsideWrapper>\n        </div>\n      )}\n    </ButtonGroup>\n  );\n};\n\nButtonSelectComponent.displayName = 'ButtonSelect';\n\nexport const ButtonSelect = React.memo(ButtonSelectComponent) as typeof ButtonSelectComponent;\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    wrapper: css`\n      position: relative;\n      display: inline-flex;\n    `,\n    menuWrapper: css`\n      position: absolute;\n      z-index: ${theme.zIndex.dropdown};\n      top: ${theme.spacing(4)};\n      right: 0;\n    `,\n  };\n};\n","import formatDuration from 'date-fns/formatDuration';\nimport React, { PureComponent } from 'react';\n\nimport { SelectableValue, parseDuration } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\n\nimport { t } from '../../utils/i18n';\nimport { ButtonGroup } from '../Button';\nimport { ButtonSelect } from '../Dropdown/ButtonSelect';\nimport { ToolbarButtonVariant, ToolbarButton } from '../ToolbarButton';\n\n// Default intervals used in the refresh picker component\nexport const defaultIntervals = ['5s', '10s', '30s', '1m', '5m', '15m', '30m', '1h', '2h', '1d'];\n\nexport interface Props {\n  intervals?: string[];\n  onRefresh?: () => void;\n  onIntervalChanged: (interval: string) => void;\n  value?: string;\n  tooltip?: string;\n  isLoading?: boolean;\n  isLive?: boolean;\n  text?: string;\n  noIntervalPicker?: boolean;\n  width?: string;\n  primary?: boolean;\n  isOnCanvas?: boolean;\n}\n\nexport class RefreshPicker extends PureComponent<Props> {\n  static offOption = {\n    label: 'Off',\n    value: '',\n    ariaLabel: 'Turn off auto refresh',\n  };\n  static liveOption = {\n    label: 'Live',\n    value: 'LIVE',\n    ariaLabel: 'Turn on live streaming',\n  };\n\n  static isLive = (refreshInterval?: string): boolean => refreshInterval === RefreshPicker.liveOption.value;\n\n  constructor(props: Props) {\n    super(props);\n  }\n\n  onChangeSelect = (item: SelectableValue<string>) => {\n    const { onIntervalChanged } = this.props;\n    if (onIntervalChanged && item.value != null) {\n      onIntervalChanged(item.value);\n    }\n  };\n\n  getVariant(): ToolbarButtonVariant {\n    if (this.props.isLive) {\n      return 'primary';\n    }\n\n    if (this.props.isLoading) {\n      return 'destructive';\n    }\n\n    if (this.props.primary) {\n      return 'primary';\n    }\n\n    return this.props.isOnCanvas ? 'canvas' : 'default';\n  }\n\n  render() {\n    const { onRefresh, intervals, tooltip, value, text, isLoading, noIntervalPicker, width } = this.props;\n\n    const currentValue = value || '';\n    const variant = this.getVariant();\n    const options = intervalsToOptions({ intervals });\n    const option = options.find(({ value }) => value === currentValue);\n    const translatedOffOption = translateOption(RefreshPicker.offOption.value);\n    let selectedValue = option || translatedOffOption;\n\n    if (selectedValue.label === translatedOffOption.label) {\n      selectedValue = { value: '' };\n    }\n\n    const durationAriaLabel = selectedValue.ariaLabel;\n    const ariaLabelDurationSelectedMessage = t(\n      'refresh-picker.aria-label.duration-selected',\n      'Choose refresh time interval with current interval {{durationAriaLabel}} selected',\n      { durationAriaLabel }\n    );\n    const ariaLabelChooseIntervalMessage = t(\n      'refresh-picker.aria-label.choose-interval',\n      'Auto refresh turned off. Choose refresh time interval'\n    );\n    const ariaLabel = selectedValue.value === '' ? ariaLabelChooseIntervalMessage : ariaLabelDurationSelectedMessage;\n\n    return (\n      <ButtonGroup className=\"refresh-picker\">\n        <ToolbarButton\n          aria-label={text}\n          tooltip={tooltip}\n          onClick={onRefresh}\n          variant={variant}\n          icon={isLoading ? 'fa fa-spinner' : 'sync'}\n          style={width ? { width } : undefined}\n          data-testid={selectors.components.RefreshPicker.runButtonV2}\n        >\n          {text}\n        </ToolbarButton>\n        {!noIntervalPicker && (\n          <ButtonSelect\n            value={selectedValue}\n            options={options}\n            onChange={this.onChangeSelect}\n            variant={variant}\n            title={t('refresh-picker.select-button.auto-refresh', 'Set auto refresh interval')}\n            data-testid={selectors.components.RefreshPicker.intervalButtonV2}\n            aria-label={ariaLabel}\n          />\n        )}\n      </ButtonGroup>\n    );\n  }\n}\n\nexport function translateOption(option: string) {\n  if (option === RefreshPicker.liveOption.value) {\n    return {\n      label: t('refresh-picker.live-option.label', 'Live'),\n      value: 'LIVE',\n      ariaLabel: t('refresh-picker.live-option.aria-label', 'Turn on live streaming'),\n    };\n  }\n  return {\n    label: t('refresh-picker.off-option.label', 'Off'),\n    value: '',\n    ariaLabel: t('refresh-picker.off-option.aria-label', 'Turn off auto refresh'),\n  };\n}\n\nexport function intervalsToOptions({ intervals = defaultIntervals }: { intervals?: string[] } = {}): Array<\n  SelectableValue<string>\n> {\n  const options: Array<SelectableValue<string>> = intervals.map((interval) => {\n    const duration = parseDuration(interval);\n    const ariaLabel = formatDuration(duration);\n\n    return {\n      label: interval,\n      value: interval,\n      ariaLabel: ariaLabel,\n    };\n  });\n\n  options.unshift(translateOption(RefreshPicker.offOption.value));\n  return options;\n}\n","import { css } from '@emotion/css';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { stylesFactory } from '../../themes';\n\nexport const getModalStyles = stylesFactory((theme: GrafanaTheme2) => {\n  const borderRadius = theme.shape.borderRadius(1);\n\n  return {\n    modal: css`\n      position: fixed;\n      z-index: ${theme.zIndex.modal};\n      background: ${theme.colors.background.primary};\n      box-shadow: ${theme.shadows.z3};\n      border-radius: ${borderRadius};\n      border: 1px solid ${theme.colors.border.weak};\n      background-clip: padding-box;\n      outline: none;\n      width: 750px;\n      max-width: 100%;\n      left: 0;\n      right: 0;\n      margin-left: auto;\n      margin-right: auto;\n      top: 10%;\n      max-height: 80%;\n      display: flex;\n      flex-direction: column;\n    `,\n    modalBackdrop: css`\n      position: fixed;\n      z-index: ${theme.zIndex.modalBackdrop};\n      top: 0;\n      right: 0;\n      bottom: 0;\n      left: 0;\n      background-color: ${theme.components.overlay.background};\n      backdrop-filter: blur(1px);\n    `,\n    modalHeader: css`\n      label: modalHeader;\n      display: flex;\n      align-items: center;\n      min-height: 42px;\n      margin: ${theme.spacing(1, 2, 0, 2)};\n    `,\n    modalHeaderWithTabs: css`\n      border-bottom: 1px solid ${theme.colors.border.weak};\n    `,\n    modalHeaderTitle: css`\n      font-size: ${theme.typography.size.lg};\n      margin: ${theme.spacing(0, 4, 0, 1)};\n      display: flex;\n      align-items: center;\n      position: relative;\n      top: 2px;\n    `,\n    modalHeaderIcon: css`\n      margin-right: ${theme.spacing(2)};\n      font-size: inherit;\n      &:before {\n        vertical-align: baseline;\n      }\n    `,\n    modalHeaderClose: css`\n      height: 100%;\n      display: flex;\n      align-items: center;\n      color: ${theme.colors.text.secondary};\n      flex-grow: 1;\n      justify-content: flex-end;\n    `,\n    modalContent: css`\n      overflow: auto;\n      padding: ${theme.spacing(3)};\n      width: 100%;\n    `,\n    modalButtonRow: css`\n      padding-top: ${theme.spacing(3)};\n    `,\n  };\n});\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../../themes';\n\ninterface Props {\n  label: string | undefined;\n  children?: React.ReactNode;\n}\n\nexport const TimeZoneGroup = (props: Props) => {\n  const { children, label } = props;\n  const styles = useStyles2(getStyles);\n\n  if (!label) {\n    return <div>{children}</div>;\n  }\n\n  return (\n    <div>\n      <div className={styles.header}>\n        <span className={styles.label}>{label}</span>\n      </div>\n      {children}\n    </div>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    header: css`\n      padding: 7px 10px;\n      width: 100%;\n      border-top: 1px solid ${theme.colors.border.weak};\n      text-transform: capitalize;\n    `,\n    label: css`\n      font-size: ${theme.typography.size.sm};\n      color: ${theme.colors.text.secondary};\n      font-weight: ${theme.typography.fontWeightMedium};\n    `,\n  };\n};\n","import { css, cx } from '@emotion/css';\nimport { isString } from 'lodash';\nimport React from 'react';\n\nimport { GrafanaTheme2, TimeZone, dateTimeFormat } from '@grafana/data';\n\nimport { useStyles2 } from '../../../themes';\n\ninterface Props {\n  timestamp: number;\n  timeZone: TimeZone | undefined;\n  className?: string;\n}\n\nexport const TimeZoneOffset = (props: Props) => {\n  const { timestamp, timeZone, className } = props;\n  const styles = useStyles2(getStyles);\n\n  if (!isString(timeZone)) {\n    return null;\n  }\n\n  return (\n    <>\n      <span className={cx(styles.offset, className)}>{formatUtcOffset(timestamp, timeZone)}</span>\n    </>\n  );\n};\n\nexport const formatUtcOffset = (timestamp: number, timeZone: TimeZone): string => {\n  const offset = dateTimeFormat(timestamp, {\n    timeZone,\n    format: 'Z',\n  });\n\n  if (offset === '+00:00') {\n    return 'UTC';\n  }\n  return `UTC${offset}`;\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  const textBase = css`\n    font-weight: normal;\n    font-size: ${theme.typography.size.sm};\n    color: ${theme.colors.text.secondary};\n    white-space: normal;\n  `;\n\n  return {\n    offset: css`\n      ${textBase};\n      color: ${theme.colors.text.primary};\n      background: ${theme.colors.background.secondary};\n      padding: 2px 5px;\n      border-radius: 2px;\n      margin-left: 4px;\n    `,\n  };\n};\n","import { css } from '@emotion/css';\nimport React, { useMemo } from 'react';\n\nimport { GrafanaTheme2, TimeZoneInfo } from '@grafana/data';\n\nimport { useStyles2 } from '../../../themes';\n\ninterface Props {\n  info?: TimeZoneInfo;\n}\n\nexport const TimeZoneDescription = ({ info }: Props) => {\n  const styles = useStyles2(getStyles);\n  const description = useDescription(info);\n\n  if (!info) {\n    return null;\n  }\n\n  return <div className={styles.description}>{description}</div>;\n};\n\nconst useDescription = (info?: TimeZoneInfo): string => {\n  return useMemo(() => {\n    const parts: string[] = [];\n\n    if (!info) {\n      return '';\n    }\n\n    if (info.countries.length > 0) {\n      const country = info.countries[0];\n      parts.push(country.name);\n    }\n\n    if (info.abbreviation) {\n      parts.push(info.abbreviation);\n    }\n\n    return parts.join(', ');\n  }, [info]);\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    description: css`\n      font-weight: normal;\n      font-size: ${theme.typography.size.sm};\n      color: ${theme.colors.text.secondary};\n      white-space: normal;\n      text-overflow: ellipsis;\n    `,\n  };\n};\n","import { css } from '@emotion/css';\nimport React, { ReactNode } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../../themes';\n\ninterface Props {\n  title: string | ReactNode;\n}\n\nexport const TimeZoneTitle = ({ title }: Props) => {\n  const styles = useStyles2(getStyles);\n\n  if (!title) {\n    return null;\n  }\n\n  return <span className={styles.title}>{title}</span>;\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    title: css`\n      font-weight: ${theme.typography.fontWeightRegular};\n      text-overflow: ellipsis;\n    `,\n  };\n};\n","import { css, cx } from '@emotion/css';\nimport { isString } from 'lodash';\nimport React, { PropsWithChildren, RefCallback } from 'react';\n\nimport { GrafanaTheme2, SelectableValue, getTimeZoneInfo } from '@grafana/data';\n\nimport { useTheme2 } from '../../../themes/ThemeContext';\nimport { stylesFactory } from '../../../themes/stylesFactory';\nimport { Icon } from '../../Icon/Icon';\n\nimport { TimeZoneDescription } from './TimeZoneDescription';\nimport { TimeZoneOffset } from './TimeZoneOffset';\nimport { TimeZoneTitle } from './TimeZoneTitle';\n\ninterface Props {\n  isFocused: boolean;\n  isSelected: boolean;\n  innerProps: JSX.IntrinsicElements['div'];\n  innerRef: RefCallback<HTMLDivElement>;\n  data: SelectableZone;\n}\n\nconst offsetClassName = 'tz-utc-offset';\n\nexport interface SelectableZone extends SelectableValue<string> {\n  searchIndex: string;\n}\n\nexport const WideTimeZoneOption = (props: PropsWithChildren<Props>) => {\n  const { children, innerProps, innerRef, data, isSelected, isFocused } = props;\n  const theme = useTheme2();\n  const styles = getStyles(theme);\n  const timestamp = Date.now();\n  const containerStyles = cx(styles.container, isFocused && styles.containerFocused);\n\n  if (!isString(data.value)) {\n    return null;\n  }\n\n  const timeZoneInfo = getTimeZoneInfo(data.value, timestamp);\n\n  return (\n    <div className={containerStyles} {...innerProps} ref={innerRef} aria-label=\"Select option\">\n      <div className={cx(styles.leftColumn, styles.row)}>\n        <div className={cx(styles.leftColumn, styles.wideRow)}>\n          <TimeZoneTitle title={children} />\n          <div className={styles.spacer} />\n          <TimeZoneDescription info={timeZoneInfo} />\n        </div>\n        <div className={styles.rightColumn}>\n          <TimeZoneOffset\n            /* Use the timeZoneInfo to pass the correct timeZone name,\n               as 'Default' has value '' which defaults to browser timezone */\n            timeZone={timeZoneInfo?.ianaName || data.value}\n            timestamp={timestamp}\n            className={offsetClassName}\n          />\n          {isSelected && (\n            <span>\n              <Icon name=\"check\" />\n            </span>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport const CompactTimeZoneOption = (props: React.PropsWithChildren<Props>) => {\n  const { children, innerProps, innerRef, data, isSelected, isFocused } = props;\n  const theme = useTheme2();\n  const styles = getStyles(theme);\n  const timestamp = Date.now();\n  const containerStyles = cx(styles.container, isFocused && styles.containerFocused);\n\n  if (!isString(data.value)) {\n    return null;\n  }\n\n  const timeZoneInfo = getTimeZoneInfo(data.value, timestamp);\n\n  return (\n    <div className={containerStyles} {...innerProps} ref={innerRef} aria-label=\"Select option\">\n      <div className={styles.body}>\n        <div className={styles.row}>\n          <div className={styles.leftColumn}>\n            <TimeZoneTitle title={children} />\n          </div>\n          <div className={styles.rightColumn}>\n            {isSelected && (\n              <span>\n                <Icon name=\"check\" />\n              </span>\n            )}\n          </div>\n        </div>\n        <div className={styles.row}>\n          <div className={styles.leftColumn}>\n            <TimeZoneDescription info={timeZoneInfo} />\n          </div>\n          <div className={styles.rightColumn}>\n            <TimeZoneOffset\n              timestamp={timestamp}\n              /* Use the timeZoneInfo to pass the correct timeZone name,\n                 as 'Default' has value '' which defaults to browser timezone */\n              timeZone={timeZoneInfo?.ianaName || data.value}\n              className={offsetClassName}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst getStyles = stylesFactory((theme: GrafanaTheme2) => {\n  return {\n    container: css`\n      display: flex;\n      align-items: center;\n      flex-direction: row;\n      flex-shrink: 0;\n      white-space: nowrap;\n      cursor: pointer;\n      padding: 6px 8px 4px;\n\n      &:hover {\n        background: ${theme.colors.action.hover};\n      }\n    `,\n    containerFocused: css`\n      background: ${theme.colors.action.hover};\n    `,\n    body: css`\n      display: flex;\n      font-weight: ${theme.typography.fontWeightMedium};\n      flex-direction: column;\n      flex-grow: 1;\n    `,\n    row: css`\n      display: flex;\n      flex-direction: row;\n    `,\n    leftColumn: css`\n      flex-grow: 1;\n      text-overflow: ellipsis;\n    `,\n    rightColumn: css`\n      justify-content: flex-end;\n      align-items: center;\n    `,\n    wideRow: css`\n      display: flex;\n      flex-direction: row;\n      align-items: baseline;\n    `,\n    spacer: css`\n      margin-left: 6px;\n    `,\n  };\n});\n","import { toLower, isEmpty, isString } from 'lodash';\nimport React, { useMemo, useCallback } from 'react';\n\nimport {\n  SelectableValue,\n  getTimeZoneInfo,\n  TimeZoneInfo,\n  getTimeZoneGroups,\n  GroupedTimeZones,\n  TimeZone,\n  InternalTimeZones,\n} from '@grafana/data';\n\nimport { t } from '../../utils/i18n';\nimport { Select } from '../Select/Select';\n\nimport { TimeZoneGroup } from './TimeZonePicker/TimeZoneGroup';\nimport { formatUtcOffset } from './TimeZonePicker/TimeZoneOffset';\nimport { CompactTimeZoneOption, WideTimeZoneOption, SelectableZone } from './TimeZonePicker/TimeZoneOption';\n\nexport interface Props {\n  onChange: (timeZone?: TimeZone) => void;\n  value?: TimeZone;\n  width?: number;\n  autoFocus?: boolean;\n  onBlur?: () => void;\n  includeInternal?: boolean | InternalTimeZones[];\n  disabled?: boolean;\n  inputId?: string;\n}\n\nexport const TimeZonePicker = (props: Props) => {\n  const {\n    onChange,\n    width,\n    autoFocus = false,\n    onBlur,\n    value,\n    includeInternal = false,\n    disabled = false,\n    inputId,\n  } = props;\n  const groupedTimeZones = useTimeZones(includeInternal);\n  const selected = useSelectedTimeZone(groupedTimeZones, value);\n  const filterBySearchIndex = useFilterBySearchIndex();\n  const TimeZoneOption = width && width <= 45 ? CompactTimeZoneOption : WideTimeZoneOption;\n\n  const onChangeTz = useCallback(\n    (selectable: SelectableValue<string>) => {\n      if (!selectable || !isString(selectable.value)) {\n        return onChange(value);\n      }\n      onChange(selectable.value);\n    },\n    [onChange, value]\n  );\n\n  return (\n    <Select\n      inputId={inputId}\n      value={selected}\n      placeholder={t('time-picker.zone.select-search-input', 'Type to search (country, city, abbreviation)')}\n      autoFocus={autoFocus}\n      menuShouldPortal={false}\n      openMenuOnFocus={true}\n      width={width}\n      filterOption={filterBySearchIndex}\n      options={groupedTimeZones}\n      onChange={onChangeTz}\n      onBlur={onBlur}\n      components={{ Option: TimeZoneOption, Group: TimeZoneGroup }}\n      disabled={disabled}\n      aria-label={t('time-picker.zone.select-aria-label', 'Time zone picker')}\n    />\n  );\n};\n\ninterface SelectableZoneGroup extends SelectableValue<string> {\n  options: SelectableZone[];\n}\n\nconst useTimeZones = (includeInternal: boolean | InternalTimeZones[]): SelectableZoneGroup[] => {\n  const now = Date.now();\n\n  const timeZoneGroups = getTimeZoneGroups(includeInternal).map((group: GroupedTimeZones) => {\n    const options = group.zones.reduce((options: SelectableZone[], zone) => {\n      const info = getTimeZoneInfo(zone, now);\n\n      if (!info) {\n        return options;\n      }\n\n      options.push({\n        label: info.name,\n        value: info.zone,\n        searchIndex: getSearchIndex(info, now),\n      });\n\n      return options;\n    }, []);\n\n    return {\n      label: group.name,\n      options,\n    };\n  });\n  return timeZoneGroups;\n};\n\nconst useSelectedTimeZone = (\n  groups: SelectableZoneGroup[],\n  timeZone: TimeZone | undefined\n): SelectableZone | undefined => {\n  return useMemo(() => {\n    if (timeZone === undefined) {\n      return undefined;\n    }\n\n    const tz = toLower(timeZone);\n\n    const group = groups.find((group) => {\n      if (!group.label) {\n        return isInternal(tz);\n      }\n      return tz.startsWith(toLower(group.label));\n    });\n\n    return group?.options.find((option) => {\n      if (isEmpty(tz)) {\n        return option.value === InternalTimeZones.default;\n      }\n      return toLower(option.value) === tz;\n    });\n  }, [groups, timeZone]);\n};\n\nconst isInternal = (timeZone: TimeZone): boolean => {\n  switch (timeZone) {\n    case InternalTimeZones.default:\n    case InternalTimeZones.localBrowserTime:\n    case InternalTimeZones.utc:\n      return true;\n\n    default:\n      return false;\n  }\n};\n\nconst useFilterBySearchIndex = () => {\n  return useCallback((option: SelectableValue, searchQuery: string) => {\n    if (!searchQuery || !option.data || !option.data.searchIndex) {\n      return true;\n    }\n    return option.data.searchIndex.indexOf(toLower(searchQuery)) > -1;\n  }, []);\n};\n\nconst getSearchIndex = (info: TimeZoneInfo, timestamp: number): string => {\n  const parts: string[] = [\n    toLower(info.name),\n    toLower(info.abbreviation),\n    toLower(formatUtcOffset(timestamp, info.zone)),\n  ];\n\n  for (const country of info.countries) {\n    parts.push(toLower(country.name));\n    parts.push(toLower(country.code));\n  }\n\n  return parts.join('|');\n};\n","import { SelectableValue, TimeOption } from '@grafana/data';\n\nexport const quickOptions: TimeOption[] = [\n  { from: 'now-5m', to: 'now', display: 'Last 5 minutes' },\n  { from: 'now-15m', to: 'now', display: 'Last 15 minutes' },\n  { from: 'now-30m', to: 'now', display: 'Last 30 minutes' },\n  { from: 'now-1h', to: 'now', display: 'Last 1 hour' },\n  { from: 'now-3h', to: 'now', display: 'Last 3 hours' },\n  { from: 'now-6h', to: 'now', display: 'Last 6 hours' },\n  { from: 'now-12h', to: 'now', display: 'Last 12 hours' },\n  { from: 'now-24h', to: 'now', display: 'Last 24 hours' },\n  { from: 'now-2d', to: 'now', display: 'Last 2 days' },\n  { from: 'now-7d', to: 'now', display: 'Last 7 days' },\n  { from: 'now-30d', to: 'now', display: 'Last 30 days' },\n  { from: 'now-90d', to: 'now', display: 'Last 90 days' },\n  { from: 'now-6M', to: 'now', display: 'Last 6 months' },\n  { from: 'now-1y', to: 'now', display: 'Last 1 year' },\n  { from: 'now-2y', to: 'now', display: 'Last 2 years' },\n  { from: 'now-5y', to: 'now', display: 'Last 5 years' },\n  { from: 'now-1d/d', to: 'now-1d/d', display: 'Yesterday' },\n  { from: 'now-2d/d', to: 'now-2d/d', display: 'Day before yesterday' },\n  { from: 'now-7d/d', to: 'now-7d/d', display: 'This day last week' },\n  { from: 'now-1w/w', to: 'now-1w/w', display: 'Previous week' },\n  { from: 'now-1M/M', to: 'now-1M/M', display: 'Previous month' },\n  { from: 'now-1Q/fQ', to: 'now-1Q/fQ', display: 'Previous fiscal quarter' },\n  { from: 'now-1y/y', to: 'now-1y/y', display: 'Previous year' },\n  { from: 'now-1y/fy', to: 'now-1y/fy', display: 'Previous fiscal year' },\n  { from: 'now/d', to: 'now/d', display: 'Today' },\n  { from: 'now/d', to: 'now', display: 'Today so far' },\n  { from: 'now/w', to: 'now/w', display: 'This week' },\n  { from: 'now/w', to: 'now', display: 'This week so far' },\n  { from: 'now/M', to: 'now/M', display: 'This month' },\n  { from: 'now/M', to: 'now', display: 'This month so far' },\n  { from: 'now/y', to: 'now/y', display: 'This year' },\n  { from: 'now/y', to: 'now', display: 'This year so far' },\n  { from: 'now/fQ', to: 'now', display: 'This fiscal quarter so far' },\n  { from: 'now/fQ', to: 'now/fQ', display: 'This fiscal quarter' },\n  { from: 'now/fy', to: 'now', display: 'This fiscal year so far' },\n  { from: 'now/fy', to: 'now/fy', display: 'This fiscal year' },\n];\n\nexport const monthOptions: Array<SelectableValue<number>> = [\n  { label: 'January', value: 0 },\n  { label: 'February', value: 1 },\n  { label: 'March', value: 2 },\n  { label: 'April', value: 3 },\n  { label: 'May', value: 4 },\n  { label: 'June', value: 5 },\n  { label: 'July', value: 6 },\n  { label: 'August', value: 7 },\n  { label: 'September', value: 8 },\n  { label: 'October', value: 9 },\n  { label: 'November', value: 10 },\n  { label: 'December', value: 11 },\n];\n","import { css, cx } from '@emotion/css';\nimport { isString } from 'lodash';\nimport React, { useCallback, useState } from 'react';\n\nimport { getTimeZoneInfo, GrafanaTheme2, TimeZone } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\n\nimport { Field, RadioButtonGroup, Select } from '../..';\nimport { stylesFactory, useTheme2 } from '../../../themes';\nimport { t, Trans } from '../../../utils/i18n';\nimport { Button } from '../../Button';\nimport { TimeZonePicker } from '../TimeZonePicker';\nimport { TimeZoneDescription } from '../TimeZonePicker/TimeZoneDescription';\nimport { TimeZoneOffset } from '../TimeZonePicker/TimeZoneOffset';\nimport { TimeZoneTitle } from '../TimeZonePicker/TimeZoneTitle';\nimport { monthOptions } from '../options';\n\ninterface Props {\n  timeZone?: TimeZone;\n  fiscalYearStartMonth?: number;\n  timestamp?: number;\n  onChangeTimeZone: (timeZone: TimeZone) => void;\n  onChangeFiscalYearStartMonth?: (month: number) => void;\n}\n\nexport const TimePickerFooter = (props: Props) => {\n  const {\n    timeZone,\n    fiscalYearStartMonth,\n    timestamp = Date.now(),\n    onChangeTimeZone,\n    onChangeFiscalYearStartMonth,\n  } = props;\n  const [isEditing, setEditing] = useState(false);\n  const [editMode, setEditMode] = useState('tz');\n\n  const onToggleChangeTimeSettings = useCallback(\n    (event?: React.MouseEvent) => {\n      if (event) {\n        event.stopPropagation();\n      }\n      setEditing(!isEditing);\n    },\n    [isEditing, setEditing]\n  );\n\n  const theme = useTheme2();\n  const style = getStyle(theme);\n\n  if (!isString(timeZone)) {\n    return null;\n  }\n\n  const info = getTimeZoneInfo(timeZone, timestamp);\n\n  if (!info) {\n    return null;\n  }\n\n  return (\n    <div>\n      <section\n        aria-label={t('time-picker.footer.time-zone-selection', 'Time zone selection')}\n        className={style.container}\n      >\n        <div className={style.timeZoneContainer}>\n          <div className={style.timeZone}>\n            <TimeZoneTitle title={info.name} />\n            <div className={style.spacer} />\n            <TimeZoneDescription info={info} />\n          </div>\n          <TimeZoneOffset timeZone={timeZone} timestamp={timestamp} />\n        </div>\n        <div className={style.spacer} />\n        <Button variant=\"secondary\" onClick={onToggleChangeTimeSettings} size=\"sm\">\n          <Trans i18nKey=\"time-picker.footer.change-settings-button\">Change time settings</Trans>\n        </Button>\n      </section>\n      {isEditing ? (\n        <div className={style.editContainer}>\n          <div>\n            <RadioButtonGroup\n              value={editMode}\n              options={[\n                { label: t('time-picker.footer.time-zone-option', 'Time zone'), value: 'tz' },\n                { label: t('time-picker.footer.fiscal-year-option', 'Fiscal year'), value: 'fy' },\n              ]}\n              onChange={setEditMode}\n            ></RadioButtonGroup>\n          </div>\n          {editMode === 'tz' ? (\n            <section\n              data-testid={selectors.components.TimeZonePicker.containerV2}\n              className={cx(style.timeZoneContainer, style.timeSettingContainer)}\n            >\n              <TimeZonePicker\n                includeInternal={true}\n                onChange={(timeZone) => {\n                  onToggleChangeTimeSettings();\n\n                  if (isString(timeZone)) {\n                    onChangeTimeZone(timeZone);\n                  }\n                }}\n                onBlur={onToggleChangeTimeSettings}\n              />\n            </section>\n          ) : (\n            <section\n              aria-label={selectors.components.TimeZonePicker.containerV2}\n              className={cx(style.timeZoneContainer, style.timeSettingContainer)}\n            >\n              <Field\n                className={style.fiscalYearField}\n                label={t('time-picker.footer.fiscal-year-start', 'Fiscal year start month')}\n              >\n                <Select\n                  value={fiscalYearStartMonth}\n                  menuShouldPortal={false}\n                  options={monthOptions}\n                  onChange={(value) => {\n                    if (onChangeFiscalYearStartMonth) {\n                      onChangeFiscalYearStartMonth(value.value ?? 0);\n                    }\n                  }}\n                />\n              </Field>\n            </section>\n          )}\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nconst getStyle = stylesFactory((theme: GrafanaTheme2) => {\n  return {\n    container: css`\n      border-top: 1px solid ${theme.colors.border.weak};\n      padding: 11px;\n      display: flex;\n      flex-direction: row;\n      justify-content: space-between;\n      align-items: center;\n    `,\n    editContainer: css`\n      border-top: 1px solid ${theme.colors.border.weak};\n      padding: 11px;\n      justify-content: space-between;\n      align-items: center;\n      padding: 7px;\n    `,\n    spacer: css`\n      margin-left: 7px;\n    `,\n    timeSettingContainer: css`\n      padding-top: ${theme.spacing(1)};\n    `,\n    fiscalYearField: css`\n      margin-bottom: 0px;\n    `,\n    timeZoneContainer: css`\n      display: flex;\n      flex-direction: row;\n      justify-content: space-between;\n      align-items: center;\n      flex-grow: 1;\n    `,\n    timeZone: css`\n      display: flex;\n      flex-direction: row;\n      align-items: baseline;\n      flex-grow: 1;\n    `,\n  };\n});\n","import { css } from '@emotion/css';\nimport React, { memo, PropsWithChildren } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../../themes';\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    text: css`\n      font-size: ${theme.typography.size.md};\n      font-weight: ${theme.typography.fontWeightMedium};\n      color: ${theme.colors.text.primary};\n      margin: 0;\n      display: flex;\n    `,\n  };\n};\n\nexport const TimePickerTitle = memo<PropsWithChildren<{}>>(({ children }) => {\n  const styles = useStyles2(getStyles);\n\n  return <h3 className={styles.text}>{children}</h3>;\n});\n\nTimePickerTitle.displayName = 'TimePickerTitle';\n","import { css, cx } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { stylesFactory, useTheme2 } from '../../themes';\nimport { Icon } from '../Icon/Icon';\n\nexport interface FieldValidationMessageProps {\n  /** Override component style */\n  className?: string;\n  horizontal?: boolean;\n}\n\nexport const getFieldValidationMessageStyles = stylesFactory((theme: GrafanaTheme2) => {\n  const baseStyle = `\n      font-size: ${theme.typography.size.sm};\n      font-weight: ${theme.typography.fontWeightMedium};\n      padding: ${theme.spacing(0.5, 1)};\n      color: ${theme.colors.error.contrastText};\n      background: ${theme.colors.error.main};\n      border-radius: ${theme.shape.borderRadius()};\n      position: relative;\n      display: inline-block;\n      align-self: flex-start;\n\n      a {\n        color: ${theme.colors.error.contrastText};\n        text-decoration: underline;\n      }\n\n      a:hover {\n        text-decoration: none;\n      }\n    `;\n\n  return {\n    vertical: css`\n      ${baseStyle}\n      margin: ${theme.spacing(0.5, 0, 0, 0)};\n\n      &:before {\n        content: '';\n        position: absolute;\n        left: 9px;\n        top: -5px;\n        width: 0;\n        height: 0;\n        border-width: 0 4px 5px 4px;\n        border-color: transparent transparent ${theme.colors.error.main} transparent;\n        border-style: solid;\n      }\n    `,\n    horizontal: css`\n      ${baseStyle}\n      margin-left: 10px;\n\n      &:before {\n        content: '';\n        position: absolute;\n        left: -5px;\n        top: 9px;\n        width: 0;\n        height: 0;\n        border-width: 4px 5px 4px 0;\n        border-color: transparent #e02f44 transparent transparent;\n        border-style: solid;\n      }\n    `,\n    fieldValidationMessageIcon: css`\n      margin-right: ${theme.spacing()};\n    `,\n  };\n});\n\nexport const FieldValidationMessage = ({\n  children,\n  horizontal,\n  className,\n}: React.PropsWithChildren<FieldValidationMessageProps>) => {\n  const theme = useTheme2();\n  const styles = getFieldValidationMessageStyles(theme);\n  const cssName = cx(horizontal ? styles.horizontal : styles.vertical, className);\n\n  return (\n    <div role=\"alert\" className={cssName}>\n      <Icon className={styles.fieldValidationMessageIcon} name=\"exclamation-triangle\" />\n      {children}\n    </div>\n  );\n};\n","import { css, cx } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useTheme2, stylesFactory } from '../../themes';\nimport { Icon } from '../Icon/Icon';\n\nexport interface LabelProps extends React.LabelHTMLAttributes<HTMLLabelElement> {\n  children: React.ReactNode;\n  description?: React.ReactNode;\n  category?: React.ReactNode[];\n}\n\nexport const getLabelStyles = stylesFactory((theme: GrafanaTheme2) => {\n  return {\n    label: css`\n      label: Label;\n      font-size: ${theme.typography.size.sm};\n      font-weight: ${theme.typography.fontWeightMedium};\n      line-height: 1.25;\n      margin-bottom: ${theme.spacing(0.5)};\n      color: ${theme.colors.text.primary};\n      max-width: 480px;\n    `,\n    labelContent: css`\n      display: flex;\n      align-items: center;\n    `,\n    description: css`\n      label: Label-description;\n      color: ${theme.colors.text.secondary};\n      font-size: ${theme.typography.size.sm};\n      font-weight: ${theme.typography.fontWeightRegular};\n      margin-top: ${theme.spacing(0.25)};\n      display: block;\n    `,\n    categories: css`\n      label: Label-categories;\n      display: inline-flex;\n      align-items: center;\n    `,\n    chevron: css`\n      margin: 0 ${theme.spacing(0.25)};\n    `,\n  };\n});\n\nexport const Label = ({ children, description, className, category, ...labelProps }: LabelProps) => {\n  const theme = useTheme2();\n  const styles = getLabelStyles(theme);\n  const categories = category?.map((c, i) => {\n    return (\n      <span className={styles.categories} key={`${c}/${i}`}>\n        <span>{c}</span>\n        <Icon name=\"angle-right\" className={styles.chevron} />\n      </span>\n    );\n  });\n\n  return (\n    <div className={cx(styles.label, className)}>\n      <label {...labelProps}>\n        <div className={styles.labelContent}>\n          {categories}\n          {children}\n        </div>\n        {description && <span className={styles.description}>{description}</span>}\n      </label>\n    </div>\n  );\n};\n","import { css, cx } from '@emotion/css';\nimport React, { HTMLAttributes } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { stylesFactory, useTheme2 } from '../../themes';\nimport { getChildId } from '../../utils/reactUtils';\n\nimport { FieldValidationMessage } from './FieldValidationMessage';\nimport { Label } from './Label';\n\nexport interface FieldProps extends HTMLAttributes<HTMLDivElement> {\n  /** Form input element, i.e Input or Switch */\n  children: React.ReactElement;\n  /** Label for the field */\n  label?: React.ReactNode;\n  /** Description of the field */\n  description?: React.ReactNode;\n  /** Indicates if field is in invalid state */\n  invalid?: boolean;\n  /** Indicates if field is in loading state */\n  loading?: boolean;\n  /** Indicates if field is disabled */\n  disabled?: boolean;\n  /** Indicates if field is required */\n  required?: boolean;\n  /** Error message to display */\n  error?: React.ReactNode;\n  /** Indicates horizontal layout of the field */\n  horizontal?: boolean;\n  /** make validation message overflow horizontally. Prevents pushing out adjacent inline components */\n  validationMessageHorizontalOverflow?: boolean;\n\n  className?: string;\n  /**\n   *  A unique id that associates the label of the Field component with the control with the unique id.\n   *  If the `htmlFor` property is missing the `htmlFor` will be inferred from the `id` or `inputId` property of the first child.\n   *  https://developer.mozilla.org/en-US/docs/Web/HTML/Element/label#attr-for\n   */\n  htmlFor?: string;\n}\n\nexport const getFieldStyles = stylesFactory((theme: GrafanaTheme2) => {\n  return {\n    field: css`\n      display: flex;\n      flex-direction: column;\n      margin-bottom: ${theme.spacing(2)};\n    `,\n    fieldHorizontal: css`\n      flex-direction: row;\n      justify-content: space-between;\n      flex-wrap: wrap;\n    `,\n    fieldValidationWrapper: css`\n      margin-top: ${theme.spacing(0.5)};\n    `,\n    fieldValidationWrapperHorizontal: css`\n      flex: 1 1 100%;\n    `,\n    validationMessageHorizontalOverflow: css`\n      width: 0;\n      overflow-x: visible;\n\n      & > * {\n        white-space: nowrap;\n      }\n    `,\n  };\n});\n\nexport const Field = ({\n  label,\n  description,\n  horizontal,\n  invalid,\n  loading,\n  disabled,\n  required,\n  error,\n  children,\n  className,\n  validationMessageHorizontalOverflow,\n  htmlFor,\n  ...otherProps\n}: FieldProps) => {\n  const theme = useTheme2();\n  const styles = getFieldStyles(theme);\n  const inputId = htmlFor ?? getChildId(children);\n\n  const labelElement =\n    typeof label === 'string' ? (\n      <Label htmlFor={inputId} description={description}>\n        {`${label}${required ? ' *' : ''}`}\n      </Label>\n    ) : (\n      label\n    );\n\n  const childProps = deleteUndefinedProps({ invalid, disabled, loading });\n  return (\n    <div className={cx(styles.field, horizontal && styles.fieldHorizontal, className)} {...otherProps}>\n      {labelElement}\n      <div>\n        {React.cloneElement(children, childProps)}\n        {invalid && error && !horizontal && (\n          <div\n            className={cx(styles.fieldValidationWrapper, {\n              [styles.validationMessageHorizontalOverflow]: !!validationMessageHorizontalOverflow,\n            })}\n          >\n            <FieldValidationMessage>{error}</FieldValidationMessage>\n          </div>\n        )}\n      </div>\n\n      {invalid && error && horizontal && (\n        <div\n          className={cx(styles.fieldValidationWrapper, styles.fieldValidationWrapperHorizontal, {\n            [styles.validationMessageHorizontalOverflow]: !!validationMessageHorizontalOverflow,\n          })}\n        >\n          <FieldValidationMessage>{error}</FieldValidationMessage>\n        </div>\n      )}\n    </div>\n  );\n};\n\nfunction deleteUndefinedProps<T extends Object>(obj: T): Partial<T> {\n  for (const key in obj) {\n    if (obj[key] === undefined) {\n      delete obj[key];\n    }\n  }\n\n  return obj;\n}\n","import { css } from '@emotion/css';\nimport React, { useCallback } from 'react';\nimport Calendar from 'react-calendar';\n\nimport { GrafanaTheme2, dateTime, dateTimeParse, DateTime, TimeZone } from '@grafana/data';\n\nimport { useStyles2 } from '../../../themes';\nimport { Icon } from '../../Icon/Icon';\n\nimport { TimePickerCalendarProps } from './TimePickerCalendar';\n\nexport function Body({ onChange, from, to, timeZone }: TimePickerCalendarProps) {\n  const value = inputToValue(from, to);\n  const onCalendarChange = useOnCalendarChange(onChange, timeZone);\n  const styles = useStyles2(getBodyStyles);\n\n  return (\n    <Calendar\n      selectRange={true}\n      next2Label={null}\n      prev2Label={null}\n      className={styles.body}\n      tileClassName={styles.title}\n      value={value}\n      nextLabel={<Icon name=\"angle-right\" />}\n      prevLabel={<Icon name=\"angle-left\" />}\n      onChange={onCalendarChange}\n      locale=\"en\"\n    />\n  );\n}\n\nBody.displayName = 'Body';\n\nexport function inputToValue(from: DateTime, to: DateTime, invalidDateDefault: Date = new Date()): [Date, Date] {\n  const fromAsDate = from.toDate();\n  const toAsDate = to.toDate();\n  const fromAsValidDate = dateTime(fromAsDate).isValid() ? fromAsDate : invalidDateDefault;\n  const toAsValidDate = dateTime(toAsDate).isValid() ? toAsDate : invalidDateDefault;\n\n  if (fromAsValidDate > toAsValidDate) {\n    return [toAsValidDate, fromAsValidDate];\n  }\n  return [fromAsValidDate, toAsValidDate];\n}\n\nfunction useOnCalendarChange(onChange: (from: DateTime, to: DateTime) => void, timeZone?: TimeZone) {\n  return useCallback(\n    (value: Date | Date[]) => {\n      if (!Array.isArray(value)) {\n        return console.error('onCalendarChange: should be run in selectRange={true}');\n      }\n\n      const from = dateTimeParse(dateInfo(value[0]), { timeZone });\n      const to = dateTimeParse(dateInfo(value[1]), { timeZone });\n\n      onChange(from, to);\n    },\n    [onChange, timeZone]\n  );\n}\n\nfunction dateInfo(date: Date): number[] {\n  return [date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds()];\n}\n\nexport const getBodyStyles = (theme: GrafanaTheme2) => {\n  // If a time range is part of only 1 day but does not encompass the whole day,\n  // the class that react-calendar uses is '--hasActive' by itself (without being part of a '--range')\n  const hasActiveSelector = `.react-calendar__tile--hasActive:not(.react-calendar__tile--range)`;\n  return {\n    title: css`\n      color: ${theme.colors.text.primary};\n      background-color: ${theme.colors.background.primary};\n      font-size: ${theme.typography.size.md};\n      border: 1px solid transparent;\n\n      &:hover {\n        position: relative;\n      }\n\n      &:disabled {\n        color: ${theme.colors.action.disabledText};\n      }\n    `,\n    body: css`\n      z-index: ${theme.zIndex.modal};\n      background-color: ${theme.colors.background.primary};\n      width: 268px;\n\n      .react-calendar__navigation {\n        display: flex;\n      }\n\n      .react-calendar__navigation__label,\n      .react-calendar__navigation__arrow,\n      .react-calendar__navigation {\n        padding-top: 4px;\n        background-color: inherit;\n        color: ${theme.colors.text.primary};\n        border: 0;\n        font-weight: ${theme.typography.fontWeightMedium};\n      }\n\n      .react-calendar__month-view__weekdays {\n        background-color: inherit;\n        text-align: center;\n        color: ${theme.colors.primary.text};\n\n        abbr {\n          border: 0;\n          text-decoration: none;\n          cursor: default;\n          display: block;\n          padding: 4px 0 4px 0;\n        }\n      }\n\n      .react-calendar__month-view__days {\n        background-color: inherit;\n      }\n\n      .react-calendar__tile,\n      .react-calendar__tile--now {\n        margin-bottom: 4px;\n        background-color: inherit;\n        height: 26px;\n      }\n\n      .react-calendar__navigation__label,\n      .react-calendar__navigation > button:focus,\n      .time-picker-calendar-tile:focus {\n        outline: 0;\n      }\n\n      ${hasActiveSelector},\n      .react-calendar__tile--active,\n      .react-calendar__tile--active:hover {\n        color: ${theme.colors.primary.contrastText};\n        font-weight: ${theme.typography.fontWeightMedium};\n        background: ${theme.colors.primary.main};\n        box-shadow: none;\n        border: 0px;\n      }\n\n      .react-calendar__tile--rangeEnd,\n      .react-calendar__tile--rangeStart {\n        padding: 0;\n        border: 0px;\n        color: ${theme.colors.primary.contrastText};\n        font-weight: ${theme.typography.fontWeightMedium};\n        background: ${theme.colors.primary.main};\n\n        abbr {\n          background-color: ${theme.colors.primary.main};\n          border-radius: 100px;\n          display: block;\n          padding-top: 2px;\n          height: 26px;\n        }\n      }\n\n      ${hasActiveSelector},\n      .react-calendar__tile--rangeStart {\n        border-top-left-radius: 20px;\n        border-bottom-left-radius: 20px;\n      }\n\n      ${hasActiveSelector},\n      .react-calendar__tile--rangeEnd {\n        border-top-right-radius: 20px;\n        border-bottom-right-radius: 20px;\n      }\n    `,\n  };\n};\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../../themes';\nimport { Trans } from '../../../utils/i18n';\nimport { Button } from '../../Button';\n\nimport { TimePickerCalendarProps } from './TimePickerCalendar';\n\nexport function Footer({ onClose, onApply }: TimePickerCalendarProps) {\n  const styles = useStyles2(getFooterStyles);\n\n  return (\n    <div className={styles.container}>\n      <Button className={styles.apply} onClick={onApply}>\n        <Trans i18nKey=\"time-picker.calendar.apply-button\">Apply time range</Trans>\n      </Button>\n      <Button variant=\"secondary\" onClick={onClose}>\n        <Trans i18nKey=\"time-picker.calendar.cancel-button\">Cancel</Trans>\n      </Button>\n    </div>\n  );\n}\n\nFooter.displayName = 'Footer';\n\nconst getFooterStyles = (theme: GrafanaTheme2) => {\n  return {\n    container: css`\n      background-color: ${theme.colors.background.primary};\n      display: flex;\n      justify-content: center;\n      padding: 10px;\n      align-items: stretch;\n    `,\n    apply: css`\n      margin-right: 4px;\n      width: 100%;\n      justify-content: center;\n    `,\n  };\n};\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\n\nimport { useStyles2 } from '../../../themes';\nimport { Trans } from '../../../utils/i18n';\nimport { Button } from '../../Button';\n\nimport { TimePickerCalendarProps } from './TimePickerCalendar';\nimport { TimePickerTitle } from './TimePickerTitle';\n\nexport function Header({ onClose }: TimePickerCalendarProps) {\n  const styles = useStyles2(getHeaderStyles);\n\n  return (\n    <div className={styles.container}>\n      <TimePickerTitle>\n        <Trans i18nKey=\"time-picker.calendar.select-time\">Select a time range</Trans>\n      </TimePickerTitle>\n      <Button\n        aria-label={selectors.components.TimePicker.calendar.closeButton}\n        icon=\"times\"\n        variant=\"secondary\"\n        onClick={onClose}\n      />\n    </div>\n  );\n}\n\nHeader.displayName = 'Header';\n\nconst getHeaderStyles = (theme: GrafanaTheme2) => {\n  return {\n    container: css`\n      background-color: ${theme.colors.background.primary};\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      padding: 7px;\n    `,\n  };\n};\n","import { css } from '@emotion/css';\nimport { useDialog } from '@react-aria/dialog';\nimport { FocusScope } from '@react-aria/focus';\nimport { OverlayContainer, useOverlay } from '@react-aria/overlays';\nimport React, { FormEvent, memo } from 'react';\n\nimport { DateTime, GrafanaTheme2, TimeZone } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\n\nimport { useTheme2 } from '../../../themes';\nimport { getModalStyles } from '../../Modal/getModalStyles';\n\nimport { Body } from './CalendarBody';\nimport { Footer } from './CalendarFooter';\nimport { Header } from './CalendarHeader';\n\nexport const getStyles = (theme: GrafanaTheme2, isReversed = false) => {\n  return {\n    container: css`\n      top: 0px;\n      position: absolute;\n      ${isReversed ? 'left' : 'right'}: 544px;\n      box-shadow: ${theme.shadows.z3};\n      background-color: ${theme.colors.background.primary};\n      z-index: -1;\n      border: 1px solid ${theme.colors.border.weak};\n      border-radius: 2px 0 0 2px;\n\n      &:after {\n        display: block;\n        background-color: ${theme.colors.background.primary};\n        width: 19px;\n        height: 100%;\n        content: ${!isReversed ? ' ' : ''};\n        position: absolute;\n        top: 0;\n        right: -19px;\n        border-left: 1px solid ${theme.colors.border.weak};\n      }\n    `,\n    modal: css`\n      box-shadow: ${theme.shadows.z3};\n      left: 50%;\n      position: fixed;\n      top: 50%;\n      transform: translate(-50%, -50%);\n      z-index: ${theme.zIndex.modal};\n    `,\n    content: css`\n      margin: 0 auto;\n      width: 268px;\n    `,\n  };\n};\n\nexport interface TimePickerCalendarProps {\n  isOpen: boolean;\n  from: DateTime;\n  to: DateTime;\n  onClose: () => void;\n  onApply: (e: FormEvent<HTMLButtonElement>) => void;\n  onChange: (from: DateTime, to: DateTime) => void;\n  isFullscreen: boolean;\n  timeZone?: TimeZone;\n  isReversed?: boolean;\n}\n\nfunction TimePickerCalendar(props: TimePickerCalendarProps) {\n  const theme = useTheme2();\n  const { modalBackdrop } = getModalStyles(theme);\n  const styles = getStyles(theme, props.isReversed);\n  const { isOpen, isFullscreen, onClose } = props;\n  const ref = React.createRef<HTMLElement>();\n  const { dialogProps } = useDialog(\n    {\n      'aria-label': selectors.components.TimePicker.calendar.label,\n    },\n    ref\n  );\n  const { overlayProps } = useOverlay(\n    {\n      isDismissable: true,\n      isOpen,\n      onClose,\n    },\n    ref\n  );\n\n  if (!isOpen) {\n    return null;\n  }\n\n  if (isFullscreen) {\n    return (\n      <FocusScope contain restoreFocus autoFocus>\n        <section className={styles.container} ref={ref} {...overlayProps} {...dialogProps}>\n          <Header {...props} />\n          <Body {...props} />\n        </section>\n      </FocusScope>\n    );\n  }\n\n  return (\n    <OverlayContainer>\n      <div className={modalBackdrop} />\n      <FocusScope contain autoFocus restoreFocus>\n        <section className={styles.modal} ref={ref} {...overlayProps} {...dialogProps}>\n          <div className={styles.content} aria-label={selectors.components.TimePicker.calendar.label}>\n            <Header {...props} />\n            <Body {...props} />\n            <Footer {...props} />\n          </div>\n        </section>\n      </FocusScope>\n    </OverlayContainer>\n  );\n}\nexport default memo(TimePickerCalendar);\nTimePickerCalendar.displayName = 'TimePickerCalendar';\n","import { css } from '@emotion/css';\nimport React, { FormEvent, useCallback, useEffect, useState } from 'react';\n\nimport {\n  dateMath,\n  DateTime,\n  dateTimeFormat,\n  dateTimeParse,\n  GrafanaTheme2,\n  isDateTime,\n  rangeUtil,\n  RawTimeRange,\n  TimeRange,\n  TimeZone,\n} from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\n\nimport { Icon, Tooltip } from '../..';\nimport { useStyles2 } from '../../..';\nimport { t, Trans } from '../../../utils/i18n';\nimport { Button } from '../../Button';\nimport { Field } from '../../Forms/Field';\nimport { Input } from '../../Input/Input';\n\nimport TimePickerCalendar from './TimePickerCalendar';\n\ninterface Props {\n  isFullscreen: boolean;\n  value: TimeRange;\n  onApply: (range: TimeRange) => void;\n  timeZone?: TimeZone;\n  fiscalYearStartMonth?: number;\n  roundup?: boolean;\n  isReversed?: boolean;\n}\n\ninterface InputState {\n  value: string;\n  invalid: boolean;\n  errorMessage: string;\n}\n\nconst ERROR_MESSAGES = {\n  default: () => t('time-picker.range-content.default-error', 'Please enter a past date or \"now\"'),\n  range: () => t('time-picker.range-content.range-error', '\"From\" can\\'t be after \"To\"'),\n};\n\nexport const TimeRangeContent = (props: Props) => {\n  const { value, isFullscreen = false, timeZone, onApply: onApplyFromProps, isReversed, fiscalYearStartMonth } = props;\n  const [fromValue, toValue] = valueToState(value.raw.from, value.raw.to, timeZone);\n  const style = useStyles2(getStyles);\n\n  const [from, setFrom] = useState<InputState>(fromValue);\n  const [to, setTo] = useState<InputState>(toValue);\n  const [isOpen, setOpen] = useState(false);\n\n  // Synchronize internal state with external value\n  useEffect(() => {\n    const [fromValue, toValue] = valueToState(value.raw.from, value.raw.to, timeZone);\n    setFrom(fromValue);\n    setTo(toValue);\n  }, [value.raw.from, value.raw.to, timeZone]);\n\n  const onOpen = useCallback(\n    (event: FormEvent<HTMLElement>) => {\n      event.preventDefault();\n      setOpen(true);\n    },\n    [setOpen]\n  );\n\n  const onApply = useCallback(() => {\n    if (to.invalid || from.invalid) {\n      return;\n    }\n\n    const raw: RawTimeRange = { from: from.value, to: to.value };\n    const timeRange = rangeUtil.convertRawToRange(raw, timeZone, fiscalYearStartMonth);\n\n    onApplyFromProps(timeRange);\n  }, [from.invalid, from.value, onApplyFromProps, timeZone, to.invalid, to.value, fiscalYearStartMonth]);\n\n  const onChange = useCallback(\n    (from: DateTime | string, to: DateTime | string) => {\n      const [fromValue, toValue] = valueToState(from, to, timeZone);\n      setFrom(fromValue);\n      setTo(toValue);\n    },\n    [timeZone]\n  );\n\n  const submitOnEnter = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === 'Enter') {\n      onApply();\n    }\n  };\n\n  const fiscalYear = rangeUtil.convertRawToRange({ from: 'now/fy', to: 'now/fy' }, timeZone, fiscalYearStartMonth);\n  const fiscalYearMessage = t('time-picker.range-content.fiscal-year', 'Fiscal year');\n\n  const fyTooltip = (\n    <div className={style.tooltip}>\n      {rangeUtil.isFiscal(value) ? (\n        <Tooltip\n          content={`${fiscalYearMessage}: ${fiscalYear.from.format('MMM-DD')} - ${fiscalYear.to.format('MMM-DD')}`}\n        >\n          <Icon name=\"info-circle\" />\n        </Tooltip>\n      ) : null}\n    </div>\n  );\n\n  const icon = (\n    <Button\n      aria-label={selectors.components.TimePicker.calendar.openButton}\n      icon=\"calendar-alt\"\n      variant=\"secondary\"\n      type=\"button\"\n      onClick={onOpen}\n    />\n  );\n\n  return (\n    <div>\n      <div className={style.fieldContainer}>\n        <Field\n          label={t('time-picker.range-content.from-input', 'From')}\n          invalid={from.invalid}\n          error={from.errorMessage}\n        >\n          <Input\n            onClick={(event) => event.stopPropagation()}\n            onChange={(event) => onChange(event.currentTarget.value, to.value)}\n            addonAfter={icon}\n            onKeyDown={submitOnEnter}\n            aria-label={selectors.components.TimePicker.fromField}\n            value={from.value}\n          />\n        </Field>\n        {fyTooltip}\n      </div>\n      <div className={style.fieldContainer}>\n        <Field label={t('time-picker.range-content.to-input', 'To')} invalid={to.invalid} error={to.errorMessage}>\n          <Input\n            onClick={(event) => event.stopPropagation()}\n            onChange={(event) => onChange(from.value, event.currentTarget.value)}\n            addonAfter={icon}\n            onKeyDown={submitOnEnter}\n            aria-label={selectors.components.TimePicker.toField}\n            value={to.value}\n          />\n        </Field>\n        {fyTooltip}\n      </div>\n      <Button data-testid={selectors.components.TimePicker.applyTimeRange} type=\"button\" onClick={onApply}>\n        <Trans i18nKey=\"time-picker.range-content.apply-button\">Apply time range</Trans>\n      </Button>\n\n      <TimePickerCalendar\n        isFullscreen={isFullscreen}\n        isOpen={isOpen}\n        from={dateTimeParse(from.value)}\n        to={dateTimeParse(to.value)}\n        onApply={onApply}\n        onClose={() => setOpen(false)}\n        onChange={onChange}\n        timeZone={timeZone}\n        isReversed={isReversed}\n      />\n    </div>\n  );\n};\n\nfunction isRangeInvalid(from: string, to: string, timezone?: string): boolean {\n  const raw: RawTimeRange = { from, to };\n  const timeRange = rangeUtil.convertRawToRange(raw, timezone);\n  const valid = timeRange.from.isSame(timeRange.to) || timeRange.from.isBefore(timeRange.to);\n\n  return !valid;\n}\n\nfunction valueToState(\n  rawFrom: DateTime | string,\n  rawTo: DateTime | string,\n  timeZone?: TimeZone\n): [InputState, InputState] {\n  const fromValue = valueAsString(rawFrom, timeZone);\n  const toValue = valueAsString(rawTo, timeZone);\n  const fromInvalid = !isValid(fromValue, false, timeZone);\n  const toInvalid = !isValid(toValue, true, timeZone);\n  // If \"To\" is invalid, we should not check the range anyways\n  const rangeInvalid = isRangeInvalid(fromValue, toValue, timeZone) && !toInvalid;\n\n  return [\n    {\n      value: fromValue,\n      invalid: fromInvalid || rangeInvalid,\n      errorMessage: rangeInvalid && !fromInvalid ? ERROR_MESSAGES.range() : ERROR_MESSAGES.default(),\n    },\n    { value: toValue, invalid: toInvalid, errorMessage: ERROR_MESSAGES.default() },\n  ];\n}\n\nfunction valueAsString(value: DateTime | string, timeZone?: TimeZone): string {\n  if (isDateTime(value)) {\n    return dateTimeFormat(value, { timeZone });\n  }\n  return value;\n}\n\nfunction isValid(value: string, roundUp?: boolean, timeZone?: TimeZone): boolean {\n  if (isDateTime(value)) {\n    return value.isValid();\n  }\n\n  if (dateMath.isMathString(value)) {\n    return dateMath.isValid(value);\n  }\n\n  const parsed = dateTimeParse(value, { roundUp, timeZone });\n  return parsed.isValid();\n}\n\nfunction getStyles(theme: GrafanaTheme2) {\n  return {\n    fieldContainer: css`\n      display: flex;\n    `,\n    tooltip: css`\n      padding-left: ${theme.spacing(1)};\n      padding-top: ${theme.spacing(3)};\n    `,\n  };\n}\n","import { css, cx } from '@emotion/css';\nimport React, { memo } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { GrafanaTheme2, TimeOption } from '@grafana/data';\n\nimport { useStyles2 } from '../../../themes/ThemeContext';\nimport { getFocusStyles } from '../../../themes/mixins';\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    container: css`\n      display: flex;\n      align-items: center;\n      flex-direction: row-reverse;\n      justify-content: space-between;\n    `,\n    selected: css`\n      background: ${theme.colors.action.selected};\n      font-weight: ${theme.typography.fontWeightMedium};\n    `,\n    radio: css`\n      opacity: 0;\n      width: 0 !important;\n\n      &:focus-visible + label {\n        ${getFocusStyles(theme)};\n      }\n    `,\n    label: css`\n      cursor: pointer;\n      flex: 1;\n      padding: 7px 9px 7px 9px;\n\n      &:hover {\n        background: ${theme.colors.action.hover};\n        cursor: pointer;\n      }\n    `,\n  };\n};\n\ninterface Props {\n  value: TimeOption;\n  selected?: boolean;\n  onSelect: (option: TimeOption) => void;\n  /**\n   *  Input identifier. This should be the same for all options in a group.\n   */\n  name: string;\n}\n\nexport const TimeRangeOption = memo<Props>(({ value, onSelect, selected = false, name }) => {\n  const styles = useStyles2(getStyles);\n  // In case there are more of the same timerange in the list\n  const id = uuidv4();\n\n  return (\n    <li className={cx(styles.container, selected && styles.selected)}>\n      <input\n        className={styles.radio}\n        checked={selected}\n        name={name}\n        type=\"checkbox\"\n        id={id}\n        onChange={() => onSelect(value)}\n      />\n      <label className={styles.label} htmlFor={id}>\n        {value.display}\n      </label>\n    </li>\n  );\n});\n\nTimeRangeOption.displayName = 'TimeRangeOption';\n","import { css } from '@emotion/css';\nimport React, { ReactNode } from 'react';\n\nimport { TimeOption } from '@grafana/data';\n\nimport { stylesFactory } from '../../../themes';\nimport { t } from '../../../utils/i18n';\n\nimport { TimePickerTitle } from './TimePickerTitle';\nimport { TimeRangeOption } from './TimeRangeOption';\n\nconst getStyles = stylesFactory(() => {\n  return {\n    title: css`\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      padding: 8px 16px 5px 9px;\n    `,\n  };\n});\n\nconst getOptionsStyles = stylesFactory(() => {\n  return {\n    grow: css`\n      flex-grow: 1;\n      align-items: flex-start;\n    `,\n  };\n});\n\ninterface Props {\n  title?: string;\n  options: TimeOption[];\n  value?: TimeOption;\n  onChange: (option: TimeOption) => void;\n  placeholderEmpty?: ReactNode;\n}\n\nexport const TimeRangeList = (props: Props) => {\n  const styles = getStyles();\n  const { title, options, placeholderEmpty } = props;\n\n  if (typeof placeholderEmpty !== 'undefined' && options.length <= 0) {\n    return <>{placeholderEmpty}</>;\n  }\n\n  if (!title) {\n    return <Options {...props} />;\n  }\n\n  return (\n    <section aria-label={title}>\n      <fieldset>\n        <div className={styles.title}>\n          <TimePickerTitle>{title}</TimePickerTitle>\n        </div>\n        <Options {...props} />\n      </fieldset>\n    </section>\n  );\n};\n\nconst Options = ({ options, value, onChange, title }: Props) => {\n  const styles = getOptionsStyles();\n\n  return (\n    <>\n      <ul aria-roledescription={t('time-picker.time-range.aria-role', 'Time range selection')}>\n        {options.map((option, index) => (\n          <TimeRangeOption\n            key={keyForOption(option, index)}\n            value={option}\n            selected={isEqual(option, value)}\n            onSelect={onChange}\n            name={title ?? t('time-picker.time-range.default-title', 'Time ranges')}\n          />\n        ))}\n      </ul>\n      <div className={styles.grow} />\n    </>\n  );\n};\n\nfunction keyForOption(option: TimeOption, index: number): string {\n  return `${option.from}-${option.to}-${index}`;\n}\n\nfunction isEqual(x: TimeOption, y?: TimeOption): boolean {\n  if (!y || !x) {\n    return false;\n  }\n  return y.from === x.from && y.to === x.to;\n}\n","import { TimeOption, TimeRange, TimeZone, rangeUtil, dateTimeFormat } from '@grafana/data';\n\nexport const mapOptionToTimeRange = (option: TimeOption, timeZone?: TimeZone): TimeRange => {\n  return rangeUtil.convertRawToRange({ from: option.from, to: option.to }, timeZone);\n};\n\nexport const mapRangeToTimeOption = (range: TimeRange, timeZone?: TimeZone): TimeOption => {\n  const from = dateTimeFormat(range.from, { timeZone });\n  const to = dateTimeFormat(range.to, { timeZone });\n\n  return {\n    from,\n    to,\n    display: `${from} to ${to}`,\n  };\n};\n","import { css, cx } from '@emotion/css';\nimport React, { memo, useMemo, useState } from 'react';\n\nimport { GrafanaTheme2, isDateTime, rangeUtil, RawTimeRange, TimeOption, TimeRange, TimeZone } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\n\nimport { FilterInput } from '../..';\nimport { stylesFactory, useTheme2 } from '../../../themes';\nimport { getFocusStyles } from '../../../themes/mixins';\nimport { t, Trans } from '../../../utils/i18n';\nimport { CustomScrollbar } from '../../CustomScrollbar/CustomScrollbar';\nimport { Icon } from '../../Icon/Icon';\n\nimport { TimePickerFooter } from './TimePickerFooter';\nimport { TimePickerTitle } from './TimePickerTitle';\nimport { TimeRangeContent } from './TimeRangeContent';\nimport { TimeRangeList } from './TimeRangeList';\nimport { mapOptionToTimeRange, mapRangeToTimeOption } from './mapper';\n\ninterface Props {\n  value: TimeRange;\n  onChange: (timeRange: TimeRange) => void;\n  onChangeTimeZone: (timeZone: TimeZone) => void;\n  onChangeFiscalYearStartMonth?: (month: number) => void;\n  timeZone?: TimeZone;\n  fiscalYearStartMonth?: number;\n  quickOptions?: TimeOption[];\n  history?: TimeRange[];\n  showHistory?: boolean;\n  className?: string;\n  hideTimeZone?: boolean;\n  /** Reverse the order of relative and absolute range pickers. Used to left align the picker in forms */\n  isReversed?: boolean;\n  hideQuickRanges?: boolean;\n  widthOverride?: number;\n}\n\nexport interface PropsWithScreenSize extends Props {\n  isFullscreen: boolean;\n}\n\ninterface FormProps extends Omit<Props, 'history'> {\n  historyOptions?: TimeOption[];\n}\n\nexport const TimePickerContentWithScreenSize = (props: PropsWithScreenSize) => {\n  const {\n    quickOptions = [],\n    isReversed,\n    isFullscreen,\n    hideQuickRanges,\n    timeZone,\n    fiscalYearStartMonth,\n    value,\n    onChange,\n    history,\n    showHistory,\n    className,\n    hideTimeZone,\n    onChangeTimeZone,\n    onChangeFiscalYearStartMonth,\n  } = props;\n  const isHistoryEmpty = !history?.length;\n  const isContainerTall =\n    (isFullscreen && showHistory) || (!isFullscreen && ((showHistory && !isHistoryEmpty) || !hideQuickRanges));\n  const theme = useTheme2();\n  const styles = getStyles(theme, isReversed, hideQuickRanges, isContainerTall, isFullscreen);\n  const historyOptions = mapToHistoryOptions(history, timeZone);\n  const timeOption = useTimeOption(value.raw, quickOptions);\n  const [searchTerm, setSearchQuery] = useState('');\n\n  const filteredQuickOptions = quickOptions.filter((o) => o.display.toLowerCase().includes(searchTerm.toLowerCase()));\n\n  const onChangeTimeOption = (timeOption: TimeOption) => {\n    return onChange(mapOptionToTimeRange(timeOption));\n  };\n\n  return (\n    <div id=\"TimePickerContent\" className={cx(styles.container, className)}>\n      <div className={styles.body}>\n        {(!isFullscreen || !hideQuickRanges) && (\n          <div className={styles.rightSide}>\n            <div className={styles.timeRangeFilter}>\n              <FilterInput\n                width={0}\n                autoFocus={true}\n                value={searchTerm}\n                onChange={setSearchQuery}\n                placeholder={t('time-picker.content.filter-placeholder', 'Search quick ranges')}\n              />\n            </div>\n            <CustomScrollbar>\n              {!isFullscreen && <NarrowScreenForm {...props} historyOptions={historyOptions} />}\n              {!hideQuickRanges && (\n                <TimeRangeList options={filteredQuickOptions} onChange={onChangeTimeOption} value={timeOption} />\n              )}\n            </CustomScrollbar>\n          </div>\n        )}\n        {isFullscreen && (\n          <div className={styles.leftSide}>\n            <FullScreenForm {...props} historyOptions={historyOptions} />\n          </div>\n        )}\n      </div>\n      {!hideTimeZone && isFullscreen && (\n        <TimePickerFooter\n          timeZone={timeZone}\n          fiscalYearStartMonth={fiscalYearStartMonth}\n          onChangeTimeZone={onChangeTimeZone}\n          onChangeFiscalYearStartMonth={onChangeFiscalYearStartMonth}\n        />\n      )}\n    </div>\n  );\n};\n\nexport const TimePickerContent = (props: Props) => {\n  const { widthOverride } = props;\n  const theme = useTheme2();\n  const isFullscreen = (widthOverride || window.innerWidth) >= theme.breakpoints.values.lg;\n  return <TimePickerContentWithScreenSize {...props} isFullscreen={isFullscreen} />;\n};\n\nconst NarrowScreenForm = (props: FormProps) => {\n  const { value, hideQuickRanges, onChange, timeZone, historyOptions = [], showHistory } = props;\n  const theme = useTheme2();\n  const styles = getNarrowScreenStyles(theme);\n  const isAbsolute = isDateTime(value.raw.from) || isDateTime(value.raw.to);\n  const [collapsedFlag, setCollapsedFlag] = useState(!isAbsolute);\n  const collapsed = hideQuickRanges ? false : collapsedFlag;\n\n  const onChangeTimeOption = (timeOption: TimeOption) => {\n    return onChange(mapOptionToTimeRange(timeOption, timeZone));\n  };\n\n  return (\n    <fieldset>\n      <div className={styles.header}>\n        <button\n          type={'button'}\n          className={styles.expandButton}\n          onClick={() => {\n            if (!hideQuickRanges) {\n              setCollapsedFlag(!collapsed);\n            }\n          }}\n          data-testid={selectors.components.TimePicker.absoluteTimeRangeTitle}\n          aria-expanded={!collapsed}\n          aria-controls=\"expanded-timerange\"\n        >\n          <TimePickerTitle>\n            <Trans i18nKey=\"time-picker.absolute.title\">Absolute time range</Trans>\n          </TimePickerTitle>\n          {!hideQuickRanges && <Icon name={!collapsed ? 'angle-up' : 'angle-down'} />}\n        </button>\n      </div>\n      {!collapsed && (\n        <div className={styles.body} id=\"expanded-timerange\">\n          <div className={styles.form}>\n            <TimeRangeContent value={value} onApply={onChange} timeZone={timeZone} isFullscreen={false} />\n          </div>\n          {showHistory && (\n            <TimeRangeList\n              title={t('time-picker.absolute.recent-title', 'Recently used absolute ranges')}\n              options={historyOptions}\n              onChange={onChangeTimeOption}\n              placeholderEmpty={null}\n            />\n          )}\n        </div>\n      )}\n    </fieldset>\n  );\n};\n\nconst FullScreenForm = (props: FormProps) => {\n  const { onChange, value, timeZone, fiscalYearStartMonth, isReversed, historyOptions } = props;\n  const theme = useTheme2();\n  const styles = getFullScreenStyles(theme, props.hideQuickRanges);\n  const onChangeTimeOption = (timeOption: TimeOption) => {\n    return onChange(mapOptionToTimeRange(timeOption, timeZone));\n  };\n\n  return (\n    <>\n      <div className={styles.container}>\n        <div className={styles.title} data-testid={selectors.components.TimePicker.absoluteTimeRangeTitle}>\n          <TimePickerTitle>\n            <Trans i18nKey=\"time-picker.absolute.title\">Absolute time range</Trans>\n          </TimePickerTitle>\n        </div>\n        <TimeRangeContent\n          value={value}\n          timeZone={timeZone}\n          fiscalYearStartMonth={fiscalYearStartMonth}\n          onApply={onChange}\n          isFullscreen={true}\n          isReversed={isReversed}\n        />\n      </div>\n      {props.showHistory && (\n        <div className={styles.recent}>\n          <TimeRangeList\n            title={t('time-picker.absolute.recent-title', 'Recently used absolute ranges')}\n            options={historyOptions || []}\n            onChange={onChangeTimeOption}\n            placeholderEmpty={<EmptyRecentList />}\n          />\n        </div>\n      )}\n    </>\n  );\n};\n\nconst EmptyRecentList = memo(() => {\n  const theme = useTheme2();\n  const styles = getEmptyListStyles(theme);\n\n  return (\n    <div className={styles.container}>\n      <Trans i18nKey=\"time-picker.content.empty-recent-list\">\n        <div>\n          <span>\n            It looks like you haven&apos;t used this time picker before. As soon as you enter some time intervals,\n            recently used intervals will appear here.\n          </span>\n        </div>\n        <div>\n          <a\n            className={styles.link}\n            href=\"https://grafana.com/docs/grafana/latest/dashboards/time-range-controls\"\n            target=\"_new\"\n          >\n            Read the documentation\n          </a>\n          <span> to find out more about how to enter custom time ranges.</span>\n        </div>\n      </Trans>\n    </div>\n  );\n});\n\nfunction mapToHistoryOptions(ranges?: TimeRange[], timeZone?: TimeZone): TimeOption[] {\n  if (!Array.isArray(ranges) || ranges.length === 0) {\n    return [];\n  }\n\n  return ranges.map((range) => mapRangeToTimeOption(range, timeZone));\n}\n\nEmptyRecentList.displayName = 'EmptyRecentList';\n\nconst useTimeOption = (raw: RawTimeRange, quickOptions: TimeOption[]): TimeOption | undefined => {\n  return useMemo(() => {\n    if (!rangeUtil.isRelativeTimeRange(raw)) {\n      return;\n    }\n    return quickOptions.find((option) => {\n      return option.from === raw.from && option.to === raw.to;\n    });\n  }, [raw, quickOptions]);\n};\n\nconst getStyles = stylesFactory((theme: GrafanaTheme2, isReversed, hideQuickRanges, isContainerTall, isFullscreen) => {\n  return {\n    container: css`\n      background: ${theme.colors.background.primary};\n      box-shadow: ${theme.shadows.z3};\n      width: ${isFullscreen ? '546px' : '262px'};\n      border-radius: 2px;\n      border: 1px solid ${theme.colors.border.weak};\n      ${isReversed ? 'left' : 'right'}: 0;\n    `,\n    body: css`\n      display: flex;\n      flex-direction: row-reverse;\n      height: ${isContainerTall ? '381px' : '217px'};\n    `,\n    leftSide: css`\n      display: flex;\n      flex-direction: column;\n      border-right: ${isReversed ? 'none' : `1px solid ${theme.colors.border.weak}`};\n      width: ${!hideQuickRanges ? '60%' : '100%'};\n      overflow: hidden;\n      order: ${isReversed ? 1 : 0};\n    `,\n    rightSide: css`\n      width: ${isFullscreen ? '40%' : '100%'}; !important;\n      border-right: ${isReversed ? `1px solid ${theme.colors.border.weak}` : 'none'};\n      display: flex;\n      flex-direction: column;\n    `,\n    timeRangeFilter: css`\n      padding: ${theme.spacing(1)};\n    `,\n    spacing: css`\n      margin-top: 16px;\n    `,\n  };\n});\n\nconst getNarrowScreenStyles = stylesFactory((theme: GrafanaTheme2) => {\n  return {\n    header: css`\n      display: flex;\n      flex-direction: row;\n      justify-content: space-between;\n      align-items: center;\n      border-bottom: 1px solid ${theme.colors.border.weak};\n      padding: 7px 9px 7px 9px;\n    `,\n    expandButton: css`\n      background-color: transparent;\n      border: none;\n      display: flex;\n      width: 100%;\n\n      &:focus-visible {\n        ${getFocusStyles(theme)}\n      }\n    `,\n    body: css`\n      border-bottom: 1px solid ${theme.colors.border.weak};\n    `,\n    form: css`\n      padding: 7px 9px 7px 9px;\n    `,\n  };\n});\n\nconst getFullScreenStyles = stylesFactory((theme: GrafanaTheme2, hideQuickRanges?: boolean) => {\n  return {\n    container: css`\n      padding-top: 9px;\n      padding-left: 11px;\n      padding-right: ${!hideQuickRanges ? '20%' : '11px'};\n    `,\n    title: css`\n      margin-bottom: 11px;\n    `,\n    recent: css`\n      flex-grow: 1;\n      display: flex;\n      flex-direction: column;\n      justify-content: flex-end;\n      padding-top: ${theme.spacing(1)};\n    `,\n  };\n});\n\nconst getEmptyListStyles = stylesFactory((theme: GrafanaTheme2) => {\n  return {\n    container: css`\n      padding: 12px;\n      margin: 12px;\n\n      a,\n      span {\n        font-size: 13px;\n      }\\\n    `,\n    link: css`\n      color: ${theme.colors.text.link};\n    `,\n  };\n});\n","import { css, cx } from '@emotion/css';\nimport { useDialog } from '@react-aria/dialog';\nimport { FocusScope } from '@react-aria/focus';\nimport { useOverlay } from '@react-aria/overlays';\nimport React, { memo, FormEvent, createRef, useState } from 'react';\n\nimport {\n  isDateTime,\n  rangeUtil,\n  GrafanaTheme2,\n  dateTimeFormat,\n  timeZoneFormatUserFriendly,\n  TimeRange,\n  TimeZone,\n  dateMath,\n} from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\n\nimport { useStyles2, useTheme2 } from '../../themes/ThemeContext';\nimport { t, Trans } from '../../utils/i18n';\nimport { ButtonGroup } from '../Button';\nimport { getModalStyles } from '../Modal/getModalStyles';\nimport { ToolbarButton } from '../ToolbarButton';\nimport { Tooltip } from '../Tooltip/Tooltip';\n\nimport { TimePickerContent } from './TimeRangePicker/TimePickerContent';\nimport { quickOptions } from './options';\n\n/** @public */\nexport interface TimeRangePickerProps {\n  hideText?: boolean;\n  value: TimeRange;\n  timeZone?: TimeZone;\n  fiscalYearStartMonth?: number;\n  timeSyncButton?: JSX.Element;\n  isSynced?: boolean;\n  onChange: (timeRange: TimeRange) => void;\n  onChangeTimeZone: (timeZone: TimeZone) => void;\n  onChangeFiscalYearStartMonth?: (month: number) => void;\n  onMoveBackward: () => void;\n  onMoveForward: () => void;\n  onZoom: () => void;\n  history?: TimeRange[];\n  hideQuickRanges?: boolean;\n  widthOverride?: number;\n  isOnCanvas?: boolean;\n}\n\nexport interface State {\n  isOpen: boolean;\n}\n\nexport function TimeRangePicker(props: TimeRangePickerProps) {\n  const [isOpen, setOpen] = useState(false);\n\n  const {\n    value,\n    onMoveBackward,\n    onMoveForward,\n    onZoom,\n    timeZone,\n    fiscalYearStartMonth,\n    timeSyncButton,\n    isSynced,\n    history,\n    onChangeTimeZone,\n    onChangeFiscalYearStartMonth,\n    hideQuickRanges,\n    widthOverride,\n    isOnCanvas,\n  } = props;\n\n  const onChange = (timeRange: TimeRange) => {\n    props.onChange(timeRange);\n    setOpen(false);\n  };\n\n  const onOpen = (event: FormEvent<HTMLButtonElement>) => {\n    event.stopPropagation();\n    event.preventDefault();\n    setOpen(!isOpen);\n  };\n\n  const onClose = () => {\n    setOpen(false);\n  };\n\n  const ref = createRef<HTMLElement>();\n  const { overlayProps, underlayProps } = useOverlay({ onClose, isDismissable: true, isOpen }, ref);\n  const { dialogProps } = useDialog({}, ref);\n\n  const theme = useTheme2();\n  const styles = useStyles2(getStyles);\n  const { modalBackdrop } = getModalStyles(theme);\n  const hasAbsolute = isDateTime(value.raw.from) || isDateTime(value.raw.to);\n  const variant = isSynced ? 'active' : isOnCanvas ? 'canvas' : 'default';\n\n  const currentTimeRange = formattedRange(value, timeZone);\n\n  return (\n    <ButtonGroup className={styles.container}>\n      {hasAbsolute && (\n        <ToolbarButton\n          aria-label={t('time-picker.range-picker.backwards-time-aria-label', 'Move time range backwards')}\n          variant={variant}\n          onClick={onMoveBackward}\n          icon=\"angle-left\"\n          narrow\n        />\n      )}\n\n      <Tooltip content={<TimePickerTooltip timeRange={value} timeZone={timeZone} />} placement=\"bottom\" interactive>\n        <ToolbarButton\n          data-testid={selectors.components.TimePicker.openButton}\n          aria-label={t('time-picker.range-picker.current-time-selected', 'Time range selected: {{currentTimeRange}}', {\n            currentTimeRange,\n          })}\n          aria-controls=\"TimePickerContent\"\n          onClick={onOpen}\n          icon=\"clock-nine\"\n          isOpen={isOpen}\n          variant={variant}\n        >\n          <TimePickerButtonLabel {...props} />\n        </ToolbarButton>\n      </Tooltip>\n      {isOpen && (\n        <div>\n          <div role=\"presentation\" className={cx(modalBackdrop, styles.backdrop)} {...underlayProps} />\n          <FocusScope contain autoFocus>\n            <section className={styles.content} ref={ref} {...overlayProps} {...dialogProps}>\n              <TimePickerContent\n                timeZone={timeZone}\n                fiscalYearStartMonth={fiscalYearStartMonth}\n                value={value}\n                onChange={onChange}\n                quickOptions={quickOptions}\n                history={history}\n                showHistory\n                widthOverride={widthOverride}\n                onChangeTimeZone={onChangeTimeZone}\n                onChangeFiscalYearStartMonth={onChangeFiscalYearStartMonth}\n                hideQuickRanges={hideQuickRanges}\n              />\n            </section>\n          </FocusScope>\n        </div>\n      )}\n\n      {timeSyncButton}\n\n      {hasAbsolute && (\n        <ToolbarButton\n          aria-label={t('time-picker.range-picker.forwards-time-aria-label', 'Move time range forwards')}\n          onClick={onMoveForward}\n          icon=\"angle-right\"\n          narrow\n          variant={variant}\n        />\n      )}\n\n      <Tooltip content={ZoomOutTooltip} placement=\"bottom\">\n        <ToolbarButton\n          aria-label={t('time-picker.range-picker.zoom-out-button', 'Zoom out time range')}\n          onClick={onZoom}\n          icon=\"search-minus\"\n          variant={variant}\n        />\n      </Tooltip>\n    </ButtonGroup>\n  );\n}\n\nTimeRangePicker.displayName = 'TimeRangePicker';\n\nconst ZoomOutTooltip = () => (\n  <>\n    <Trans i18nKey=\"time-picker.range-picker.zoom-out-tooltip\">\n      Time range zoom out <br /> CTRL+Z\n    </Trans>\n  </>\n);\n\nexport const TimePickerTooltip = ({ timeRange, timeZone }: { timeRange: TimeRange; timeZone?: TimeZone }) => {\n  const styles = useStyles2(getLabelStyles);\n\n  return (\n    <>\n      {dateTimeFormat(timeRange.from, { timeZone })}\n      <div className=\"text-center\">\n        <Trans i18nKey=\"time-picker.range-picker.to\">to</Trans>\n      </div>\n      {dateTimeFormat(timeRange.to, { timeZone })}\n      <div className=\"text-center\">\n        <span className={styles.utc}>{timeZoneFormatUserFriendly(timeZone)}</span>\n      </div>\n    </>\n  );\n};\n\ntype LabelProps = Pick<TimeRangePickerProps, 'hideText' | 'value' | 'timeZone'>;\n\nexport const TimePickerButtonLabel = memo<LabelProps>(({ hideText, value, timeZone }) => {\n  const styles = useStyles2(getLabelStyles);\n\n  if (hideText) {\n    return null;\n  }\n\n  return (\n    <span className={styles.container}>\n      <span>{formattedRange(value, timeZone)}</span>\n      <span className={styles.utc}>{rangeUtil.describeTimeRangeAbbreviation(value, timeZone)}</span>\n    </span>\n  );\n});\n\nTimePickerButtonLabel.displayName = 'TimePickerButtonLabel';\n\nconst formattedRange = (value: TimeRange, timeZone?: TimeZone) => {\n  const adjustedTimeRange = {\n    to: dateMath.isMathString(value.raw.to) ? value.raw.to : value.to,\n    from: dateMath.isMathString(value.raw.from) ? value.raw.from : value.from,\n  };\n  return rangeUtil.describeTimeRange(adjustedTimeRange, timeZone);\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    container: css`\n      position: relative;\n      display: flex;\n      vertical-align: middle;\n    `,\n    backdrop: css({\n      display: 'none',\n      [theme.breakpoints.down('sm')]: {\n        display: 'block',\n      },\n    }),\n    content: css({\n      position: 'absolute',\n      right: 0,\n      top: '116%',\n      zIndex: theme.zIndex.dropdown,\n\n      [theme.breakpoints.down('sm')]: {\n        position: 'fixed',\n        right: '50%',\n        top: '50%',\n        transform: 'translate(50%, -50%)',\n        zIndex: theme.zIndex.modal,\n      },\n    }),\n  };\n};\n\nconst getLabelStyles = (theme: GrafanaTheme2) => {\n  return {\n    container: css`\n      display: flex;\n      align-items: center;\n      white-space: nowrap;\n    `,\n    utc: css`\n      color: ${theme.v1.palette.orange};\n      font-size: ${theme.typography.size.sm};\n      padding-left: 6px;\n      line-height: 28px;\n      vertical-align: bottom;\n      font-weight: ${theme.typography.fontWeightMedium};\n    `,\n  };\n};\n","import { css, cx } from '@emotion/css';\nimport RcTimePicker from 'rc-time-picker';\nimport React from 'react';\n\nimport { dateTime, DateTime, dateTimeAsMoment, GrafanaTheme2 } from '@grafana/data';\n\nimport { Icon, useStyles2 } from '../../index';\nimport { focusCss } from '../../themes/mixins';\nimport { inputSizes } from '../Forms/commonStyles';\nimport { FormInputSize } from '../Forms/types';\n\nexport interface Props {\n  onChange: (value: DateTime) => void;\n  value?: DateTime;\n  showHour?: boolean;\n  showSeconds?: boolean;\n  minuteStep?: number;\n  size?: FormInputSize;\n  disabled?: boolean;\n  disabledHours?: () => number[];\n  disabledMinutes?: () => number[];\n  disabledSeconds?: () => number[];\n}\n\nexport const POPUP_CLASS_NAME = 'time-of-day-picker-panel';\n\nexport const TimeOfDayPicker = ({\n  minuteStep = 1,\n  showHour = true,\n  showSeconds = false,\n  onChange,\n  value,\n  size = 'auto',\n  disabled,\n  disabledHours,\n  disabledMinutes,\n  disabledSeconds,\n}: Props) => {\n  const styles = useStyles2(getStyles);\n\n  return (\n    <RcTimePicker\n      className={cx(inputSizes()[size], styles.input)}\n      popupClassName={cx(styles.picker, POPUP_CLASS_NAME)}\n      defaultValue={dateTimeAsMoment()}\n      onChange={(value: any) => onChange(dateTime(value))}\n      allowEmpty={false}\n      showSecond={showSeconds}\n      value={dateTimeAsMoment(value)}\n      showHour={showHour}\n      minuteStep={minuteStep}\n      inputIcon={<Caret wrapperStyle={styles.caretWrapper} />}\n      disabled={disabled}\n      disabledHours={disabledHours}\n      disabledMinutes={disabledMinutes}\n      disabledSeconds={disabledSeconds}\n    />\n  );\n};\n\ninterface CaretProps {\n  wrapperStyle?: string;\n}\n\nconst Caret = ({ wrapperStyle = '' }: CaretProps) => {\n  return (\n    <div className={wrapperStyle}>\n      <Icon name=\"angle-down\" />\n    </div>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  const bgColor = theme.components.input.background;\n  const menuShadowColor = theme.v1.palette.black;\n  const optionBgHover = theme.colors.background.secondary;\n  const borderRadius = theme.shape.borderRadius(1);\n  const borderColor = theme.components.input.borderColor;\n  return {\n    caretWrapper: css`\n      position: absolute;\n      right: 8px;\n      top: 50%;\n      transform: translateY(-50%);\n      display: inline-block;\n      text-align: right;\n      color: ${theme.colors.text.secondary};\n    `,\n    picker: css`\n      .rc-time-picker-panel-select {\n        font-size: 14px;\n        background-color: ${bgColor};\n        border-color: ${borderColor};\n        li {\n          outline-width: 2px;\n          &.rc-time-picker-panel-select-option-selected {\n            background-color: inherit;\n            border: 1px solid ${theme.v1.palette.orange};\n            border-radius: ${borderRadius};\n          }\n\n          &:hover {\n            background: ${optionBgHover};\n          }\n\n          &.rc-time-picker-panel-select-option-disabled {\n            color: ${theme.colors.action.disabledText};\n          }\n        }\n      }\n\n      .rc-time-picker-panel-inner {\n        box-shadow: 0px 4px 4px ${menuShadowColor};\n        background-color: ${bgColor};\n        border-color: ${borderColor};\n        border-radius: ${borderRadius};\n        margin-top: 3px;\n\n        .rc-time-picker-panel-input-wrap {\n          margin-right: 2px;\n\n          &,\n          .rc-time-picker-panel-input {\n            background-color: ${bgColor};\n            padding-top: 2px;\n          }\n        }\n\n        .rc-time-picker-panel-combobox {\n          display: flex;\n        }\n      }\n    `,\n    input: css`\n      .rc-time-picker-input {\n        background-color: ${bgColor};\n        border-radius: ${borderRadius};\n        border-color: ${borderColor};\n        height: ${theme.spacing(4)};\n\n        &:focus {\n          ${focusCss(theme)}\n        }\n\n        &:disabled {\n          background-color: ${theme.colors.action.disabledBackground};\n          color: ${theme.colors.action.disabledText};\n          border: 1px solid ${theme.colors.action.disabledBackground};\n          &:focus {\n            box-shadow: none;\n          }\n        }\n      }\n    `,\n  };\n};\n","import React, { useCallback } from 'react';\n\nimport { SelectableValue } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\n\nimport { Select } from '../Select/Select';\n\nexport interface Props {\n  onChange: (weekStart: string) => void;\n  value: string;\n  width?: number;\n  autoFocus?: boolean;\n  onBlur?: () => void;\n  disabled?: boolean;\n  inputId?: string;\n}\n\nconst weekStarts: Array<SelectableValue<string>> = [\n  { value: '', label: 'Default' },\n  { value: 'saturday', label: 'Saturday' },\n  { value: 'sunday', label: 'Sunday' },\n  { value: 'monday', label: 'Monday' },\n];\n\nexport const WeekStartPicker = (props: Props) => {\n  const { onChange, width, autoFocus = false, onBlur, value, disabled = false, inputId } = props;\n\n  const onChangeWeekStart = useCallback(\n    (selectable: SelectableValue<string>) => {\n      if (selectable.value !== undefined) {\n        onChange(selectable.value);\n      }\n    },\n    [onChange]\n  );\n\n  return (\n    <Select\n      inputId={inputId}\n      value={weekStarts.find((item) => item.value === value)?.value}\n      placeholder={selectors.components.WeekStartPicker.placeholder}\n      autoFocus={autoFocus}\n      openMenuOnFocus={true}\n      width={width}\n      options={weekStarts}\n      onChange={onChangeWeekStart}\n      onBlur={onBlur}\n      disabled={disabled}\n    />\n  );\n};\n","import { css } from '@emotion/css';\nimport React, { memo } from 'react';\nimport Calendar from 'react-calendar';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../../themes';\nimport { ClickOutsideWrapper } from '../../ClickOutsideWrapper/ClickOutsideWrapper';\nimport { Icon } from '../../Icon/Icon';\nimport { getBodyStyles } from '../TimeRangePicker/CalendarBody';\n\n/** @public */\nexport interface DatePickerProps {\n  isOpen?: boolean;\n  onClose: () => void;\n  onChange: (value: Date) => void;\n  value?: Date;\n  minDate?: Date;\n  maxDate?: Date;\n}\n\n/** @public */\nexport const DatePicker = memo<DatePickerProps>((props) => {\n  const styles = useStyles2(getStyles);\n  const { isOpen, onClose } = props;\n\n  if (!isOpen) {\n    return null;\n  }\n\n  return (\n    <ClickOutsideWrapper useCapture={true} includeButtonPress={false} onClick={onClose}>\n      <div className={styles.modal} data-testid=\"date-picker\">\n        <Body {...props} />\n      </div>\n    </ClickOutsideWrapper>\n  );\n});\n\nDatePicker.displayName = 'DatePicker';\n\nconst Body = memo<DatePickerProps>(({ value, minDate, maxDate, onChange }) => {\n  const styles = useStyles2(getBodyStyles);\n\n  return (\n    <Calendar\n      className={styles.body}\n      tileClassName={styles.title}\n      value={value || new Date()}\n      minDate={minDate}\n      maxDate={maxDate}\n      nextLabel={<Icon name=\"angle-right\" />}\n      prevLabel={<Icon name=\"angle-left\" />}\n      onChange={(ev: Date | Date[]) => {\n        if (!Array.isArray(ev)) {\n          onChange(ev);\n        }\n      }}\n      locale=\"en\"\n    />\n  );\n});\n\nBody.displayName = 'Body';\n\nexport const getStyles = (theme: GrafanaTheme2) => {\n  return {\n    modal: css`\n      z-index: ${theme.zIndex.modal};\n      position: absolute;\n      box-shadow: ${theme.shadows.z3};\n      background-color: ${theme.colors.background.primary};\n      border: 1px solid ${theme.colors.border.weak};\n      border-radius: 2px 0 0 2px;\n\n      button:disabled {\n        color: ${theme.colors.text.disabled};\n      }\n    `,\n  };\n};\n","import { css } from '@emotion/css';\nimport React, { ChangeEvent } from 'react';\n\nimport { dateTime } from '@grafana/data';\n\nimport { useStyles2 } from '../../../themes';\nimport { Props as InputProps, Input } from '../../Input/Input';\nimport { DatePicker } from '../DatePicker/DatePicker';\n\nexport const formatDate = (date: Date | string) => dateTime(date).format('L');\n\n/** @public */\nexport interface DatePickerWithInputProps extends Omit<InputProps, 'ref' | 'value' | 'onChange'> {\n  /** Value selected by the DatePicker */\n  value?: Date | string;\n  /** The minimum date the value can be set to */\n  minDate?: Date;\n  /** The maximum date the value can be set to */\n  maxDate?: Date;\n  /** Handles changes when a new date is selected */\n  onChange: (value: Date | string) => void;\n  /** Hide the calendar when date is selected */\n  closeOnSelect?: boolean;\n  /** Text that appears when the input has no text */\n  placeholder?: string;\n}\n\n/** @public */\nexport const DatePickerWithInput = ({\n  value,\n  minDate,\n  maxDate,\n  onChange,\n  closeOnSelect,\n  placeholder = 'Date',\n  ...rest\n}: DatePickerWithInputProps) => {\n  const [open, setOpen] = React.useState(false);\n  const styles = useStyles2(getStyles);\n\n  return (\n    <div className={styles.container}>\n      <Input\n        type=\"text\"\n        autoComplete={'off'}\n        placeholder={placeholder}\n        value={value ? formatDate(value) : value}\n        onClick={() => setOpen(true)}\n        onChange={(ev: ChangeEvent<HTMLInputElement>) => {\n          // Allow resetting the date\n          if (ev.target.value === '') {\n            onChange('');\n          }\n        }}\n        className={styles.input}\n        {...rest}\n      />\n      <DatePicker\n        isOpen={open}\n        value={value && typeof value !== 'string' ? value : dateTime().toDate()}\n        minDate={minDate}\n        maxDate={maxDate}\n        onChange={(ev) => {\n          onChange(ev);\n          if (closeOnSelect) {\n            setOpen(false);\n          }\n        }}\n        onClose={() => setOpen(false)}\n      />\n    </div>\n  );\n};\n\nconst getStyles = () => {\n  return {\n    container: css`\n      position: relative;\n    `,\n    input: css`\n    /* hides the native Calendar picker icon given when using type=date */\n    input[type='date']::-webkit-inner-spin-button,\n    input[type='date']::-webkit-calendar-picker-indicator {\n    display: none;\n    -webkit-appearance: none;\n    `,\n  };\n};\n","import { dateMath, dateTimeParse, isDateTime, TimeZone } from '@grafana/data';\n\nexport function isValid(value: string, roundUp?: boolean, timeZone?: TimeZone): boolean {\n  if (isDateTime(value)) {\n    return value.isValid();\n  }\n\n  if (dateMath.isMathString(value)) {\n    return dateMath.isValid(value);\n  }\n\n  const parsed = dateTimeParse(value, { roundUp, timeZone });\n  return parsed.isValid();\n}\n","import { css, cx } from '@emotion/css';\nimport { useDialog } from '@react-aria/dialog';\nimport { FocusScope } from '@react-aria/focus';\nimport { useOverlay } from '@react-aria/overlays';\nimport React, { FormEvent, ReactNode, useCallback, useEffect, useRef, useState } from 'react';\nimport Calendar from 'react-calendar';\nimport { usePopper } from 'react-popper';\nimport { useMedia } from 'react-use';\n\nimport { dateTimeFormat, DateTime, dateTime, GrafanaTheme2, isDateTime } from '@grafana/data';\n\nimport { Button, HorizontalGroup, Icon, InlineField, Input, Portal } from '../..';\nimport { useStyles2, useTheme2 } from '../../../themes';\nimport { getModalStyles } from '../../Modal/getModalStyles';\nimport { TimeOfDayPicker, POPUP_CLASS_NAME } from '../TimeOfDayPicker';\nimport { getBodyStyles } from '../TimeRangePicker/CalendarBody';\nimport { isValid } from '../utils';\n\nexport interface Props {\n  /** Input date for the component */\n  date?: DateTime;\n  /** Callback for returning the selected date */\n  onChange: (date: DateTime) => void;\n  /** label for the input field */\n  label?: ReactNode;\n  /** Set the latest selectable date */\n  maxDate?: Date;\n  /** Set the minimum selectable date */\n  minDate?: Date;\n  /** Display seconds on the time picker */\n  showSeconds?: boolean;\n  /** Set the hours that can't be selected */\n  disabledHours?: () => number[];\n  /** Set the minutes that can't be selected */\n  disabledMinutes?: () => number[];\n  /** Set the seconds that can't be selected */\n  disabledSeconds?: () => number[];\n}\n\nexport const DateTimePicker = ({\n  date,\n  maxDate,\n  minDate,\n  label,\n  onChange,\n  disabledHours,\n  disabledMinutes,\n  disabledSeconds,\n  showSeconds = true,\n}: Props) => {\n  const [isOpen, setOpen] = useState(false);\n\n  const ref = useRef<HTMLDivElement>(null);\n  const { overlayProps, underlayProps } = useOverlay(\n    {\n      onClose: () => setOpen(false),\n      isDismissable: true,\n      isOpen,\n      shouldCloseOnInteractOutside: (element) => {\n        const popupElement = document.getElementsByClassName(POPUP_CLASS_NAME)[0];\n        return !(popupElement && popupElement.contains(element));\n      },\n    },\n    ref\n  );\n  const { dialogProps } = useDialog({}, ref);\n\n  const theme = useTheme2();\n  const { modalBackdrop } = getModalStyles(theme);\n  const isFullscreen = useMedia(`(min-width: ${theme.breakpoints.values.lg}px)`);\n  const styles = useStyles2(getStyles);\n\n  const [markerElement, setMarkerElement] = useState<HTMLInputElement | null>();\n  const [selectorElement, setSelectorElement] = useState<HTMLDivElement | null>();\n\n  const popper = usePopper(markerElement, selectorElement, {\n    placement: 'bottom-start',\n  });\n\n  const onApply = useCallback(\n    (date: DateTime) => {\n      setOpen(false);\n      onChange(date);\n    },\n    [onChange]\n  );\n\n  const onOpen = useCallback(\n    (event: FormEvent<HTMLElement>) => {\n      event.preventDefault();\n      setOpen(true);\n    },\n    [setOpen]\n  );\n\n  return (\n    <div data-testid=\"date-time-picker\" style={{ position: 'relative' }}>\n      <DateTimeInput\n        date={date}\n        onChange={onChange}\n        isFullscreen={isFullscreen}\n        onOpen={onOpen}\n        label={label}\n        ref={setMarkerElement}\n        showSeconds={showSeconds}\n      />\n      {isOpen ? (\n        isFullscreen ? (\n          <Portal>\n            <FocusScope contain autoFocus restoreFocus>\n              <div ref={ref} {...overlayProps} {...dialogProps}>\n                <DateTimeCalendar\n                  date={date}\n                  onChange={onApply}\n                  isFullscreen={true}\n                  onClose={() => setOpen(false)}\n                  maxDate={maxDate}\n                  minDate={minDate}\n                  ref={setSelectorElement}\n                  style={popper.styles.popper}\n                  showSeconds={showSeconds}\n                  disabledHours={disabledHours}\n                  disabledMinutes={disabledMinutes}\n                  disabledSeconds={disabledSeconds}\n                />\n              </div>\n            </FocusScope>\n          </Portal>\n        ) : (\n          <Portal>\n            <div className={modalBackdrop} {...underlayProps} />\n            <FocusScope contain autoFocus restoreFocus>\n              <div ref={ref} {...overlayProps} {...dialogProps}>\n                <div className={styles.modal}>\n                  <DateTimeCalendar\n                    date={date}\n                    maxDate={maxDate}\n                    minDate={minDate}\n                    onChange={onApply}\n                    isFullscreen={false}\n                    onClose={() => setOpen(false)}\n                    showSeconds={showSeconds}\n                    disabledHours={disabledHours}\n                    disabledMinutes={disabledMinutes}\n                    disabledSeconds={disabledSeconds}\n                  />\n                </div>\n              </div>\n            </FocusScope>\n          </Portal>\n        )\n      ) : null}\n    </div>\n  );\n};\n\ninterface DateTimeCalendarProps {\n  date?: DateTime;\n  onChange: (date: DateTime) => void;\n  onClose: () => void;\n  isFullscreen: boolean;\n  maxDate?: Date;\n  minDate?: Date;\n  style?: React.CSSProperties;\n  showSeconds?: boolean;\n  disabledHours?: () => number[];\n  disabledMinutes?: () => number[];\n  disabledSeconds?: () => number[];\n}\n\ninterface InputProps {\n  label?: ReactNode;\n  date?: DateTime;\n  isFullscreen: boolean;\n  onChange: (date: DateTime) => void;\n  onOpen: (event: FormEvent<HTMLElement>) => void;\n  showSeconds?: boolean;\n}\n\ntype InputState = {\n  value: string;\n  invalid: boolean;\n};\n\nconst DateTimeInput = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ date, label, onChange, isFullscreen, onOpen, showSeconds = true }, ref) => {\n    const format = showSeconds ? 'YYYY-MM-DD HH:mm:ss' : 'YYYY-MM-DD HH:mm';\n    const [internalDate, setInternalDate] = useState<InputState>(() => {\n      return { value: date ? dateTimeFormat(date) : dateTimeFormat(dateTime()), invalid: false };\n    });\n\n    useEffect(() => {\n      if (date) {\n        setInternalDate({\n          invalid: !isValid(dateTimeFormat(date, { format })),\n          value: isDateTime(date) ? dateTimeFormat(date, { format }) : date,\n        });\n      }\n    }, [date, format]);\n\n    const onChangeDate = useCallback((event: FormEvent<HTMLInputElement>) => {\n      const isInvalid = !isValid(event.currentTarget.value);\n      setInternalDate({\n        value: event.currentTarget.value,\n        invalid: isInvalid,\n      });\n    }, []);\n\n    const onBlur = useCallback(() => {\n      if (isDateTime(internalDate.value)) {\n        onChange(dateTime(internalDate.value));\n      }\n    }, [internalDate.value, onChange]);\n\n    const icon = <Button aria-label=\"Time picker\" icon=\"calendar-alt\" variant=\"secondary\" onClick={onOpen} />;\n    return (\n      <InlineField\n        label={label}\n        invalid={!!(internalDate.value && internalDate.invalid)}\n        className={css`\n          margin-bottom: 0;\n        `}\n      >\n        <Input\n          onChange={onChangeDate}\n          addonAfter={icon}\n          value={internalDate.value}\n          onBlur={onBlur}\n          data-testid=\"date-time-input\"\n          placeholder=\"Select date/time\"\n          ref={ref}\n        />\n      </InlineField>\n    );\n  }\n);\n\nDateTimeInput.displayName = 'DateTimeInput';\n\nconst DateTimeCalendar = React.forwardRef<HTMLDivElement, DateTimeCalendarProps>(\n  (\n    {\n      date,\n      onClose,\n      onChange,\n      isFullscreen,\n      maxDate,\n      minDate,\n      style,\n      showSeconds = true,\n      disabledHours,\n      disabledMinutes,\n      disabledSeconds,\n    },\n    ref\n  ) => {\n    const calendarStyles = useStyles2(getBodyStyles);\n    const styles = useStyles2(getStyles);\n    const [internalDate, setInternalDate] = useState<Date>(() => {\n      if (date && date.isValid()) {\n        return date.toDate();\n      }\n\n      return new Date();\n    });\n\n    const onChangeDate = useCallback((date: Date | Date[]) => {\n      if (!Array.isArray(date)) {\n        setInternalDate((prevState) => {\n          // If we don't use time from prevState\n          // the time will be reset to 00:00:00\n          date.setHours(prevState.getHours());\n          date.setMinutes(prevState.getMinutes());\n          date.setSeconds(prevState.getSeconds());\n\n          return date;\n        });\n      }\n    }, []);\n\n    const onChangeTime = useCallback((date: DateTime) => {\n      setInternalDate(date.toDate());\n    }, []);\n\n    return (\n      <div className={cx(styles.container, { [styles.fullScreen]: isFullscreen })} style={style} ref={ref}>\n        <Calendar\n          next2Label={null}\n          prev2Label={null}\n          value={internalDate}\n          nextLabel={<Icon name=\"angle-right\" />}\n          nextAriaLabel=\"Next month\"\n          prevLabel={<Icon name=\"angle-left\" />}\n          prevAriaLabel=\"Previous month\"\n          onChange={onChangeDate}\n          locale=\"en\"\n          className={calendarStyles.body}\n          tileClassName={calendarStyles.title}\n          maxDate={maxDate}\n          minDate={minDate}\n        />\n        <div className={styles.time}>\n          <TimeOfDayPicker\n            showSeconds={showSeconds}\n            onChange={onChangeTime}\n            value={dateTime(internalDate)}\n            disabledHours={disabledHours}\n            disabledMinutes={disabledMinutes}\n            disabledSeconds={disabledSeconds}\n          />\n        </div>\n        <HorizontalGroup>\n          <Button type=\"button\" onClick={() => onChange(dateTime(internalDate))}>\n            Apply\n          </Button>\n          <Button variant=\"secondary\" type=\"button\" onClick={onClose}>\n            Cancel\n          </Button>\n        </HorizontalGroup>\n      </div>\n    );\n  }\n);\n\nDateTimeCalendar.displayName = 'DateTimeCalendar';\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  container: css`\n    padding: ${theme.spacing(1)};\n    border: 1px ${theme.colors.border.weak} solid;\n    border-radius: ${theme.shape.borderRadius(1)};\n    background-color: ${theme.colors.background.primary};\n    z-index: ${theme.zIndex.modal};\n  `,\n  fullScreen: css`\n    position: absolute;\n  `,\n  time: css`\n    margin-bottom: ${theme.spacing(2)};\n  `,\n  modal: css`\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    z-index: ${theme.zIndex.modal};\n    max-width: 280px;\n  `,\n});\n","import { cx, css } from '@emotion/css';\nimport React, { PureComponent } from 'react';\n\nimport { stylesFactory } from '../../themes';\n\nexport interface ListProps<T> {\n  items: T[];\n  renderItem: (item: T, index: number) => JSX.Element;\n  getItemKey?: (item: T) => string;\n  className?: string;\n}\n\ninterface AbstractListProps<T> extends ListProps<T> {\n  inline?: boolean;\n}\n\nconst getStyles = stylesFactory((inlineList = false) => ({\n  list: css`\n    list-style-type: none;\n    margin: 0;\n    padding: 0;\n  `,\n\n  item: css`\n    display: ${(inlineList && 'inline-block') || 'block'};\n  `,\n}));\n\nexport class AbstractList<T> extends PureComponent<AbstractListProps<T>> {\n  constructor(props: AbstractListProps<T>) {\n    super(props);\n  }\n\n  render() {\n    const { items, renderItem, getItemKey, className, inline } = this.props;\n    const styles = getStyles(inline);\n\n    return (\n      <ul className={cx(styles.list, className)}>\n        {items.map((item, i) => {\n          return (\n            <li className={styles.item} key={getItemKey ? getItemKey(item) : i}>\n              {renderItem(item, i)}\n            </li>\n          );\n        })}\n      </ul>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\n\nimport { ListProps, AbstractList } from './AbstractList';\n\nexport class List<T> extends PureComponent<ListProps<T>> {\n  render() {\n    return <AbstractList {...this.props} />;\n  }\n}\n","import { css } from '@emotion/css';\nimport React from 'react';\nimport { CellProps } from 'react-table';\n\nimport { IconButton } from '../IconButton/IconButton';\n\nconst expanderContainerStyles = css`\n  display: flex;\n  align-items: center;\n  height: 100%;\n`;\n\nexport function ExpanderCell<K extends object>({ row, __rowID }: CellProps<K, void> & { __rowID: string }) {\n  return (\n    <div className={expanderContainerStyles}>\n      <IconButton\n        tooltip=\"toggle row expanded\"\n        aria-controls={__rowID}\n        // @ts-expect-error react-table doesn't ship with useExpanded types and we can't use declaration merging without affecting the table viz\n        name={row.isExpanded ? 'angle-down' : 'angle-right'}\n        // @ts-expect-error same as the line above\n        aria-expanded={row.isExpanded}\n        // @ts-expect-error same as the line above\n        {...row.getToggleRowExpandedProps()}\n      />\n    </div>\n  );\n}\n","import { Column as RTColumn } from 'react-table';\n\nimport { ExpanderCell } from './ExpanderCell';\nimport { Column } from './types';\n\nexport const EXPANDER_CELL_ID = '__expander' as const;\n\ntype InternalColumn<T extends object> = RTColumn<T> & {\n  visible?: (data: T[]) => boolean;\n};\n\n// Returns the columns in a \"react-table\" acceptable format\nexport function getColumns<K extends object>(columns: Array<Column<K>>): Array<InternalColumn<K>> {\n  return [\n    {\n      id: EXPANDER_CELL_ID,\n      Cell: ExpanderCell,\n      disableSortBy: true,\n      width: 0,\n    },\n    // @ts-expect-error react-table expects each column key(id) to have data associated with it and therefore complains about\n    // column.id being possibly undefined and not keyof T (where T is the data object)\n    // We do not want to be that strict as we simply pass undefined to cells that do not have data associated with them.\n    ...columns.map((column) => ({\n      id: column.id,\n      accessor: column.id,\n      Header: column.header || (() => null),\n      sortType: column.sortType || 'alphanumeric',\n      disableSortBy: !Boolean(column.sortType),\n      width: column.disableGrow ? 0 : undefined,\n      visible: column.visible,\n      ...(column.cell && { Cell: column.cell }),\n    })),\n  ];\n}\n","import { cx, css } from '@emotion/css';\nimport { uniqueId } from 'lodash';\nimport React, { useMemo, Fragment, ReactNode, useCallback } from 'react';\nimport { useExpanded, useSortBy, useTable, TableOptions, Row, HeaderGroup } from 'react-table';\n\nimport { GrafanaTheme2, isTruthy } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\nimport { Icon } from '../Icon/Icon';\n\nimport { Column } from './types';\nimport { EXPANDER_CELL_ID, getColumns } from './utils';\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  table: css`\n    border-radius: ${theme.shape.borderRadius()};\n    border: solid 1px ${theme.colors.border.weak};\n    background-color: ${theme.colors.background.secondary};\n    width: 100%;\n\n    td {\n      padding: ${theme.spacing(1)};\n    }\n\n    td,\n    th {\n      min-width: ${theme.spacing(3)};\n    }\n  `,\n  evenRow: css`\n    background: ${theme.colors.background.primary};\n  `,\n  disableGrow: css`\n    width: 0%;\n  `,\n  header: css`\n    &,\n    & > button {\n      position: relative;\n      white-space: nowrap;\n      padding: ${theme.spacing(1)};\n    }\n    & > button {\n      &:after {\n        content: '\\\\00a0';\n      }\n      width: 100%;\n      height: 100%;\n      background: none;\n      border: none;\n      padding-right: ${theme.spacing(2.5)};\n      text-align: left;\n      &:hover {\n        background-color: ${theme.colors.emphasize(theme.colors.background.secondary, 0.05)};\n      }\n    }\n  `,\n  sortableHeader: css`\n    /* increases selector's specificity so that it always takes precedence over default styles  */\n    && {\n      padding: 0;\n    }\n  `,\n});\n\ninterface Props<TableData extends object> {\n  /**\n   * Table's columns definition. Must be memoized.\n   */\n  columns: Array<Column<TableData>>;\n  /**\n   * The data to display in the table. Must be memoized.\n   */\n  data: TableData[];\n  /**\n   * Render function for the expanded row. if not provided, the tables rows will not be expandable.\n   */\n  renderExpandedRow?: (row: TableData) => ReactNode;\n  className?: string;\n  /**\n   * Must return a unique id for each row\n   */\n  getRowId: TableOptions<TableData>['getRowId'];\n}\n\n/** @alpha */\nexport function InteractiveTable<TableData extends object>({\n  data,\n  className,\n  columns,\n  renderExpandedRow,\n  getRowId,\n}: Props<TableData>) {\n  const styles = useStyles2(getStyles);\n  const tableColumns = useMemo(() => {\n    const cols = getColumns<TableData>(columns);\n    return cols;\n  }, [columns]);\n  const id = useUniqueId();\n  const getRowHTMLID = useCallback(\n    (row: Row<TableData>) => {\n      return `${id}-${row.id}`.replace(/\\s/g, '');\n    },\n    [id]\n  );\n\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } = useTable<TableData>(\n    {\n      columns: tableColumns,\n      data,\n      autoResetExpanded: false,\n      autoResetSortBy: false,\n      disableMultiSort: true,\n      getRowId,\n      initialState: {\n        hiddenColumns: [\n          !renderExpandedRow && EXPANDER_CELL_ID,\n          ...tableColumns\n            .filter((col) => !(col.visible ? col.visible(data) : true))\n            .map((c) => c.id)\n            .filter(isTruthy),\n        ].filter(isTruthy),\n      },\n    },\n    useSortBy,\n    useExpanded\n  );\n\n  // This should be called only for rows thar we'd want to actually render, which is all at this stage.\n  // We may want to revisit this if we decide to add pagination and/or virtualized tables.\n  rows.forEach(prepareRow);\n\n  return (\n    <table {...getTableProps()} className={cx(styles.table, className)}>\n      <thead>\n        {headerGroups.map((headerGroup) => {\n          const { key, ...headerRowProps } = headerGroup.getHeaderGroupProps();\n\n          return (\n            <tr key={key} {...headerRowProps}>\n              {headerGroup.headers.map((column) => {\n                const { key, ...headerCellProps } = column.getHeaderProps();\n\n                return (\n                  <th\n                    key={key}\n                    className={cx(styles.header, {\n                      [styles.disableGrow]: column.width === 0,\n                      [styles.sortableHeader]: column.canSort,\n                    })}\n                    {...headerCellProps}\n                    {...(column.isSorted && { 'aria-sort': column.isSortedDesc ? 'descending' : 'ascending' })}\n                  >\n                    <ColumnHeader column={column} />\n                  </th>\n                );\n              })}\n            </tr>\n          );\n        })}\n      </thead>\n\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row, rowIndex) => {\n          const className = cx(rowIndex % 2 === 0 && styles.evenRow);\n          const { key, ...otherRowProps } = row.getRowProps();\n          const rowId = getRowHTMLID(row);\n\n          return (\n            <Fragment key={key}>\n              <tr className={className} {...otherRowProps}>\n                {row.cells.map((cell) => {\n                  const { key, ...otherCellProps } = cell.getCellProps();\n                  return (\n                    <td key={key} {...otherCellProps}>\n                      {cell.render('Cell', { __rowID: rowId })}\n                    </td>\n                  );\n                })}\n              </tr>\n              {\n                // @ts-expect-error react-table doesn't ship with useExpanded types and we can't use declaration merging without affecting the table viz\n                row.isExpanded && renderExpandedRow && (\n                  <tr className={className} {...otherRowProps} id={rowId}>\n                    <td colSpan={row.cells.length}>{renderExpandedRow(row.original)}</td>\n                  </tr>\n                )\n              }\n            </Fragment>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n}\n\nconst useUniqueId = () => {\n  return useMemo(() => uniqueId('InteractiveTable'), []);\n};\n\nconst getColumnheaderStyles = (theme: GrafanaTheme2) => ({\n  sortIcon: css`\n    position: absolute;\n    top: ${theme.spacing(1)};\n  `,\n});\n\nfunction ColumnHeader<T extends object>({\n  column: { canSort, render, isSorted, isSortedDesc, getSortByToggleProps },\n}: {\n  column: HeaderGroup<T>;\n}) {\n  const styles = useStyles2(getColumnheaderStyles);\n  const { onClick } = getSortByToggleProps();\n\n  const children = (\n    <>\n      {render('Header')}\n\n      {isSorted && (\n        <span aria-hidden=\"true\" className={styles.sortIcon}>\n          <Icon name={isSortedDesc ? 'angle-down' : 'angle-up'} />\n        </span>\n      )}\n    </>\n  );\n\n  if (canSort) {\n    return (\n      <button type=\"button\" onClick={onClick}>\n        {children}\n      </button>\n    );\n  }\n\n  return children;\n}\n","import { css } from '@emotion/css';\nimport React, { useMemo } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\nimport { getTagColorsFromName } from '../../utils';\nimport { IconButton } from '../IconButton/IconButton';\n\ninterface Props {\n  name: string;\n  disabled?: boolean;\n  onRemove: (tag: string) => void;\n}\n\n/**\n * @internal\n * Only used internally by TagsInput\n * */\nexport const TagItem = ({ name, disabled, onRemove }: Props) => {\n  const { color, borderColor } = useMemo(() => getTagColorsFromName(name), [name]);\n  const styles = useStyles2(getStyles);\n\n  return (\n    <li className={styles.itemStyle} style={{ backgroundColor: color, borderColor }}>\n      <span className={styles.nameStyle}>{name}</span>\n      <IconButton\n        name=\"times\"\n        size=\"lg\"\n        disabled={disabled}\n        ariaLabel={`Remove \"${name}\" tag`}\n        onClick={() => onRemove(name)}\n        type=\"button\"\n        className={styles.buttonStyles}\n      />\n    </li>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  const height = theme.spacing.gridSize * 3;\n\n  return {\n    itemStyle: css({\n      display: 'flex',\n      gap: '3px',\n      alignItems: 'center',\n      height: `${height}px`,\n      lineHeight: `${height - 2}px`,\n      color: '#fff',\n      borderWidth: '1px',\n      borderStyle: 'solid',\n      borderRadius: theme.shape.radius.default,\n      padding: `0 ${theme.spacing(0.5)}`,\n      whiteSpace: 'nowrap',\n      textShadow: 'none',\n      fontWeight: 500,\n      fontSize: theme.typography.size.sm,\n    }),\n    nameStyle: css({\n      maxWidth: '25ch',\n      textOverflow: 'ellipsis',\n      overflow: 'hidden',\n    }),\n    buttonStyles: css({\n      margin: 0,\n      '&:hover::before': {\n        display: 'none',\n      },\n    }),\n  };\n};\n","import { css, cx } from '@emotion/css';\nimport React, { useCallback, useState } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2, useTheme2 } from '../../themes/ThemeContext';\nimport { Button } from '../Button';\nimport { Input } from '../Input/Input';\n\nimport { TagItem } from './TagItem';\n\nexport interface Props {\n  placeholder?: string;\n  /** Array of selected tags */\n  tags?: string[];\n  onChange: (tags: string[]) => void;\n  width?: number;\n  id?: string;\n  className?: string;\n  /** Toggle disabled state */\n  disabled?: boolean;\n  /** Enable adding new tags when input loses focus */\n  addOnBlur?: boolean;\n  /** Toggle invalid state */\n  invalid?: boolean;\n}\n\nexport const TagsInput = ({\n  placeholder = 'New tag (enter key to add)',\n  tags = [],\n  onChange,\n  width,\n  className,\n  disabled,\n  addOnBlur,\n  invalid,\n  id,\n}: Props) => {\n  const [newTagName, setNewTagName] = useState('');\n  const styles = useStyles2(getStyles);\n  const theme = useTheme2();\n\n  const onNameChange = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    setNewTagName(event.target.value);\n  }, []);\n\n  const onRemove = (tagToRemove: string) => {\n    onChange(tags.filter((x) => x !== tagToRemove));\n  };\n\n  const onAdd = (event?: React.MouseEvent | React.KeyboardEvent) => {\n    event?.preventDefault();\n    if (!tags.includes(newTagName)) {\n      onChange(tags.concat(newTagName));\n    }\n    setNewTagName('');\n  };\n\n  const onBlur = () => {\n    if (addOnBlur && newTagName) {\n      onAdd();\n    }\n  };\n\n  const onKeyboardAdd = (event: React.KeyboardEvent) => {\n    if (event.key === 'Enter' && newTagName !== '') {\n      onAdd(event);\n    }\n  };\n\n  return (\n    <div className={cx(styles.wrapper, className, width ? css({ width: theme.spacing(width) }) : '')}>\n      <Input\n        id={id}\n        disabled={disabled}\n        placeholder={placeholder}\n        onChange={onNameChange}\n        value={newTagName}\n        onKeyDown={onKeyboardAdd}\n        onBlur={onBlur}\n        invalid={invalid}\n        suffix={\n          <Button\n            fill=\"text\"\n            className={styles.addButtonStyle}\n            onClick={onAdd}\n            size=\"md\"\n            disabled={newTagName.length <= 0}\n          >\n            Add\n          </Button>\n        }\n      />\n      {tags?.length > 0 && (\n        <ul className={styles.tags}>\n          {tags.map((tag) => (\n            <TagItem key={tag} name={tag} onRemove={onRemove} disabled={disabled} />\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  wrapper: css`\n    min-height: ${theme.spacing(4)};\n    display: flex;\n    flex-direction: column;\n    gap: ${theme.spacing(1)};\n    flex-wrap: wrap;\n  `,\n  tags: css`\n    display: flex;\n    justify-content: flex-start;\n    flex-wrap: wrap;\n    gap: ${theme.spacing(0.5)};\n  `,\n  addButtonStyle: css`\n    margin: 0 -${theme.spacing(1)};\n  `,\n});\n","import { css, cx } from '@emotion/css';\nimport React, { useMemo } from 'react';\n\nimport { useStyles2 } from '../../themes';\nimport { Button, ButtonVariant } from '../Button';\nimport { Icon } from '../Icon/Icon';\n\nexport interface Props {\n  /** The current page index being shown. */\n  currentPage: number;\n  /** Number of total pages. */\n  numberOfPages: number;\n  /** Callback function for fetching the selected page.  */\n  onNavigate: (toPage: number) => void;\n  /** When set to true and the pagination result is only one page it will not render the pagination at all. */\n  hideWhenSinglePage?: boolean;\n  /** Small version only shows the current page and the navigation buttons. */\n  showSmallVersion?: boolean;\n  className?: string;\n}\n\nexport const Pagination = ({\n  currentPage,\n  numberOfPages,\n  onNavigate,\n  hideWhenSinglePage,\n  showSmallVersion,\n  className,\n}: Props) => {\n  const styles = useStyles2(getStyles);\n  const pageLengthToCondense = showSmallVersion ? 1 : 8;\n\n  const pageButtons = useMemo(() => {\n    const pages = [...new Array(numberOfPages).keys()];\n\n    const condensePages = numberOfPages > pageLengthToCondense;\n    const getListItem = (page: number, variant: 'primary' | 'secondary') => (\n      <li key={page} className={styles.item}>\n        <Button size=\"sm\" variant={variant} onClick={() => onNavigate(page)}>\n          {page}\n        </Button>\n      </li>\n    );\n\n    return pages.reduce<JSX.Element[]>((pagesToRender, pageIndex) => {\n      const page = pageIndex + 1;\n      const variant: ButtonVariant = page === currentPage ? 'primary' : 'secondary';\n\n      // The indexes at which to start and stop condensing pages\n      const lowerBoundIndex = pageLengthToCondense;\n      const upperBoundIndex = numberOfPages - pageLengthToCondense + 1;\n      // When the indexes overlap one another this number is negative\n      const differenceOfBounds = upperBoundIndex - lowerBoundIndex;\n\n      const isFirstOrLastPage = page === 1 || page === numberOfPages;\n      // This handles when the lowerBoundIndex < currentPage < upperBoundIndex\n      const currentPageIsBetweenBounds =\n        differenceOfBounds > -1 && currentPage >= lowerBoundIndex && currentPage <= upperBoundIndex;\n\n      // Show ellipsis after that many pages\n      const ellipsisOffset = showSmallVersion ? 1 : 3;\n\n      // The offset to show more pages when currentPageIsBetweenBounds\n      const pageOffset = showSmallVersion ? 0 : 2;\n\n      if (condensePages) {\n        if (\n          isFirstOrLastPage ||\n          (currentPage < lowerBoundIndex && page < lowerBoundIndex) ||\n          (differenceOfBounds >= 0 && currentPage > upperBoundIndex && page > upperBoundIndex) ||\n          (differenceOfBounds < 0 && currentPage >= lowerBoundIndex && page > upperBoundIndex) ||\n          (currentPageIsBetweenBounds && page >= currentPage - pageOffset && page <= currentPage + pageOffset)\n        ) {\n          // Renders a button for the page\n          pagesToRender.push(getListItem(page, variant));\n        } else if (\n          (page === lowerBoundIndex && currentPage < lowerBoundIndex) ||\n          (page === upperBoundIndex && currentPage > upperBoundIndex) ||\n          (currentPageIsBetweenBounds &&\n            (page === currentPage - ellipsisOffset || page === currentPage + ellipsisOffset))\n        ) {\n          // Renders and ellipsis to represent condensed pages\n          pagesToRender.push(\n            <li key={page} className={styles.item}>\n              <Icon className={styles.ellipsis} name=\"ellipsis-v\" />\n            </li>\n          );\n        }\n      } else {\n        pagesToRender.push(getListItem(page, variant));\n      }\n      return pagesToRender;\n    }, []);\n  }, [currentPage, numberOfPages, onNavigate, pageLengthToCondense, showSmallVersion, styles.ellipsis, styles.item]);\n\n  if (hideWhenSinglePage && numberOfPages <= 1) {\n    return null;\n  }\n\n  return (\n    <div className={cx(styles.container, className)}>\n      <ol>\n        <li className={styles.item}>\n          <Button\n            aria-label=\"previous\"\n            size=\"sm\"\n            variant=\"secondary\"\n            onClick={() => onNavigate(currentPage - 1)}\n            disabled={currentPage === 1}\n          >\n            <Icon name=\"angle-left\" />\n          </Button>\n        </li>\n        {pageButtons}\n        <li className={styles.item}>\n          <Button\n            aria-label=\"next\"\n            size=\"sm\"\n            variant=\"secondary\"\n            onClick={() => onNavigate(currentPage + 1)}\n            disabled={currentPage === numberOfPages}\n          >\n            <Icon name=\"angle-right\" />\n          </Button>\n        </li>\n      </ol>\n    </div>\n  );\n};\n\nconst getStyles = () => {\n  return {\n    container: css`\n      float: right;\n    `,\n    item: css`\n      display: inline-block;\n      padding-left: 10px;\n      margin-bottom: 5px;\n    `,\n    ellipsis: css`\n      transform: rotate(90deg);\n    `,\n  };\n};\n","import { cx, css } from '@emotion/css';\nimport React, { forwardRef, HTMLAttributes } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useTheme2 } from '../../themes';\nimport { IconName } from '../../types/icon';\nimport { getTagColor, getTagColorsFromName } from '../../utils';\nimport { Icon } from '../Icon/Icon';\n\n/**\n * @public\n */\nexport type OnTagClick = (name: string, event: React.MouseEvent<HTMLElement>) => void;\n\nexport interface Props extends Omit<HTMLAttributes<HTMLElement>, 'onClick'> {\n  /** Name of the tag to display */\n  name: string;\n  icon?: IconName;\n  /** Use constant color from TAG_COLORS. Using index instead of color directly so we can match other styling. */\n  colorIndex?: number;\n  onClick?: OnTagClick;\n}\n\nexport const Tag = forwardRef<HTMLElement, Props>(({ name, onClick, icon, className, colorIndex, ...rest }, ref) => {\n  const theme = useTheme2();\n  const styles = getTagStyles(theme, name, colorIndex);\n\n  const onTagClick = (event: React.MouseEvent<HTMLElement>) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    onClick?.(name, event);\n  };\n\n  const classes = cx(styles.wrapper, className, { [styles.hover]: onClick !== undefined });\n\n  return onClick ? (\n    <button {...rest} className={classes} onClick={onTagClick} ref={ref as React.ForwardedRef<HTMLButtonElement>}>\n      {icon && <Icon name={icon} />}\n      {name}\n    </button>\n  ) : (\n    <span {...rest} className={classes} ref={ref}>\n      {icon && <Icon name={icon} />}\n      {name}\n    </span>\n  );\n});\n\nTag.displayName = 'Tag';\n\nconst getTagStyles = (theme: GrafanaTheme2, name: string, colorIndex?: number) => {\n  let colors;\n  if (colorIndex === undefined) {\n    colors = getTagColorsFromName(name);\n  } else {\n    colors = getTagColor(colorIndex);\n  }\n  return {\n    wrapper: css`\n      appearance: none;\n      border-style: none;\n      font-weight: ${theme.typography.fontWeightMedium};\n      font-size: ${theme.typography.size.sm};\n      line-height: ${theme.typography.bodySmall.lineHeight};\n      vertical-align: baseline;\n      background-color: ${colors.color};\n      color: ${theme.v1.palette.gray98};\n      white-space: nowrap;\n      text-shadow: none;\n      padding: 3px 6px;\n      border-radius: ${theme.shape.radius.default};\n    `,\n    hover: css`\n      &:hover {\n        opacity: 0.85;\n        cursor: pointer;\n      }\n    `,\n  };\n};\n","import { css, cx } from '@emotion/css';\nimport React, { forwardRef, memo } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useTheme2 } from '../../themes';\nimport { IconName } from '../../types/icon';\n\nimport { OnTagClick, Tag } from './Tag';\n\nexport interface Props {\n  /** Maximum number of the tags to display */\n  displayMax?: number;\n  /** Names of the tags to display */\n  tags: string[];\n  /** Callback when the tag is clicked */\n  onClick?: OnTagClick;\n  /** Custom styles for the wrapper component */\n  className?: string;\n  /** aria-label for the `i`-th Tag component */\n  getAriaLabel?: (name: string, i: number) => string;\n  /** Icon to show next to tag label */\n  icon?: IconName;\n}\n\nexport const TagList = memo(\n  forwardRef<HTMLUListElement, Props>(({ displayMax, tags, icon, onClick, className, getAriaLabel }, ref) => {\n    const theme = useTheme2();\n    const styles = getStyles(theme, Boolean(displayMax && displayMax > 0));\n    const numTags = tags.length;\n    const tagsToDisplay = displayMax ? tags.slice(0, displayMax) : tags;\n    return (\n      <ul className={cx(styles.wrapper, className)} aria-label=\"Tags\" ref={ref}>\n        {tagsToDisplay.map((tag, i) => (\n          <li className={styles.li} key={tag}>\n            <Tag name={tag} icon={icon} onClick={onClick} aria-label={getAriaLabel?.(tag, i)} data-tag-id={i} />\n          </li>\n        ))}\n        {displayMax && displayMax > 0 && numTags - displayMax > 0 && (\n          <span className={styles.moreTagsLabel}>+ {numTags - displayMax}</span>\n        )}\n      </ul>\n    );\n  })\n);\n\nTagList.displayName = 'TagList';\n\nconst getStyles = (theme: GrafanaTheme2, isTruncated: boolean) => {\n  return {\n    wrapper: css`\n      position: relative;\n      align-items: ${isTruncated ? 'center' : 'unset'};\n      display: flex;\n      flex: 1 1 auto;\n      flex-wrap: wrap;\n      flex-shrink: ${isTruncated ? 0 : 1};\n      justify-content: flex-end;\n      gap: 6px;\n    `,\n    moreTagsLabel: css`\n      color: ${theme.colors.text.secondary};\n      font-size: ${theme.typography.size.sm};\n    `,\n    li: css({\n      listStyle: 'none',\n    }),\n  };\n};\n","import { css, cx } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\nimport { IconName } from '../../types';\nimport { clearButtonStyles } from '../Button';\nimport { Icon } from '../Icon/Icon';\n\nexport interface FilterPillProps {\n  selected: boolean;\n  label: string;\n  onClick: React.MouseEventHandler<HTMLElement>;\n  icon?: IconName;\n}\n\nexport const FilterPill = ({ label, selected, onClick, icon = 'check' }: FilterPillProps) => {\n  const styles = useStyles2(getStyles);\n  const clearButton = useStyles2(clearButtonStyles);\n  return (\n    <button type=\"button\" className={cx(clearButton, styles.wrapper, selected && styles.selected)} onClick={onClick}>\n      <span>{label}</span>\n      {selected && <Icon name={icon} className={styles.icon} />}\n    </button>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    wrapper: css`\n      background: ${theme.colors.background.secondary};\n      border-radius: ${theme.shape.borderRadius(8)};\n      padding: ${theme.spacing(0, 2)};\n      font-size: ${theme.typography.bodySmall.fontSize};\n      font-weight: ${theme.typography.fontWeightMedium};\n      line-height: ${theme.typography.bodySmall.lineHeight};\n      color: ${theme.colors.text.secondary};\n      display: flex;\n      align-items: center;\n      height: 32px;\n\n      &:hover {\n        background: ${theme.colors.action.hover};\n        color: ${theme.colors.text.primary};\n      }\n    `,\n    selected: css`\n      color: ${theme.colors.text.primary};\n      background: ${theme.colors.action.selected};\n\n      &:hover {\n        background: ${theme.colors.action.focus};\n      }\n    `,\n    icon: css`\n      margin-left: ${theme.spacing(0.5)};\n    `,\n  };\n};\n","import { css, cx } from '@emotion/css';\nimport React, { HTMLProps, useCallback } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\n\nenum Orientation {\n  Horizontal,\n  Vertical,\n}\ntype Spacing = 'none' | 'xs' | 'sm' | 'md' | 'lg';\ntype Justify = 'flex-start' | 'flex-end' | 'space-between' | 'center';\ntype Align = 'normal' | 'flex-start' | 'flex-end' | 'center';\n\nexport interface LayoutProps extends Omit<HTMLProps<HTMLDivElement>, 'align' | 'children' | 'wrap'> {\n  children: React.ReactNode[] | React.ReactNode;\n  orientation?: Orientation;\n  spacing?: Spacing;\n  justify?: Justify;\n  align?: Align;\n  width?: string;\n  wrap?: boolean;\n}\n\nexport interface ContainerProps {\n  padding?: Spacing;\n  margin?: Spacing;\n  grow?: number;\n  shrink?: number;\n}\n\nexport const Layout = ({\n  children,\n  orientation = Orientation.Horizontal,\n  spacing = 'sm',\n  justify = 'flex-start',\n  align = 'normal',\n  wrap = false,\n  width = '100%',\n  height = '100%',\n  ...rest\n}: LayoutProps) => {\n  const styles = useStyles2(\n    useCallback(\n      (theme) => getStyles(theme, orientation, spacing, justify, align, wrap),\n      [align, justify, orientation, spacing, wrap]\n    )\n  );\n\n  return (\n    <div className={styles.layout} style={{ width, height }} {...rest}>\n      {React.Children.toArray(children)\n        .filter(Boolean)\n        .map((child, index) => {\n          return (\n            <div className={styles.childWrapper} key={index}>\n              {child}\n            </div>\n          );\n        })}\n    </div>\n  );\n};\n\nexport const HorizontalGroup = ({\n  children,\n  spacing,\n  justify,\n  align = 'center',\n  wrap,\n  width,\n  height,\n}: Omit<LayoutProps, 'orientation'>) => (\n  <Layout\n    spacing={spacing}\n    justify={justify}\n    orientation={Orientation.Horizontal}\n    align={align}\n    width={width}\n    height={height}\n    wrap={wrap}\n  >\n    {children}\n  </Layout>\n);\nexport const VerticalGroup = ({\n  children,\n  spacing,\n  justify,\n  align,\n  width,\n  height,\n}: Omit<LayoutProps, 'orientation' | 'wrap'>) => (\n  <Layout\n    spacing={spacing}\n    justify={justify}\n    orientation={Orientation.Vertical}\n    align={align}\n    width={width}\n    height={height}\n  >\n    {children}\n  </Layout>\n);\n\nexport const Container = ({ children, padding, margin, grow, shrink }: React.PropsWithChildren<ContainerProps>) => {\n  const styles = useStyles2(useCallback((theme) => getContainerStyles(theme, padding, margin), [padding, margin]));\n\n  return (\n    <div\n      className={cx(\n        styles.wrapper,\n        grow !== undefined &&\n          css`\n            flex-grow: ${grow};\n          `,\n        shrink !== undefined &&\n          css`\n            flex-shrink: ${shrink};\n          `\n      )}\n    >\n      {children}\n    </div>\n  );\n};\n\nconst getStyles = (\n  theme: GrafanaTheme2,\n  orientation: Orientation,\n  spacing: Spacing,\n  justify: Justify,\n  align: Align,\n  wrap: boolean\n) => {\n  const finalSpacing = spacing !== 'none' ? theme.spacing(spacingToNumber[spacing]) : 0;\n\n  // compensate for last row margin when wrapped, horizontal layout\n  const marginCompensation =\n    (orientation === Orientation.Horizontal && !wrap) || orientation === Orientation.Vertical ? 0 : `-${finalSpacing}`;\n\n  const label = orientation === Orientation.Vertical ? 'vertical-group' : 'horizontal-group';\n\n  return {\n    layout: css`\n      label: ${label};\n      display: flex;\n      flex-direction: ${orientation === Orientation.Vertical ? 'column' : 'row'};\n      flex-wrap: ${wrap ? 'wrap' : 'nowrap'};\n      justify-content: ${justify};\n      align-items: ${align};\n      height: 100%;\n      max-width: 100%;\n      // compensate for last row margin when wrapped, horizontal layout\n      margin-bottom: ${marginCompensation};\n    `,\n    childWrapper: css`\n      label: layoutChildrenWrapper;\n      margin-bottom: ${orientation === Orientation.Horizontal && !wrap ? 0 : finalSpacing};\n      margin-right: ${orientation === Orientation.Horizontal ? finalSpacing : 0};\n      display: flex;\n      align-items: ${align};\n\n      &:last-child {\n        margin-bottom: ${orientation === Orientation.Vertical && 0};\n        margin-right: ${orientation === Orientation.Horizontal && 0};\n      }\n    `,\n  };\n};\n\nconst spacingToNumber: Record<Spacing, number> = {\n  none: 0,\n  xs: 0.5,\n  sm: 1,\n  md: 2,\n  lg: 3,\n};\n\nconst getContainerStyles = (theme: GrafanaTheme2, padding?: Spacing, margin?: Spacing) => {\n  const paddingSize = (padding && padding !== 'none' && theme.spacing(spacingToNumber[padding])) || 0;\n  const marginSize = (margin && margin !== 'none' && theme.spacing(spacingToNumber[margin])) || 0;\n  return {\n    wrapper: css`\n      label: container;\n      margin: ${marginSize};\n      padding: ${paddingSize};\n    `,\n  };\n};\n","import React from 'react';\n\nimport { useStyles2 } from '../../themes';\nimport { IconName } from '../../types';\n\nimport { getModalStyles } from './getModalStyles';\n\ninterface Props {\n  title: string;\n  id?: string;\n  /** @deprecated */\n  icon?: IconName;\n  /** @deprecated */\n  iconTooltip?: string;\n}\n\n/** @internal */\nexport const ModalHeader = ({ icon, iconTooltip, title, children, id }: React.PropsWithChildren<Props>) => {\n  const styles = useStyles2(getModalStyles);\n\n  return (\n    <>\n      <h2 className={styles.modalHeaderTitle} id={id}>\n        {title}\n      </h2>\n      {children}\n    </>\n  );\n};\n","import { cx } from '@emotion/css';\nimport { useDialog } from '@react-aria/dialog';\nimport { FocusScope } from '@react-aria/focus';\nimport { OverlayContainer, useOverlay } from '@react-aria/overlays';\nimport React, { PropsWithChildren, useRef } from 'react';\n\nimport { useTheme2 } from '../../themes';\nimport { IconName } from '../../types';\nimport { IconButton } from '../IconButton/IconButton';\nimport { HorizontalGroup } from '../Layout/Layout';\n\nimport { ModalHeader } from './ModalHeader';\nimport { getModalStyles } from './getModalStyles';\n\nexport interface Props {\n  /** @deprecated no longer used */\n  icon?: IconName;\n  /** @deprecated no longer used */\n  iconTooltip?: string;\n  /** Title for the modal or custom header element */\n  title: string | JSX.Element;\n  className?: string;\n  contentClassName?: string;\n  closeOnEscape?: boolean;\n  closeOnBackdropClick?: boolean;\n  trapFocus?: boolean;\n\n  isOpen?: boolean;\n  onDismiss?: () => void;\n\n  /** If not set will call onDismiss if that is set. */\n  onClickBackdrop?: () => void;\n}\n\nexport function Modal(props: PropsWithChildren<Props>) {\n  const {\n    title,\n    children,\n    isOpen = false,\n    closeOnEscape = true,\n    closeOnBackdropClick = true,\n    className,\n    contentClassName,\n    onDismiss,\n    onClickBackdrop,\n    trapFocus = true,\n  } = props;\n  const theme = useTheme2();\n  const styles = getModalStyles(theme);\n\n  const ref = useRef<HTMLDivElement>(null);\n\n  // Handle interacting outside the dialog and pressing\n  // the Escape key to close the modal.\n  const { overlayProps, underlayProps } = useOverlay(\n    { isKeyboardDismissDisabled: !closeOnEscape, isOpen, onClose: onDismiss },\n    ref\n  );\n\n  // Get props for the dialog and its title\n  const { dialogProps, titleProps } = useDialog({}, ref);\n\n  if (!isOpen) {\n    return null;\n  }\n\n  const headerClass = cx(styles.modalHeader, typeof title !== 'string' && styles.modalHeaderWithTabs);\n\n  return (\n    <OverlayContainer>\n      <div\n        role=\"presentation\"\n        className={styles.modalBackdrop}\n        onClick={onClickBackdrop || (closeOnBackdropClick ? onDismiss : undefined)}\n        {...underlayProps}\n      />\n      <FocusScope contain={trapFocus} autoFocus restoreFocus>\n        <div className={cx(styles.modal, className)} ref={ref} {...overlayProps} {...dialogProps}>\n          <div className={headerClass}>\n            {typeof title === 'string' && <DefaultModalHeader {...props} title={title} id={titleProps.id} />}\n            {\n              // FIXME: custom title components won't get an accessible title.\n              // Do we really want to support them or shall we just limit this ModalTabsHeader?\n              typeof title !== 'string' && title\n            }\n            <div className={styles.modalHeaderClose}>\n              <IconButton aria-label=\"Close dialogue\" name=\"times\" size=\"xl\" onClick={onDismiss} />\n            </div>\n          </div>\n          <div className={cx(styles.modalContent, contentClassName)}>{children}</div>\n        </div>\n      </FocusScope>\n    </OverlayContainer>\n  );\n}\n\nfunction ModalButtonRow({ leftItems, children }: { leftItems?: React.ReactNode; children: React.ReactNode }) {\n  const theme = useTheme2();\n  const styles = getModalStyles(theme);\n\n  if (leftItems) {\n    return (\n      <div className={styles.modalButtonRow}>\n        <HorizontalGroup justify=\"space-between\">\n          <HorizontalGroup justify=\"flex-start\" spacing=\"md\">\n            {leftItems}\n          </HorizontalGroup>\n          <HorizontalGroup justify=\"flex-end\" spacing=\"md\">\n            {children}\n          </HorizontalGroup>\n        </HorizontalGroup>\n      </div>\n    );\n  }\n\n  return (\n    <div className={styles.modalButtonRow}>\n      <HorizontalGroup justify=\"flex-end\" spacing=\"md\">\n        {children}\n      </HorizontalGroup>\n    </div>\n  );\n}\n\nModal.ButtonRow = ModalButtonRow;\n\ninterface DefaultModalHeaderProps {\n  id?: string;\n  title: string;\n  icon?: IconName;\n  iconTooltip?: string;\n}\n\nfunction DefaultModalHeader({ icon, iconTooltip, title, id }: DefaultModalHeaderProps): JSX.Element {\n  return <ModalHeader icon={icon} iconTooltip={iconTooltip} title={title} id={id} />;\n}\n","import { css, cx } from '@emotion/css';\nimport React, { useEffect, useRef, useState } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\n\nimport { HorizontalGroup, Input } from '..';\nimport { useStyles2 } from '../../themes';\nimport { IconName } from '../../types/icon';\nimport { Button, ButtonVariant } from '../Button';\nimport { Modal } from '../Modal/Modal';\n\nexport interface ConfirmModalProps {\n  /** Toggle modal's open/closed state */\n  isOpen: boolean;\n  /** Title for the modal header */\n  title: string;\n  /** Modal content */\n  body: React.ReactNode;\n  /** Modal description */\n  description?: React.ReactNode;\n  /** Text for confirm button */\n  confirmText: string;\n  /** Variant for confirm button */\n  confirmVariant?: ButtonVariant;\n  /** Text for dismiss button */\n  dismissText?: string;\n  /** Variant for dismiss button */\n  dismissVariant?: ButtonVariant;\n  /** Icon for the modal header */\n  icon?: IconName;\n  /** Additional styling for modal container */\n  modalClass?: string;\n  /** Text user needs to fill in before confirming */\n  confirmationText?: string;\n  /** Text for alternative button */\n  alternativeText?: string;\n  /** Confirm button variant */\n  confirmButtonVariant?: ButtonVariant;\n  /** Confirm action callback */\n  onConfirm(): void;\n  /** Dismiss action callback */\n  onDismiss(): void;\n  /** Alternative action callback */\n  onAlternative?(): void;\n}\n\nexport const ConfirmModal = ({\n  isOpen,\n  title,\n  body,\n  description,\n  confirmText,\n  confirmVariant = 'destructive',\n  confirmationText,\n  dismissText = 'Cancel',\n  dismissVariant = 'secondary',\n  alternativeText,\n  modalClass,\n  icon = 'exclamation-triangle',\n  onConfirm,\n  onDismiss,\n  onAlternative,\n  confirmButtonVariant = 'destructive',\n}: ConfirmModalProps): JSX.Element => {\n  const [disabled, setDisabled] = useState(Boolean(confirmationText));\n  const styles = useStyles2(getStyles);\n  const buttonRef = useRef<HTMLButtonElement>(null);\n  const onConfirmationTextChange = (event: React.FormEvent<HTMLInputElement>) => {\n    setDisabled(confirmationText?.localeCompare(event.currentTarget.value) !== 0);\n  };\n\n  useEffect(() => {\n    // for some reason autoFocus property did no work on this button, but this does\n    if (isOpen) {\n      buttonRef.current?.focus();\n    }\n  }, [isOpen]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setDisabled(Boolean(confirmationText));\n    }\n  }, [isOpen, confirmationText]);\n\n  return (\n    <Modal className={cx(styles.modal, modalClass)} title={title} icon={icon} isOpen={isOpen} onDismiss={onDismiss}>\n      <div className={styles.modalText}>\n        {body}\n        {description ? <div className={styles.modalDescription}>{description}</div> : null}\n        {confirmationText ? (\n          <div className={styles.modalConfirmationInput}>\n            <HorizontalGroup>\n              <Input placeholder={`Type ${confirmationText} to confirm`} onChange={onConfirmationTextChange} />\n            </HorizontalGroup>\n          </div>\n        ) : null}\n      </div>\n      <Modal.ButtonRow>\n        <Button variant={dismissVariant} onClick={onDismiss} fill=\"outline\">\n          {dismissText}\n        </Button>\n        <Button\n          variant={confirmButtonVariant}\n          onClick={onConfirm}\n          disabled={disabled}\n          ref={buttonRef}\n          aria-label={selectors.pages.ConfirmModal.delete}\n        >\n          {confirmText}\n        </Button>\n        {onAlternative ? (\n          <Button variant=\"primary\" onClick={onAlternative}>\n            {alternativeText}\n          </Button>\n        ) : null}\n      </Modal.ButtonRow>\n    </Modal>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  modal: css`\n    width: 500px;\n  `,\n  modalText: css({\n    fontSize: theme.typography.h5.fontSize,\n    color: theme.colors.text.primary,\n  }),\n  modalDescription: css({\n    fontSize: theme.typography.body.fontSize,\n  }),\n  modalConfirmationInput: css({\n    paddingTop: theme.spacing(1),\n  }),\n});\n","import { Annotation } from 'slate';\nimport { Plugin } from 'slate-react';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst BRACES: Record<string, string> = {\n  '[': ']',\n  '{': '}',\n  '(': ')',\n};\n\nconst MATCH_MARK = 'brace_match';\n\nexport function BracesPlugin(): Plugin {\n  return {\n    onKeyDown(event, editor, next) {\n      const { value } = editor;\n\n      switch (event.key) {\n        case '(':\n        case '{':\n        case '[': {\n          const {\n            start: { offset: startOffset, key: startKey },\n            end: { offset: endOffset, key: endKey },\n            focus: { offset: focusOffset },\n          } = value.selection;\n          const text = value.focusText.text;\n\n          // If text is selected, wrap selected text in parens\n          if (value.selection.isExpanded) {\n            event.preventDefault();\n            editor\n              .insertTextByKey(startKey, startOffset, event.key)\n              .insertTextByKey(endKey, endOffset + 1, BRACES[event.key])\n              .moveEndBackward(1);\n            return true;\n          } else if (\n            // Insert matching brace when there is no input after caret\n            focusOffset === text.length ||\n            text[focusOffset] === ' ' ||\n            Object.values(BRACES).includes(text[focusOffset])\n          ) {\n            event.preventDefault();\n            const complement = BRACES[event.key];\n            const matchAnnotation = {\n              key: `${MATCH_MARK}-${uuidv4()}`,\n              type: `${MATCH_MARK}-${complement}`,\n              anchor: {\n                key: startKey,\n                offset: startOffset,\n                object: 'point',\n              },\n              focus: {\n                key: endKey,\n                offset: endOffset + 1,\n                object: 'point',\n              },\n              object: 'annotation',\n            } as Annotation;\n            editor.insertText(event.key).insertText(complement).addAnnotation(matchAnnotation).moveBackward(1);\n\n            return true;\n          }\n          break;\n        }\n\n        case ')':\n        case '}':\n        case ']': {\n          const text = value.anchorText.text;\n          const offset = value.selection.anchor.offset;\n          const nextChar = text[offset];\n          // Handle closing brace when it's already the next character\n          const complement = event.key;\n          const annotationType = `${MATCH_MARK}-${complement}`;\n          const annotation = value.annotations.find(\n            (a) => a?.type === annotationType && a.anchor.key === value.anchorText.key\n          );\n          if (annotation && nextChar === complement && !value.selection.isExpanded) {\n            event.preventDefault();\n            editor.moveFocusForward(1).removeAnnotation(annotation).moveAnchorForward(1);\n            return true;\n          }\n          break;\n        }\n\n        case 'Backspace': {\n          const text = value.anchorText.text;\n          const offset = value.selection.anchor.offset;\n          const previousChar = text[offset - 1];\n          const nextChar = text[offset];\n          if (BRACES[previousChar] && BRACES[previousChar] === nextChar) {\n            event.preventDefault();\n            // Remove closing brace if directly following\n            editor.deleteBackward(1).deleteForward(1).focus();\n            return true;\n          }\n        }\n\n        default: {\n          break;\n        }\n      }\n\n      return next();\n    },\n  };\n}\n","import { Plugin } from 'slate-react';\n\n// Clears the rest of the line after the caret\nexport function ClearPlugin(): Plugin {\n  return {\n    onKeyDown(event, editor, next) {\n      const value = editor.value;\n\n      if (value.selection.isExpanded) {\n        return next();\n      }\n\n      if (event.key === 'k' && event.ctrlKey) {\n        event.preventDefault();\n        const text = value.anchorText.text;\n        const offset = value.selection.anchor.offset;\n        const length = text.length;\n        const forward = length - offset;\n        editor.deleteForward(forward);\n        return true;\n      }\n\n      return next();\n    },\n  };\n}\n","import { Plugin } from 'slate-react';\n\nconst getCopiedText = (textBlocks: string[], startOffset: number, endOffset: number) => {\n  if (!textBlocks.length) {\n    return undefined;\n  }\n\n  const excludingLastLineLength = textBlocks.slice(0, -1).join('').length + textBlocks.length - 1;\n  return textBlocks.join('\\n').slice(startOffset, excludingLastLineLength + endOffset);\n};\n\n// Remove unicode special symbol - byte order mark (BOM), U+FEFF.\nconst removeBom = (str: string | undefined): string | undefined => {\n  return str?.replace(/[\\uFEFF]/g, '');\n};\n\nexport function ClipboardPlugin(): Plugin {\n  const clipboardPlugin: Plugin = {\n    onCopy(event, editor, next) {\n      event.preventDefault();\n\n      const { document, selection } = editor.value;\n      const {\n        start: { offset: startOffset },\n        end: { offset: endOffset },\n      } = selection;\n      const selectedBlocks = document\n        .getLeafBlocksAtRange(selection)\n        .toArray()\n        .map((block) => block.text);\n\n      const copiedText = removeBom(getCopiedText(selectedBlocks, startOffset, endOffset));\n      if (copiedText && event.clipboardData) {\n        event.clipboardData.setData('Text', copiedText);\n      }\n\n      return true;\n    },\n\n    onPaste(event, editor, next) {\n      event.preventDefault();\n      if (event.clipboardData) {\n        const pastedValue = removeBom(event.clipboardData.getData('Text'));\n        const lines = pastedValue?.split('\\n');\n\n        if (lines && lines.length) {\n          editor.insertText(lines[0]);\n          for (const line of lines.slice(1)) {\n            editor.splitBlock().insertText(line);\n          }\n        }\n      }\n\n      return true;\n    },\n  };\n\n  return {\n    ...clipboardPlugin,\n    onCut(event, editor, next) {\n      clipboardPlugin.onCopy!(event, editor, next);\n      editor.deleteAtRange(editor.value.selection);\n\n      return true;\n    },\n  };\n}\n","import { isKeyHotkey } from 'is-hotkey';\nimport React from 'react';\nimport { RangeJSON, Range as SlateRange } from 'slate';\nimport Plain from 'slate-plain-serializer';\nimport { Editor, Plugin } from 'slate-react';\n\nconst isIndentLeftHotkey = isKeyHotkey('mod+[');\nconst isShiftTabHotkey = isKeyHotkey('shift+tab');\nconst isIndentRightHotkey = isKeyHotkey('mod+]');\n\nconst SLATE_TAB = '  ';\n\nconst handleTabKey = (event: React.KeyboardEvent<Element>, editor: Editor, next: Function): void => {\n  const {\n    startBlock,\n    endBlock,\n    selection: {\n      start: { offset: startOffset, key: startKey },\n      end: { offset: endOffset, key: endKey },\n    },\n  } = editor.value;\n  if (Plain.serialize(editor.value) === '') {\n    return;\n  }\n  event.preventDefault();\n  const first = startBlock.getFirstText();\n\n  const startBlockIsSelected =\n    first && startOffset === 0 && startKey === first.key && endOffset === first.text.length && endKey === first.key;\n\n  if (startBlockIsSelected || !startBlock.equals(endBlock)) {\n    handleIndent(editor, 'right');\n  } else {\n    editor.insertText(SLATE_TAB);\n  }\n};\n\nconst handleIndent = (editor: Editor, indentDirection: 'left' | 'right') => {\n  const curSelection = editor.value.selection;\n  const selectedBlocks = editor.value.document.getLeafBlocksAtRange(curSelection).toArray();\n\n  if (indentDirection === 'left') {\n    for (const block of selectedBlocks) {\n      const blockWhitespace = block.text.length - block.text.trimLeft().length;\n\n      const textKey = block.getFirstText()!.key;\n\n      const rangeProperties: RangeJSON = {\n        anchor: {\n          key: textKey,\n          offset: blockWhitespace,\n          path: [],\n        },\n        focus: {\n          key: textKey,\n          offset: blockWhitespace,\n          path: [],\n        },\n      };\n\n      editor.deleteBackwardAtRange(SlateRange.create(rangeProperties), Math.min(SLATE_TAB.length, blockWhitespace));\n    }\n  } else {\n    const { startText } = editor.value;\n    const textBeforeCaret = startText.text.slice(0, curSelection.start.offset);\n    const isWhiteSpace = /^\\s*$/.test(textBeforeCaret);\n\n    for (const block of selectedBlocks) {\n      editor.insertTextByKey(block.getFirstText()!.key, 0, SLATE_TAB);\n    }\n\n    if (isWhiteSpace) {\n      editor.moveStartBackward(SLATE_TAB.length);\n    }\n  }\n};\n\n// Clears the rest of the line after the caret\nexport function IndentationPlugin(): Plugin {\n  return {\n    onKeyDown(event, editor, next) {\n      if (isIndentLeftHotkey(event) || isShiftTabHotkey(event)) {\n        event.preventDefault();\n        handleIndent(editor, 'left');\n      } else if (isIndentRightHotkey(event)) {\n        event.preventDefault();\n        handleIndent(editor, 'right');\n      } else if (event.key === 'Tab') {\n        handleTabKey(event, editor, next);\n      } else {\n        return next();\n      }\n\n      return true;\n    },\n  };\n}\n","import { Plugin } from 'slate-react';\n\nfunction getIndent(text: string) {\n  let offset = text.length - text.trimLeft().length;\n  if (offset) {\n    let indent = text[0];\n    while (--offset) {\n      indent += text[0];\n    }\n    return indent;\n  }\n  return '';\n}\n\nexport function NewlinePlugin(): Plugin {\n  return {\n    onKeyDown(event, editor, next) {\n      const value = editor.value;\n\n      if (value.selection.isExpanded) {\n        return next();\n      }\n\n      if (event.key === 'Enter') {\n        event.preventDefault();\n\n        const { startBlock } = value;\n        const currentLineText = startBlock.text;\n        const indent = getIndent(currentLineText);\n\n        return editor.splitBlock().insertText(indent).focus();\n      }\n\n      return next();\n    },\n  };\n}\n","import React from 'react';\nimport { Plugin } from 'slate-react';\n\nexport function RunnerPlugin({ handler }: { handler?: (e: React.KeyboardEvent) => void }): Plugin {\n  return {\n    onKeyDown(event, editor, next) {\n      // Handle enter\n      if (handler && event.key === 'Enter' && (event.shiftKey || event.ctrlKey)) {\n        // Submit on Enter\n        event.preventDefault();\n        handler(event);\n        return editor;\n      }\n\n      return next();\n    },\n  };\n}\n","import { isKeyHotkey } from 'is-hotkey';\nimport { Plugin } from 'slate-react';\n\nconst isSelectLineHotkey = isKeyHotkey('mod+l');\n\n// Clears the rest of the line after the caret\nexport function SelectionShortcutsPlugin(): Plugin {\n  return {\n    onKeyDown(event, editor, next) {\n      if (isSelectLineHotkey(event)) {\n        event.preventDefault();\n        const { focusBlock, document } = editor.value;\n\n        editor.moveAnchorToStartOfBlock();\n\n        const nextBlock = document.getNextBlock(focusBlock.key);\n        if (nextBlock) {\n          editor.moveFocusToStartOfNextBlock();\n        } else {\n          editor.moveFocusToEndOfText();\n        }\n      } else {\n        return next();\n      }\n\n      return true;\n    },\n  };\n}\n","const TOKEN_MARK = 'prism-token';\n\nexport default TOKEN_MARK;\n","import { Record } from 'immutable';\nimport React from 'react';\nimport { Mark, Node, Decoration } from 'slate';\nimport { Editor } from 'slate-react';\n\nimport TOKEN_MARK from './TOKEN_MARK';\n\nexport interface OptionsFormat {\n  // Determine which node should be highlighted\n  onlyIn?: (node: Node) => boolean;\n  // Returns the syntax for a node that should be highlighted\n  getSyntax?: (node: Node) => string;\n  // Render a highlighting mark in a highlighted node\n  renderMark?: ({ mark, children }: { mark: Mark; children: React.ReactNode }) => void | React.ReactNode;\n}\n\n/**\n * Default filter for code blocks\n */\nfunction defaultOnlyIn(node: Node): boolean {\n  return node.object === 'block' && node.type === 'code_block';\n}\n\n/**\n * Default getter for syntax\n */\nfunction defaultGetSyntax(node: Node): string {\n  return 'javascript';\n}\n\n/**\n * Default rendering for decorations\n */\nfunction defaultRenderDecoration(\n  props: { children: React.ReactNode; decoration: Decoration },\n  editor: Editor,\n  next: () => any\n): void | React.ReactNode {\n  const { decoration } = props;\n  if (decoration.type !== TOKEN_MARK) {\n    return next();\n  }\n\n  const className = decoration.data.get('className');\n  return <span className={className}>{props.children}</span>;\n}\n\n/**\n * The plugin options\n */\nclass Options\n  extends Record({\n    onlyIn: defaultOnlyIn,\n    getSyntax: defaultGetSyntax,\n    renderDecoration: defaultRenderDecoration,\n  })\n  implements OptionsFormat\n{\n  declare readonly onlyIn: (node: Node) => boolean;\n  declare readonly getSyntax: (node: Node) => string;\n  declare readonly renderDecoration: (\n    {\n      decoration,\n      children,\n    }: {\n      decoration: Decoration;\n      children: React.ReactNode;\n    },\n    editor: Editor,\n    next: () => any\n  ) => void | React.ReactNode;\n\n  constructor(props: OptionsFormat) {\n    super(props);\n  }\n}\n\nexport default Options;\n","import Prism, { LanguageMap } from 'prismjs';\nimport { Block, Text, Decoration } from 'slate';\nimport { Plugin } from 'slate-react';\n\nimport TOKEN_MARK from './TOKEN_MARK';\nimport Options, { OptionsFormat } from './options';\n\nexport interface Token {\n  content: string;\n  offsets?: {\n    start: number;\n    end: number;\n  };\n  types: string[];\n  aliases: string[];\n  prev?: Token | null;\n  next?: Token | null;\n}\n\n/**\n * A Slate plugin to highlight code syntax.\n */\nexport function SlatePrism(optsParam: OptionsFormat = {}, prismLanguages = Prism.languages as LanguageMap): Plugin {\n  const opts: Options = new Options(optsParam);\n\n  return {\n    decorateNode: (node, editor, next) => {\n      if (!opts.onlyIn(node)) {\n        return next();\n      }\n\n      const block = Block.create(node as Block);\n      const grammarName = opts.getSyntax(block);\n      const grammar = prismLanguages[grammarName];\n\n      if (!grammar) {\n        // Grammar not loaded\n        return [];\n      }\n\n      // Tokenize the whole block text\n      const texts = block.getTexts();\n      const blockText = texts.map((text) => text && text.getText()).join('\\n');\n      const tokens = Prism.tokenize(blockText, grammar);\n      const flattened = flattenTokens(tokens);\n\n      const newData = editor.value.data.set('tokens', flattened);\n      editor.setData(newData);\n      return decorateNode(opts, tokens, block);\n    },\n\n    renderDecoration: (props, editor, next) =>\n      opts.renderDecoration(\n        {\n          children: props.children,\n          decoration: props.decoration,\n        },\n        editor as any,\n        next\n      ),\n  };\n}\n\n/**\n * Returns the decoration for a node\n */\nfunction decorateNode(opts: Options, tokens: Array<string | Prism.Token>, block: Block) {\n  const texts = block.getTexts();\n\n  // The list of decorations to return\n  const decorations: Decoration[] = [];\n  let textStart = 0;\n  let textEnd = 0;\n\n  texts.forEach((text) => {\n    textEnd = textStart + text!.getText().length;\n\n    let offset = 0;\n    function processToken(token: string | Prism.Token, accu?: string | number) {\n      if (typeof token === 'string') {\n        if (accu) {\n          const decoration = createDecoration({\n            text: text!,\n            textStart,\n            textEnd,\n            start: offset,\n            end: offset + token.length,\n            className: `prism-token token ${accu}`,\n            block,\n          });\n\n          if (decoration) {\n            decorations.push(decoration);\n          }\n        }\n        offset += token.length;\n      } else {\n        accu = `${accu} ${token.type}`;\n        if (token.alias) {\n          accu += ' ' + token.alias;\n        }\n\n        if (typeof token.content === 'string') {\n          const decoration = createDecoration({\n            text: text!,\n            textStart,\n            textEnd,\n            start: offset,\n            end: offset + token.content.length,\n            className: `prism-token token ${accu}`,\n            block,\n          });\n\n          if (decoration) {\n            decorations.push(decoration);\n          }\n\n          offset += token.content.length;\n        } else {\n          // When using token.content instead of token.matchedStr, token can be deep\n          for (let i = 0; i < token.content.length; i += 1) {\n            // @ts-ignore\n            processToken(token.content[i], accu);\n          }\n        }\n      }\n    }\n\n    tokens.forEach(processToken);\n    textStart = textEnd + 1; // account for added `\\n`\n  });\n\n  return decorations;\n}\n\n/**\n * Return a decoration range for the given text.\n */\nfunction createDecoration({\n  text,\n  textStart,\n  textEnd,\n  start,\n  end,\n  className,\n  block,\n}: {\n  text: Text; // The text being decorated\n  textStart: number; // Its start position in the whole text\n  textEnd: number; // Its end position in the whole text\n  start: number; // The position in the whole text where the token starts\n  end: number; // The position in the whole text where the token ends\n  className: string; // The prism token classname\n  block: Block;\n}): Decoration | null {\n  if (start >= textEnd || end <= textStart) {\n    // Ignore, the token is not in the text\n    return null;\n  }\n\n  // Shrink to this text boundaries\n  start = Math.max(start, textStart);\n  end = Math.min(end, textEnd);\n\n  // Now shift offsets to be relative to this text\n  start -= textStart;\n  end -= textStart;\n\n  const myDec = block.createDecoration({\n    object: 'decoration',\n    anchor: {\n      key: text.key,\n      offset: start,\n      object: 'point',\n    },\n    focus: {\n      key: text.key,\n      offset: end,\n      object: 'point',\n    },\n    type: TOKEN_MARK,\n    data: { className },\n  });\n\n  return myDec;\n}\n\nfunction flattenToken(token: string | Prism.Token | Array<string | Prism.Token>): Token[] {\n  if (typeof token === 'string') {\n    return [\n      {\n        content: token,\n        types: [],\n        aliases: [],\n      },\n    ];\n  } else if (Array.isArray(token)) {\n    return token.flatMap((t) => flattenToken(t));\n  } else if (token instanceof Prism.Token) {\n    return flattenToken(token.content).flatMap((t) => {\n      let aliases: string[] = [];\n      if (typeof token.alias === 'string') {\n        aliases = [token.alias];\n      } else {\n        aliases = token.alias ?? [];\n      }\n\n      return {\n        content: t.content,\n        types: [token.type, ...t.types],\n        aliases: [...aliases, ...t.aliases],\n      };\n    });\n  }\n\n  return [];\n}\n\nexport function flattenTokens(token: string | Prism.Token | Array<string | Prism.Token>) {\n  const tokens = flattenToken(token);\n\n  if (!tokens.length) {\n    return [];\n  }\n\n  const firstToken = tokens[0];\n  firstToken.prev = null;\n  firstToken.next = tokens.length >= 2 ? tokens[1] : null;\n  firstToken.offsets = {\n    start: 0,\n    end: firstToken.content.length,\n  };\n\n  for (let i = 1; i < tokens.length - 1; i++) {\n    tokens[i].prev = tokens[i - 1];\n    tokens[i].next = tokens[i + 1];\n\n    tokens[i].offsets = {\n      start: tokens[i - 1].offsets!.end,\n      end: tokens[i - 1].offsets!.end + tokens[i].content.length,\n    };\n  }\n\n  const lastToken = tokens[tokens.length - 1];\n  lastToken.prev = tokens.length >= 2 ? tokens[tokens.length - 2] : null;\n  lastToken.next = null;\n  lastToken.offsets = {\n    start: tokens.length >= 2 ? tokens[tokens.length - 2].offsets!.end : 0,\n    end:\n      tokens.length >= 2 ? tokens[tokens.length - 2].offsets!.end + lastToken.content.length : lastToken.content.length,\n  };\n\n  return tokens;\n}\n","import { Value } from 'slate';\nimport { Editor } from 'slate-react';\n\nimport { SearchFunctionType } from '../utils';\n\n/**\n * @internal\n */\nexport type SearchFunction = (items: CompletionItem[], prefix: string) => CompletionItem[];\n\nexport interface CompletionItemGroup {\n  /**\n   * Label that will be displayed for all entries of this group.\n   */\n  label: string;\n\n  /**\n   * List of suggestions of this group.\n   */\n  items: CompletionItem[];\n\n  /**\n   * If true, match only by prefix (and not mid-word).\n   * @deprecated use searchFunctionType instead\n   */\n  prefixMatch?: boolean;\n\n  /**\n   * Function type used to create auto-complete list\n   * @alpha\n   */\n  searchFunctionType?: SearchFunctionType;\n\n  /**\n   * If true, do not filter items in this group based on the search.\n   */\n  skipFilter?: boolean;\n\n  /**\n   * If true, do not sort items.\n   */\n  skipSort?: boolean;\n}\n\nexport enum CompletionItemKind {\n  GroupTitle = 'GroupTitle',\n}\n\n/**\n * @internal\n */\nexport type HighlightPart = {\n  start: number;\n  end: number;\n};\n\nexport interface CompletionItem {\n  /**\n   * The label of this completion item. By default\n   * this is also the text that is inserted when selecting\n   * this completion.\n   */\n  label: string;\n\n  /**\n   * The kind of this completion item. An icon is chosen\n   * by the editor based on the kind.\n   */\n  kind?: CompletionItemKind | string;\n\n  /**\n   * A human-readable string with additional information\n   * about this item, like type or symbol information.\n   */\n  detail?: string;\n\n  /**\n   * A human-readable string, can be Markdown, that represents a doc-comment.\n   */\n  documentation?: string;\n\n  /**\n   * A string that should be used when comparing this item\n   * with other items. When `falsy` the `label` is used.\n   * @deprecated use sortValue instead\n   */\n  sortText?: string;\n\n  /**\n   * A string or number that should be used when comparing this\n   * item with other items. When `undefined` then `label` is used.\n   * @alpha\n   */\n  sortValue?: string | number;\n\n  /**\n   * Parts of the label to be highlighted\n   * @internal\n   */\n  highlightParts?: HighlightPart[];\n\n  /**\n   * A string that should be used when filtering a set of\n   * completion items. When `falsy` the `label` is used.\n   */\n  filterText?: string;\n\n  /**\n   * A string or snippet that should be inserted in a document when selecting\n   * this completion. When `falsy` the `label` is used.\n   */\n  insertText?: string;\n\n  /**\n   * Delete number of characters before the caret position,\n   * by default the letters from the beginning of the word.\n   */\n  deleteBackwards?: number;\n\n  /**\n   * Number of steps to move after the insertion, can be negative.\n   */\n  move?: number;\n}\n\nexport interface TypeaheadOutput {\n  context?: string;\n  suggestions: CompletionItemGroup[];\n}\n\nexport interface TypeaheadInput {\n  text: string;\n  prefix: string;\n  wrapperClasses: string[];\n  labelKey?: string;\n  value?: Value;\n  editor?: Editor;\n}\n\nexport interface SuggestionsState {\n  groupedItems: CompletionItemGroup[];\n  typeaheadPrefix: string;\n  typeaheadContext: string;\n  typeaheadText: string;\n}\n","import { default as calculateSize } from 'calculate-size';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { CompletionItemGroup, CompletionItem, CompletionItemKind } from '../types/completion';\n\nexport const flattenGroupItems = (groupedItems: CompletionItemGroup[]): CompletionItem[] => {\n  return groupedItems.reduce((all: CompletionItem[], { items, label }) => {\n    all.push({\n      label,\n      kind: CompletionItemKind.GroupTitle,\n    });\n    return items.reduce((all, item) => {\n      all.push(item);\n      return all;\n    }, all);\n  }, []);\n};\n\nexport const calculateLongestLabel = (allItems: CompletionItem[]): string => {\n  return allItems.reduce((longest, current) => {\n    return longest.length < current.label.length ? current.label : longest;\n  }, '');\n};\n\nexport const calculateListSizes = (theme: GrafanaTheme2, allItems: CompletionItem[], longestLabel: string) => {\n  const size = calculateSize(longestLabel, {\n    font: theme.typography.fontFamilyMonospace,\n    fontSize: theme.typography.bodySmall.fontSize,\n    fontWeight: 'normal',\n  });\n\n  const listWidth = calculateListWidth(size.width, theme);\n  const itemHeight = calculateItemHeight(size.height, theme);\n  const listHeight = calculateListHeight(itemHeight, allItems);\n\n  return {\n    listWidth,\n    listHeight,\n    itemHeight,\n  };\n};\n\nexport const calculateItemHeight = (longestLabelHeight: number, theme: GrafanaTheme2) => {\n  const horizontalPadding = theme.spacing.gridSize * 2;\n  const itemHeight = longestLabelHeight + horizontalPadding;\n\n  return itemHeight;\n};\n\nexport const calculateListWidth = (longestLabelWidth: number, theme: GrafanaTheme2) => {\n  const verticalPadding = theme.spacing.gridSize * 3;\n  const maxWidth = 800;\n  const listWidth = Math.min(Math.max(longestLabelWidth + verticalPadding, 200), maxWidth);\n\n  return listWidth;\n};\n\nexport const calculateListHeight = (itemHeight: number, allItems: CompletionItem[]) => {\n  const numberOfItemsToShow = Math.min(allItems.length, 10);\n  const minHeight = 100;\n  const totalHeight = numberOfItemsToShow * itemHeight;\n  const listHeight = Math.max(totalHeight, minHeight);\n\n  return listHeight;\n};\n","import { css, cx } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2, renderMarkdown } from '@grafana/data';\n\nimport { useTheme2 } from '../../themes/ThemeContext';\nimport { CompletionItem } from '../../types';\n\nconst getStyles = (theme: GrafanaTheme2, height: number, visible: boolean) => {\n  return {\n    typeaheadItem: css`\n      label: type-ahead-item;\n      z-index: 11;\n      padding: ${theme.spacing(1, 1, 1, 2)};\n      border: ${theme.colors.border.medium};\n      overflow-y: scroll;\n      overflow-x: hidden;\n      outline: none;\n      background: ${theme.colors.background.secondary};\n      color: ${theme.colors.text};\n      box-shadow: 0 0 20px ${theme.v1.colors.dropdownShadow};\n      visibility: ${visible === true ? 'visible' : 'hidden'};\n      width: 250px;\n      min-height: ${height + parseInt(theme.spacing(0.25), 10)}px;\n      position: relative;\n      word-break: break-word;\n    `,\n  };\n};\n\ninterface Props {\n  item: CompletionItem;\n  height: number;\n}\n\nexport const TypeaheadInfo = ({ item, height }: Props) => {\n  const visible = item && !!item.documentation;\n  const label = item ? item.label : '';\n  const documentation = renderMarkdown(item?.documentation);\n  const theme = useTheme2();\n  const styles = getStyles(theme, height, visible);\n\n  return (\n    <div className={cx([styles.typeaheadItem])}>\n      <b>{label}</b>\n      <hr />\n      <div dangerouslySetInnerHTML={{ __html: documentation }} />\n    </div>\n  );\n};\n","import React, { createElement } from 'react';\n\nimport { HighlightPart } from '../../types';\n\ninterface Props {\n  text: string;\n  highlightParts: HighlightPart[];\n  highlightClassName: string;\n}\n\n/**\n * Flattens parts into a list of indices pointing to the index where a part\n * (highlighted or not highlighted) starts. Adds extra indices if needed\n * at the beginning or the end to ensure the entire text is covered.\n */\nfunction getStartIndices(parts: HighlightPart[], length: number): number[] {\n  const indices: number[] = [];\n  parts.forEach((part) => {\n    indices.push(part.start, part.end + 1);\n  });\n  if (indices[0] !== 0) {\n    indices.unshift(0);\n  }\n  if (indices[indices.length - 1] !== length) {\n    indices.push(length);\n  }\n  return indices;\n}\n\nexport const PartialHighlighter = (props: Props) => {\n  let { highlightParts, text, highlightClassName } = props;\n\n  if (!highlightParts?.length) {\n    return null;\n  }\n\n  let children = [];\n  let indices = getStartIndices(highlightParts, text.length);\n  let highlighted = highlightParts[0].start === 0;\n\n  for (let i = 1; i < indices.length; i++) {\n    let start = indices[i - 1];\n    let end = indices[i];\n\n    children.push(\n      createElement(\n        highlighted ? 'mark' : 'span',\n        {\n          key: i - 1,\n          className: highlighted ? highlightClassName : undefined,\n        },\n        text.substring(start, end)\n      )\n    );\n    highlighted = !highlighted;\n  }\n\n  return <div>{children}</div>;\n};\n","import { css, cx } from '@emotion/css';\nimport React from 'react';\nimport Highlighter from 'react-highlight-words';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes/ThemeContext';\nimport { CompletionItem, CompletionItemKind } from '../../types/completion';\n\nimport { PartialHighlighter } from './PartialHighlighter';\n\ninterface Props {\n  isSelected: boolean;\n  item: CompletionItem;\n  style: React.CSSProperties;\n  prefix?: string;\n\n  onClickItem?: (event: React.MouseEvent) => void;\n  onMouseEnter?: () => void;\n  onMouseLeave?: () => void;\n}\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  typeaheadItem: css`\n    border: none;\n    background: none;\n    text-align: left;\n    label: type-ahead-item;\n    height: auto;\n    font-family: ${theme.typography.fontFamilyMonospace};\n    padding: ${theme.spacing(1, 1, 1, 2)};\n    font-size: ${theme.typography.bodySmall.fontSize};\n    text-overflow: ellipsis;\n    overflow: hidden;\n    z-index: 11;\n    display: block;\n    white-space: nowrap;\n    cursor: pointer;\n    transition: color 0.3s cubic-bezier(0.645, 0.045, 0.355, 1), border-color 0.3s cubic-bezier(0.645, 0.045, 0.355, 1),\n      background 0.3s cubic-bezier(0.645, 0.045, 0.355, 1), padding 0.15s cubic-bezier(0.645, 0.045, 0.355, 1);\n  `,\n\n  typeaheadItemSelected: css`\n    label: type-ahead-item-selected;\n    background-color: ${theme.colors.background.secondary};\n  `,\n\n  typeaheadItemMatch: css`\n    label: type-ahead-item-match;\n    color: ${theme.v1.palette.yellow};\n    border-bottom: 1px solid ${theme.v1.palette.yellow};\n    padding: inherit;\n    background: inherit;\n  `,\n\n  typeaheadItemGroupTitle: css`\n    label: type-ahead-item-group-title;\n    color: ${theme.colors.text.secondary};\n    font-size: ${theme.typography.bodySmall.fontSize};\n    line-height: ${theme.typography.body.lineHeight};\n    padding: ${theme.spacing(1)};\n  `,\n});\n\nexport const TypeaheadItem = (props: Props) => {\n  const styles = useStyles2(getStyles);\n\n  const { isSelected, item, prefix, style, onMouseEnter, onMouseLeave, onClickItem } = props;\n  const className = isSelected ? cx([styles.typeaheadItem, styles.typeaheadItemSelected]) : cx([styles.typeaheadItem]);\n  const highlightClassName = cx([styles.typeaheadItemMatch]);\n  const itemGroupTitleClassName = cx([styles.typeaheadItemGroupTitle]);\n  const label = item.label || '';\n\n  if (item.kind === CompletionItemKind.GroupTitle) {\n    return (\n      <li className={itemGroupTitleClassName} style={style}>\n        <span>{label}</span>\n      </li>\n    );\n  }\n\n  return (\n    <li role=\"none\">\n      <button\n        role=\"menuitem\"\n        className={className}\n        style={style}\n        onMouseDown={onClickItem}\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={onMouseLeave}\n        type=\"button\"\n      >\n        {item.highlightParts !== undefined ? (\n          <PartialHighlighter\n            text={label}\n            highlightClassName={highlightClassName}\n            highlightParts={item.highlightParts}\n          ></PartialHighlighter>\n        ) : (\n          <Highlighter\n            textToHighlight={label}\n            searchWords={[prefix ?? '']}\n            autoEscape={true}\n            highlightClassName={highlightClassName}\n          />\n        )}\n      </button>\n    </li>\n  );\n};\n","import { isEqual } from 'lodash';\nimport React, { createRef, PureComponent } from 'react';\nimport ReactDOM from 'react-dom';\nimport { FixedSizeList } from 'react-window';\n\nimport { ThemeContext } from '../../themes/ThemeContext';\nimport { CompletionItem, CompletionItemGroup, CompletionItemKind } from '../../types/completion';\nimport { flattenGroupItems, calculateLongestLabel, calculateListSizes } from '../../utils/typeahead';\n\nimport { TypeaheadInfo } from './TypeaheadInfo';\nimport { TypeaheadItem } from './TypeaheadItem';\n\nconst modulo = (a: number, n: number) => a - n * Math.floor(a / n);\n\ninterface Props {\n  origin: string;\n  groupedItems: CompletionItemGroup[];\n  prefix?: string;\n  menuRef?: (el: Typeahead) => void;\n  onSelectSuggestion?: (suggestion: CompletionItem) => void;\n  isOpen?: boolean;\n}\n\nexport interface State {\n  allItems: CompletionItem[];\n  listWidth: number;\n  listHeight: number;\n  itemHeight: number;\n  hoveredItem: number | null;\n  typeaheadIndex: number | null;\n}\n\nexport class Typeahead extends PureComponent<Props, State> {\n  static contextType = ThemeContext;\n  context!: React.ContextType<typeof ThemeContext>;\n  listRef = createRef<FixedSizeList>();\n\n  state: State = {\n    hoveredItem: null,\n    typeaheadIndex: null,\n    allItems: [],\n    listWidth: -1,\n    listHeight: -1,\n    itemHeight: -1,\n  };\n\n  componentDidMount = () => {\n    if (this.props.menuRef) {\n      this.props.menuRef(this);\n    }\n\n    document.addEventListener('selectionchange', this.handleSelectionChange);\n\n    const allItems = flattenGroupItems(this.props.groupedItems);\n    const longestLabel = calculateLongestLabel(allItems);\n    const { listWidth, listHeight, itemHeight } = calculateListSizes(this.context, allItems, longestLabel);\n    this.setState({\n      listWidth,\n      listHeight,\n      itemHeight,\n      allItems,\n    });\n  };\n\n  componentWillUnmount = () => {\n    document.removeEventListener('selectionchange', this.handleSelectionChange);\n  };\n\n  handleSelectionChange = () => {\n    this.forceUpdate();\n  };\n\n  componentDidUpdate = (prevProps: Readonly<Props>, prevState: Readonly<State>) => {\n    if (\n      this.state.typeaheadIndex !== null &&\n      prevState.typeaheadIndex !== this.state.typeaheadIndex &&\n      this.listRef &&\n      this.listRef.current\n    ) {\n      if (this.state.typeaheadIndex === 1) {\n        this.listRef.current.scrollToItem(0); // special case for handling the first group label\n        return;\n      }\n      this.listRef.current.scrollToItem(this.state.typeaheadIndex);\n    }\n\n    if (isEqual(prevProps.groupedItems, this.props.groupedItems) === false) {\n      const allItems = flattenGroupItems(this.props.groupedItems);\n      const longestLabel = calculateLongestLabel(allItems);\n      const { listWidth, listHeight, itemHeight } = calculateListSizes(this.context, allItems, longestLabel);\n      this.setState({ listWidth, listHeight, itemHeight, allItems, typeaheadIndex: null });\n    }\n  };\n\n  onMouseEnter = (index: number) => {\n    this.setState({\n      hoveredItem: index,\n    });\n  };\n\n  onMouseLeave = () => {\n    this.setState({\n      hoveredItem: null,\n    });\n  };\n\n  moveMenuIndex = (moveAmount: number) => {\n    const itemCount = this.state.allItems.length;\n    if (itemCount) {\n      // Select next suggestion\n      const typeaheadIndex = this.state.typeaheadIndex || 0;\n      let newTypeaheadIndex = modulo(typeaheadIndex + moveAmount, itemCount);\n\n      if (this.state.allItems[newTypeaheadIndex].kind === CompletionItemKind.GroupTitle) {\n        newTypeaheadIndex = modulo(newTypeaheadIndex + moveAmount, itemCount);\n      }\n\n      this.setState({\n        typeaheadIndex: newTypeaheadIndex,\n      });\n\n      return;\n    }\n  };\n\n  insertSuggestion = () => {\n    if (this.props.onSelectSuggestion && this.state.typeaheadIndex !== null) {\n      this.props.onSelectSuggestion(this.state.allItems[this.state.typeaheadIndex]);\n    }\n  };\n\n  get menuPosition(): string {\n    // Exit for unit tests\n    if (!window.getSelection) {\n      return '';\n    }\n\n    const selection = window.getSelection();\n    const node = selection && selection.anchorNode;\n\n    // Align menu overlay to editor node\n    if (node && node.parentElement) {\n      // Read from DOM\n      const rect = node.parentElement.getBoundingClientRect();\n      const scrollX = window.scrollX;\n      const scrollY = window.scrollY;\n\n      return `position: absolute; display: flex; top: ${rect.top + scrollY + rect.height + 6}px; left: ${\n        rect.left + scrollX - 2\n      }px`;\n    }\n\n    return '';\n  }\n\n  render() {\n    const { prefix, isOpen = false, origin } = this.props;\n    const { allItems, listWidth, listHeight, itemHeight, hoveredItem, typeaheadIndex } = this.state;\n\n    const showDocumentation = hoveredItem || typeaheadIndex;\n    const documentationItem = allItems[hoveredItem ? hoveredItem : typeaheadIndex || 0];\n\n    return (\n      <Portal origin={origin} isOpen={isOpen} style={this.menuPosition}>\n        <ul role=\"menu\" className=\"typeahead\" data-testid=\"typeahead\">\n          <FixedSizeList\n            ref={this.listRef}\n            itemCount={allItems.length}\n            itemSize={itemHeight}\n            itemKey={(index) => {\n              const item = allItems && allItems[index];\n              const key = item ? `${index}-${item.label}` : `${index}`;\n              return key;\n            }}\n            width={listWidth}\n            height={listHeight}\n          >\n            {({ index, style }) => {\n              const item = allItems && allItems[index];\n              if (!item) {\n                return null;\n              }\n\n              return (\n                <TypeaheadItem\n                  onClickItem={() => (this.props.onSelectSuggestion ? this.props.onSelectSuggestion(item) : {})}\n                  isSelected={typeaheadIndex === null ? false : allItems[typeaheadIndex] === item}\n                  item={item}\n                  prefix={prefix}\n                  style={style}\n                  onMouseEnter={() => this.onMouseEnter(index)}\n                  onMouseLeave={this.onMouseLeave}\n                />\n              );\n            }}\n          </FixedSizeList>\n        </ul>\n\n        {showDocumentation && <TypeaheadInfo height={listHeight} item={documentationItem} />}\n      </Portal>\n    );\n  }\n}\n\ninterface PortalProps {\n  index?: number;\n  isOpen: boolean;\n  origin: string;\n  style: string;\n}\n\nclass Portal extends PureComponent<React.PropsWithChildren<PortalProps>, {}> {\n  node: HTMLElement;\n\n  constructor(props: React.PropsWithChildren<PortalProps>) {\n    super(props);\n    const { index = 0, origin = 'query', style } = props;\n    this.node = document.createElement('div');\n    this.node.setAttribute('style', style);\n    this.node.classList.add(`slate-typeahead`, `slate-typeahead-${origin}-${index}`);\n    document.body.appendChild(this.node);\n  }\n\n  componentWillUnmount() {\n    document.body.removeChild(this.node);\n  }\n\n  render() {\n    if (this.props.isOpen) {\n      this.node.setAttribute('style', this.props.style);\n      this.node.classList.add(`slate-typeahead--open`);\n      return ReactDOM.createPortal(this.props.children, this.node);\n    } else {\n      this.node.classList.remove(`slate-typeahead--open`);\n    }\n\n    return null;\n  }\n}\n","import { debounce, sortBy } from 'lodash';\nimport React from 'react';\nimport { Editor, Plugin as SlatePlugin } from 'slate-react';\n\nimport { Typeahead } from '../components/Typeahead/Typeahead';\nimport { CompletionItem, SuggestionsState, TypeaheadInput, TypeaheadOutput } from '../types';\nimport { makeFragment, SearchFunctionType } from '../utils';\nimport { SearchFunctionMap } from '../utils/searchFunctions';\n\nimport TOKEN_MARK from './slate-prism/TOKEN_MARK';\n\nexport const TYPEAHEAD_DEBOUNCE = 250;\n\n// Commands added to the editor by this plugin.\ninterface SuggestionsPluginCommands {\n  selectSuggestion: (suggestion: CompletionItem) => Editor;\n  applyTypeahead: (suggestion: CompletionItem) => Editor;\n}\n\nexport function SuggestionsPlugin({\n  onTypeahead,\n  cleanText,\n  onWillApplySuggestion,\n  portalOrigin,\n}: {\n  onTypeahead?: (typeahead: TypeaheadInput) => Promise<TypeaheadOutput>;\n  cleanText?: (text: string) => string;\n  onWillApplySuggestion?: (suggestion: string, state: SuggestionsState) => string;\n  portalOrigin: string;\n}): SlatePlugin {\n  let typeaheadRef: Typeahead;\n  let state: SuggestionsState = {\n    groupedItems: [],\n    typeaheadPrefix: '',\n    typeaheadContext: '',\n    typeaheadText: '',\n  };\n  const handleTypeaheadDebounced = debounce(handleTypeahead, TYPEAHEAD_DEBOUNCE);\n\n  const setState = (update: Partial<SuggestionsState>) => {\n    state = {\n      ...state,\n      ...update,\n    };\n  };\n\n  return {\n    onBlur: (event, editor, next) => {\n      state = {\n        ...state,\n        groupedItems: [],\n      };\n\n      return next();\n    },\n\n    onClick: (event, editor, next) => {\n      state = {\n        ...state,\n        groupedItems: [],\n      };\n\n      return next();\n    },\n\n    onKeyDown: (event, editor, next) => {\n      const currentSuggestions = state.groupedItems;\n\n      const hasSuggestions = currentSuggestions.length;\n\n      switch (event.key) {\n        case 'Escape': {\n          if (hasSuggestions) {\n            event.preventDefault();\n\n            state = {\n              ...state,\n              groupedItems: [],\n            };\n\n            // Bogus edit to re-render editor\n            return editor.insertText('');\n          }\n\n          break;\n        }\n\n        case 'ArrowDown':\n        case 'ArrowUp':\n          if (hasSuggestions) {\n            event.preventDefault();\n            typeaheadRef.moveMenuIndex(event.key === 'ArrowDown' ? 1 : -1);\n            return;\n          }\n\n          break;\n\n        case 'Enter': {\n          if (!(event.shiftKey || event.ctrlKey) && hasSuggestions) {\n            event.preventDefault();\n            return typeaheadRef.insertSuggestion();\n          }\n\n          break;\n        }\n\n        case 'Tab': {\n          if (hasSuggestions) {\n            event.preventDefault();\n            return typeaheadRef.insertSuggestion();\n          }\n\n          break;\n        }\n\n        default: {\n          // Don't react on meta keys\n          if (event.key.length === 1) {\n            handleTypeaheadDebounced(editor, setState, onTypeahead, cleanText);\n          }\n          break;\n        }\n      }\n\n      return next();\n    },\n\n    commands: {\n      selectSuggestion: (editor, suggestion: CompletionItem): Editor => {\n        const suggestions = state.groupedItems;\n        if (!suggestions || !suggestions.length) {\n          return editor;\n        }\n\n        // @ts-ignore\n        const ed = editor.applyTypeahead(suggestion);\n        handleTypeaheadDebounced(editor, setState, onTypeahead, cleanText);\n        return ed;\n      },\n\n      applyTypeahead: (editor, suggestion: CompletionItem) => {\n        let suggestionText = suggestion.insertText || suggestion.label;\n\n        const preserveSuffix = suggestion.kind === 'function';\n        const move = suggestion.move || 0;\n        const moveForward = move > 0 ? move : 0;\n        const moveBackward = move < 0 ? -move : 0;\n\n        const { typeaheadPrefix, typeaheadText, typeaheadContext } = state;\n\n        if (onWillApplySuggestion) {\n          suggestionText = onWillApplySuggestion(suggestionText, {\n            groupedItems: state.groupedItems,\n            typeaheadContext,\n            typeaheadPrefix,\n            typeaheadText,\n          });\n        }\n\n        // Remove the current, incomplete text and replace it with the selected suggestion\n        const backward = suggestion.deleteBackwards || typeaheadPrefix.length;\n        const text = cleanText ? cleanText(typeaheadText) : typeaheadText;\n        const suffixLength = text.length - typeaheadPrefix.length;\n        const offset = typeaheadText.indexOf(typeaheadPrefix);\n        const midWord = typeaheadPrefix && ((suffixLength > 0 && offset > -1) || suggestionText === typeaheadText);\n        const forward = midWord && !preserveSuffix ? suffixLength + offset : 0;\n\n        // If new-lines, apply suggestion as block\n        if (suggestionText.match(/\\n/)) {\n          const fragment = makeFragment(suggestionText);\n          editor.deleteBackward(backward).deleteForward(forward).insertFragment(fragment).focus();\n          return editor;\n        }\n\n        state = {\n          ...state,\n          groupedItems: [],\n        };\n\n        editor\n          .snapshotSelection()\n          .deleteBackward(backward)\n          .deleteForward(forward)\n          .insertText(suggestionText)\n          .moveForward(moveForward)\n          .moveBackward(moveBackward)\n          .focus();\n\n        return editor;\n      },\n    },\n\n    renderEditor(props, editor, next) {\n      if (editor.value.selection.isExpanded) {\n        return next();\n      }\n\n      const children = next();\n\n      return (\n        <>\n          {children}\n          <Typeahead\n            menuRef={(menu: Typeahead) => (typeaheadRef = menu)}\n            origin={portalOrigin}\n            prefix={state.typeaheadPrefix}\n            isOpen={!!state.groupedItems.length}\n            groupedItems={state.groupedItems}\n            onSelectSuggestion={(editor as Editor & SuggestionsPluginCommands).selectSuggestion}\n          />\n        </>\n      );\n    },\n  };\n}\n\nconst handleTypeahead = async (\n  editor: Editor,\n  onStateChange: (state: Partial<SuggestionsState>) => void,\n  onTypeahead?: (typeahead: TypeaheadInput) => Promise<TypeaheadOutput>,\n  cleanText?: (text: string) => string\n): Promise<void> => {\n  if (!onTypeahead) {\n    return;\n  }\n\n  const { value } = editor;\n  const { selection } = value;\n\n  // Get decorations associated with the current line\n  const parentBlock = value.document.getClosestBlock(value.focusBlock.key);\n  const selectionStartOffset = value.selection.start.offset - 1;\n  const decorations = parentBlock && parentBlock.getDecorations(editor as any);\n\n  const filteredDecorations = decorations\n    ? decorations\n        .filter(\n          (decoration) =>\n            decoration!.start.offset <= selectionStartOffset &&\n            decoration!.end.offset > selectionStartOffset &&\n            decoration!.type === TOKEN_MARK\n        )\n        .toArray()\n    : [];\n\n  // Find the first label key to the left of the cursor\n  const labelKeyDec =\n    decorations &&\n    decorations\n      .filter(\n        (decoration) =>\n          decoration!.end.offset <= selectionStartOffset &&\n          decoration!.type === TOKEN_MARK &&\n          decoration!.data.get('className').includes('label-key')\n      )\n      .last();\n\n  const labelKey = labelKeyDec && value.focusText.text.slice(labelKeyDec.start.offset, labelKeyDec.end.offset);\n\n  const wrapperClasses = filteredDecorations\n    .map((decoration) => decoration.data.get('className'))\n    .join(' ')\n    .split(' ')\n    .filter((className) => className.length);\n\n  let text = value.focusText.text;\n  let prefix = text.slice(0, selection.focus.offset);\n\n  if (filteredDecorations.length) {\n    text = value.focusText.text.slice(filteredDecorations[0].start.offset, filteredDecorations[0].end.offset);\n    prefix = value.focusText.text.slice(filteredDecorations[0].start.offset, selection.focus.offset);\n  }\n\n  // Label values could have valid characters erased if `cleanText()` is\n  // blindly applied, which would undesirably interfere with suggestions\n  const labelValueMatch = prefix.match(/(?:!?=~?\"?|\")(.*)/);\n  if (labelValueMatch) {\n    prefix = labelValueMatch[1];\n  } else if (cleanText) {\n    prefix = cleanText(prefix);\n  }\n\n  const { suggestions, context } = await onTypeahead({\n    prefix,\n    text,\n    value,\n    wrapperClasses,\n    labelKey: labelKey || undefined,\n    editor,\n  });\n\n  const filteredSuggestions = suggestions\n    .map((group) => {\n      if (!group.items) {\n        return group;\n      }\n      // Falling back to deprecated prefixMatch to support backwards compatibility with plugins using this property\n      const searchFunctionType =\n        group.searchFunctionType || (group.prefixMatch ? SearchFunctionType.Prefix : SearchFunctionType.Word);\n      const searchFunction = SearchFunctionMap[searchFunctionType];\n      let newGroup = { ...group };\n      if (prefix) {\n        // Filter groups based on prefix\n        if (!group.skipFilter) {\n          newGroup.items = newGroup.items.filter((c) => (c.filterText || c.label).length >= prefix.length);\n          newGroup.items = searchFunction(newGroup.items, prefix);\n        }\n\n        // Filter out the already typed value (prefix) unless it inserts custom text not matching the prefix\n        newGroup.items = newGroup.items.filter(\n          (c) => !(c.insertText === prefix || (c.filterText ?? c.label) === prefix)\n        );\n      }\n\n      if (!group.skipSort) {\n        newGroup.items = sortBy(newGroup.items, (item: CompletionItem) => {\n          if (item.sortText === undefined) {\n            return item.sortValue !== undefined ? item.sortValue : item.label;\n          } else {\n            // Falling back to deprecated sortText to support backwards compatibility with plugins using this property\n            return item.sortText || item.label;\n          }\n        });\n      }\n\n      return newGroup;\n    })\n    .filter((gr) => gr.items && gr.items.length); // Filter out empty groups\n\n  onStateChange({\n    groupedItems: filteredSuggestions,\n    typeaheadPrefix: prefix,\n    typeaheadContext: context,\n    typeaheadText: text,\n  });\n\n  // Bogus edit to force re-render\n  editor.blur().focus();\n};\n","import { css, cx } from '@emotion/css';\nimport classnames from 'classnames';\nimport { debounce } from 'lodash';\nimport React, { Context, PureComponent } from 'react';\nimport { Value } from 'slate';\nimport Plain from 'slate-plain-serializer';\nimport { Editor, EventHook, Plugin } from 'slate-react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\n\nimport {\n  makeValue,\n  SCHEMA,\n  CompletionItemGroup,\n  TypeaheadOutput,\n  TypeaheadInput,\n  SuggestionsState,\n  Themeable2,\n} from '../..';\nimport {\n  ClearPlugin,\n  NewlinePlugin,\n  SelectionShortcutsPlugin,\n  IndentationPlugin,\n  ClipboardPlugin,\n  RunnerPlugin,\n  SuggestionsPlugin,\n} from '../../slate-plugins';\nimport { withTheme2 } from '../../themes';\nimport { getFocusStyles } from '../../themes/mixins';\n\nexport interface QueryFieldProps extends Themeable2 {\n  additionalPlugins?: Plugin[];\n  cleanText?: (text: string) => string;\n  disabled?: boolean;\n  // We have both value and local state. This is usually an antipattern but we need to keep local state\n  // for perf reasons and also have outside value in for example in Explore redux that is mutable from logs\n  // creating a two way binding.\n  query?: string | null;\n  onRunQuery?: () => void;\n  onBlur?: () => void;\n  onChange?: (value: string) => void;\n  onRichValueChange?: (value: Value) => void;\n  onClick?: EventHook<React.MouseEvent<Element, MouseEvent>>;\n  onTypeahead?: (typeahead: TypeaheadInput) => Promise<TypeaheadOutput>;\n  onWillApplySuggestion?: (suggestion: string, state: SuggestionsState) => string;\n  placeholder?: string;\n  portalOrigin: string;\n  syntax?: string;\n  syntaxLoaded?: boolean;\n  theme: GrafanaTheme2;\n}\n\nexport interface QueryFieldState {\n  suggestions: CompletionItemGroup[];\n  typeaheadContext: string | null;\n  typeaheadPrefix: string;\n  typeaheadText: string;\n  value: Value;\n}\n\n/**\n * Renders an editor field.\n * Pass initial value as initialQuery and listen to changes in props.onValueChanged.\n * This component can only process strings. Internally it uses Slate Value.\n * Implement props.onTypeahead to use suggestions, see PromQueryField.tsx as an example.\n */\nexport class UnThemedQueryField extends PureComponent<QueryFieldProps, QueryFieldState> {\n  plugins: Array<Plugin<Editor>>;\n  runOnChangeDebounced: Function;\n  lastExecutedValue: Value | null = null;\n  mounted = false;\n  editor: Editor | null = null;\n\n  constructor(props: QueryFieldProps, context: Context<any>) {\n    super(props, context);\n\n    this.runOnChangeDebounced = debounce(this.runOnChange, 500);\n\n    const { onTypeahead, cleanText, portalOrigin, onWillApplySuggestion } = props;\n\n    // Base plugins\n    this.plugins = [\n      // SuggestionsPlugin and RunnerPlugin need to be before NewlinePlugin\n      // because they override Enter behavior\n      SuggestionsPlugin({ onTypeahead, cleanText, portalOrigin, onWillApplySuggestion }),\n      RunnerPlugin({ handler: this.runOnChangeAndRunQuery }),\n      NewlinePlugin(),\n      ClearPlugin(),\n      SelectionShortcutsPlugin(),\n      IndentationPlugin(),\n      ClipboardPlugin(),\n      ...(props.additionalPlugins || []),\n    ].filter((p) => p);\n\n    this.state = {\n      suggestions: [],\n      typeaheadContext: null,\n      typeaheadPrefix: '',\n      typeaheadText: '',\n      value: makeValue(props.query || '', props.syntax),\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  componentDidUpdate(prevProps: QueryFieldProps, prevState: QueryFieldState) {\n    const { query, syntax, syntaxLoaded } = this.props;\n    if (!prevProps.syntaxLoaded && syntaxLoaded && this.editor) {\n      // Need a bogus edit to re-render the editor after syntax has fully loaded\n      const editor = this.editor.insertText(' ').deleteBackward(1);\n      this.onChange(editor.value, true);\n    }\n    const { value } = this.state;\n\n    // Handle two way binging between local state and outside prop.\n    // if query changed from the outside\n    if (query !== prevProps.query) {\n      // and we have a version that differs\n      if (query !== Plain.serialize(value)) {\n        this.setState({ value: makeValue(query || '', syntax) });\n      }\n    }\n  }\n\n  /**\n   * Update local state, propagate change upstream and optionally run the query afterwards.\n   */\n  onChange = (value: Value, runQuery?: boolean) => {\n    const documentChanged = value.document !== this.state.value.document;\n    const prevValue = this.state.value;\n    if (this.props.onRichValueChange) {\n      this.props.onRichValueChange(value);\n    }\n\n    // Update local state with new value and optionally change value upstream.\n    this.setState({ value }, () => {\n      // The diff is needed because the actual value of editor have much more metadata (for example text selection)\n      // that is not passed upstream so every change of editor value does not mean change of the query text.\n      if (documentChanged) {\n        const textChanged = Plain.serialize(prevValue) !== Plain.serialize(value);\n        if (textChanged && runQuery) {\n          this.runOnChangeAndRunQuery();\n        }\n        if (textChanged && !runQuery) {\n          // Debounce change propagation by default for perf reasons.\n          this.runOnChangeDebounced();\n        }\n      }\n    });\n  };\n\n  runOnChange = () => {\n    const { onChange } = this.props;\n    const value = Plain.serialize(this.state.value);\n    if (onChange) {\n      onChange(this.cleanText(value));\n    }\n  };\n\n  runOnRunQuery = () => {\n    const { onRunQuery } = this.props;\n\n    if (onRunQuery) {\n      onRunQuery();\n      this.lastExecutedValue = this.state.value;\n    }\n  };\n\n  runOnChangeAndRunQuery = () => {\n    // onRunQuery executes query from Redux in Explore so it needs to be updated sync in case we want to run\n    // the query.\n    this.runOnChange();\n    this.runOnRunQuery();\n  };\n\n  /**\n   * We need to handle blur events here mainly because of dashboard panels which expect to have query executed on blur.\n   */\n  handleBlur = (_: React.FocusEvent | undefined, editor: Editor, next: Function) => {\n    const { onBlur } = this.props;\n\n    if (onBlur) {\n      onBlur();\n    } else {\n      // Run query by default on blur\n      const previousValue = this.lastExecutedValue ? Plain.serialize(this.lastExecutedValue) : '';\n      const currentValue = Plain.serialize(editor.value);\n\n      if (previousValue !== currentValue) {\n        this.runOnChangeAndRunQuery();\n      }\n    }\n    return next();\n  };\n\n  cleanText(text: string) {\n    // RegExp with invisible characters we want to remove - currently only carriage return (newlines are visible)\n    const newText = text.replace(/[\\r]/g, '');\n    return newText;\n  }\n\n  render() {\n    const { disabled, theme } = this.props;\n    const wrapperClassName = classnames('slate-query-field__wrapper', {\n      'slate-query-field__wrapper--disabled': disabled,\n    });\n    const styles = getStyles(theme);\n\n    return (\n      <div className={cx(wrapperClassName, styles.wrapper)}>\n        <div className=\"slate-query-field\" aria-label={selectors.components.QueryField.container}>\n          <Editor\n            ref={(editor) => (this.editor = editor!)}\n            schema={SCHEMA}\n            autoCorrect={false}\n            readOnly={this.props.disabled}\n            onBlur={this.handleBlur}\n            onClick={this.props.onClick}\n            // onKeyDown={this.onKeyDown}\n            onChange={(change: { value: Value }) => {\n              this.onChange(change.value, false);\n            }}\n            placeholder={this.props.placeholder}\n            plugins={this.plugins}\n            spellCheck={false}\n            value={this.state.value}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const QueryField = withTheme2(UnThemedQueryField);\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  const focusStyles = getFocusStyles(theme);\n  return {\n    wrapper: css`\n      &:focus-within {\n        ${focusStyles}\n      }\n    `,\n  };\n};\n","import { useAsync } from 'react-use';\n\n// Allows simple dynamic imports in the components\nexport const useAsyncDependency = (importStatement: Promise<any>) => {\n  const state = useAsync(async () => {\n    return await importStatement;\n  });\n\n  return {\n    ...state,\n    dependency: state.value,\n  };\n};\n","import React from 'react';\n\nimport { ErrorWithStack, LoadingPlaceholder } from '..';\nimport { useAsyncDependency } from '../../utils/useAsyncDependency';\n\n// we only use import type so it will not be included in the bundle\nimport type { ReactMonacoEditorProps } from './types';\n\n/**\n * @internal\n * Experimental export\n **/\nexport const ReactMonacoEditorLazy = (props: ReactMonacoEditorProps) => {\n  const { loading, error, dependency } = useAsyncDependency(\n    import(/* webpackChunkName: \"react-monaco-editor\" */ './ReactMonacoEditor')\n  );\n\n  if (loading) {\n    return <LoadingPlaceholder text={''} />;\n  }\n\n  if (error) {\n    return (\n      <ErrorWithStack\n        title=\"React Monaco Editor failed to load\"\n        error={error}\n        errorInfo={{ componentStack: error?.stack || '' }}\n      />\n    );\n  }\n\n  const ReactMonacoEditor = dependency.ReactMonacoEditor;\n  return <ReactMonacoEditor {...props} />;\n};\n","// We use `import type` to guarantee it'll be erased from the JS and it doesnt accidently bundle monaco\nimport type { EditorProps } from '@monaco-editor/react';\nimport type * as monacoType from 'monaco-editor/esm/vs/editor/editor.api';\n\n// we do not allow customizing the theme.\n// (theme is complicated in Monaco, right now there is\n// a limitation where all monaco editors must have\n// the same theme, see\n// https://github.com/microsoft/monaco-editor/issues/338#issuecomment-274837186\n// )\nexport type ReactMonacoEditorProps = Omit<EditorProps, 'theme'>;\n\nexport type CodeEditorChangeHandler = (value: string) => void;\nexport type CodeEditorSuggestionProvider = () => CodeEditorSuggestionItem[];\n\nexport type { monacoType as monacoTypes };\nexport type Monaco = typeof monacoType;\nexport type MonacoEditor = monacoType.editor.IStandaloneCodeEditor;\nexport type MonacoOptions = MonacoOptionsWithGrafanaDefaults;\n\nexport interface CodeEditorProps {\n  value: string;\n  language: string;\n  width?: number | string;\n  height?: number | string;\n\n  readOnly?: boolean;\n  showMiniMap?: boolean;\n  showLineNumbers?: boolean;\n  monacoOptions?: MonacoOptions;\n\n  /**\n   * Callback before the editor has mounted that gives you raw access to monaco\n   */\n  onBeforeEditorMount?: (monaco: Monaco) => void;\n\n  /**\n   * Callback after the editor has mounted that gives you raw access to monaco\n   */\n  onEditorDidMount?: (editor: MonacoEditor, monaco: Monaco) => void;\n\n  /** Handler to be performed when editor is blurred */\n  onBlur?: CodeEditorChangeHandler;\n\n  /** Handler to be performed whenever the text inside the editor changes */\n  onChange?: CodeEditorChangeHandler;\n\n  /** Handler to be performed when Cmd/Ctrl+S is pressed */\n  onSave?: CodeEditorChangeHandler;\n\n  /**\n   * Language agnostic suggestion completions -- typically for template variables\n   */\n  getSuggestions?: CodeEditorSuggestionProvider;\n\n  containerStyles?: string;\n}\n\n/**\n * @alpha\n */\nexport enum CodeEditorSuggestionItemKind {\n  Method = 'method',\n  Field = 'field',\n  Property = 'property',\n  Constant = 'constant',\n  Text = 'text',\n}\n\n/**\n * @alpha\n */\nexport interface CodeEditorSuggestionItem {\n  /**\n   * The label of this completion item. By default\n   * this is also the text that is inserted when selecting\n   * this completion.\n   */\n  label: string;\n\n  /**\n   * The kind of this completion item. An icon is chosen\n   * by the editor based on the kind.\n   */\n  kind?: CodeEditorSuggestionItemKind;\n\n  /**\n   * A human-readable string with additional information\n   * about this item, like type or symbol information.\n   */\n  detail?: string;\n\n  /**\n   * A human-readable string that represents a doc-comment.\n   */\n  documentation?: string; // | IMarkdownString;\n\n  /**\n   * A string or snippet that should be inserted in a document when selecting\n   * this completion. When `falsy` the `label` is used.\n   */\n  insertText?: string;\n}\n\n/**\n * This interface will extend the original Monaco editor options interface\n * but changing the code comments to contain the proper default values to\n * prevent the consumer of the CodeEditor to get incorrect documentation in editor.\n */\nexport interface MonacoOptionsWithGrafanaDefaults extends monacoType.editor.IStandaloneEditorConstructionOptions {\n  /**\n   * Enable custom contextmenu.\n   * Defaults to false.\n   */\n  contextmenu?: boolean;\n  /**\n   * The number of spaces a tab is equal to.\n   * This setting is overridden based on the file contents when `detectIndentation` is on.\n   * Defaults to 4.\n   */\n  tabSize?: number;\n  /**\n   * Show code lens\n   * Defaults to false.\n   */\n  codeLens?: boolean;\n  /**\n   * Control the width of line numbers, by reserving horizontal space for rendering at least an amount of digits.\n   * Defaults to 4.\n   */\n  lineNumbersMinChars?: number;\n  /**\n   * The width reserved for line decorations (in px).\n   * Line decorations are placed between line numbers and the editor content.\n   * You can pass in a string in the format floating point followed by \"ch\". e.g. 1.3ch.\n   * Defaults to 1 * theme.spacing.gridSize.\n   */\n  lineDecorationsWidth?: number | string;\n  /**\n   * Controls if a border should be drawn around the overview ruler.\n   * Defaults to `false`.\n   */\n  overviewRulerBorder?: boolean;\n  /**\n   * Enable that the editor will install an interval to check if its container dom node size has changed.\n   * Enabling this might have a severe performance impact.\n   * Defaults to true.\n   */\n  automaticLayout?: boolean;\n}\n","import type * as monacoType from 'monaco-editor/esm/vs/editor/editor.api';\n\nimport { CodeEditorSuggestionItem, CodeEditorSuggestionItemKind, CodeEditorSuggestionProvider, Monaco } from './types';\n\n/**\n * @internal -- only exported for tests\n */\nexport function findInsertIndex(line: string): { index: number; prefix: string } {\n  for (let i = line.length - 1; i > 0; i--) {\n    const ch = line.charAt(i);\n    if (ch === '$') {\n      return {\n        index: i,\n        prefix: line.substring(i),\n      };\n    }\n\n    // Keep these seperators\n    if (ch === ' ' || ch === '\\t' || ch === '\"' || ch === \"'\") {\n      return {\n        index: i + 1,\n        prefix: line.substring(i + 1),\n      };\n    }\n  }\n  return {\n    index: 0,\n    prefix: line,\n  };\n}\n\nfunction getCompletionItems(\n  monaco: Monaco,\n  prefix: string,\n  suggestions: CodeEditorSuggestionItem[],\n  range: monacoType.IRange\n): monacoType.languages.CompletionItem[] {\n  const items: monacoType.languages.CompletionItem[] = [];\n  for (const suggestion of suggestions) {\n    if (prefix && !suggestion.label.startsWith(prefix)) {\n      continue; // skip non-matching suggestions\n    }\n\n    items.push({\n      ...suggestion,\n      kind: mapKinds(monaco, suggestion.kind),\n      range,\n      insertText: suggestion.insertText ?? suggestion.label,\n    });\n  }\n  return items;\n}\n\nfunction mapKinds(monaco: Monaco, sug?: CodeEditorSuggestionItemKind): monacoType.languages.CompletionItemKind {\n  switch (sug) {\n    case CodeEditorSuggestionItemKind.Method:\n      return monaco.languages.CompletionItemKind.Method;\n    case CodeEditorSuggestionItemKind.Field:\n      return monaco.languages.CompletionItemKind.Field;\n    case CodeEditorSuggestionItemKind.Property:\n      return monaco.languages.CompletionItemKind.Property;\n    case CodeEditorSuggestionItemKind.Constant:\n      return monaco.languages.CompletionItemKind.Constant;\n    case CodeEditorSuggestionItemKind.Text:\n      return monaco.languages.CompletionItemKind.Text;\n  }\n  return monaco.languages.CompletionItemKind.Text;\n}\n\n/**\n * @alpha\n */\nexport function registerSuggestions(\n  monaco: Monaco,\n  language: string,\n  getSuggestions: CodeEditorSuggestionProvider\n): monacoType.IDisposable | undefined {\n  if (!language || !getSuggestions) {\n    return undefined;\n  }\n  return monaco.languages.registerCompletionItemProvider(language, {\n    triggerCharacters: ['$'],\n\n    provideCompletionItems: (model, position, context) => {\n      const range = {\n        startLineNumber: position.lineNumber,\n        endLineNumber: position.lineNumber,\n        startColumn: position.column,\n        endColumn: position.column,\n      };\n\n      // Simple check if this was triggered by pressing `$`\n      if (context.triggerCharacter === '$') {\n        range.startColumn = position.column - 1;\n        return {\n          suggestions: getCompletionItems(monaco, '$', getSuggestions(), range),\n        };\n      }\n\n      // Find the replacement region\n      const currentLine = model.getValueInRange({\n        startLineNumber: position.lineNumber,\n        startColumn: 1,\n        endLineNumber: position.lineNumber,\n        endColumn: position.column,\n      });\n\n      const { index, prefix } = findInsertIndex(currentLine);\n      range.startColumn = index + 1;\n\n      const suggestions = getCompletionItems(monaco, prefix, getSuggestions(), range);\n      if (suggestions.length) {\n        // NOTE, this will replace any language provided suggestions\n        return { suggestions };\n      }\n\n      // Default language suggestions\n      return undefined;\n    },\n  });\n}\n","import { css } from '@emotion/css';\nimport type * as monacoType from 'monaco-editor/esm/vs/editor/editor.api';\nimport React, { PureComponent } from 'react';\n\nimport { GrafanaTheme2, monacoLanguageRegistry } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\n\nimport { withTheme2 } from '../../themes';\nimport { Themeable2 } from '../../types';\n\nimport { ReactMonacoEditorLazy } from './ReactMonacoEditorLazy';\nimport { registerSuggestions } from './suggestions';\nimport { CodeEditorProps, Monaco, MonacoEditor as MonacoEditorType, MonacoOptions } from './types';\n\ntype Props = CodeEditorProps & Themeable2;\n\nclass UnthemedCodeEditor extends PureComponent<Props> {\n  completionCancel?: monacoType.IDisposable;\n  monaco?: Monaco;\n\n  constructor(props: Props) {\n    super(props);\n  }\n\n  componentWillUnmount() {\n    if (this.completionCancel) {\n      this.completionCancel.dispose();\n    }\n  }\n\n  componentDidUpdate(oldProps: Props) {\n    const { getSuggestions, language } = this.props;\n\n    const newLanguage = oldProps.language !== language;\n    const newGetSuggestions = oldProps.getSuggestions !== getSuggestions;\n\n    if (newGetSuggestions || newLanguage) {\n      if (this.completionCancel) {\n        this.completionCancel.dispose();\n      }\n\n      if (!this.monaco) {\n        console.warn('Monaco instance not loaded yet');\n        return;\n      }\n\n      if (getSuggestions) {\n        this.completionCancel = registerSuggestions(this.monaco, language, getSuggestions);\n      }\n    }\n\n    if (newLanguage) {\n      this.loadCustomLanguage();\n    }\n  }\n\n  loadCustomLanguage = () => {\n    const { language } = this.props;\n\n    const customLanguage = monacoLanguageRegistry.getIfExists(language);\n\n    if (customLanguage) {\n      return customLanguage.init();\n    }\n\n    return Promise.resolve();\n  };\n\n  // This is replaced with a real function when the actual editor mounts\n  getEditorValue = () => '';\n\n  onBlur = () => {\n    const { onBlur } = this.props;\n    if (onBlur) {\n      onBlur(this.getEditorValue());\n    }\n  };\n\n  onSave = () => {\n    const { onSave } = this.props;\n    if (onSave) {\n      onSave(this.getEditorValue());\n    }\n  };\n\n  handleBeforeMount = (monaco: Monaco) => {\n    this.monaco = monaco;\n    const { language, getSuggestions, onBeforeEditorMount } = this.props;\n\n    if (getSuggestions) {\n      this.completionCancel = registerSuggestions(monaco, language, getSuggestions);\n    }\n\n    onBeforeEditorMount?.(monaco);\n  };\n\n  handleOnMount = (editor: MonacoEditorType, monaco: Monaco) => {\n    const { onChange, onEditorDidMount } = this.props;\n\n    this.getEditorValue = () => editor.getValue();\n\n    editor.addCommand(monaco.KeyMod.CtrlCmd | monaco.KeyCode.KeyS, this.onSave);\n    const languagePromise = this.loadCustomLanguage();\n\n    if (onEditorDidMount) {\n      languagePromise.then(() => onEditorDidMount(editor, monaco));\n      editor.getModel()?.onDidChangeContent(() => onChange?.(editor.getValue()));\n    }\n  };\n\n  render() {\n    const { theme, language, width, height, showMiniMap, showLineNumbers, readOnly, monacoOptions } = this.props;\n    const value = this.props.value ?? '';\n    const longText = value.length > 100;\n\n    const containerStyles = this.props.containerStyles ?? getStyles(theme).container;\n\n    const options: MonacoOptions = {\n      wordWrap: 'off',\n      tabSize: 2,\n      codeLens: false,\n      contextmenu: false,\n      minimap: {\n        enabled: longText && showMiniMap,\n        renderCharacters: false,\n      },\n\n      readOnly,\n      lineNumbersMinChars: 4,\n      lineDecorationsWidth: 1 * theme.spacing.gridSize,\n      overviewRulerBorder: false,\n      automaticLayout: true,\n      padding: {\n        top: 0.5 * theme.spacing.gridSize,\n        bottom: 0.5 * theme.spacing.gridSize,\n      },\n      fixedOverflowWidgets: true, // Ensures suggestions menu is drawn on top\n    };\n\n    if (!showLineNumbers) {\n      options.glyphMargin = false;\n      options.folding = false;\n      options.lineNumbers = 'off';\n      options.lineNumbersMinChars = 0;\n    }\n\n    return (\n      <div className={containerStyles} onBlur={this.onBlur} aria-label={selectors.components.CodeEditor.container}>\n        <ReactMonacoEditorLazy\n          width={width}\n          height={height}\n          language={language}\n          value={value}\n          options={{\n            ...options,\n            ...(monacoOptions ?? {}),\n          }}\n          beforeMount={this.handleBeforeMount}\n          onMount={this.handleOnMount}\n        />\n      </div>\n    );\n  }\n}\n\nexport const CodeEditor = withTheme2(UnthemedCodeEditor);\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    container: css`\n      border-radius: ${theme.shape.borderRadius()};\n      border: 1px solid ${theme.components.input.borderColor};\n    `,\n  };\n};\n","import { VariableSuggestion } from '@grafana/data';\n\nimport { CodeEditorSuggestionItem, CodeEditorSuggestionItemKind } from './types';\n\n/**\n * @alpha\n */\nexport function variableSuggestionToCodeEditorSuggestion(sug: VariableSuggestion): CodeEditorSuggestionItem {\n  const label = '${' + sug.value + '}';\n  const detail = sug.value === sug.label ? sug.origin : `${sug.label} / ${sug.origin}`;\n\n  return {\n    label,\n    kind: CodeEditorSuggestionItemKind.Property,\n    detail,\n    documentation: sug.documentation,\n  };\n}\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2, locale } from '@grafana/data';\n\nimport { stylesFactory, useStyles2 } from '../../themes';\n\nconst getStyles = stylesFactory((theme: GrafanaTheme2) => {\n  return {\n    counter: css`\n      label: counter;\n      margin-left: ${theme.spacing(1)};\n      border-radius: ${theme.spacing(3)};\n      background-color: ${theme.colors.action.hover};\n      padding: ${theme.spacing(0.25, 1)};\n      color: ${theme.colors.text.secondary};\n      font-weight: ${theme.typography.fontWeightMedium};\n      font-size: ${theme.typography.size.sm};\n    `,\n  };\n});\n\nexport interface CounterProps {\n  value: number;\n}\n\nexport const Counter = ({ value }: CounterProps) => {\n  const styles = useStyles2(getStyles);\n\n  return <span className={styles.counter}>{locale(value, 0).text}</span>;\n};\n","import { css, cx } from '@emotion/css';\nimport React, { HTMLProps } from 'react';\n\nimport { GrafanaTheme2, NavModelItem } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\n\nimport { useStyles2 } from '../../themes';\nimport { getFocusStyles } from '../../themes/mixins';\nimport { IconName } from '../../types';\nimport { Icon } from '../Icon/Icon';\n\nimport { Counter } from './Counter';\n\nexport interface TabProps extends HTMLProps<HTMLAnchorElement> {\n  label: string;\n  active?: boolean;\n  /** When provided, it is possible to use the tab as a hyperlink. Use in cases where the tabs update location. */\n  href?: string;\n  icon?: IconName;\n  onChangeTab?: (event?: React.MouseEvent<HTMLAnchorElement>) => void;\n  /** A number rendered next to the text. Usually used to display the number of items in a tab's view. */\n  counter?: number | null;\n  /** Extra content, displayed after the tab label and counter */\n  suffix?: NavModelItem['tabSuffix'];\n}\n\nexport const Tab = React.forwardRef<HTMLAnchorElement, TabProps>(\n  ({ label, active, icon, onChangeTab, counter, suffix: Suffix, className, href, ...otherProps }, ref) => {\n    const tabsStyles = useStyles2(getStyles);\n    const content = () => (\n      <>\n        {icon && <Icon name={icon} />}\n        {label}\n        {typeof counter === 'number' && <Counter value={counter} />}\n        {Suffix && <Suffix className={tabsStyles.suffix} />}\n      </>\n    );\n\n    const linkClass = cx(tabsStyles.link, active ? tabsStyles.activeStyle : tabsStyles.notActive);\n\n    return (\n      <div className={tabsStyles.item}>\n        <a\n          // in case there is no href '#' is set in order to maintain a11y\n          href={href ? href : '#'}\n          className={linkClass}\n          {...otherProps}\n          onClick={onChangeTab}\n          aria-label={otherProps['aria-label'] || selectors.components.Tab.title(label)}\n          role=\"tab\"\n          aria-selected={active}\n          ref={ref}\n        >\n          {content()}\n        </a>\n      </div>\n    );\n  }\n);\n\nTab.displayName = 'Tab';\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    item: css`\n      list-style: none;\n      position: relative;\n      display: flex;\n      white-space: nowrap;\n    `,\n    link: css`\n      color: ${theme.colors.text.secondary};\n      padding: ${theme.spacing(1.5, 2, 1)};\n      display: block;\n      height: 100%;\n\n      svg {\n        margin-right: ${theme.spacing(1)};\n      }\n\n      &:focus-visible {\n        ${getFocusStyles(theme)}\n      }\n\n      &::before {\n        display: block;\n        content: ' ';\n        position: absolute;\n        left: 0;\n        right: 0;\n        height: 4px;\n        border-radius: ${theme.shape.radius.default};\n        bottom: 0px;\n      }\n    `,\n    notActive: css`\n      a:hover,\n      &:hover,\n      &:focus {\n        color: ${theme.colors.text.primary};\n\n        &::before {\n          background-color: ${theme.colors.action.hover};\n        }\n      }\n    `,\n    activeStyle: css`\n      label: activeTabStyle;\n      color: ${theme.colors.text.primary};\n      overflow: hidden;\n\n      a {\n        color: ${theme.colors.text.primary};\n      }\n\n      &::before {\n        background-image: ${theme.colors.gradients.brandHorizontal};\n      }\n    `,\n    suffix: css`\n      margin-left: ${theme.spacing(1)};\n    `,\n  };\n};\n","import { css, cx } from '@emotion/css';\nimport React, { ReactNode } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { stylesFactory, useTheme2 } from '../../themes';\n\nexport interface Props {\n  /** Children should be a single <Tab /> or an array of <Tab /> */\n  children: ReactNode;\n  className?: string;\n  /** For hiding the bottom border (on PageHeader for example) */\n  hideBorder?: boolean;\n}\n\nconst getTabsBarStyles = stylesFactory((theme: GrafanaTheme2, hideBorder = false) => {\n  return {\n    tabsWrapper:\n      !hideBorder &&\n      css`\n        border-bottom: 1px solid ${theme.colors.border.weak};\n      `,\n    tabs: css`\n      position: relative;\n      display: flex;\n      height: ${theme.components.menuTabs.height}px;\n    `,\n  };\n});\n\nexport const TabsBar = React.forwardRef<HTMLDivElement, Props>(({ children, className, hideBorder }, ref) => {\n  const theme = useTheme2();\n  const tabsStyles = getTabsBarStyles(theme, hideBorder);\n\n  return (\n    <div className={cx(tabsStyles.tabsWrapper, className)} ref={ref}>\n      <div className={tabsStyles.tabs} role=\"tablist\">\n        {children}\n      </div>\n    </div>\n  );\n});\n\nTabsBar.displayName = 'TabsBar';\n","import React from 'react';\n\nimport { NavModelItem } from '@grafana/data';\n\nimport { IconName } from '../../types';\nimport { Tab } from '../Tabs/Tab';\nimport { TabsBar } from '../Tabs/TabsBar';\n\nimport { ModalHeader } from './ModalHeader';\n\ninterface ModalTab {\n  value: string;\n  label: string;\n  icon?: IconName;\n  tabSuffix?: NavModelItem['tabSuffix'];\n}\n\ninterface Props {\n  icon: IconName;\n  title: string;\n  tabs: ModalTab[];\n  activeTab: string;\n  onChangeTab(tab: ModalTab): void;\n}\n\nexport const ModalTabsHeader = ({ icon, title, tabs, activeTab, onChangeTab }: Props) => {\n  return (\n    <ModalHeader icon={icon} title={title}>\n      <TabsBar hideBorder={true}>\n        {tabs.map((t, index) => {\n          return (\n            <Tab\n              key={`${t.value}-${index}`}\n              label={t.label}\n              icon={t.icon}\n              suffix={t.tabSuffix}\n              active={t.value === activeTab}\n              onChangeTab={() => onChangeTab(t)}\n            />\n          );\n        })}\n      </TabsBar>\n    </ModalHeader>\n  );\n};\n","import React from 'react';\n\nimport { IconName } from '../../types';\n\ninterface Props {\n  /** @deprecated */\n  icon?: IconName;\n  /** @deprecated */\n  iconClass?: string;\n}\n\n/** @internal */\nexport const ModalTabContent = ({ children }: React.PropsWithChildren<Props>) => {\n  return (\n    <div className=\"share-modal-body\">\n      <div className=\"share-modal-header\">\n        <div className=\"share-modal-content\">{children}</div>\n      </div>\n    </div>\n  );\n};\n","import React, { Component } from 'react';\n\ninterface ModalsContextState {\n  component: React.ComponentType<any> | null;\n  props: any;\n  showModal: <T>(component: React.ComponentType<T>, props: T) => void;\n  hideModal: () => void;\n}\n\nexport const ModalsContext = React.createContext<ModalsContextState>({\n  component: null,\n  props: {},\n  showModal: () => {},\n  hideModal: () => {},\n});\n\ninterface ModalsProviderProps {\n  children: React.ReactNode;\n  /** Set default component to render as modal. Useful when rendering modals from Angular */\n  component?: React.ComponentType<any> | null;\n  /** Set default component props. Useful when rendering modals from Angular */\n  props?: any;\n}\n\nexport class ModalsProvider extends Component<ModalsProviderProps, ModalsContextState> {\n  constructor(props: ModalsProviderProps) {\n    super(props);\n    this.state = {\n      component: props.component || null,\n      props: props.props || {},\n      showModal: this.showModal,\n      hideModal: this.hideModal,\n    };\n  }\n\n  showModal = (component: React.ComponentType<any>, props: any) => {\n    this.setState({\n      component,\n      props,\n    });\n  };\n\n  hideModal = () => {\n    this.setState({\n      component: null,\n      props: {},\n    });\n  };\n\n  render() {\n    return <ModalsContext.Provider value={this.state}>{this.props.children}</ModalsContext.Provider>;\n  }\n}\n\nexport const ModalRoot = () => (\n  <ModalsContext.Consumer>\n    {({ component: Component, props }) => {\n      return Component ? <Component {...props} /> : null;\n    }}\n  </ModalsContext.Consumer>\n);\n\nexport const ModalsController = ModalsContext.Consumer;\n","import { css, cx } from '@emotion/css';\nimport React, { ReactNode } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\n\nimport { Link, ToolbarButtonRow } from '..';\nimport { useStyles2 } from '../../themes/ThemeContext';\nimport { getFocusStyles } from '../../themes/mixins';\nimport { IconName } from '../../types';\nimport { Icon } from '../Icon/Icon';\nimport { IconButton } from '../IconButton/IconButton';\n\nexport interface Props {\n  pageIcon?: IconName;\n  title?: string;\n  section?: string;\n  parent?: string;\n  onGoBack?: () => void;\n  titleHref?: string;\n  parentHref?: string;\n  leftItems?: ReactNode[];\n  children?: ReactNode;\n  className?: string;\n  isFullscreen?: boolean;\n  'aria-label'?: string;\n  buttonOverflowAlignment?: 'left' | 'right';\n  /**\n   * Forces left items to be visible on small screens.\n   * By default left items are hidden on small screens.\n   */\n  forceShowLeftItems?: boolean;\n}\n\n/** @alpha */\nexport const PageToolbar = React.memo(\n  ({\n    title,\n    section,\n    parent,\n    pageIcon,\n    onGoBack,\n    children,\n    titleHref,\n    parentHref,\n    leftItems,\n    isFullscreen,\n    className,\n    /** main nav-container aria-label **/\n    'aria-label': ariaLabel,\n    buttonOverflowAlignment = 'right',\n    forceShowLeftItems = false,\n  }: Props) => {\n    const styles = useStyles2(getStyles);\n\n    /**\n     * .page-toolbar css class is used for some legacy css view modes (TV/Kiosk) and\n     * media queries for mobile view when toolbar needs left padding to make room\n     * for mobile menu icon. This logic hopefully can be changed when we move to a full react\n     * app and change how the app side menu & mobile menu is rendered.\n     */\n    const mainStyle = cx(\n      'page-toolbar',\n      styles.toolbar,\n      {\n        ['page-toolbar--fullscreen']: isFullscreen,\n        [styles.noPageIcon]: !pageIcon,\n      },\n      className\n    );\n\n    const titleEl = (\n      <>\n        <span className={styles.truncateText}>{title}</span>\n        {section && <span className={styles.pre}> / {section}</span>}\n      </>\n    );\n\n    return (\n      <nav className={mainStyle} aria-label={ariaLabel}>\n        <div className={styles.leftWrapper}>\n          {pageIcon && !onGoBack && (\n            <div className={styles.pageIcon}>\n              <Icon name={pageIcon} size=\"lg\" aria-hidden />\n            </div>\n          )}\n          {onGoBack && (\n            <div className={styles.pageIcon}>\n              <IconButton\n                name=\"arrow-left\"\n                tooltip=\"Go back (Esc)\"\n                tooltipPlacement=\"bottom\"\n                size=\"xxl\"\n                aria-label={selectors.components.BackButton.backArrow}\n                onClick={onGoBack}\n              />\n            </div>\n          )}\n          <nav aria-label=\"Search links\" className={styles.navElement}>\n            {parent && parentHref && (\n              <>\n                <Link\n                  aria-label={`Search dashboard in the ${parent} folder`}\n                  className={cx(styles.titleText, styles.parentLink, styles.titleLink, styles.truncateText)}\n                  href={parentHref}\n                >\n                  {parent} <span className={styles.parentIcon}></span>\n                </Link>\n                {titleHref && (\n                  <span className={cx(styles.titleText, styles.titleDivider)} aria-hidden>\n                    /\n                  </span>\n                )}\n              </>\n            )}\n\n            {(title || Boolean(leftItems?.length)) && (\n              <div className={styles.titleWrapper}>\n                {title && (\n                  <h1 className={styles.h1Styles}>\n                    {titleHref ? (\n                      <Link\n                        aria-label=\"Search dashboard by name\"\n                        className={cx(styles.titleText, styles.titleLink)}\n                        href={titleHref}\n                      >\n                        {titleEl}\n                      </Link>\n                    ) : (\n                      <div className={styles.titleText}>{titleEl}</div>\n                    )}\n                  </h1>\n                )}\n\n                {leftItems?.map((child, index) => (\n                  <div\n                    className={cx(styles.leftActionItem, { [styles.forceShowLeftActionItems]: forceShowLeftItems })}\n                    key={index}\n                  >\n                    {child}\n                  </div>\n                ))}\n              </div>\n            )}\n          </nav>\n        </div>\n        <ToolbarButtonRow alignment={buttonOverflowAlignment}>\n          {React.Children.toArray(children).filter(Boolean)}\n        </ToolbarButtonRow>\n      </nav>\n    );\n  }\n);\n\nPageToolbar.displayName = 'PageToolbar';\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  const { spacing, typography } = theme;\n\n  const focusStyle = getFocusStyles(theme);\n\n  return {\n    pre: css`\n      white-space: pre;\n    `,\n    toolbar: css`\n      align-items: center;\n      background: ${theme.colors.background.canvas};\n      display: flex;\n      gap: ${theme.spacing(2)};\n      justify-content: space-between;\n      padding: ${theme.spacing(1.5, 2)};\n\n      ${theme.breakpoints.down('md')} {\n        padding-left: 53px;\n      }\n    `,\n    noPageIcon: css`\n      ${theme.breakpoints.down('md')} {\n        padding-left: ${theme.spacing(2)};\n      }\n    `,\n    leftWrapper: css`\n      display: flex;\n      flex-wrap: nowrap;\n      max-width: 70%;\n    `,\n    pageIcon: css`\n      display: none;\n      ${theme.breakpoints.up('sm')} {\n        display: flex;\n        padding-right: ${theme.spacing(1)};\n        align-items: center;\n      }\n    `,\n    truncateText: css`\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n    `,\n    titleWrapper: css`\n      display: flex;\n      margin: 0;\n      min-width: 0;\n    `,\n    navElement: css`\n      display: flex;\n      align-items: center;\n      min-width: 0;\n    `,\n    h1Styles: css`\n      margin: ${spacing(0, 1, 0, 0)};\n      line-height: inherit;\n      flex-grow: 1;\n      min-width: 0;\n    `,\n    parentIcon: css`\n      margin-left: ${theme.spacing(0.5)};\n    `,\n    titleText: css`\n      display: flex;\n      font-size: ${typography.size.lg};\n      margin: 0;\n      max-width: 300px;\n      border-radius: ${theme.shape.radius.default};\n    `,\n    titleLink: css`\n      &:focus-visible {\n        ${focusStyle}\n      }\n    `,\n    titleDivider: css`\n      padding: ${spacing(0, 0.5, 0, 0.5)};\n      display: none;\n      ${theme.breakpoints.up('md')} {\n        display: unset;\n      }\n    `,\n    parentLink: css`\n      display: none;\n      ${theme.breakpoints.up('md')} {\n        display: unset;\n        flex: 1;\n      }\n    `,\n    leftActionItem: css`\n      display: none;\n      align-items: center;\n      padding-right: ${spacing(0.5)};\n      ${theme.breakpoints.up('md')} {\n        display: flex;\n      }\n    `,\n    forceShowLeftActionItems: css`\n      display: flex;\n    `,\n  };\n};\n","import { isEqual } from 'lodash';\nimport { PureComponent } from 'react';\nimport { interval, Subscription, Subject, of, NEVER } from 'rxjs';\nimport { tap, switchMap } from 'rxjs/operators';\n\nimport { stringToMs, SelectableValue } from '@grafana/data';\n\nimport { RefreshPicker } from '../RefreshPicker/RefreshPicker';\n\nexport function getIntervalFromString(strInterval: string): SelectableValue<number> {\n  return {\n    label: strInterval,\n    value: stringToMs(strInterval),\n  };\n}\n\ninterface Props {\n  func: () => unknown;\n  loading: boolean;\n  interval: string;\n}\n\nexport class SetInterval extends PureComponent<Props> {\n  private propsSubject: Subject<Props>;\n  private subscription: Subscription | null;\n\n  constructor(props: Props) {\n    super(props);\n    this.propsSubject = new Subject<Props>();\n    this.subscription = null;\n  }\n\n  componentDidMount() {\n    // Creating a subscription to propsSubject. This subject pushes values every time\n    // SetInterval's props change\n    this.subscription = this.propsSubject\n      .pipe(\n        // switchMap creates a new observables based on the input stream,\n        // which becomes part of the propsSubject stream\n        switchMap((props) => {\n          // If the query is live, empty value is emitted. `of` creates single value,\n          // which is merged to propsSubject stream\n          if (RefreshPicker.isLive(props.interval)) {\n            return of({});\n          }\n\n          // When query is loading, a new stream is merged. But it's a stream that emits no values(NEVER),\n          // hence next call of this function will happen when query changes, and new props are passed into this component\n          // When query is NOT loading, a new value is emitted, this time it's an interval value,\n          // which makes tap function below execute on that interval basis.\n          return props.loading ? NEVER : interval(stringToMs(props.interval));\n        }),\n        // tap will execute function passed via func prop\n        // * on value from `of` stream merged if query is live\n        // * on specified interval (triggered by values emitted by interval)\n        tap(() => this.props.func())\n      )\n      .subscribe();\n\n    // When component has mounted, propsSubject emits its first value\n    this.propsSubject.next(this.props);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (\n      (RefreshPicker.isLive(prevProps.interval) && RefreshPicker.isLive(this.props.interval)) ||\n      isEqual(prevProps, this.props)\n    ) {\n      return;\n    }\n    // if props changed, a new value is emitted from propsSubject\n    this.propsSubject.next(this.props);\n  }\n\n  componentWillUnmount() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n\n    this.propsSubject.unsubscribe();\n  }\n\n  render(): null {\n    return null;\n  }\n}\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { KeyValue } from '@grafana/data';\n\nimport { FooterItem } from './types';\n\nexport interface FooterProps {\n  value: FooterItem;\n}\n\nexport const FooterCell = (props: FooterProps) => {\n  const cell = css`\n    width: 100%;\n    list-style: none;\n  `;\n\n  const list = css`\n    width: 100%;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n  `;\n\n  if (props.value && !Array.isArray(props.value)) {\n    return <span>{props.value}</span>;\n  }\n\n  if (props.value && Array.isArray(props.value) && props.value.length > 0) {\n    return (\n      <ul className={cell}>\n        {props.value.map((v: KeyValue<string>, i) => {\n          const key = Object.keys(v)[0];\n          return (\n            <li className={list} key={i}>\n              <span>{key}</span>\n              <span>{v[key]}</span>\n            </li>\n          );\n        })}\n      </ul>\n    );\n  }\n\n  return EmptyCell;\n};\n\nexport const EmptyCell = () => {\n  return <span>&nbsp;</span>;\n};\n","import React from 'react';\nimport { ColumnInstance, HeaderGroup } from 'react-table';\n\nimport { fieldReducers, ReducerID } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\n\nimport { EmptyCell, FooterCell } from './FooterCell';\nimport { TableStyles } from './styles';\nimport { FooterItem } from './types';\n\nexport interface FooterRowProps {\n  totalColumnsWidth: number;\n  footerGroups: HeaderGroup[];\n  footerValues: FooterItem[];\n  isPaginationVisible: boolean;\n  tableStyles: TableStyles;\n}\n\nexport function FooterRow(props: FooterRowProps) {\n  const { totalColumnsWidth, footerGroups, isPaginationVisible, tableStyles } = props;\n  const e2eSelectorsTable = selectors.components.Panels.Visualization.Table;\n\n  return (\n    <div\n      style={{\n        position: isPaginationVisible ? 'relative' : 'absolute',\n        width: totalColumnsWidth ? `${totalColumnsWidth}px` : '100%',\n        bottom: '0px',\n      }}\n    >\n      {footerGroups.map((footerGroup: HeaderGroup) => {\n        const { key, ...footerGroupProps } = footerGroup.getFooterGroupProps();\n        return (\n          <div className={tableStyles.tfoot} {...footerGroupProps} key={key} data-testid={e2eSelectorsTable.footer}>\n            {footerGroup.headers.map((column: ColumnInstance) => renderFooterCell(column, tableStyles))}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nfunction renderFooterCell(column: ColumnInstance, tableStyles: TableStyles) {\n  const footerProps = column.getHeaderProps();\n\n  if (!footerProps) {\n    return null;\n  }\n\n  footerProps.style = footerProps.style ?? {};\n  footerProps.style.position = 'absolute';\n  footerProps.style.justifyContent = (column as any).justifyContent;\n\n  return (\n    <div className={tableStyles.headerCell} {...footerProps}>\n      {column.render('Footer')}\n    </div>\n  );\n}\n\nexport function getFooterValue(index: number, footerValues?: FooterItem[], isCountRowsSet?: boolean) {\n  if (footerValues === undefined) {\n    return EmptyCell;\n  }\n\n  if (isCountRowsSet) {\n    if (footerValues[index] === undefined) {\n      return EmptyCell;\n    }\n\n    const key = fieldReducers.get(ReducerID.count).name;\n\n    return FooterCell({ value: [{ [key]: String(footerValues[index]) }] });\n  }\n\n  return FooterCell({ value: footerValues[index] });\n}\n","import { availableIconsIndex, Field, FieldType, IconName } from '@grafana/data';\n\nimport { ComponentSize } from './size';\n\n// Exported from here for backwards compatibility\nexport type { IconName } from '@grafana/data';\nexport { toIconName } from '@grafana/data';\n\nexport type IconType = 'mono' | 'default' | 'solid';\nexport type IconSize = ComponentSize | 'xl' | 'xxl' | 'xxxl';\n\n// function remains for backwards compatibility\nexport const getAvailableIcons = () => Object.keys(availableIconsIndex);\n\n/**\n * Get the icon for a given field\n */\nexport function getFieldTypeIcon(field?: Field): IconName {\n  return getFieldTypeIconName(field?.type);\n}\n\n/** Get an icon for a given field type  */\nexport function getFieldTypeIconName(type?: FieldType): IconName {\n  if (type) {\n    switch (type) {\n      case FieldType.time:\n        return 'clock-nine';\n      case FieldType.string:\n        return 'font';\n      case FieldType.number:\n        return 'calculator-alt';\n      case FieldType.boolean:\n        return 'toggle-on';\n      case FieldType.trace:\n        return 'info-circle';\n      case FieldType.enum:\n        return 'list-ol';\n      case FieldType.geo:\n        return 'map-marker';\n      case FieldType.other:\n        return 'brackets-curly';\n    }\n  }\n  return 'question-circle';\n}\n","import { css } from '@emotion/css';\nimport React, { useCallback, useMemo, useState } from 'react';\nimport { FixedSizeList as List } from 'react-window';\n\nimport { GrafanaTheme2, SelectableValue } from '@grafana/data';\n\nimport { Checkbox, FilterInput, Label, VerticalGroup } from '..';\nimport { stylesFactory, useTheme2 } from '../../themes';\n\ninterface Props {\n  values: SelectableValue[];\n  options: SelectableValue[];\n  onChange: (options: SelectableValue[]) => void;\n  caseSensitive?: boolean;\n}\n\nconst ITEM_HEIGHT = 28;\nconst MIN_HEIGHT = ITEM_HEIGHT * 5;\n\nexport const FilterList = ({ options, values, caseSensitive, onChange }: Props) => {\n  const theme = useTheme2();\n  const styles = getStyles(theme);\n  const [searchFilter, setSearchFilter] = useState('');\n  const regex = useMemo(() => new RegExp(searchFilter, caseSensitive ? undefined : 'i'), [searchFilter, caseSensitive]);\n  const items = useMemo(\n    () =>\n      options.filter((option) => {\n        if (option.label === undefined) {\n          return false;\n        }\n        return regex.test(option.label);\n      }),\n    [options, regex]\n  );\n  const gutter = theme.spacing.gridSize;\n  const height = useMemo(() => Math.min(items.length * ITEM_HEIGHT, MIN_HEIGHT) + gutter, [gutter, items.length]);\n\n  const onInputChange = useCallback(\n    (v: string) => {\n      setSearchFilter(v);\n    },\n    [setSearchFilter]\n  );\n\n  const onCheckedChanged = useCallback(\n    (option: SelectableValue) => (event: React.FormEvent<HTMLInputElement>) => {\n      const newValues = event.currentTarget.checked\n        ? values.concat(option)\n        : values.filter((c) => c.value !== option.value);\n\n      onChange(newValues);\n    },\n    [onChange, values]\n  );\n\n  return (\n    <VerticalGroup spacing=\"md\">\n      <FilterInput placeholder=\"Filter values\" onChange={onInputChange} value={searchFilter} />\n      {!items.length && <Label>No values</Label>}\n      {items.length && (\n        <List\n          height={height}\n          itemCount={items.length}\n          itemSize={ITEM_HEIGHT}\n          width=\"100%\"\n          className={styles.filterList}\n        >\n          {({ index, style }) => {\n            const option = items[index];\n            const { value, label } = option;\n            const isChecked = values.find((s) => s.value === value) !== undefined;\n\n            return (\n              <div className={styles.filterListRow} style={style} title={label}>\n                <Checkbox value={isChecked} label={label} onChange={onCheckedChanged(option)} />\n              </div>\n            );\n          }}\n        </List>\n      )}\n    </VerticalGroup>\n  );\n};\n\nconst getStyles = stylesFactory((theme: GrafanaTheme2) => ({\n  filterList: css`\n    label: filterList;\n  `,\n  filterListRow: css`\n    label: filterListRow;\n    cursor: pointer;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    padding: ${theme.spacing(0.5)};\n\n    :hover {\n      background-color: ${theme.colors.action.hover};\n    }\n  `,\n}));\n","import React, { CSSProperties, HTMLProps } from 'react';\n\nimport { FormattedValue } from '@grafana/data';\n\nexport interface Props extends Omit<HTMLProps<HTMLDivElement>, 'className' | 'value' | 'style'> {\n  value: FormattedValue;\n  className?: string;\n  style?: CSSProperties;\n}\n\nfunction fontSizeReductionFactor(fontSize: number) {\n  if (fontSize < 20) {\n    return 0.9;\n  }\n  if (fontSize < 26) {\n    return 0.8;\n  }\n  return 0.6;\n}\n\nexport const FormattedValueDisplay = ({ value, className, style, ...htmlProps }: Props) => {\n  const hasPrefix = (value.prefix ?? '').length > 0;\n  const hasSuffix = (value.suffix ?? '').length > 0;\n  let suffixStyle;\n\n  if (style && style.fontSize && typeof style.fontSize === 'number') {\n    const fontSize = style.fontSize;\n    const reductionFactor = fontSizeReductionFactor(fontSize);\n    suffixStyle = { fontSize: fontSize * reductionFactor };\n  }\n\n  return (\n    <div className={className} style={style} {...htmlProps}>\n      <div>\n        {hasPrefix && <span>{value.prefix}</span>}\n        <span>{value.text}</span>\n        {hasSuffix && <span style={suffixStyle}>{value.suffix}</span>}\n      </div>\n    </div>\n  );\n};\n\nFormattedValueDisplay.displayName = 'FormattedDisplayValue';\n","// Library\nimport { cx } from '@emotion/css';\nimport React, { CSSProperties, PureComponent, ReactNode } from 'react';\nimport tinycolor from 'tinycolor2';\n\nimport {\n  DisplayProcessor,\n  DisplayValue,\n  DisplayValueAlignmentFactors,\n  FALLBACK_COLOR,\n  FieldColorModeId,\n  FieldConfig,\n  FormattedValue,\n  formattedValueToString,\n  GAUGE_DEFAULT_MAXIMUM,\n  GAUGE_DEFAULT_MINIMUM,\n  getFieldColorMode,\n  ThresholdsMode,\n  TimeSeriesValue,\n  VizOrientation,\n} from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { BarGaugeDisplayMode, BarGaugeValueMode, VizTextDisplayOptions } from '@grafana/schema';\n\nimport { Themeable2 } from '../../types';\nimport { calculateFontSize, measureText } from '../../utils/measureText';\nimport { clearButtonStyles } from '../Button';\nimport { FormattedValueDisplay } from '../FormattedValueDisplay/FormattedValueDisplay';\n\nconst MIN_VALUE_HEIGHT = 18;\nconst MAX_VALUE_HEIGHT = 50;\nconst MAX_VALUE_WIDTH = 150;\nconst TITLE_LINE_HEIGHT = 1.5;\nconst VALUE_LINE_HEIGHT = 1;\nconst VALUE_LEFT_PADDING = 10;\n\nexport interface Props extends Themeable2 {\n  height: number;\n  width: number;\n  field: FieldConfig;\n  display?: DisplayProcessor;\n  value: DisplayValue;\n  orientation: VizOrientation;\n  text?: VizTextDisplayOptions;\n  itemSpacing?: number;\n  lcdCellWidth?: number;\n  displayMode: BarGaugeDisplayMode;\n  onClick?: React.MouseEventHandler<HTMLElement>;\n  className?: string;\n  showUnfilled?: boolean;\n  alignmentFactors?: DisplayValueAlignmentFactors;\n  valueDisplayMode?: BarGaugeValueMode;\n}\n\nexport class BarGauge extends PureComponent<Props> {\n  static defaultProps: Partial<Props> = {\n    lcdCellWidth: 12,\n    value: {\n      text: '100',\n      numeric: 100,\n    },\n    displayMode: BarGaugeDisplayMode.Gradient,\n    orientation: VizOrientation.Horizontal,\n    field: {\n      min: 0,\n      max: 100,\n      thresholds: {\n        mode: ThresholdsMode.Absolute,\n        steps: [],\n      },\n    },\n    itemSpacing: 8,\n    showUnfilled: true,\n  };\n\n  render() {\n    const { onClick, className, theme } = this.props;\n    const { title } = this.props.value;\n    const styles = getTitleStyles(this.props);\n\n    if (onClick) {\n      return (\n        <button\n          type=\"button\"\n          style={styles.wrapper}\n          onClick={onClick}\n          className={cx(clearButtonStyles(theme), className)}\n        >\n          <div style={styles.title}>{title}</div>\n          {this.renderBarAndValue()}\n        </button>\n      );\n    }\n\n    return (\n      <div style={styles.wrapper} className={className}>\n        {title && <div style={styles.title}>{title}</div>}\n        {this.renderBarAndValue()}\n      </div>\n    );\n  }\n\n  renderBarAndValue() {\n    switch (this.props.displayMode) {\n      case 'lcd':\n        return this.renderRetroBars();\n      case 'basic':\n      case 'gradient':\n      default:\n        return this.renderBasicAndGradientBars();\n    }\n  }\n\n  renderBasicAndGradientBars(): ReactNode {\n    const { value, showUnfilled, valueDisplayMode } = this.props;\n\n    const styles = getBasicAndGradientStyles(this.props);\n\n    return (\n      <div style={styles.wrapper}>\n        {valueDisplayMode !== BarGaugeValueMode.Hidden && (\n          <FormattedValueDisplay\n            data-testid={selectors.components.Panels.Visualization.BarGauge.valueV2}\n            value={value}\n            style={styles.value}\n          />\n        )}\n        {showUnfilled && <div style={styles.emptyBar} />}\n        <div style={styles.bar} />\n      </div>\n    );\n  }\n\n  renderRetroBars(): ReactNode {\n    const {\n      display,\n      field,\n      value,\n      itemSpacing,\n      alignmentFactors,\n      orientation,\n      lcdCellWidth,\n      text,\n      valueDisplayMode,\n      theme,\n    } = this.props;\n    const { valueHeight, valueWidth, maxBarHeight, maxBarWidth, wrapperWidth, wrapperHeight } =\n      calculateBarAndValueDimensions(this.props);\n    const minValue = field.min ?? GAUGE_DEFAULT_MINIMUM;\n    const maxValue = field.max ?? GAUGE_DEFAULT_MAXIMUM;\n\n    const isVert = isVertical(orientation);\n    const valueRange = maxValue - minValue;\n    const maxSize = isVert ? maxBarHeight : maxBarWidth;\n    const cellSpacing = itemSpacing!;\n    const cellCount = Math.floor(maxSize / lcdCellWidth!);\n    const cellSize = Math.floor((maxSize - cellSpacing * cellCount) / cellCount);\n    const valueColor = getTextValueColor(this.props);\n\n    const valueToBaseSizeOn = alignmentFactors ? alignmentFactors : value;\n    const valueStyles = getValueStyles(valueToBaseSizeOn, valueColor, valueWidth, valueHeight, orientation, text);\n\n    const containerStyles: CSSProperties = {\n      width: `${wrapperWidth}px`,\n      height: `${wrapperHeight}px`,\n      display: 'flex',\n    };\n\n    if (isVert) {\n      containerStyles.flexDirection = 'column-reverse';\n      containerStyles.alignItems = 'center';\n    } else {\n      containerStyles.flexDirection = 'row';\n      containerStyles.alignItems = 'center';\n      valueStyles.justifyContent = 'flex-end';\n    }\n\n    const cells: JSX.Element[] = [];\n\n    for (let i = 0; i < cellCount; i++) {\n      const currentValue = minValue + (valueRange / cellCount) * i;\n      const cellColor = getCellColor(currentValue, value, display);\n      const cellStyles: CSSProperties = {\n        borderRadius: theme.shape.radius.default,\n      };\n\n      if (cellColor.isLit) {\n        cellStyles.backgroundImage = `radial-gradient(${cellColor.background} 10%, ${cellColor.backgroundShade})`;\n      } else {\n        cellStyles.backgroundColor = cellColor.background;\n      }\n\n      if (isVert) {\n        cellStyles.height = `${cellSize}px`;\n        cellStyles.width = `${maxBarWidth}px`;\n        cellStyles.marginTop = `${cellSpacing}px`;\n      } else {\n        cellStyles.width = `${cellSize}px`;\n        cellStyles.height = `${maxBarHeight}px`;\n        cellStyles.marginRight = `${cellSpacing}px`;\n      }\n\n      cells.push(<div key={i.toString()} style={cellStyles} />);\n    }\n\n    return (\n      <div style={containerStyles}>\n        {cells}\n        {valueDisplayMode !== BarGaugeValueMode.Hidden && (\n          <FormattedValueDisplay\n            data-testid={selectors.components.Panels.Visualization.BarGauge.valueV2}\n            value={value}\n            style={valueStyles}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\ninterface CellColors {\n  background: string;\n  backgroundShade?: string;\n  border: string;\n  isLit?: boolean;\n}\n\ninterface TitleDimensions {\n  fontSize: number;\n  placement: 'above' | 'left' | 'below';\n  width: number;\n  height: number;\n}\n\nfunction isVertical(orientation: VizOrientation) {\n  return orientation === VizOrientation.Vertical;\n}\n\nfunction calculateTitleDimensions(props: Props): TitleDimensions {\n  const { height, width, alignmentFactors, orientation, text } = props;\n  const title = alignmentFactors ? alignmentFactors.title : props.value.title;\n\n  if (!title) {\n    return { fontSize: 0, width: 0, height: 0, placement: 'above' };\n  }\n\n  if (isVertical(orientation)) {\n    const fontSize = text?.titleSize ?? 14;\n    return {\n      fontSize: fontSize,\n      width: width,\n      height: fontSize * TITLE_LINE_HEIGHT,\n      placement: 'below',\n    };\n  }\n\n  // if height above 40 put text to above bar\n  if (height > 40) {\n    if (text?.titleSize) {\n      return {\n        fontSize: text?.titleSize,\n        width: 0,\n        height: text.titleSize * TITLE_LINE_HEIGHT,\n        placement: 'above',\n      };\n    }\n\n    const maxTitleHeightRatio = 0.45;\n    const titleHeight = Math.max(Math.min(height * maxTitleHeightRatio, MAX_VALUE_HEIGHT), 17);\n\n    return {\n      fontSize: titleHeight / TITLE_LINE_HEIGHT,\n      width: 0,\n      height: titleHeight,\n      placement: 'above',\n    };\n  }\n\n  // title to left of bar scenario\n  const maxTitleHeightRatio = 0.6;\n  const titleHeight = Math.max(height * maxTitleHeightRatio, MIN_VALUE_HEIGHT);\n  const titleFontSize = titleHeight / TITLE_LINE_HEIGHT;\n  const textSize = measureText(title, titleFontSize);\n\n  // Do not allow title to take up more than 40% width\n  const textWidth = Math.min(textSize.width + 15, width * 0.4);\n\n  return {\n    fontSize: text?.titleSize ?? titleFontSize,\n    height: 0,\n    width: textWidth,\n    placement: 'left',\n  };\n}\n\nexport function getTitleStyles(props: Props): { wrapper: CSSProperties; title: CSSProperties } {\n  const wrapperStyles: CSSProperties = {\n    display: 'flex',\n    overflow: 'hidden',\n    width: '100%',\n  };\n\n  const titleDim = calculateTitleDimensions(props);\n\n  const titleStyles: CSSProperties = {\n    fontSize: `${titleDim.fontSize}px`,\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    width: '100%',\n    alignItems: 'center',\n    alignSelf: 'center',\n  };\n\n  if (isVertical(props.orientation)) {\n    wrapperStyles.flexDirection = 'column-reverse';\n    titleStyles.textAlign = 'center';\n  } else {\n    if (titleDim.placement === 'above') {\n      wrapperStyles.flexDirection = 'column';\n    } else {\n      wrapperStyles.flexDirection = 'row';\n\n      titleStyles.width = `${titleDim.width}px`;\n      titleStyles.textAlign = 'right';\n      titleStyles.paddingRight = '10px';\n    }\n  }\n\n  return {\n    wrapper: wrapperStyles,\n    title: titleStyles,\n  };\n}\n\ninterface BasicAndGradientStyles {\n  wrapper: CSSProperties;\n  bar: CSSProperties;\n  emptyBar: CSSProperties;\n  value: CSSProperties;\n}\n\ninterface BarAndValueDimensions {\n  valueWidth: number;\n  valueHeight: number;\n  maxBarWidth: number;\n  maxBarHeight: number;\n  wrapperHeight: number;\n  wrapperWidth: number;\n}\n\n/**\n * @internal\n * Only exported for unit tests\n **/\nexport function calculateBarAndValueDimensions(props: Props): BarAndValueDimensions {\n  const { height, width, orientation, text, alignmentFactors, valueDisplayMode } = props;\n  const titleDim = calculateTitleDimensions(props);\n  const value = alignmentFactors ?? props.value;\n  const valueString = formattedValueToString(value);\n\n  let maxBarHeight = 0;\n  let maxBarWidth = 0;\n  let valueHeight = 0;\n  let valueWidth = 0;\n  let wrapperWidth = 0;\n  let wrapperHeight = 0;\n\n  // measure text with title font size or min 14px\n  const fontSizeToMeasureWith = text?.valueSize ?? Math.max(titleDim.fontSize, 12);\n  const realTextSize = measureText(valueString, fontSizeToMeasureWith);\n  const realValueWidth = realTextSize.width + VALUE_LEFT_PADDING * 2;\n\n  if (isVertical(orientation)) {\n    if (text?.valueSize) {\n      valueHeight = text.valueSize * VALUE_LINE_HEIGHT;\n    } else {\n      valueHeight = Math.min(Math.max(height * 0.1, MIN_VALUE_HEIGHT), MAX_VALUE_HEIGHT);\n    }\n\n    valueWidth = width;\n\n    if (valueDisplayMode === BarGaugeValueMode.Hidden) {\n      valueHeight = 0;\n      valueWidth = 0;\n    }\n\n    maxBarHeight = height - (titleDim.height + valueHeight);\n    maxBarWidth = width;\n    wrapperWidth = width;\n    wrapperHeight = height - titleDim.height;\n  } else {\n    // Calculate the width and the height of the given values\n    if (valueDisplayMode === BarGaugeValueMode.Hidden) {\n      valueHeight = 0;\n      valueWidth = 0;\n    } else {\n      valueHeight = height - titleDim.height;\n      valueWidth = Math.max(Math.min(width * 0.2, MAX_VALUE_WIDTH), realValueWidth);\n    }\n\n    maxBarHeight = height - titleDim.height;\n    maxBarWidth = width - valueWidth - titleDim.width;\n\n    if (titleDim.placement === 'above') {\n      wrapperWidth = width;\n      wrapperHeight = height - titleDim.height;\n    } else {\n      wrapperWidth = width - titleDim.width;\n      wrapperHeight = height;\n    }\n  }\n\n  return {\n    valueWidth,\n    valueHeight,\n    maxBarWidth,\n    maxBarHeight,\n    wrapperHeight,\n    wrapperWidth,\n  };\n}\n\nexport function getCellColor(\n  positionValue: TimeSeriesValue,\n  value: Props['value'],\n  display: Props['display']\n): CellColors {\n  if (positionValue === null) {\n    return {\n      background: FALLBACK_COLOR,\n      border: FALLBACK_COLOR,\n    };\n  }\n\n  const color = display ? display(positionValue).color : null;\n\n  if (color) {\n    // if we are past real value the cell is not \"on\"\n    if (value === null || isNaN(value.numeric) || (positionValue !== null && positionValue > value.numeric)) {\n      return {\n        background: tinycolor(color).setAlpha(0.18).toRgbString(),\n        border: 'transparent',\n        isLit: false,\n      };\n    } else {\n      return {\n        background: tinycolor(color).setAlpha(0.95).toRgbString(),\n        backgroundShade: tinycolor(color).setAlpha(0.55).toRgbString(),\n        border: tinycolor(color).setAlpha(0.9).toRgbString(),\n        isLit: true,\n      };\n    }\n  }\n\n  return {\n    background: FALLBACK_COLOR,\n    border: FALLBACK_COLOR,\n  };\n}\n\nexport function getValuePercent(value: number, minValue: number, maxValue: number): number {\n  // Need special logic for when minValue === maxValue === value to prevent returning NaN\n  const valueRatio = Math.min((value - minValue) / (maxValue - minValue), 1);\n  return isNaN(valueRatio) ? 0 : valueRatio;\n}\n\n/**\n * Only exported to for unit test\n */\nexport function getBasicAndGradientStyles(props: Props): BasicAndGradientStyles {\n  const { displayMode, field, value, alignmentFactors, orientation, theme, text } = props;\n  const { valueWidth, valueHeight, maxBarHeight, maxBarWidth } = calculateBarAndValueDimensions(props);\n\n  const minValue = field.min ?? GAUGE_DEFAULT_MINIMUM;\n  const maxValue = field.max ?? GAUGE_DEFAULT_MAXIMUM;\n  const valuePercent = getValuePercent(value.numeric, minValue, maxValue);\n  const textColor = getTextValueColor(props);\n  const barColor = value.color ?? FALLBACK_COLOR;\n\n  const valueToBaseSizeOn = alignmentFactors ? alignmentFactors : value;\n  const valueStyles = getValueStyles(valueToBaseSizeOn, textColor, valueWidth, valueHeight, orientation, text);\n\n  const isBasic = displayMode === 'basic';\n  const wrapperStyles: CSSProperties = {\n    display: 'flex',\n    flexGrow: 1,\n  };\n\n  const barStyles: CSSProperties = {\n    borderRadius: theme.shape.radius.default,\n    position: 'relative',\n    zIndex: 1,\n  };\n\n  const emptyBar: CSSProperties = {\n    background: theme.colors.background.secondary,\n    flexGrow: 1,\n    display: 'flex',\n    borderRadius: theme.shape.radius.default,\n    position: 'relative',\n  };\n\n  if (isVertical(orientation)) {\n    const barHeight = Math.max(valuePercent * maxBarHeight, 1);\n\n    // vertical styles\n    wrapperStyles.flexDirection = 'column';\n    wrapperStyles.justifyContent = 'flex-end';\n\n    barStyles.transition = 'height 1s';\n    barStyles.height = `${barHeight}px`;\n    barStyles.width = `${maxBarWidth}px`;\n\n    // adjust so that filled in bar is at the bottom\n    emptyBar.bottom = '-3px';\n\n    //adjust empty region to always have same width as colored bar\n    emptyBar.width = `${valueWidth}px`;\n\n    if (isBasic) {\n      // Basic styles\n      barStyles.background = `${tinycolor(barColor).setAlpha(0.35).toRgbString()}`;\n      barStyles.borderTop = `2px solid ${barColor}`;\n    } else {\n      // Gradient styles\n      barStyles.background = getBarGradient(props, maxBarHeight);\n    }\n  } else {\n    const barWidth = Math.max(valuePercent * maxBarWidth, 1);\n\n    // Custom styles for horizontal orientation\n    wrapperStyles.flexDirection = 'row-reverse';\n    wrapperStyles.justifyContent = 'flex-end';\n    wrapperStyles.alignItems = 'stretch';\n\n    barStyles.transition = 'width 1s';\n    barStyles.height = `${maxBarHeight}px`;\n    barStyles.width = `${barWidth}px`;\n\n    // shift empty region back to fill gaps due to border radius\n    emptyBar.left = '-3px';\n\n    //adjust empty region to always have same height as colored bar\n    emptyBar.height = `${valueHeight}px`;\n\n    if (isBasic) {\n      // Basic styles\n      barStyles.background = `${tinycolor(barColor).setAlpha(0.35).toRgbString()}`;\n      barStyles.borderRight = `2px solid ${barColor}`;\n    } else {\n      // Gradient styles\n      barStyles.background = getBarGradient(props, maxBarWidth);\n    }\n  }\n\n  return {\n    wrapper: wrapperStyles,\n    bar: barStyles,\n    value: valueStyles,\n    emptyBar,\n  };\n}\n\n/**\n * Only exported to for unit test\n */\nexport function getBarGradient(props: Props, maxSize: number): string {\n  const { field, value, orientation, theme } = props;\n  const cssDirection = isVertical(orientation) ? '0deg' : '90deg';\n  const minValue = field.min!;\n  const maxValue = field.max!;\n\n  let gradient = '';\n  let lastpos = 0;\n  let mode = getFieldColorMode(field.color?.mode);\n\n  if (mode.id === FieldColorModeId.Thresholds) {\n    const thresholds = field.thresholds!;\n\n    for (let i = 0; i < thresholds.steps.length; i++) {\n      const threshold = thresholds.steps[i];\n      const color = props.theme.visualization.getColorByName(threshold.color);\n      const valuePercent =\n        thresholds.mode === ThresholdsMode.Percentage\n          ? threshold.value / 100\n          : getValuePercent(threshold.value, minValue, maxValue);\n      const pos = valuePercent * maxSize;\n      const offset = Math.round(pos - (pos - lastpos) / 2);\n      const thresholdValue =\n        thresholds.mode === ThresholdsMode.Percentage\n          ? minValue + (maxValue - minValue) * valuePercent\n          : threshold.value;\n      if (gradient === '') {\n        gradient = `linear-gradient(${cssDirection}, ${color}, ${color}`;\n      } else if (value.numeric < thresholdValue) {\n        break;\n      } else {\n        lastpos = pos;\n        gradient += ` ${offset}px, ${color}`;\n      }\n    }\n\n    return gradient + ')';\n  }\n\n  if (mode.isContinuous && mode.getColors) {\n    const scheme = mode.getColors(theme);\n\n    for (let i = 0; i < scheme.length; i++) {\n      const color = scheme[i];\n\n      if (gradient === '') {\n        gradient = `linear-gradient(${cssDirection}, ${color} 0px`;\n      } else {\n        const valuePercent = i / (scheme.length - 1);\n        const pos = valuePercent * maxSize;\n        gradient += `, ${color} ${pos}px`;\n      }\n    }\n    return gradient + ')';\n  }\n\n  return value.color ?? FALLBACK_COLOR;\n}\n\n/**\n * Only exported to for unit test\n */\nexport function getTextValueColor(props: Props): string {\n  if (props.valueDisplayMode === 'text') {\n    return props.theme.colors.text.primary;\n  }\n\n  const { value } = props;\n  if (value.color) {\n    return value.color;\n  }\n\n  return FALLBACK_COLOR;\n}\n\nfunction getValueStyles(\n  value: FormattedValue,\n  color: string,\n  width: number,\n  height: number,\n  orientation: VizOrientation,\n  text?: VizTextDisplayOptions\n): CSSProperties {\n  const styles: CSSProperties = {\n    color,\n    height: `${height}px`,\n    width: `${width}px`,\n    display: 'flex',\n    alignItems: 'center',\n    lineHeight: VALUE_LINE_HEIGHT,\n  };\n\n  // how many pixels in wide can the text be?\n  let textWidth = width;\n  const formattedValueString = formattedValueToString(value);\n\n  if (isVertical(orientation)) {\n    styles.fontSize = text?.valueSize ?? calculateFontSize(formattedValueString, textWidth, height, VALUE_LINE_HEIGHT);\n    styles.justifyContent = `center`;\n  } else {\n    styles.fontSize =\n      text?.valueSize ??\n      calculateFontSize(formattedValueString, textWidth - VALUE_LEFT_PADDING * 2, height, VALUE_LINE_HEIGHT);\n    styles.justifyContent = `flex-end`;\n    styles.paddingLeft = `${VALUE_LEFT_PADDING}px`;\n    styles.paddingRight = `${VALUE_LEFT_PADDING}px`;\n    // Need to remove the left padding from the text width constraints\n    textWidth -= VALUE_LEFT_PADDING;\n  }\n\n  return styles;\n}\n","import React, { useRef, useState, useLayoutEffect } from 'react';\nimport { useClickAway } from 'react-use';\n\nimport { selectors } from '@grafana/e2e-selectors';\n\nimport { Menu } from '../Menu/Menu';\nimport { Portal } from '../Portal/Portal';\n\nexport interface ContextMenuProps {\n  /** Starting horizontal position for the menu */\n  x: number;\n  /** Starting vertical position for the menu */\n  y: number;\n  /** Callback for closing the menu */\n  onClose?: () => void;\n  /** On menu open focus the first element */\n  focusOnOpen?: boolean;\n  /** RenderProp function that returns menu items to display */\n  renderMenuItems?: () => React.ReactNode;\n  /** A function that returns header element */\n  renderHeader?: () => React.ReactNode;\n}\n\nexport const ContextMenu = React.memo(\n  ({ x, y, onClose, focusOnOpen = true, renderMenuItems, renderHeader }: ContextMenuProps) => {\n    const menuRef = useRef<HTMLDivElement>(null);\n    const [positionStyles, setPositionStyles] = useState({});\n\n    useLayoutEffect(() => {\n      const menuElement = menuRef.current;\n      if (menuElement) {\n        const rect = menuElement.getBoundingClientRect();\n        const OFFSET = 5;\n        const collisions = {\n          right: window.innerWidth < x + rect.width,\n          bottom: window.innerHeight < y + rect.height + OFFSET,\n        };\n\n        setPositionStyles({\n          position: 'fixed',\n          left: collisions.right ? x - rect.width - OFFSET : x - OFFSET,\n          top: collisions.bottom ? y - rect.height - OFFSET : y + OFFSET,\n        });\n      }\n    }, [x, y]);\n\n    useClickAway(menuRef, () => {\n      onClose?.();\n    });\n    const header = renderHeader?.();\n    const menuItems = renderMenuItems?.();\n    const onOpen = (setFocusedItem: (a: number) => void) => {\n      if (focusOnOpen) {\n        setFocusedItem(0);\n      }\n    };\n    const onKeyDown = (e: React.KeyboardEvent) => {\n      if (e.key === 'Escape') {\n        e.preventDefault();\n        e.stopPropagation();\n        onClose?.();\n      }\n    };\n\n    return (\n      <Portal>\n        <Menu\n          header={header}\n          ref={menuRef}\n          style={positionStyles}\n          ariaLabel={selectors.components.Menu.MenuComponent('Context')}\n          onOpen={onOpen}\n          onClick={onClose}\n          onKeyDown={onKeyDown}\n        >\n          {menuItems}\n        </Menu>\n      </Portal>\n    );\n  }\n);\n\nContextMenu.displayName = 'ContextMenu';\n","import React, { useState } from 'react';\n\nimport { ContextMenu } from '../ContextMenu/ContextMenu';\n\nexport interface WithContextMenuProps {\n  /** Menu item trigger that accepts openMenu prop */\n  children: (props: { openMenu: React.MouseEventHandler<HTMLElement> }) => JSX.Element;\n  /** A function that returns an array of menu items */\n  renderMenuItems: () => React.ReactNode;\n  /** On menu open focus the first element */\n  focusOnOpen?: boolean;\n}\n\nexport const WithContextMenu = ({ children, renderMenuItems, focusOnOpen = true }: WithContextMenuProps) => {\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [menuPosition, setMenuPosition] = useState({ x: 0, y: 0 });\n  return (\n    <>\n      {children({\n        openMenu: (e) => {\n          setIsMenuOpen(true);\n          setMenuPosition({\n            x: e.pageX,\n            y: e.pageY,\n          });\n        },\n      })}\n\n      {isMenuOpen && (\n        <ContextMenu\n          onClose={() => setIsMenuOpen(false)}\n          x={menuPosition.x}\n          y={menuPosition.y}\n          renderMenuItems={renderMenuItems}\n          focusOnOpen={focusOnOpen}\n        />\n      )}\n    </>\n  );\n};\n","import { css } from '@emotion/css';\nimport React, { CSSProperties } from 'react';\n\nimport { LinkModel } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\n\nimport { linkModelToContextMenuItems } from '../../utils/dataLinks';\nimport { WithContextMenu } from '../ContextMenu/WithContextMenu';\nimport { MenuGroup, MenuItemsGroup } from '../Menu/MenuGroup';\nimport { MenuItem } from '../Menu/MenuItem';\n\nexport interface DataLinksContextMenuProps {\n  children: (props: DataLinksContextMenuApi) => JSX.Element;\n  links: () => LinkModel[];\n  style?: CSSProperties;\n}\n\nexport interface DataLinksContextMenuApi {\n  openMenu?: React.MouseEventHandler<HTMLOrSVGElement>;\n  targetClassName?: string;\n}\n\nexport const DataLinksContextMenu = ({ children, links, style }: DataLinksContextMenuProps) => {\n  const itemsGroup: MenuItemsGroup[] = [{ items: linkModelToContextMenuItems(links), label: 'Data links' }];\n  const linksCounter = itemsGroup[0].items.length;\n  const renderMenuGroupItems = () => {\n    return itemsGroup.map((group, index) => (\n      <MenuGroup key={`${group.label}${index}`} label={group.label}>\n        {(group.items || []).map((item) => (\n          <MenuItem\n            key={item.label}\n            url={item.url}\n            label={item.label}\n            target={item.target}\n            icon={item.icon}\n            active={item.active}\n            onClick={item.onClick}\n          />\n        ))}\n      </MenuGroup>\n    ));\n  };\n\n  // Use this class name (exposed via render prop) to add context menu indicator to the click target of the visualization\n  const targetClassName = css`\n    cursor: context-menu;\n  `;\n\n  if (linksCounter > 1) {\n    return (\n      <WithContextMenu renderMenuItems={renderMenuGroupItems}>\n        {({ openMenu }) => {\n          return children({ openMenu, targetClassName });\n        }}\n      </WithContextMenu>\n    );\n  } else {\n    const linkModel = links()[0];\n    return (\n      <a\n        href={linkModel.href}\n        onClick={linkModel.onClick}\n        target={linkModel.target}\n        title={linkModel.title}\n        style={{ ...style, overflow: 'hidden', display: 'flex' }}\n        aria-label={selectors.components.DataLinksContextMenu.singleLink}\n      >\n        {children({})}\n      </a>\n    );\n  }\n};\n","import { Property } from 'csstype';\nimport { FC } from 'react';\nimport { CellProps, Column, Row, TableState, UseExpandedRowProps } from 'react-table';\n\nimport { DataFrame, Field, KeyValue, SelectableValue } from '@grafana/data';\nimport { TableCellHeight } from '@grafana/schema';\n\nimport { TableStyles } from './styles';\n\nexport {\n  type TableFieldOptions,\n  TableCellDisplayMode,\n  type FieldTextAlignment,\n  TableCellBackgroundDisplayMode,\n} from '@grafana/schema';\n\nexport interface TableRow {\n  [x: string]: any;\n}\n\nexport const FILTER_FOR_OPERATOR = '=';\nexport const FILTER_OUT_OPERATOR = '!=';\nexport type AdHocFilterOperator = typeof FILTER_FOR_OPERATOR | typeof FILTER_OUT_OPERATOR;\nexport type AdHocFilterItem = { key: string; value: string; operator: AdHocFilterOperator };\nexport type TableFilterActionCallback = (item: AdHocFilterItem) => void;\nexport type TableColumnResizeActionCallback = (fieldDisplayName: string, width: number) => void;\nexport type TableSortByActionCallback = (state: TableSortByFieldState[]) => void;\n\nexport interface TableSortByFieldState {\n  displayName: string;\n  desc?: boolean;\n}\n\nexport interface TableCellProps extends CellProps<any> {\n  tableStyles: TableStyles;\n  cellProps: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>;\n  field: Field;\n  onCellFilterAdded?: TableFilterActionCallback;\n  innerWidth: number;\n}\n\nexport type CellComponent = FC<TableCellProps>;\n\nexport type FooterItem = Array<KeyValue<string>> | string | undefined;\n\nexport type GrafanaTableColumn = Column & {\n  field: Field;\n  sortType: 'number' | 'basic' | 'alphanumeric-insensitive';\n  filter: (rows: Row[], id: string, filterValues?: SelectableValue[]) => SelectableValue[];\n  justifyContent: Property.JustifyContent;\n  minWidth: number;\n};\n\nexport interface TableFooterCalc {\n  show: boolean;\n  reducer: string[]; // actually 1 value\n  fields?: string[];\n  enablePagination?: boolean;\n  countRows?: boolean;\n}\n\nexport interface GrafanaTableState extends TableState {\n  lastExpandedIndex?: number;\n  toggleRowExpandedCounter: number;\n}\n\nexport interface GrafanaTableRow extends Row, UseExpandedRowProps<{}> {}\n\nexport interface Props {\n  ariaLabel?: string;\n  data: DataFrame;\n  width: number;\n  height: number;\n  maxHeight?: number;\n  /** Minimal column width specified in pixels */\n  columnMinWidth?: number;\n  noHeader?: boolean;\n  showTypeIcons?: boolean;\n  resizable?: boolean;\n  initialSortBy?: TableSortByFieldState[];\n  onColumnResize?: TableColumnResizeActionCallback;\n  onSortByChange?: TableSortByActionCallback;\n  onCellFilterAdded?: TableFilterActionCallback;\n  footerOptions?: TableFooterCalc;\n  footerValues?: FooterItem[];\n  enablePagination?: boolean;\n  cellHeight?: TableCellHeight;\n  /** @alpha */\n  subData?: DataFrame[];\n}\n","import { isFunction } from 'lodash';\nimport React from 'react';\n\nimport {\n  ThresholdsConfig,\n  ThresholdsMode,\n  VizOrientation,\n  getFieldConfigWithMinMax,\n  DisplayValueAlignmentFactors,\n  Field,\n  DisplayValue,\n} from '@grafana/data';\nimport { BarGaugeDisplayMode, BarGaugeValueMode } from '@grafana/schema';\n\nimport { BarGauge } from '../BarGauge/BarGauge';\nimport { DataLinksContextMenu, DataLinksContextMenuApi } from '../DataLinks/DataLinksContextMenu';\n\nimport { TableCellProps, TableCellDisplayMode } from './types';\nimport { getCellOptions } from './utils';\n\nconst defaultScale: ThresholdsConfig = {\n  mode: ThresholdsMode.Absolute,\n  steps: [\n    {\n      color: 'blue',\n      value: -Infinity,\n    },\n    {\n      color: 'green',\n      value: 20,\n    },\n  ],\n};\n\nexport const BarGaugeCell = (props: TableCellProps) => {\n  const { field, innerWidth, tableStyles, cell, cellProps, row } = props;\n  const displayValue = field.display!(cell.value);\n  const cellOptions = getCellOptions(field);\n\n  let config = getFieldConfigWithMinMax(field, false);\n  if (!config.thresholds) {\n    config = {\n      ...config,\n      thresholds: defaultScale,\n    };\n  }\n\n  // Set default display mode and update if defined\n  // and update the valueMode if defined\n  let barGaugeMode: BarGaugeDisplayMode = BarGaugeDisplayMode.Gradient;\n  let valueDisplayMode: BarGaugeValueMode | undefined = undefined;\n\n  if (cellOptions.type === TableCellDisplayMode.Gauge) {\n    barGaugeMode = cellOptions.mode ?? BarGaugeDisplayMode.Gradient;\n    valueDisplayMode =\n      cellOptions.valueDisplayMode !== undefined ? cellOptions.valueDisplayMode : BarGaugeValueMode.Text;\n  }\n\n  const getLinks = () => {\n    if (!isFunction(field.getLinks)) {\n      return [];\n    }\n\n    return field.getLinks({ valueRowIndex: row.index });\n  };\n\n  const hasLinks = Boolean(getLinks().length);\n  const alignmentFactors = getAlignmentFactor(field, displayValue, cell.row.index);\n\n  const renderComponent = (menuProps: DataLinksContextMenuApi) => {\n    const { openMenu, targetClassName } = menuProps;\n\n    return (\n      <BarGauge\n        width={innerWidth}\n        height={tableStyles.cellHeightInner}\n        field={config}\n        display={field.display}\n        text={{ valueSize: 14 }}\n        value={displayValue}\n        orientation={VizOrientation.Horizontal}\n        theme={tableStyles.theme}\n        alignmentFactors={alignmentFactors}\n        onClick={openMenu}\n        className={targetClassName}\n        itemSpacing={1}\n        lcdCellWidth={8}\n        displayMode={barGaugeMode}\n        valueDisplayMode={valueDisplayMode}\n      />\n    );\n  };\n\n  return (\n    <div {...cellProps} className={tableStyles.cellContainer}>\n      {hasLinks && (\n        <DataLinksContextMenu links={getLinks} style={{ display: 'flex', width: '100%' }}>\n          {(api) => renderComponent(api)}\n        </DataLinksContextMenu>\n      )}\n      {!hasLinks && renderComponent({})}\n    </div>\n  );\n};\n\n/**\n * Getting gauge values to align is very tricky without looking at all values and passing them trough display processor. For very large tables that\n * could pretty expensive. So this is kind of a compromise. We look at the first 1000 rows and cache the longest value.\n * If we have a cached value we just check if the current value is longer and update the alignmentFactor. This can obviously still lead to\n * unaligned gauges but it should a lot less common.\n **/\nfunction getAlignmentFactor(field: Field, displayValue: DisplayValue, rowIndex: number): DisplayValueAlignmentFactors {\n  let alignmentFactor = field.state?.alignmentFactors;\n\n  if (alignmentFactor) {\n    // check if current alignmentFactor is still the longest\n    if (alignmentFactor.text.length < displayValue.text.length) {\n      alignmentFactor.text = displayValue.text;\n    }\n    return alignmentFactor;\n  } else {\n    // look at the next 100 rows\n    alignmentFactor = { ...displayValue };\n    const maxIndex = Math.min(field.values.length, rowIndex + 1000);\n\n    for (let i = rowIndex + 1; i < maxIndex; i++) {\n      const nextDisplayValue = field.display!(field.values.get(i));\n      if (nextDisplayValue.text.length > alignmentFactor.text.length) {\n        alignmentFactor.text = displayValue.text;\n      }\n    }\n\n    if (field.state) {\n      field.state.alignmentFactors = alignmentFactor;\n    } else {\n      field.state = { alignmentFactors: alignmentFactor };\n    }\n\n    return alignmentFactor;\n  }\n}\n","import { isString } from 'lodash';\nimport React from 'react';\n\nimport { ClipboardButton } from '../ClipboardButton/ClipboardButton';\nimport { Modal } from '../Modal/Modal';\nimport { CodeEditor } from '../Monaco/CodeEditor';\n\ninterface TableCellInspectModalProps {\n  value: any;\n  onDismiss: () => void;\n  mode: 'code' | 'text';\n}\n\nexport function TableCellInspectModal({ value, onDismiss, mode }: TableCellInspectModalProps) {\n  let displayValue = value;\n  if (isString(value)) {\n    try {\n      value = JSON.parse(value);\n    } catch {} // ignore errors\n  } else {\n    displayValue = JSON.stringify(value, null, ' ');\n  }\n  let text = displayValue;\n\n  if (mode === 'code') {\n    text = JSON.stringify(value, null, ' ');\n  }\n\n  return (\n    <Modal onDismiss={onDismiss} isOpen={true} title=\"Inspect value\">\n      {mode === 'code' ? (\n        <CodeEditor\n          width=\"100%\"\n          height={500}\n          language=\"json\"\n          showLineNumbers={true}\n          showMiniMap={(text && text.length) > 100}\n          value={text}\n          readOnly={true}\n        />\n      ) : (\n        <pre>{text}</pre>\n      )}\n      <Modal.ButtonRow>\n        <ClipboardButton icon=\"copy\" getText={() => text}>\n          Copy to Clipboard\n        </ClipboardButton>\n      </Modal.ButtonRow>\n    </Modal>\n  );\n}\n","import React, { useCallback, useState } from 'react';\n\nimport { IconSize } from '../../types/icon';\nimport { IconButton } from '../IconButton/IconButton';\nimport { HorizontalGroup } from '../Layout/Layout';\nimport { TooltipPlacement } from '../Tooltip';\n\nimport { TableCellInspectModal } from './TableCellInspectModal';\nimport { FILTER_FOR_OPERATOR, FILTER_OUT_OPERATOR, TableCellProps, TableFieldOptions } from './types';\nimport { getTextAlign } from './utils';\n\ninterface CellActionProps extends TableCellProps {\n  previewMode: 'text' | 'code';\n}\n\ninterface CommonButtonProps {\n  size: IconSize;\n  showFilters?: boolean;\n  tooltipPlacement: TooltipPlacement;\n}\n\nexport function CellActions({ field, cell, previewMode, showFilters, onCellFilterAdded }: CellActionProps) {\n  const [isInspecting, setIsInspecting] = useState(false);\n\n  const isRightAligned = getTextAlign(field) === 'flex-end';\n  const inspectEnabled = Boolean((field.config.custom as TableFieldOptions)?.inspect);\n  const commonButtonProps: CommonButtonProps = {\n    size: 'sm',\n    tooltipPlacement: 'top',\n  };\n\n  const onFilterFor = useCallback(\n    (event: React.MouseEvent<HTMLButtonElement>) => {\n      if (onCellFilterAdded) {\n        onCellFilterAdded({ key: field.name, operator: FILTER_FOR_OPERATOR, value: cell.value });\n      }\n    },\n    [cell, field, onCellFilterAdded]\n  );\n  const onFilterOut = useCallback(\n    (event: React.MouseEvent<HTMLButtonElement>) => {\n      if (onCellFilterAdded) {\n        onCellFilterAdded({ key: field.name, operator: FILTER_OUT_OPERATOR, value: cell.value });\n      }\n    },\n    [cell, field, onCellFilterAdded]\n  );\n\n  return (\n    <>\n      <div className={`cellActions ${isRightAligned ? 'cellActionsLeft' : ''}`}>\n        <HorizontalGroup spacing=\"xs\">\n          {inspectEnabled && (\n            <IconButton\n              name=\"eye\"\n              tooltip=\"Inspect value\"\n              onClick={() => {\n                setIsInspecting(true);\n              }}\n              {...commonButtonProps}\n            />\n          )}\n          {showFilters && (\n            <IconButton name={'search-plus'} onClick={onFilterFor} tooltip=\"Filter for value\" {...commonButtonProps} />\n          )}\n          {showFilters && (\n            <IconButton name={'search-minus'} onClick={onFilterOut} tooltip=\"Filter out value\" {...commonButtonProps} />\n          )}\n        </HorizontalGroup>\n      </div>\n\n      {isInspecting && (\n        <TableCellInspectModal\n          mode={previewMode}\n          value={cell.value}\n          onDismiss={() => {\n            setIsInspecting(false);\n          }}\n        />\n      )}\n    </>\n  );\n}\n","import { cx } from '@emotion/css';\nimport React, { ReactElement } from 'react';\nimport tinycolor from 'tinycolor2';\n\nimport { DisplayValue, formattedValueToString } from '@grafana/data';\nimport { TableCellBackgroundDisplayMode, TableCellOptions } from '@grafana/schema';\n\nimport { useStyles2 } from '../../themes';\nimport { getCellLinks, getTextColorForAlphaBackground } from '../../utils';\nimport { clearLinkButtonStyles } from '../Button';\nimport { DataLinksContextMenu } from '../DataLinks/DataLinksContextMenu';\n\nimport { CellActions } from './CellActions';\nimport { TableStyles } from './styles';\nimport { TableCellDisplayMode, TableCellProps, TableFieldOptions } from './types';\nimport { getCellOptions } from './utils';\n\nexport const DefaultCell = (props: TableCellProps) => {\n  const { field, cell, tableStyles, row, cellProps } = props;\n\n  const inspectEnabled = Boolean((field.config.custom as TableFieldOptions)?.inspect);\n  const displayValue = field.display!(cell.value);\n\n  let value: string | ReactElement;\n  if (React.isValidElement(cell.value)) {\n    value = cell.value;\n  } else {\n    value = formattedValueToString(displayValue);\n  }\n\n  const showFilters = props.onCellFilterAdded && field.config.filterable;\n  const showActions = (showFilters && cell.value !== undefined) || inspectEnabled;\n  const cellOptions = getCellOptions(field);\n  const cellStyle = getCellStyle(tableStyles, cellOptions, displayValue, inspectEnabled);\n  const hasLinks = Boolean(getCellLinks(field, row)?.length);\n  const clearButtonStyle = useStyles2(clearLinkButtonStyles);\n\n  return (\n    <div {...cellProps} className={cellStyle}>\n      {!hasLinks && <div className={tableStyles.cellText}>{value}</div>}\n\n      {hasLinks && (\n        <DataLinksContextMenu links={() => getCellLinks(field, row) || []}>\n          {(api) => {\n            if (api.openMenu) {\n              return (\n                <button\n                  className={cx(clearButtonStyle, getLinkStyle(tableStyles, cellOptions, api.targetClassName))}\n                  onClick={api.openMenu}\n                >\n                  {value}\n                </button>\n              );\n            } else {\n              return <div className={getLinkStyle(tableStyles, cellOptions, api.targetClassName)}>{value}</div>;\n            }\n          }}\n        </DataLinksContextMenu>\n      )}\n\n      {showActions && <CellActions {...props} previewMode=\"text\" showFilters={showFilters} />}\n    </div>\n  );\n};\n\nfunction getCellStyle(\n  tableStyles: TableStyles,\n  cellOptions: TableCellOptions,\n  displayValue: DisplayValue,\n  disableOverflowOnHover = false\n) {\n  // How much to darken elements depends upon if we're in dark mode\n  const darkeningFactor = tableStyles.theme.isDark ? 1 : -0.7;\n\n  // Setup color variables\n  let textColor: string | undefined = undefined;\n  let bgColor: string | undefined = undefined;\n\n  if (cellOptions.type === TableCellDisplayMode.ColorText) {\n    textColor = displayValue.color;\n  } else if (cellOptions.type === TableCellDisplayMode.ColorBackground) {\n    const mode = cellOptions.mode ?? TableCellBackgroundDisplayMode.Gradient;\n\n    if (mode === TableCellBackgroundDisplayMode.Basic) {\n      textColor = getTextColorForAlphaBackground(displayValue.color!, tableStyles.theme.isDark);\n      bgColor = tinycolor(displayValue.color).toRgbString();\n    } else if (mode === TableCellBackgroundDisplayMode.Gradient) {\n      const bgColor2 = tinycolor(displayValue.color)\n        .darken(10 * darkeningFactor)\n        .spin(5);\n      textColor = getTextColorForAlphaBackground(displayValue.color!, tableStyles.theme.isDark);\n      bgColor = `linear-gradient(120deg, ${bgColor2.toRgbString()}, ${displayValue.color})`;\n    }\n  }\n\n  // If we have definied colors return those styles\n  // Otherwise we return default styles\n  if (textColor !== undefined || bgColor !== undefined) {\n    return tableStyles.buildCellContainerStyle(textColor, bgColor, !disableOverflowOnHover);\n  }\n\n  return disableOverflowOnHover ? tableStyles.cellContainerNoOverflow : tableStyles.cellContainer;\n}\n\nfunction getLinkStyle(tableStyles: TableStyles, cellOptions: TableCellOptions, targetClassName: string | undefined) {\n  if (cellOptions.type === TableCellDisplayMode.Auto) {\n    return cx(tableStyles.cellLink, targetClassName);\n  }\n\n  return cx(tableStyles.cellLinkForColoredCell, targetClassName);\n}\n","import WKT from 'ol/format/WKT';\nimport { Geometry } from 'ol/geom';\nimport React from 'react';\n\nimport { TableCellProps } from './types';\n\nexport function GeoCell(props: TableCellProps): JSX.Element {\n  const { cell, tableStyles, cellProps } = props;\n\n  let disp = '';\n\n  if (cell.value instanceof Geometry) {\n    disp = new WKT().writeGeometry(cell.value, {\n      featureProjection: 'EPSG:3857',\n      dataProjection: 'EPSG:4326',\n    });\n  } else if (cell.value != null) {\n    disp = `${cell.value}`;\n  }\n\n  return (\n    <div {...cellProps} className={tableStyles.cellContainer}>\n      <div className={tableStyles.cellText} style={{ fontFamily: 'monospace' }}>\n        {disp}\n      </div>\n    </div>\n  );\n}\n","import { cx } from '@emotion/css';\nimport React from 'react';\n\nimport { useStyles2 } from '../../themes';\nimport { getCellLinks } from '../../utils';\nimport { Button, clearLinkButtonStyles } from '../Button';\nimport { DataLinksContextMenu } from '../DataLinks/DataLinksContextMenu';\n\nimport { TableCellProps } from './types';\n\nexport const ImageCell = (props: TableCellProps) => {\n  const { field, cell, tableStyles, row, cellProps } = props;\n\n  const displayValue = field.display!(cell.value);\n\n  const hasLinks = Boolean(getCellLinks(field, row)?.length);\n  const clearButtonStyle = useStyles2(clearLinkButtonStyles);\n\n  return (\n    <div {...cellProps} className={tableStyles.cellContainer}>\n      {!hasLinks && <img src={displayValue.text} className={tableStyles.imageCell} alt=\"\" />}\n      {hasLinks && (\n        <DataLinksContextMenu style={{ height: '100%' }} links={() => getCellLinks(field, row) || []}>\n          {(api) => {\n            const img = <img src={displayValue.text} className={tableStyles.imageCell} alt=\"\" />;\n            if (api.openMenu) {\n              return (\n                <Button className={cx(clearButtonStyle)} onClick={api.openMenu}>\n                  {img}\n                </Button>\n              );\n            } else {\n              return img;\n            }\n          }}\n        </DataLinksContextMenu>\n      )}\n    </div>\n  );\n};\n","import { css, cx } from '@emotion/css';\nimport { isString } from 'lodash';\nimport React from 'react';\n\nimport { useStyles2 } from '../../themes';\nimport { getCellLinks } from '../../utils';\nimport { Button, clearLinkButtonStyles } from '../Button';\nimport { DataLinksContextMenu } from '../DataLinks/DataLinksContextMenu';\n\nimport { CellActions } from './CellActions';\nimport { TableCellProps, TableFieldOptions } from './types';\n\nexport function JSONViewCell(props: TableCellProps): JSX.Element {\n  const { cell, tableStyles, cellProps, field, row } = props;\n  const inspectEnabled = Boolean((field.config.custom as TableFieldOptions)?.inspect);\n  const txt = css`\n    cursor: pointer;\n    font-family: monospace;\n  `;\n\n  let value = cell.value;\n  let displayValue = value;\n\n  if (isString(value)) {\n    try {\n      value = JSON.parse(value);\n    } catch {} // ignore errors\n  } else {\n    displayValue = JSON.stringify(value, null, ' ');\n  }\n\n  const hasLinks = Boolean(getCellLinks(field, row)?.length);\n  const clearButtonStyle = useStyles2(clearLinkButtonStyles);\n\n  return (\n    <div {...cellProps} className={inspectEnabled ? tableStyles.cellContainerNoOverflow : tableStyles.cellContainer}>\n      <div className={cx(tableStyles.cellText, txt)}>\n        {!hasLinks && <div className={tableStyles.cellText}>{displayValue}</div>}\n        {hasLinks && (\n          <DataLinksContextMenu links={() => getCellLinks(field, row) || []}>\n            {(api) => {\n              if (api.openMenu) {\n                return (\n                  <Button className={cx(clearButtonStyle)} onClick={api.openMenu}>\n                    {displayValue}\n                  </Button>\n                );\n              } else {\n                return <>{displayValue}</>;\n              }\n            }}\n          </DataLinksContextMenu>\n        )}\n      </div>\n      {inspectEnabled && <CellActions {...props} previewMode=\"code\" />}\n    </div>\n  );\n}\n","import React from 'react';\n\nimport { Icon } from '../Icon/Icon';\n\nimport { TableStyles } from './styles';\nimport { GrafanaTableRow } from './types';\n\nexport interface Props {\n  row: GrafanaTableRow;\n  tableStyles: TableStyles;\n}\n\nexport function RowExpander({ row, tableStyles }: Props) {\n  return (\n    <div className={tableStyles.expanderCell} {...row.getToggleRowExpandedProps()}>\n      <Icon\n        aria-label={row.isExpanded ? 'Collapse row' : 'Expand row'}\n        name={row.isExpanded ? 'angle-down' : 'angle-right'}\n        size=\"xl\"\n      />\n    </div>\n  );\n}\n","import React from 'react';\n\nimport {\n  EventBusSrv,\n  EventBus,\n  DashboardCursorSync,\n  AnnotationEventUIModel,\n  ThresholdsConfig,\n  SplitOpen,\n  CoreApp,\n} from '@grafana/data';\n\nimport { AdHocFilterItem } from '../Table/types';\n\nimport { SeriesVisibilityChangeMode } from '.';\n\n/** @alpha */\nexport interface PanelContext {\n  eventBus: EventBus;\n\n  /** Dashboard panels sync */\n  sync?: () => DashboardCursorSync;\n\n  /** Information on what the outer container is */\n  app?: CoreApp | 'string';\n\n  /**\n   * Called when a component wants to change the color for a series\n   *\n   * @alpha -- experimental\n   */\n  onSeriesColorChange?: (label: string, color: string) => void;\n\n  onToggleSeriesVisibility?: (label: string, mode: SeriesVisibilityChangeMode) => void;\n\n  canAddAnnotations?: () => boolean;\n  canEditAnnotations?: (dashboardUID?: string) => boolean;\n  canDeleteAnnotations?: (dashboardUID?: string) => boolean;\n  onAnnotationCreate?: (annotation: AnnotationEventUIModel) => void;\n  onAnnotationUpdate?: (annotation: AnnotationEventUIModel) => void;\n  onAnnotationDelete?: (id: string) => void;\n\n  /**\n   * Used from visualizations like Table to add ad-hoc filters from cell values\n   */\n  onAddAdHocFilter?: (item: AdHocFilterItem) => void;\n\n  /**\n   * Enables modifying thresholds directly from the panel\n   *\n   * @alpha -- experimental\n   */\n  canEditThresholds?: boolean;\n\n  /**\n   * Shows threshold indicators on the right-hand side of the panel\n   *\n   * @alpha -- experimental\n   */\n  showThresholds?: boolean;\n\n  /**\n   * Called when a panel wants to change default thresholds configuration\n   *\n   * @alpha -- experimental\n   */\n  onThresholdsChange?: (thresholds: ThresholdsConfig) => void;\n\n  /**\n   * onSplitOpen is used in Explore to open the split view. It can be used in panels which has intercations and used in Explore as well.\n   * For example TimeSeries panel.\n   */\n  onSplitOpen?: SplitOpen;\n\n  /** For instance state that can be shared between panel & options UI  */\n  instanceState?: any;\n\n  /** Update instance state, this is only supported in dashboard panel context currently */\n  onInstanceStateChange?: (state: any) => void;\n\n  /**\n   * Called when a panel is changing the sort order of the legends.\n   */\n  onToggleLegendSort?: (sortBy: string) => void;\n}\n\nexport const PanelContextRoot = React.createContext<PanelContext>({\n  eventBus: new EventBusSrv(),\n});\n\n/**\n * @alpha\n */\nexport const PanelContextProvider = PanelContextRoot.Provider;\n\n/**\n * @alpha\n */\nexport const usePanelContext = () => React.useContext(PanelContextRoot);\n","import { css } from '@emotion/css';\nimport React, { FC, CSSProperties, ComponentType } from 'react';\nimport { useMeasure } from 'react-use';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { LegendPlacement } from '@grafana/schema';\n\nimport { useStyles2 } from '../../themes/ThemeContext';\nimport { getFocusStyles } from '../../themes/mixins';\nimport { CustomScrollbar } from '../CustomScrollbar/CustomScrollbar';\n\n/**\n * @beta\n */\nexport interface VizLayoutProps {\n  width: number;\n  height: number;\n  legend?: React.ReactElement<VizLayoutLegendProps> | null;\n  children: (width: number, height: number) => React.ReactNode;\n}\n\n/**\n * @beta\n */\nexport interface VizLayoutComponentType extends FC<VizLayoutProps> {\n  Legend: ComponentType<VizLayoutLegendProps>;\n}\n\n/**\n * @beta\n */\nexport const VizLayout: VizLayoutComponentType = ({ width, height, legend, children }) => {\n  const styles = useStyles2(getVizStyles);\n  const containerStyle: CSSProperties = {\n    display: 'flex',\n    width: `${width}px`,\n    height: `${height}px`,\n  };\n  const [legendRef, legendMeasure] = useMeasure<HTMLDivElement>();\n\n  if (!legend) {\n    return (\n      <>\n        {/* tabIndex={0} is needed for keyboard accessibility in the plot area */}\n        {/* eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex */}\n        <div tabIndex={0} style={containerStyle} className={styles.viz}>\n          {children(width, height)}\n        </div>\n      </>\n    );\n  }\n\n  const { placement, maxHeight = '35%', maxWidth = '60%' } = legend.props;\n\n  let size: VizSize | null = null;\n\n  const legendStyle: CSSProperties = {};\n\n  switch (placement) {\n    case 'bottom':\n      containerStyle.flexDirection = 'column';\n      legendStyle.maxHeight = maxHeight;\n\n      if (legendMeasure) {\n        size = { width, height: height - legendMeasure.height };\n      }\n      break;\n    case 'right':\n      containerStyle.flexDirection = 'row';\n      legendStyle.maxWidth = maxWidth;\n\n      if (legendMeasure) {\n        size = { width: width - legendMeasure.width, height };\n      }\n\n      if (legend.props.width) {\n        legendStyle.width = legend.props.width;\n        size = { width: width - legend.props.width, height };\n      }\n      break;\n  }\n\n  // This happens when position is switched from bottom to right\n  // Then we preserve old with for one render cycle until legend is measured in it's new position\n  if (size?.width === 0) {\n    size.width = width;\n  }\n\n  if (size?.height === 0) {\n    size.height = height;\n  }\n\n  return (\n    <div style={containerStyle}>\n      {/* tabIndex={0} is needed for keyboard accessibility in the plot area */}\n      {/* eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex */}\n      <div tabIndex={0} className={styles.viz}>\n        {size && children(size.width, size.height)}\n      </div>\n      <div style={legendStyle} ref={legendRef}>\n        <CustomScrollbar hideHorizontalTrack>{legend}</CustomScrollbar>\n      </div>\n    </div>\n  );\n};\n\nexport const getVizStyles = (theme: GrafanaTheme2) => {\n  return {\n    viz: css({\n      flexGrow: 2,\n      borderRadius: theme.shape.borderRadius(1),\n      '&:focus-visible': getFocusStyles(theme),\n    }),\n  };\n};\ninterface VizSize {\n  width: number;\n  height: number;\n}\n\n/**\n * @beta\n */\nexport interface VizLayoutLegendProps {\n  placement: LegendPlacement;\n  children: React.ReactNode;\n  maxHeight?: string;\n  maxWidth?: string;\n  width?: number;\n}\n\n/**\n * @beta\n */\nexport const VizLayoutLegend: FC<VizLayoutLegendProps> = ({ children }) => {\n  return <>{children}</>;\n};\n\nVizLayout.Legend = VizLayoutLegend;\n","import React, { Component } from 'react';\nimport { Subscription } from 'rxjs';\nimport { throttleTime } from 'rxjs/operators';\nimport uPlot, { AlignedData } from 'uplot';\n\nimport {\n  DataFrame,\n  DataHoverClearEvent,\n  DataHoverEvent,\n  Field,\n  FieldMatcherID,\n  fieldMatchers,\n  LegacyGraphHoverEvent,\n  TimeRange,\n  TimeZone,\n} from '@grafana/data';\nimport { VizLegendOptions } from '@grafana/schema';\n\nimport { Themeable2 } from '../../types';\nimport { PanelContext, PanelContextRoot } from '../PanelChrome/PanelContext';\nimport { VizLayout } from '../VizLayout/VizLayout';\nimport { UPlotChart } from '../uPlot/Plot';\nimport { AxisProps } from '../uPlot/config/UPlotAxisBuilder';\nimport { Renderers, UPlotConfigBuilder } from '../uPlot/config/UPlotConfigBuilder';\nimport { ScaleProps } from '../uPlot/config/UPlotScaleBuilder';\nimport { findMidPointYPosition, pluginLog } from '../uPlot/utils';\n\nimport { GraphNGLegendEvent, XYFieldMatchers } from './types';\nimport { preparePlotFrame as defaultPreparePlotFrame } from './utils';\n\n/**\n * @internal -- not a public API\n */\nexport const FIXED_UNIT = '__fixed';\n\n/**\n * @internal -- not a public API\n */\nexport type PropDiffFn<T extends any = any> = (prev: T, next: T) => boolean;\n\nexport interface GraphNGProps extends Themeable2 {\n  frames: DataFrame[];\n  structureRev?: number; // a number that will change when the frames[] structure changes\n  width: number;\n  height: number;\n  timeRange: TimeRange;\n  timeZone: TimeZone[] | TimeZone;\n  legend: VizLegendOptions;\n  fields?: XYFieldMatchers; // default will assume timeseries data\n  renderers?: Renderers;\n  tweakScale?: (opts: ScaleProps, forField: Field) => ScaleProps;\n  tweakAxis?: (opts: AxisProps, forField: Field) => AxisProps;\n  onLegendClick?: (event: GraphNGLegendEvent) => void;\n  children?: (builder: UPlotConfigBuilder, alignedFrame: DataFrame) => React.ReactNode;\n  prepConfig: (alignedFrame: DataFrame, allFrames: DataFrame[], getTimeRange: () => TimeRange) => UPlotConfigBuilder;\n  propsToDiff?: Array<string | PropDiffFn>;\n  preparePlotFrame?: (frames: DataFrame[], dimFields: XYFieldMatchers) => DataFrame;\n  renderLegend: (config: UPlotConfigBuilder) => React.ReactElement | null;\n\n  /**\n   * needed for propsToDiff to re-init the plot & config\n   * this is a generic approach to plot re-init, without having to specify which panel-level options\n   * should cause invalidation. we can drop this in favor of something like panelOptionsRev that gets passed in\n   * similar to structureRev. then we can drop propsToDiff entirely.\n   */\n  options?: Record<string, any>;\n}\n\nfunction sameProps(prevProps: any, nextProps: any, propsToDiff: Array<string | PropDiffFn> = []) {\n  for (const propName of propsToDiff) {\n    if (typeof propName === 'function') {\n      if (!propName(prevProps, nextProps)) {\n        return false;\n      }\n    } else if (nextProps[propName] !== prevProps[propName]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * @internal -- not a public API\n */\nexport interface GraphNGState {\n  alignedFrame: DataFrame;\n  alignedData?: AlignedData;\n  config?: UPlotConfigBuilder;\n}\n\n/**\n * \"Time as X\" core component, expects ascending x\n */\nexport class GraphNG extends Component<GraphNGProps, GraphNGState> {\n  static contextType = PanelContextRoot;\n  panelContext: PanelContext = {} as PanelContext;\n  private plotInstance: React.RefObject<uPlot>;\n\n  private subscription = new Subscription();\n\n  constructor(props: GraphNGProps) {\n    super(props);\n    let state = this.prepState(props);\n    state.alignedData = state.config!.prepData!([state.alignedFrame]) as AlignedData;\n    this.state = state;\n    this.plotInstance = React.createRef();\n  }\n\n  getTimeRange = () => this.props.timeRange;\n\n  prepState(props: GraphNGProps, withConfig = true) {\n    let state: GraphNGState = null as any;\n\n    const { frames, fields, preparePlotFrame } = props;\n\n    const preparePlotFrameFn = preparePlotFrame || defaultPreparePlotFrame;\n\n    const alignedFrame = preparePlotFrameFn(\n      frames,\n      fields || {\n        x: fieldMatchers.get(FieldMatcherID.firstTimeField).get({}),\n        y: fieldMatchers.get(FieldMatcherID.numeric).get({}),\n      },\n      props.timeRange\n    );\n    pluginLog('GraphNG', false, 'data aligned', alignedFrame);\n\n    if (alignedFrame) {\n      let config = this.state?.config;\n\n      if (withConfig) {\n        config = props.prepConfig(alignedFrame, this.props.frames, this.getTimeRange);\n        pluginLog('GraphNG', false, 'config prepared', config);\n      }\n\n      state = {\n        alignedFrame,\n        config,\n      };\n\n      pluginLog('GraphNG', false, 'data prepared', state.alignedData);\n    }\n\n    return state;\n  }\n\n  handleCursorUpdate(evt: DataHoverEvent | LegacyGraphHoverEvent) {\n    const time = evt.payload?.point?.time;\n    const u = this.plotInstance.current;\n    if (u && time) {\n      // Try finding left position on time axis\n      const left = u.valToPos(time, 'x');\n      let top;\n      if (left) {\n        // find midpoint between points at current idx\n        top = findMidPointYPosition(u, u.posToIdx(left));\n      }\n\n      if (!top || !left) {\n        return;\n      }\n\n      u.setCursor({\n        left,\n        top,\n      });\n    }\n  }\n\n  componentDidMount() {\n    this.panelContext = this.context as PanelContext;\n    const { eventBus } = this.panelContext;\n\n    this.subscription.add(\n      eventBus\n        .getStream(DataHoverEvent)\n        .pipe(throttleTime(50))\n        .subscribe({\n          next: (evt) => {\n            if (eventBus === evt.origin) {\n              return;\n            }\n            this.handleCursorUpdate(evt);\n          },\n        })\n    );\n\n    // Legacy events (from flot graph)\n    this.subscription.add(\n      eventBus\n        .getStream(LegacyGraphHoverEvent)\n        .pipe(throttleTime(50))\n        .subscribe({\n          next: (evt) => this.handleCursorUpdate(evt),\n        })\n    );\n\n    this.subscription.add(\n      eventBus\n        .getStream(DataHoverClearEvent)\n        .pipe(throttleTime(50))\n        .subscribe({\n          next: () => {\n            const u = this.plotInstance?.current;\n\n            if (u) {\n              u.setCursor({\n                left: -10,\n                top: -10,\n              });\n            }\n          },\n        })\n    );\n  }\n\n  componentDidUpdate(prevProps: GraphNGProps) {\n    const { frames, structureRev, timeZone, propsToDiff } = this.props;\n\n    const propsChanged = !sameProps(prevProps, this.props, propsToDiff);\n\n    if (frames !== prevProps.frames || propsChanged || timeZone !== prevProps.timeZone) {\n      let newState = this.prepState(this.props, false);\n\n      if (newState) {\n        const shouldReconfig =\n          this.state.config === undefined ||\n          timeZone !== prevProps.timeZone ||\n          structureRev !== prevProps.structureRev ||\n          !structureRev ||\n          propsChanged;\n\n        if (shouldReconfig) {\n          newState.config = this.props.prepConfig(newState.alignedFrame, this.props.frames, this.getTimeRange);\n          pluginLog('GraphNG', false, 'config recreated', newState.config);\n        }\n\n        newState.alignedData = newState.config!.prepData!([newState.alignedFrame]) as AlignedData;\n\n        this.setState(newState);\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.subscription.unsubscribe();\n  }\n\n  render() {\n    const { width, height, children, timeRange, renderLegend } = this.props;\n    const { config, alignedFrame, alignedData } = this.state;\n\n    if (!config) {\n      return null;\n    }\n\n    return (\n      <VizLayout width={width} height={height} legend={renderLegend(config)}>\n        {(vizWidth: number, vizHeight: number) => (\n          <UPlotChart\n            config={config}\n            data={alignedData!}\n            width={vizWidth}\n            height={vizHeight}\n            timeRange={timeRange}\n            plotRef={(u) => ((this.plotInstance as React.MutableRefObject<uPlot>).current = u)}\n          >\n            {children ? children(config, alignedFrame) : null}\n          </UPlotChart>\n        )}\n      </VizLayout>\n    );\n  }\n}\n","import { ArrayVector, DataFrame, FieldType } from '@grafana/data';\n\ntype InsertMode = (prev: number, next: number, threshold: number) => number;\n\nconst INSERT_MODES = {\n  threshold: (prev: number, next: number, threshold: number) => prev + threshold,\n  midpoint: (prev: number, next: number, threshold: number) => (prev + next) / 2,\n  // previous time + 1ms to prevent StateTimeline from forward-interpolating prior state\n  plusone: (prev: number, next: number, threshold: number) => prev + 1,\n};\n\ninterface NullInsertOptions {\n  frame: DataFrame;\n  refFieldName?: string | null;\n  refFieldPseudoMax?: number;\n  refFieldPseudoMin?: number;\n  insertMode?: InsertMode;\n}\n\nexport function applyNullInsertThreshold(opts: NullInsertOptions): DataFrame {\n  if (opts.frame.length === 0) {\n    return opts.frame;\n  }\n\n  let thorough = true;\n  let { frame, refFieldName, refFieldPseudoMax, refFieldPseudoMin, insertMode } = opts;\n\n  if (!insertMode) {\n    insertMode = INSERT_MODES.threshold;\n  }\n\n  const refField = frame.fields.find((field) => {\n    // note: getFieldDisplayName() would require full DF[]\n    return refFieldName != null ? field.name === refFieldName : field.type === FieldType.time;\n  });\n\n  if (refField == null) {\n    return frame;\n  }\n\n  refField.state = {\n    ...refField.state,\n    nullThresholdApplied: true,\n  };\n\n  const thresholds = frame.fields.map((field) => field.config.custom?.insertNulls ?? refField.config.interval ?? null);\n\n  const uniqueThresholds = new Set<number>(thresholds);\n\n  uniqueThresholds.delete(null as any);\n\n  if (uniqueThresholds.size === 0) {\n    return frame;\n  }\n\n  if (uniqueThresholds.size === 1) {\n    const threshold = uniqueThresholds.values().next().value;\n\n    if (threshold <= 0) {\n      return frame;\n    }\n\n    const refValues = refField.values.toArray();\n\n    const frameValues = frame.fields.map((field) => field.values.toArray());\n\n    const filledFieldValues = nullInsertThreshold(\n      refValues,\n      frameValues,\n      threshold,\n      refFieldPseudoMin,\n      refFieldPseudoMax,\n      insertMode,\n      thorough\n    );\n\n    if (filledFieldValues === frameValues) {\n      return frame;\n    }\n\n    return {\n      ...frame,\n      length: filledFieldValues[0].length,\n      fields: frame.fields.map((field, i) => ({\n        ...field,\n        values: new ArrayVector(filledFieldValues[i]),\n      })),\n    };\n  }\n\n  // TODO: unique threshold-per-field (via overrides) is unimplemented\n  // should be done by processing each (refField + thresholdA-field1 + thresholdA-field2...)\n  // as a separate nullInsertThreshold() dataset, then re-join into single dataset via join()\n  return frame;\n}\n\nfunction nullInsertThreshold(\n  refValues: number[],\n  frameValues: any[][],\n  threshold: number,\n  refFieldPseudoMin: number | null = null,\n  // will insert a trailing null when refFieldPseudoMax > last datapoint + threshold\n  refFieldPseudoMax: number | null = null,\n  getInsertValue: InsertMode,\n  // will insert the value at every missing interval\n  thorough: boolean\n) {\n  const len = refValues.length;\n  const refValuesNew: number[] = [];\n\n  // Continuously subtract the threshold from the first data point, filling in insert values accordingly\n  if (refFieldPseudoMin != null && refFieldPseudoMin < refValues[0]) {\n    let preFillCount = Math.ceil((refValues[0] - refFieldPseudoMin) / threshold);\n    // this will be 0 or 1 threshold increment left of visible range\n    let prevSlot = refValues[0] - preFillCount * threshold;\n\n    while (prevSlot < refValues[0]) {\n      // (prevSlot - threshold) is used to simulate the previous 'real' data point, as getInsertValue expects\n      refValuesNew.push(getInsertValue(prevSlot - threshold, prevSlot, threshold));\n      prevSlot += threshold;\n    }\n  }\n\n  // Insert initial value\n  refValuesNew.push(refValues[0]);\n\n  let prevValue: number = refValues[0];\n\n  // Fill nulls when a value is greater than the threshold value\n  for (let i = 1; i < len; i++) {\n    const curValue = refValues[i];\n\n    while (curValue - prevValue > threshold) {\n      refValuesNew.push(getInsertValue(prevValue, curValue, threshold));\n\n      prevValue += threshold;\n\n      if (!thorough) {\n        break;\n      }\n    }\n\n    refValuesNew.push(curValue);\n\n    prevValue = curValue;\n  }\n\n  // At the end of the sequence\n  if (refFieldPseudoMax != null && refFieldPseudoMax > prevValue) {\n    while (prevValue + threshold < refFieldPseudoMax) {\n      refValuesNew.push(getInsertValue(prevValue, refFieldPseudoMax, threshold));\n      prevValue += threshold;\n    }\n  }\n\n  const filledLen = refValuesNew.length;\n\n  if (filledLen === len) {\n    return frameValues;\n  }\n\n  const filledFieldValues: any[][] = [];\n\n  for (let fieldValues of frameValues) {\n    let filledValues;\n\n    if (fieldValues !== refValues) {\n      filledValues = Array(filledLen);\n\n      for (let i = 0, j = 0; i < filledLen; i++) {\n        filledValues[i] = refValues[j] === refValuesNew[i] ? fieldValues[j++] : null;\n      }\n    } else {\n      filledValues = refValuesNew;\n    }\n\n    filledFieldValues.push(filledValues);\n  }\n\n  return filledFieldValues;\n}\n","// mutates all nulls -> undefineds in the fieldValues array for value-less refValues ranges below maxThreshold\n// refValues is typically a time array and maxThreshold is the allowable distance between in time\nexport function nullToUndefThreshold(refValues: number[], fieldValues: any[], maxThreshold: number): any[] {\n  let prevRef;\n  let nullIdx;\n\n  for (let i = 0; i < fieldValues.length; i++) {\n    let fieldVal = fieldValues[i];\n\n    if (fieldVal == null) {\n      if (nullIdx == null && prevRef != null) {\n        nullIdx = i;\n      }\n    } else {\n      if (nullIdx != null) {\n        if (refValues[i] - (prevRef as number) < maxThreshold) {\n          while (nullIdx < i) {\n            fieldValues[nullIdx++] = undefined;\n          }\n        }\n\n        nullIdx = null;\n      }\n\n      prevRef = refValues[i];\n    }\n  }\n\n  return fieldValues;\n}\n","import { ArrayVector, DataFrame, Field, FieldConfig, FieldType, outerJoinDataFrames, TimeRange } from '@grafana/data';\nimport {\n  AxisPlacement,\n  GraphDrawStyle,\n  GraphFieldConfig,\n  ScaleDistribution,\n  ScaleDistributionConfig,\n} from '@grafana/schema';\n\nimport { FIXED_UNIT } from './GraphNG';\nimport { applyNullInsertThreshold } from './nullInsertThreshold';\nimport { nullToUndefThreshold } from './nullToUndefThreshold';\nimport { XYFieldMatchers } from './types';\n\nfunction isVisibleBarField(f: Field) {\n  return (\n    f.type === FieldType.number && f.config.custom?.drawStyle === GraphDrawStyle.Bars && !f.config.custom?.hideFrom?.viz\n  );\n}\n\n// will mutate the DataFrame's fields' values\nfunction applySpanNullsThresholds(frame: DataFrame) {\n  let refField = frame.fields.find((field) => field.type === FieldType.time); // this doesnt need to be time, just any numeric/asc join field\n  let refValues = refField?.values.toArray() as any[];\n\n  for (let i = 0; i < frame.fields.length; i++) {\n    let field = frame.fields[i];\n\n    if (field === refField || isVisibleBarField(field)) {\n      continue;\n    }\n\n    let spanNulls = field.config.custom?.spanNulls;\n\n    if (typeof spanNulls === 'number') {\n      if (spanNulls !== -1) {\n        field.values = new ArrayVector(nullToUndefThreshold(refValues, field.values.toArray(), spanNulls));\n      }\n    }\n  }\n\n  return frame;\n}\n\nexport function preparePlotFrame(frames: DataFrame[], dimFields: XYFieldMatchers, timeRange?: TimeRange | null) {\n  // apply null insertions at interval\n  frames = frames.map((frame) => {\n    if (!frame.fields[0].state?.nullThresholdApplied) {\n      return applyNullInsertThreshold({\n        frame,\n        refFieldName: null,\n        refFieldPseudoMin: timeRange?.from.valueOf(),\n        refFieldPseudoMax: timeRange?.to.valueOf(),\n      });\n    } else {\n      return frame;\n    }\n  });\n\n  let numBarSeries = 0;\n\n  frames.forEach((frame) => {\n    frame.fields.forEach((f) => {\n      if (isVisibleBarField(f)) {\n        // prevent minesweeper-expansion of nulls (gaps) when joining bars\n        // since bar width is determined from the minimum distance between non-undefined values\n        // (this strategy will still retain any original pre-join nulls, though)\n        f.config.custom = {\n          ...f.config.custom,\n          spanNulls: -1,\n        };\n\n        numBarSeries++;\n      }\n    });\n  });\n\n  // to make bar widths of all series uniform (equal to narrowest bar series), find smallest distance between x points\n  let minXDelta = Infinity;\n\n  if (numBarSeries > 1) {\n    frames.forEach((frame) => {\n      if (!frame.fields.some(isVisibleBarField)) {\n        return;\n      }\n\n      const xVals = frame.fields[0].values.toArray();\n\n      for (let i = 0; i < xVals.length; i++) {\n        if (i > 0) {\n          minXDelta = Math.min(minXDelta, xVals[i] - xVals[i - 1]);\n        }\n      }\n    });\n  }\n\n  let alignedFrame = outerJoinDataFrames({\n    frames,\n    joinBy: dimFields.x,\n    keep: dimFields.y,\n    keepOriginIndices: true,\n  });\n\n  if (alignedFrame) {\n    alignedFrame = applySpanNullsThresholds(alignedFrame);\n\n    // append 2 null vals at minXDelta to bar series\n    if (minXDelta !== Infinity) {\n      alignedFrame.fields.forEach((f, fi) => {\n        let vals = f.values.toArray();\n\n        if (fi === 0) {\n          let lastVal = vals[vals.length - 1];\n          vals.push(lastVal + minXDelta, lastVal + 2 * minXDelta);\n        } else if (isVisibleBarField(f)) {\n          vals.push(null, null);\n        } else {\n          vals.push(undefined, undefined);\n        }\n      });\n\n      alignedFrame.length += 2;\n    }\n\n    return alignedFrame;\n  }\n\n  return null;\n}\n\nexport function buildScaleKey(config: FieldConfig<GraphFieldConfig>) {\n  const defaultPart = 'na';\n\n  const scaleRange = `${config.min !== undefined ? config.min : defaultPart}-${\n    config.max !== undefined ? config.max : defaultPart\n  }`;\n\n  const scaleSoftRange = `${config.custom?.axisSoftMin !== undefined ? config.custom.axisSoftMin : defaultPart}-${\n    config.custom?.axisSoftMax !== undefined ? config.custom.axisSoftMax : defaultPart\n  }`;\n\n  const scalePlacement = `${\n    config.custom?.axisPlacement !== undefined ? config.custom?.axisPlacement : AxisPlacement.Auto\n  }`;\n\n  const scaleUnit = config.unit ?? FIXED_UNIT;\n\n  const scaleDistribution = config.custom?.scaleDistribution\n    ? getScaleDistributionPart(config.custom.scaleDistribution)\n    : ScaleDistribution.Linear;\n\n  const scaleLabel = Boolean(config.custom?.axisLabel) ? config.custom!.axisLabel : defaultPart;\n\n  return `${scaleUnit}/${scaleRange}/${scaleSoftRange}/${scalePlacement}/${scaleDistribution}/${scaleLabel}`;\n}\n\nfunction getScaleDistributionPart(config: ScaleDistributionConfig) {\n  if (config.type === ScaleDistribution.Log) {\n    return `${config.type}${config.log}`;\n  }\n  return config.type;\n}\n","import uPlot, { AlignedData, Options, PaddingSide } from 'uplot';\n\nimport { DataFrame, ensureTimeField, FieldType } from '@grafana/data';\nimport { BarAlignment, GraphDrawStyle, GraphTransform, LineInterpolation, StackingMode } from '@grafana/schema';\n\nimport { attachDebugger } from '../../utils';\nimport { createLogger } from '../../utils/logger';\nimport { buildScaleKey } from '../GraphNG/utils';\n\nconst ALLOWED_FORMAT_STRINGS_REGEX = /\\b(YYYY|YY|MMMM|MMM|MM|M|DD|D|WWWW|WWW|HH|H|h|AA|aa|a|mm|m|ss|s|fff)\\b/g;\n\nexport function timeFormatToTemplate(f: string) {\n  return f.replace(ALLOWED_FORMAT_STRINGS_REGEX, (match) => `{${match}}`);\n}\n\nconst paddingSide: PaddingSide = (u, side, sidesWithAxes) => {\n  let hasCrossAxis = side % 2 ? sidesWithAxes[0] || sidesWithAxes[2] : sidesWithAxes[1] || sidesWithAxes[3];\n\n  return sidesWithAxes[side] || !hasCrossAxis ? 0 : 8;\n};\n\nexport const DEFAULT_PLOT_CONFIG: Partial<Options> = {\n  ms: 1,\n  focus: {\n    alpha: 1,\n  },\n  cursor: {\n    focus: {\n      prox: 30,\n    },\n  },\n  legend: {\n    show: false,\n  },\n  padding: [paddingSide, paddingSide, paddingSide, paddingSide],\n  series: [],\n  hooks: {},\n};\n\n/** @internal */\ninterface StackMeta {\n  totals: AlignedData;\n}\n\n/** @internal */\nexport interface StackingGroup {\n  series: number[];\n  dir: StackDirection;\n}\n\n/** @internal */\nconst enum StackDirection {\n  Pos = 1,\n  Neg = -1,\n}\n\n// generates bands between adjacent group series\n/** @internal */\nexport function getStackingBands(group: StackingGroup) {\n  let bands: uPlot.Band[] = [];\n  let { series, dir } = group;\n  let lastIdx = series.length - 1;\n\n  let rSeries = series.slice().reverse();\n\n  rSeries.forEach((si, i) => {\n    if (i !== lastIdx) {\n      let nextIdx = rSeries[i + 1];\n      bands.push({\n        series: [si, nextIdx],\n        // fill direction is inverted from stack direction\n        dir: (-1 * dir) as 1 | -1,\n      });\n    }\n  });\n\n  return bands;\n}\n\n// expects an AlignedFrame\n/** @internal */\nexport function getStackingGroups(frame: DataFrame) {\n  let groups: Map<string, StackingGroup> = new Map();\n\n  frame.fields.forEach(({ config, values }, i) => {\n    // skip x or time field\n    if (i === 0) {\n      return;\n    }\n\n    let { custom } = config;\n\n    if (custom == null) {\n      return;\n    }\n\n    // TODO: currently all AlignedFrame fields end up in uplot series & data, even custom.hideFrom?.viz\n    // ideally hideFrom.viz fields would be excluded so we can remove this\n    if (custom.hideFrom?.viz) {\n      return;\n    }\n\n    let { stacking } = custom;\n\n    if (stacking == null) {\n      return;\n    }\n\n    let { mode: stackingMode, group: stackingGroup } = stacking;\n\n    // not stacking\n    if (stackingMode === StackingMode.None) {\n      return;\n    }\n\n    // will this be stacked up or down after any transforms applied\n    let vals = values.toArray();\n    let transform = custom.transform;\n    let stackDir = getStackDirection(transform, vals);\n\n    let drawStyle = custom.drawStyle as GraphDrawStyle;\n    let drawStyle2 =\n      drawStyle === GraphDrawStyle.Bars\n        ? (custom.barAlignment as BarAlignment)\n        : drawStyle === GraphDrawStyle.Line\n        ? (custom.lineInterpolation as LineInterpolation)\n        : null;\n\n    let stackKey = `${stackDir}|${stackingMode}|${stackingGroup}|${buildScaleKey(config)}|${drawStyle}|${drawStyle2}`;\n\n    let group = groups.get(stackKey);\n\n    if (group == null) {\n      group = {\n        series: [],\n        dir: stackDir,\n      };\n\n      groups.set(stackKey, group);\n    }\n\n    group.series.push(i);\n  });\n\n  return [...groups.values()];\n}\n\n/** @internal */\nexport function preparePlotData2(\n  frame: DataFrame,\n  stackingGroups: StackingGroup[],\n  onStackMeta?: (meta: StackMeta) => void\n) {\n  let data = Array(frame.fields.length) as AlignedData;\n\n  let stacksQty = stackingGroups.length;\n\n  let dataLen = frame.length;\n  let zeroArr = stacksQty > 0 ? Array(dataLen).fill(0) : [];\n  let falseArr = stacksQty > 0 ? Array(dataLen).fill(false) : [];\n  let accums = Array.from({ length: stacksQty }, () => zeroArr.slice());\n\n  let anyValsAtX = Array.from({ length: stacksQty }, () => falseArr.slice());\n\n  // figure out at which time indices each stacking group has any values\n  // (needed to avoid absorbing initial accum 0s at unrelated joined timestamps)\n  stackingGroups.forEach((group, groupIdx) => {\n    let groupValsAtX = anyValsAtX[groupIdx];\n\n    group.series.forEach((seriesIdx) => {\n      let field = frame.fields[seriesIdx];\n\n      if (field.config.custom?.hideFrom?.viz) {\n        return;\n      }\n\n      let vals = field.values.toArray();\n\n      for (let i = 0; i < dataLen; i++) {\n        if (vals[i] != null) {\n          groupValsAtX[i] = true;\n        }\n      }\n    });\n  });\n\n  frame.fields.forEach((field, i) => {\n    let vals = field.values.toArray();\n\n    if (i === 0) {\n      if (field.type === FieldType.time) {\n        data[i] = ensureTimeField(field).values.toArray();\n      } else {\n        data[i] = vals;\n      }\n      return;\n    }\n\n    let { custom } = field.config;\n\n    if (!custom || custom.hideFrom?.viz) {\n      data[i] = vals;\n      return;\n    }\n\n    // apply transforms\n    if (custom.transform === GraphTransform.Constant) {\n      let firstValIdx = vals.findIndex((v) => v != null);\n      let firstVal = vals[firstValIdx];\n      vals = Array(vals.length).fill(undefined);\n      vals[firstValIdx] = firstVal;\n    } else {\n      vals = vals.slice();\n\n      if (custom.transform === GraphTransform.NegativeY) {\n        for (let i = 0; i < vals.length; i++) {\n          if (vals[i] != null) {\n            vals[i] *= -1;\n          }\n        }\n      }\n    }\n\n    let stackingMode = custom.stacking?.mode;\n\n    if (!stackingMode || stackingMode === StackingMode.None) {\n      data[i] = vals;\n    } else {\n      let stackIdx = stackingGroups.findIndex((group) => group.series.indexOf(i) > -1);\n\n      let accum = accums[stackIdx];\n      let groupValsAtX = anyValsAtX[stackIdx];\n      let stacked = (data[i] = Array(dataLen));\n\n      for (let i = 0; i < dataLen; i++) {\n        let v = vals[i];\n\n        if (v != null) {\n          stacked[i] = accum[i] += v;\n        } else {\n          stacked[i] = groupValsAtX[i] ? accum[i] : v;\n        }\n      }\n    }\n  });\n\n  if (onStackMeta) {\n    let accumsBySeriesIdx = data.map((vals, i) => {\n      let stackIdx = stackingGroups.findIndex((group) => group.series.indexOf(i) > -1);\n      return stackIdx !== -1 ? accums[stackIdx] : vals;\n    });\n\n    onStackMeta({\n      totals: accumsBySeriesIdx as AlignedData,\n    });\n  }\n\n  // re-compute by percent\n  frame.fields.forEach((field, i) => {\n    if (i === 0 || field.config.custom?.hideFrom?.viz) {\n      return;\n    }\n\n    let stackingMode = field.config.custom?.stacking?.mode;\n\n    if (stackingMode === StackingMode.Percent) {\n      let stackIdx = stackingGroups.findIndex((group) => group.series.indexOf(i) > -1);\n      let accum = accums[stackIdx];\n      let group = stackingGroups[stackIdx];\n\n      let stacked = data[i];\n\n      for (let i = 0; i < dataLen; i++) {\n        let v = stacked[i];\n\n        if (v != null) {\n          // v / accum will always be pos, so properly (re)sign by group stacking dir\n          stacked[i] = accum[i] === 0 ? 0 : group.dir * (v / accum[i]);\n        }\n      }\n    }\n  });\n\n  return data;\n}\n\n/**\n * Finds y axis midpoint for point at given idx (css pixels relative to uPlot canvas)\n * @internal\n **/\n\nexport function findMidPointYPosition(u: uPlot, idx: number) {\n  let y;\n  let sMaxIdx = 1;\n  let sMinIdx = 1;\n  // assume min/max being values of 1st series\n  let max = u.data[1][idx];\n  let min = u.data[1][idx];\n\n  // find min max values AND ids of the corresponding series to get the scales\n  for (let i = 1; i < u.data.length; i++) {\n    const sData = u.data[i];\n    const sVal = sData[idx];\n    if (sVal != null) {\n      if (max == null) {\n        max = sVal;\n      } else {\n        if (sVal > max) {\n          max = u.data[i][idx];\n          sMaxIdx = i;\n        }\n      }\n      if (min == null) {\n        min = sVal;\n      } else {\n        if (sVal < min) {\n          min = u.data[i][idx];\n          sMinIdx = i;\n        }\n      }\n    }\n  }\n\n  if (min == null && max == null) {\n    // no tooltip to show\n    y = undefined;\n  } else if (min != null && max != null) {\n    // find median position\n    y = (u.valToPos(min, u.series[sMinIdx].scale!) + u.valToPos(max, u.series[sMaxIdx].scale!)) / 2;\n  } else {\n    // snap tooltip to min OR max point, one of those is not null :)\n    y = u.valToPos((min || max)!, u.series[(sMaxIdx || sMinIdx)!].scale!);\n  }\n\n  // if y is out of canvas bounds, snap it to the bottom\n  if (y !== undefined && y < 0) {\n    y = u.bbox.height / devicePixelRatio;\n  }\n\n  return y;\n}\n\nfunction getStackDirection(transform: GraphTransform, data: unknown[]) {\n  const hasNegSamp = hasNegSample(data);\n\n  if (transform === GraphTransform.NegativeY) {\n    return hasNegSamp ? StackDirection.Pos : StackDirection.Neg;\n  }\n  return hasNegSamp ? StackDirection.Neg : StackDirection.Pos;\n}\n\n// similar to isLikelyAscendingVector()\nfunction hasNegSample(data: unknown[], samples = 100) {\n  const len = data.length;\n\n  if (len === 0) {\n    return false;\n  }\n\n  // skip leading & trailing nullish\n  let firstIdx = 0;\n  let lastIdx = len - 1;\n\n  while (firstIdx <= lastIdx && data[firstIdx] == null) {\n    firstIdx++;\n  }\n\n  while (lastIdx >= firstIdx && data[lastIdx] == null) {\n    lastIdx--;\n  }\n\n  let negCount = 0;\n  let posCount = 0;\n\n  if (lastIdx >= firstIdx) {\n    const stride = Math.max(1, Math.floor((lastIdx - firstIdx + 1) / samples));\n\n    for (let i = firstIdx; i <= lastIdx; i += stride) {\n      const v = data[i];\n\n      if (v != null) {\n        if (v < 0 || Object.is(v, -0)) {\n          negCount++;\n        } else if (v > 0) {\n          posCount++;\n        }\n      }\n    }\n\n    if (negCount > posCount) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// Dev helpers\n\n/** @internal */\nexport const pluginLogger = createLogger('uPlot');\nexport const pluginLog = pluginLogger.logger;\n// pluginLogger.enable();\nattachDebugger('graphng', undefined, pluginLogger);\n","import React, { Component, createRef } from 'react';\nimport uPlot, { AlignedData, Options } from 'uplot';\n\nimport { PlotProps } from './types';\nimport { pluginLog } from './utils';\n\nfunction sameDims(prevProps: PlotProps, nextProps: PlotProps) {\n  return nextProps.width === prevProps.width && nextProps.height === prevProps.height;\n}\n\nfunction sameData(prevProps: PlotProps, nextProps: PlotProps) {\n  return nextProps.data === prevProps.data;\n}\n\nfunction sameConfig(prevProps: PlotProps, nextProps: PlotProps) {\n  return nextProps.config === prevProps.config;\n}\n\nfunction sameTimeRange(prevProps: PlotProps, nextProps: PlotProps) {\n  let prevTime = prevProps.timeRange;\n  let nextTime = nextProps.timeRange;\n\n  return (\n    prevTime === nextTime ||\n    (nextTime.from.valueOf() === prevTime.from.valueOf() && nextTime.to.valueOf() === prevTime.to.valueOf())\n  );\n}\n\ntype UPlotChartState = {\n  plot: uPlot | null;\n};\n\n/**\n * @internal\n * uPlot abstraction responsible for plot initialisation, setup and refresh\n * Receives a data frame that is x-axis aligned, as of https://github.com/leeoniya/uPlot/tree/master/docs#data-format\n * Exposes context for uPlot instance access\n */\nexport class UPlotChart extends Component<PlotProps, UPlotChartState> {\n  plotContainer = createRef<HTMLDivElement>();\n  plotCanvasBBox = createRef<DOMRect>();\n\n  constructor(props: PlotProps) {\n    super(props);\n\n    this.state = {\n      plot: null,\n    };\n  }\n\n  reinitPlot() {\n    let { width, height, plotRef } = this.props;\n\n    this.state.plot?.destroy();\n\n    if (width === 0 && height === 0) {\n      return;\n    }\n\n    this.props.config.addHook('setSize', (u) => {\n      const canvas = u.over;\n      if (!canvas) {\n        return;\n      }\n    });\n\n    const config: Options = {\n      width: Math.floor(this.props.width),\n      height: Math.floor(this.props.height),\n      ...this.props.config.getConfig(),\n    };\n\n    pluginLog('UPlot', false, 'Reinitializing plot', config);\n    const plot = new uPlot(config, this.props.data as AlignedData, this.plotContainer!.current!);\n\n    if (plotRef) {\n      plotRef(plot);\n    }\n\n    this.setState({ plot });\n  }\n\n  componentDidMount() {\n    this.reinitPlot();\n  }\n\n  componentWillUnmount() {\n    this.state.plot?.destroy();\n  }\n\n  componentDidUpdate(prevProps: PlotProps) {\n    let { plot } = this.state;\n\n    if (!sameDims(prevProps, this.props)) {\n      plot?.setSize({\n        width: Math.floor(this.props.width),\n        height: Math.floor(this.props.height),\n      });\n    } else if (!sameConfig(prevProps, this.props)) {\n      this.reinitPlot();\n    } else if (!sameData(prevProps, this.props)) {\n      plot?.setData(this.props.data as AlignedData);\n    } else if (!sameTimeRange(prevProps, this.props)) {\n      plot?.setScale('x', {\n        min: this.props.timeRange.from.valueOf(),\n        max: this.props.timeRange.to.valueOf(),\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div style={{ position: 'relative' }}>\n        <div ref={this.plotContainer} data-testid=\"uplot-main-div\" />\n        {this.props.children}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport uPlot, { Options, AlignedData } from 'uplot';\n\nimport { TimeRange } from '@grafana/data';\n\nimport { UPlotConfigBuilder } from './config/UPlotConfigBuilder';\n\nexport type PlotConfig = Pick<\n  Options,\n  'mode' | 'series' | 'scales' | 'axes' | 'cursor' | 'bands' | 'hooks' | 'select' | 'tzDate' | 'padding'\n>;\n\nexport interface PlotPluginProps {\n  id: string;\n}\n\nexport type FacetValues = any[];\nexport type FacetSeries = FacetValues[];\nexport type FacetedData = [_: null, ...series: FacetSeries];\n\nexport interface PlotProps {\n  data: AlignedData | FacetedData;\n  width: number;\n  height: number;\n  config: UPlotConfigBuilder;\n  timeRange: TimeRange;\n  children?: React.ReactNode;\n  // Reference to uPlot instance\n  plotRef?: (u: uPlot) => void;\n}\n\nexport abstract class PlotConfigBuilder<P, T> {\n  constructor(public props: P) {}\n  abstract getConfig(): T;\n}\n\n/**\n * @alpha\n */\nexport type PlotTooltipInterpolator = (\n  updateActiveSeriesIdx: (sIdx: number | null) => void,\n  updateActiveDatapointIdx: (dIdx: number | null) => void,\n  updateTooltipPosition: (clear?: boolean) => void,\n  u: uPlot\n) => void;\n\nexport interface PlotSelection {\n  min: number;\n  max: number;\n\n  // selection bounding box, relative to canvas\n  bbox: {\n    top: number;\n    left: number;\n    width: number;\n    height: number;\n  };\n}\n","import uPlot, { Scale, Range } from 'uplot';\n\nimport { DecimalCount, incrRoundDn, incrRoundUp, isBooleanUnit } from '@grafana/data';\nimport { ScaleOrientation, ScaleDirection, ScaleDistribution } from '@grafana/schema';\n\nimport { PlotConfigBuilder } from '../types';\n\nexport interface ScaleProps {\n  scaleKey: string;\n  isTime?: boolean;\n  min?: number | null;\n  max?: number | null;\n  softMin?: number | null;\n  softMax?: number | null;\n  range?: Scale.Range;\n  distribution?: ScaleDistribution;\n  orientation: ScaleOrientation;\n  direction: ScaleDirection;\n  log?: number;\n  linearThreshold?: number;\n  centeredZero?: boolean;\n  decimals?: DecimalCount;\n}\n\nexport class UPlotScaleBuilder extends PlotConfigBuilder<ScaleProps, Scale> {\n  merge(props: ScaleProps) {\n    this.props.min = optMinMax('min', this.props.min, props.min);\n    this.props.max = optMinMax('max', this.props.max, props.max);\n  }\n\n  getConfig(): Scale {\n    let {\n      isTime,\n      scaleKey,\n      min: hardMin,\n      max: hardMax,\n      softMin,\n      softMax,\n      range,\n      direction,\n      orientation,\n      centeredZero,\n      decimals,\n    } = this.props;\n\n    const distr = this.props.distribution;\n\n    const distribution = !isTime\n      ? {\n          distr:\n            distr === ScaleDistribution.Symlog\n              ? 4\n              : distr === ScaleDistribution.Log\n              ? 3\n              : distr === ScaleDistribution.Ordinal\n              ? 2\n              : 1,\n          log: distr === ScaleDistribution.Log || distr === ScaleDistribution.Symlog ? this.props.log ?? 2 : undefined,\n          asinh: distr === ScaleDistribution.Symlog ? this.props.linearThreshold ?? 1 : undefined,\n        }\n      : {};\n\n    // guard against invalid log scale limits <= 0, or snap to log boundaries\n    if (distr === ScaleDistribution.Log) {\n      let logBase = this.props.log!;\n      let logFn = logBase === 2 ? Math.log2 : Math.log10;\n\n      if (hardMin != null) {\n        if (hardMin <= 0) {\n          hardMin = null;\n        } else {\n          hardMin = logBase ** Math.floor(logFn(hardMin));\n        }\n      }\n\n      if (hardMax != null) {\n        if (hardMax <= 0) {\n          hardMax = null;\n        } else {\n          hardMax = logBase ** Math.ceil(logFn(hardMax));\n        }\n      }\n\n      if (softMin != null) {\n        if (softMin <= 0) {\n          softMin = null;\n        } else {\n          softMin = logBase ** Math.floor(logFn(softMin));\n        }\n      }\n\n      if (softMax != null) {\n        if (softMax <= 0) {\n          softMax = null;\n        } else {\n          softMax = logBase ** Math.ceil(logFn(softMax));\n        }\n      }\n    }\n    /*\n    // snap to symlog boundaries\n    else if (distr === ScaleDistribution.Symlog) {\n      let logBase = this.props.log!;\n      let logFn = logBase === 2 ? Math.log2 : Math.log10;\n\n      let sign = Math.sign(hardMin);\n\n      if (hardMin != null) {\n        hardMin = logBase ** Math.floor(logFn(hardMin));\n      }\n\n      if (hardMax != null) {\n        hardMax = logBase ** Math.ceil(logFn(hardMax));\n      }\n\n      if (softMin != null) {\n        softMin = logBase ** Math.floor(logFn(softMin));\n      }\n\n      if (softMax != null) {\n        softMax = logBase ** Math.ceil(logFn(softMax));\n      }\n    }\n    */\n\n    // uPlot's default ranging config for both min & max is {pad: 0.1, hard: null, soft: 0, mode: 3}\n    let softMinMode: Range.SoftMode = softMin == null ? 3 : 1;\n    let softMaxMode: Range.SoftMode = softMax == null ? 3 : 1;\n\n    const rangeConfig: Range.Config = {\n      min: {\n        pad: 0.1,\n        hard: hardMin ?? -Infinity,\n        soft: softMin || 0,\n        mode: softMinMode,\n      },\n      max: {\n        pad: 0.1,\n        hard: hardMax ?? Infinity,\n        soft: softMax || 0,\n        mode: softMaxMode,\n      },\n    };\n\n    let hardMinOnly = softMin == null && hardMin != null;\n    let hardMaxOnly = softMax == null && hardMax != null;\n    let hasFixedRange = hardMinOnly && hardMaxOnly;\n\n    const rangeFn: uPlot.Range.Function = (\n      u: uPlot,\n      dataMin: number | null,\n      dataMax: number | null,\n      scaleKey: string\n    ) => {\n      const scale = u.scales[scaleKey];\n\n      let minMax: uPlot.Range.MinMax = [dataMin, dataMax];\n\n      // happens when all series on a scale are `show: false`, re-returning nulls will auto-disable axis\n      if (!hasFixedRange && dataMin == null && dataMax == null) {\n        return minMax;\n      }\n\n      let logBase = scale.log ?? 10;\n\n      if (scale.distr === 1 || scale.distr === 2 || scale.distr === 4) {\n        if (centeredZero) {\n          let absMin = Math.abs(dataMin!);\n          let absMax = Math.abs(dataMax!);\n          let max = Math.max(absMin, absMax);\n          dataMin = -max;\n          dataMax = max;\n        }\n\n        if (scale.distr === 4) {\n          minMax = uPlot.rangeAsinh(dataMin!, dataMax!, logBase, true);\n        } else {\n          // @ts-ignore here we may use hardMin / hardMax to make sure any extra padding is computed from a more accurate delta\n          minMax = uPlot.rangeNum(hardMinOnly ? hardMin : dataMin, hardMaxOnly ? hardMax : dataMax, rangeConfig);\n        }\n      } else if (scale.distr === 3) {\n        minMax = uPlot.rangeLog(hardMin ?? dataMin!, hardMax ?? dataMax!, logBase, true);\n      }\n\n      if (decimals === 0) {\n        if (scale.distr === 1 || scale.distr === 2) {\n          minMax[0] = incrRoundDn(minMax[0]!, 1);\n          minMax[1] = incrRoundUp(minMax[1]!, 1);\n        }\n        // log2 or log10 scale min must be clamped to 1\n        else if (scale.distr === 3) {\n          let logFn = scale.log === 2 ? Math.log2 : Math.log10;\n\n          if (minMax[0]! <= 1) {\n            // clamp min\n            minMax[0] = 1;\n          } else {\n            // snap min to nearest mag below\n            let minExp = Math.floor(logFn(minMax[0]!));\n            minMax[0] = logBase ** minExp;\n          }\n\n          // snap max to nearest mag above\n          let maxExp = Math.ceil(logFn(minMax[1]!));\n          minMax[1] = logBase ** maxExp;\n\n          // inflate max by mag if same\n          if (minMax[0] === minMax[1]) {\n            minMax[1] *= logBase;\n          }\n        }\n        // TODO: this should be better. symlog values can be <= 0, but should also be snapped to log2 or log10 boundaries\n        // for now we just do same as linear snapping above, so may have non-neat range and ticks at edges\n        else if (scale.distr === 4) {\n          minMax[0] = incrRoundDn(minMax[0]!, 1);\n          minMax[1] = incrRoundUp(minMax[1]!, 1);\n        }\n      }\n\n      if (scale.distr === 1 || scale.distr === 4) {\n        // if all we got were hard limits, treat them as static min/max\n        if (hardMinOnly) {\n          minMax[0] = hardMin!;\n        }\n\n        if (hardMaxOnly) {\n          minMax[1] = hardMax!;\n        }\n      }\n\n      // guard against invalid y ranges\n      if (minMax[0]! >= minMax[1]!) {\n        minMax[0] = scale.distr === 3 ? 1 : 0;\n        minMax[1] = 100;\n      }\n\n      return minMax;\n    };\n\n    let auto = !isTime && !hasFixedRange;\n\n    if (isBooleanUnit(scaleKey)) {\n      auto = false;\n      range = [0, 1];\n    }\n\n    return {\n      [scaleKey]: {\n        time: isTime,\n        auto,\n        range: range ?? rangeFn,\n        dir: direction,\n        ori: orientation,\n        ...distribution,\n      },\n    };\n  }\n}\n\nexport function optMinMax(minmax: 'min' | 'max', a?: number | null, b?: number | null): undefined | number | null {\n  const hasA = !(a === undefined || a === null);\n  const hasB = !(b === undefined || b === null);\n  if (hasA) {\n    if (!hasB) {\n      return a;\n    }\n    if (minmax === 'min') {\n      return a! < b! ? a : b;\n    }\n    return a! > b! ? a : b;\n  }\n  return b;\n}\n","import uPlot, { Axis } from 'uplot';\n\nimport {\n  dateTimeFormat,\n  DecimalCount,\n  GrafanaTheme2,\n  guessDecimals,\n  isBooleanUnit,\n  roundDecimals,\n  systemDateFormats,\n  TimeZone,\n} from '@grafana/data';\nimport { AxisPlacement, ScaleDistribution } from '@grafana/schema';\n\nimport { measureText } from '../../../utils/measureText';\nimport { PlotConfigBuilder } from '../types';\n\nimport { optMinMax } from './UPlotScaleBuilder';\n\nexport interface AxisProps {\n  scaleKey: string;\n  theme: GrafanaTheme2;\n  label?: string;\n  show?: boolean;\n  size?: number | null;\n  gap?: number;\n  tickLabelRotation?: number;\n  placement?: AxisPlacement;\n  grid?: Axis.Grid;\n  ticks?: Axis.Ticks;\n  filter?: Axis.Filter;\n  space?: Axis.Space;\n  formatValue?: (v: any, decimals?: DecimalCount) => string;\n  incrs?: Axis.Incrs;\n  splits?: Axis.Splits;\n  values?: Axis.Values;\n  isTime?: boolean;\n  timeZone?: TimeZone;\n  color?: uPlot.Axis.Stroke;\n  border?: uPlot.Axis.Border;\n  decimals?: DecimalCount;\n  distr?: ScaleDistribution;\n}\n\nexport const UPLOT_AXIS_FONT_SIZE = 12;\nconst labelPad = 8;\n\nexport class UPlotAxisBuilder extends PlotConfigBuilder<AxisProps, Axis> {\n  merge(props: AxisProps) {\n    this.props.size = optMinMax('max', this.props.size, props.size);\n    if (!this.props.label) {\n      this.props.label = props.label;\n    }\n    if (this.props.placement === AxisPlacement.Auto) {\n      this.props.placement = props.placement;\n    }\n  }\n  /* Minimum grid & tick spacing in CSS pixels */\n  calculateSpace(self: uPlot, axisIdx: number, scaleMin: number, scaleMax: number, plotDim: number): number {\n    const axis = self.axes[axisIdx];\n    const scale = self.scales[axis.scale!];\n\n    // for axis left & right\n    if (axis.side !== 2 || !scale) {\n      return 30;\n    }\n\n    const defaultSpacing = 40;\n\n    if (scale.time) {\n      const maxTicks = plotDim / defaultSpacing;\n      const increment = (scaleMax - scaleMin) / maxTicks;\n      const sample = formatTime(self, [scaleMin], axisIdx, defaultSpacing, increment);\n      const width = measureText(sample[0], UPLOT_AXIS_FONT_SIZE).width + 18;\n      return width;\n    }\n\n    return defaultSpacing;\n  }\n\n  /** height of x axis or width of y axis in CSS pixels alloted for values, gap & ticks, but excluding axis label */\n  calculateAxisSize(self: uPlot, values: string[], axisIdx: number) {\n    const axis = self.axes[axisIdx];\n\n    let axisSize = axis.ticks!.size!;\n\n    if (axis.side === 2) {\n      axisSize += axis!.gap! + UPLOT_AXIS_FONT_SIZE;\n    } else if (values?.length) {\n      let maxTextWidth = values.reduce(\n        (acc, value) => Math.max(acc, measureText(value, UPLOT_AXIS_FONT_SIZE).width),\n        0\n      );\n      // limit y tick label width to 40% of visualization\n      const textWidthWithLimit = Math.min(self.width * 0.4, maxTextWidth);\n      // Not sure why this += and not normal assignment\n      axisSize += axis!.gap! + axis!.labelGap! + textWidthWithLimit;\n    }\n\n    return Math.ceil(axisSize);\n  }\n\n  getConfig(): Axis {\n    let {\n      scaleKey,\n      label,\n      show = true,\n      placement = AxisPlacement.Auto,\n      grid = { show: true },\n      ticks,\n      space,\n      filter,\n      gap = 5,\n      formatValue,\n      splits,\n      values,\n      incrs,\n      isTime,\n      timeZone,\n      theme,\n      tickLabelRotation,\n      size,\n      color,\n      border,\n      decimals,\n      distr = ScaleDistribution.Linear,\n    } = this.props;\n\n    const font = `${UPLOT_AXIS_FONT_SIZE}px ${theme.typography.fontFamily}`;\n\n    const gridColor = theme.isDark ? 'rgba(240, 250, 255, 0.09)' : 'rgba(0, 10, 23, 0.09)';\n\n    // TODO: this is pretty flimsy now that scaleKey is composed from multiple parts :/\n    if (isBooleanUnit(scaleKey)) {\n      splits = [0, 1];\n    }\n\n    if (decimals === 0 && distr === ScaleDistribution.Linear) {\n      filter = (u, splits) => splits.map((v) => (Number.isInteger(v) ? v : null));\n    }\n\n    let config: Axis = {\n      scale: scaleKey,\n      show,\n      stroke: color ?? theme.colors.text.primary,\n      side: getUPlotSideFromAxis(placement),\n      font,\n      size:\n        size ??\n        ((self, values, axisIdx) => {\n          return this.calculateAxisSize(self, values, axisIdx);\n        }),\n      rotate: tickLabelRotation,\n      gap,\n\n      labelGap: 0,\n\n      grid: {\n        show: grid.show,\n        stroke: gridColor,\n        width: 1 / devicePixelRatio,\n      },\n      ticks: Object.assign(\n        {\n          show: true,\n          stroke: gridColor,\n          width: 1 / devicePixelRatio,\n          size: 4,\n        },\n        ticks\n      ),\n      splits,\n      values,\n      space:\n        space ??\n        ((self, axisIdx, scaleMin, scaleMax, plotDim) => {\n          return this.calculateSpace(self, axisIdx, scaleMin, scaleMax, plotDim);\n        }),\n      filter,\n      incrs,\n    };\n\n    if (border != null) {\n      config.border = border;\n    }\n\n    if (label != null && label.length > 0) {\n      config.label = label;\n      config.labelSize = UPLOT_AXIS_FONT_SIZE + labelPad;\n      config.labelFont = font;\n      config.labelGap = labelPad;\n    }\n\n    if (values) {\n      config.values = values;\n    } else if (isTime) {\n      config.values = formatTime;\n    } else if (formatValue) {\n      config.values = (u: uPlot, splits, axisIdx, tickSpace, tickIncr) => {\n        let decimals = guessDecimals(roundDecimals(tickIncr, 6));\n        return splits.map((v) => formatValue!(v, decimals > 0 ? decimals : undefined));\n      };\n    }\n\n    // store timezone\n    (config as any).timeZone = timeZone;\n\n    return config;\n  }\n}\n\nconst timeUnitSize = {\n  second: 1000,\n  minute: 60 * 1000,\n  hour: 60 * 60 * 1000,\n  day: 24 * 60 * 60 * 1000,\n  month: 28 * 24 * 60 * 60 * 1000,\n  year: 365 * 24 * 60 * 60 * 1000,\n};\n\n/** Format time axis ticks */\nexport function formatTime(\n  self: uPlot,\n  splits: number[],\n  axisIdx: number,\n  foundSpace: number,\n  foundIncr: number\n): string[] {\n  const timeZone = (self.axes[axisIdx] as any).timeZone;\n  const scale = self.scales.x;\n  const range = (scale?.max ?? 0) - (scale?.min ?? 0);\n  const yearRoundedToDay = Math.round(timeUnitSize.year / timeUnitSize.day) * timeUnitSize.day;\n  const incrementRoundedToDay = Math.round(foundIncr / timeUnitSize.day) * timeUnitSize.day;\n\n  let format = systemDateFormats.interval.year;\n\n  if (foundIncr < timeUnitSize.second) {\n    format = systemDateFormats.interval.millisecond;\n  } else if (foundIncr <= timeUnitSize.minute) {\n    format = systemDateFormats.interval.second;\n  } else if (range <= timeUnitSize.day) {\n    format = systemDateFormats.interval.minute;\n  } else if (foundIncr <= timeUnitSize.day) {\n    format = systemDateFormats.interval.hour;\n  } else if (range < timeUnitSize.year) {\n    format = systemDateFormats.interval.day;\n  } else if (incrementRoundedToDay === yearRoundedToDay) {\n    format = systemDateFormats.interval.year;\n  } else if (foundIncr <= timeUnitSize.year) {\n    format = systemDateFormats.interval.month;\n  }\n\n  return splits.map((v) => (v == null ? '' : dateTimeFormat(v, { format, timeZone })));\n}\n\nexport function getUPlotSideFromAxis(axis: AxisPlacement) {\n  switch (axis) {\n    case AxisPlacement.Top:\n      return 0;\n    case AxisPlacement.Right:\n      return 1;\n    case AxisPlacement.Bottom:\n      return 2;\n    case AxisPlacement.Left:\n  }\n\n  return 3; // default everythign to the left\n}\n","import tinycolor from 'tinycolor2';\nimport uPlot from 'uplot';\n\nimport {\n  colorManipulator,\n  FieldColorMode,\n  FieldColorModeId,\n  GrafanaTheme2,\n  ThresholdsConfig,\n  ThresholdsMode,\n} from '@grafana/data';\nimport { ScaleOrientation } from '@grafana/schema';\n\nimport { getCanvasContext } from '../../../utils/measureText';\n\nfunction makeDirectionalGradient(direction: GradientDirection, bbox: uPlot.BBox, ctx: CanvasRenderingContext2D) {\n  let x0 = 0,\n    y0 = 0,\n    x1 = 0,\n    y1 = 0;\n\n  if (direction === GradientDirection.Down) {\n    y0 = bbox.top;\n    y1 = bbox.top + bbox.height;\n  } else if (direction === GradientDirection.Left) {\n    x0 = bbox.left + bbox.width;\n    x1 = bbox.left;\n  } else if (direction === GradientDirection.Up) {\n    y0 = bbox.top + bbox.height;\n    y1 = bbox.top;\n  } else if (direction === GradientDirection.Right) {\n    x0 = bbox.left;\n    x1 = bbox.left + bbox.width;\n  }\n\n  return ctx.createLinearGradient(x0, y0, x1, y1);\n}\n\nexport function getOpacityGradientFn(\n  color: string,\n  opacity: number\n): (self: uPlot, seriesIdx: number) => CanvasGradient {\n  return (plot: uPlot, seriesIdx: number) => {\n    const ctx = getCanvasContext();\n    const gradient = makeDirectionalGradient(\n      plot.scales.x!.ori === ScaleOrientation.Horizontal ? GradientDirection.Down : GradientDirection.Left,\n      plot.bbox,\n      ctx\n    );\n\n    gradient.addColorStop(0, colorManipulator.alpha(color, opacity));\n    gradient.addColorStop(1, colorManipulator.alpha(color, 0));\n\n    return gradient;\n  };\n}\n\nexport function getHueGradientFn(\n  color: string,\n  opacity: number,\n  theme: GrafanaTheme2\n): (self: uPlot, seriesIdx: number) => CanvasGradient {\n  return (plot: uPlot, seriesIdx: number) => {\n    const ctx = getCanvasContext();\n    const gradient = makeDirectionalGradient(\n      plot.scales.x!.ori === ScaleOrientation.Horizontal ? GradientDirection.Down : GradientDirection.Left,\n      plot.bbox,\n      ctx\n    );\n\n    const color1 = tinycolor(color).spin(-15);\n    const color2 = tinycolor(color).spin(15);\n\n    if (theme.isDark) {\n      gradient.addColorStop(0, color2.lighten(10).setAlpha(opacity).toString());\n      gradient.addColorStop(1, color1.darken(10).setAlpha(opacity).toString());\n    } else {\n      gradient.addColorStop(0, color2.lighten(10).setAlpha(opacity).toString());\n      gradient.addColorStop(1, color1.setAlpha(opacity).toString());\n    }\n\n    return gradient;\n  };\n}\n\nexport enum GradientDirection {\n  Right = 0,\n  Up = 1,\n  Left = 2,\n  Down = 3,\n}\n\ntype ValueStop = [value: number, color: string];\n\ntype ScaleValueStops = ValueStop[];\n\nexport function scaleGradient(u: uPlot, scaleKey: string, scaleStops: ScaleValueStops, discrete = false) {\n  let scale = u.scales[scaleKey];\n\n  // we want the stop below or at the scaleMax\n  // and the stop below or at the scaleMin, else the stop above scaleMin\n  let minStopIdx: number | null = null;\n  let maxStopIdx: number | null = null;\n\n  for (let i = 0; i < scaleStops.length; i++) {\n    let stopVal = scaleStops[i][0];\n\n    if (stopVal <= scale.min! || minStopIdx == null) {\n      minStopIdx = i;\n    }\n\n    maxStopIdx = i;\n\n    if (stopVal >= scale.max!) {\n      break;\n    }\n  }\n\n  if (minStopIdx === maxStopIdx) {\n    return scaleStops[minStopIdx!][1];\n  }\n\n  let minStopVal = scaleStops[minStopIdx!][0];\n  let maxStopVal = scaleStops[maxStopIdx!][0];\n\n  if (minStopVal === -Infinity) {\n    minStopVal = scale.min!;\n  }\n\n  if (maxStopVal === Infinity) {\n    maxStopVal = scale.max!;\n  }\n\n  let minStopPos = Math.round(u.valToPos(minStopVal, scaleKey, true));\n  let maxStopPos = Math.round(u.valToPos(maxStopVal, scaleKey, true));\n\n  let range = minStopPos - maxStopPos;\n\n  if (range === 0) {\n    return scaleStops[maxStopIdx!][1];\n  }\n\n  let x0, y0, x1, y1;\n\n  if (u.scales.x!.ori === ScaleOrientation.Horizontal) {\n    x0 = x1 = 0;\n    y0 = minStopPos;\n    y1 = maxStopPos;\n  } else {\n    y0 = y1 = 0;\n    x0 = minStopPos;\n    x1 = maxStopPos;\n  }\n\n  let ctx = getCanvasContext();\n\n  let grd = ctx.createLinearGradient(x0, y0, x1, y1);\n\n  let prevColor: string;\n\n  for (let i = minStopIdx!; i <= maxStopIdx!; i++) {\n    let s = scaleStops[i];\n\n    let stopPos =\n      i === minStopIdx ? minStopPos : i === maxStopIdx ? maxStopPos : Math.round(u.valToPos(s[0], scaleKey, true));\n\n    let pct = (minStopPos - stopPos) / range;\n\n    if (discrete && i > minStopIdx!) {\n      grd.addColorStop(pct, prevColor!);\n    }\n\n    grd.addColorStop(pct, (prevColor = s[1]));\n  }\n\n  return grd;\n}\n\nexport function getDataRange(plot: uPlot, scaleKey: string) {\n  let sc = plot.scales[scaleKey];\n\n  let min = Infinity;\n  let max = -Infinity;\n\n  plot.series.forEach((ser, seriesIdx) => {\n    if (ser.show && ser.scale === scaleKey) {\n      // uPlot skips finding data min/max when a scale has a pre-defined range\n      if (ser.min == null) {\n        let data = plot.data[seriesIdx];\n        for (let i = 0; i < data.length; i++) {\n          if (data[i] != null) {\n            min = Math.min(min, data[i]!);\n            max = Math.max(max, data[i]!);\n          }\n        }\n      } else {\n        min = Math.min(min, ser.min!);\n        max = Math.max(max, ser.max!);\n      }\n    }\n  });\n\n  if (max === min) {\n    min = sc.min!;\n    max = sc.max!;\n  }\n\n  return [min, max];\n}\n\nexport function getGradientRange(\n  u: uPlot,\n  scaleKey: string,\n  hardMin?: number | null,\n  hardMax?: number | null,\n  softMin?: number | null,\n  softMax?: number | null\n) {\n  let min = hardMin ?? softMin ?? null;\n  let max = hardMax ?? softMax ?? null;\n\n  if (min == null || max == null) {\n    let [dataMin, dataMax] = getDataRange(u, scaleKey);\n\n    min = min ?? dataMin ?? 0;\n    max = max ?? dataMax ?? 100;\n  }\n\n  return [min, max];\n}\n\nexport function getScaleGradientFn(\n  opacity: number,\n  theme: GrafanaTheme2,\n  colorMode?: FieldColorMode,\n  thresholds?: ThresholdsConfig,\n  hardMin?: number | null,\n  hardMax?: number | null,\n  softMin?: number | null,\n  softMax?: number | null\n): (self: uPlot, seriesIdx: number) => CanvasGradient | string {\n  if (!colorMode) {\n    throw Error('Missing colorMode required for color scheme gradients');\n  }\n\n  if (!thresholds) {\n    throw Error('Missing thresholds required for color scheme gradients');\n  }\n\n  return (plot: uPlot, seriesIdx: number) => {\n    let scaleKey = plot.series[seriesIdx].scale!;\n\n    let gradient: CanvasGradient | string = '';\n\n    if (colorMode.id === FieldColorModeId.Thresholds) {\n      if (thresholds.mode === ThresholdsMode.Absolute) {\n        const valueStops = thresholds.steps.map(\n          (step) =>\n            [step.value, colorManipulator.alpha(theme.visualization.getColorByName(step.color), opacity)] as ValueStop\n        );\n        gradient = scaleGradient(plot, scaleKey, valueStops, true);\n      } else {\n        const [min, max] = getGradientRange(plot, scaleKey, hardMin, hardMax, softMin, softMax);\n        const range = max - min;\n        const valueStops = thresholds.steps.map(\n          (step) =>\n            [\n              min + range * (step.value / 100),\n              colorManipulator.alpha(theme.visualization.getColorByName(step.color), opacity),\n            ] as ValueStop\n        );\n        gradient = scaleGradient(plot, scaleKey, valueStops, true);\n      }\n    } else if (colorMode.getColors) {\n      const colors = colorMode.getColors(theme);\n      const [min, max] = getGradientRange(plot, scaleKey, hardMin, hardMax, softMin, softMax);\n      const range = max - min;\n      const valueStops = colors.map(\n        (color, i) =>\n          [\n            min + range * (i / (colors.length - 1)),\n            colorManipulator.alpha(theme.visualization.getColorByName(color), opacity),\n          ] as ValueStop\n      );\n      gradient = scaleGradient(plot, scaleKey, valueStops, false);\n    }\n\n    return gradient;\n  };\n}\n","import uPlot, { Series } from 'uplot';\n\nimport {\n  colorManipulator,\n  DataFrameFieldIndex,\n  FALLBACK_COLOR,\n  FieldColorMode,\n  FieldColorModeId,\n  GrafanaTheme2,\n  ThresholdsConfig,\n} from '@grafana/data';\nimport {\n  BarAlignment,\n  BarConfig,\n  GraphDrawStyle,\n  FillConfig,\n  GraphGradientMode,\n  LineConfig,\n  LineInterpolation,\n  PointsConfig,\n  VisibilityMode,\n} from '@grafana/schema';\n\nimport { PlotConfigBuilder } from '../types';\n\nimport { getHueGradientFn, getOpacityGradientFn, getScaleGradientFn } from './gradientFills';\n\nexport interface SeriesProps extends LineConfig, BarConfig, FillConfig, PointsConfig {\n  scaleKey: string;\n  pxAlign?: boolean;\n  gradientMode?: GraphGradientMode;\n  dynamicSeriesColor?: (seriesIdx: number) => string | undefined;\n\n  facets?: uPlot.Series.Facet[];\n\n  /** Used when gradientMode is set to Scheme */\n  thresholds?: ThresholdsConfig;\n  colorMode?: FieldColorMode;\n  hardMin?: number | null;\n  hardMax?: number | null;\n  softMin?: number | null;\n  softMax?: number | null;\n\n  drawStyle?: GraphDrawStyle;\n  pathBuilder?: Series.PathBuilder | null;\n  pointsFilter?: Series.Points.Filter | null;\n  pointsBuilder?: Series.Points.Show | null;\n  show?: boolean;\n  dataFrameFieldIndex?: DataFrameFieldIndex;\n  theme: GrafanaTheme2;\n  value?: uPlot.Series.Value;\n}\n\nexport class UPlotSeriesBuilder extends PlotConfigBuilder<SeriesProps, Series> {\n  getConfig() {\n    const {\n      facets,\n      drawStyle,\n      pathBuilder,\n      pointsBuilder,\n      pointsFilter,\n      lineInterpolation,\n      lineWidth,\n      lineStyle,\n      barAlignment,\n      barWidthFactor,\n      barMaxWidth,\n      showPoints,\n      pointSize,\n      scaleKey,\n      pxAlign,\n      spanNulls,\n      show = true,\n    } = this.props;\n\n    let lineConfig: Partial<Series> = {};\n\n    let lineColor = this.getLineColor();\n\n    // GraphDrawStyle.Points mode also needs this for fill/stroke sharing & re-use in series.points. see getColor() below.\n    lineConfig.stroke = lineColor;\n\n    if (pathBuilder != null) {\n      lineConfig.paths = pathBuilder;\n      lineConfig.width = lineWidth;\n    } else if (drawStyle === GraphDrawStyle.Points) {\n      lineConfig.paths = () => null;\n    } else if (drawStyle != null) {\n      lineConfig.width = lineWidth;\n      if (lineStyle && lineStyle.fill !== 'solid') {\n        if (lineStyle.fill === 'dot') {\n          lineConfig.cap = 'round';\n        }\n        lineConfig.dash = lineStyle.dash ?? [10, 10];\n      }\n      lineConfig.paths = (self: uPlot, seriesIdx: number, idx0: number, idx1: number) => {\n        let pathsBuilder = mapDrawStyleToPathBuilder(\n          drawStyle,\n          lineInterpolation,\n          barAlignment,\n          barWidthFactor,\n          barMaxWidth\n        );\n        return pathsBuilder(self, seriesIdx, idx0, idx1);\n      };\n    }\n\n    const useColor: uPlot.Series.Stroke =\n      // @ts-ignore\n      typeof lineColor === 'string' ? lineColor : (u, seriesIdx) => u.series[seriesIdx]._stroke;\n\n    const pointsConfig: Partial<Series> = {\n      points: {\n        stroke: useColor,\n        fill: useColor,\n        size: !pointSize || pointSize < lineWidth! ? undefined : pointSize,\n        filter: pointsFilter,\n      },\n    };\n\n    if (pointsBuilder != null) {\n      pointsConfig.points!.show = pointsBuilder;\n    } else {\n      // we cannot set points.show property above (even to undefined) as that will clear uPlot's default auto behavior\n      if (drawStyle === GraphDrawStyle.Points) {\n        pointsConfig.points!.show = true;\n      } else {\n        if (showPoints === VisibilityMode.Auto) {\n          if (drawStyle === GraphDrawStyle.Bars) {\n            pointsConfig.points!.show = false;\n          }\n        } else if (showPoints === VisibilityMode.Never) {\n          pointsConfig.points!.show = false;\n        } else if (showPoints === VisibilityMode.Always) {\n          pointsConfig.points!.show = true;\n        }\n      }\n    }\n\n    return {\n      scale: scaleKey,\n      facets,\n      spanGaps: typeof spanNulls === 'number' ? false : spanNulls,\n      value: () => '',\n      pxAlign,\n      show,\n      fill: this.getFill(),\n      ...lineConfig,\n      ...pointsConfig,\n    };\n  }\n\n  private getLineColor(): Series.Stroke {\n    const {\n      lineColor,\n      gradientMode,\n      colorMode,\n      thresholds,\n      theme,\n      hardMin,\n      hardMax,\n      softMin,\n      softMax,\n      dynamicSeriesColor,\n    } = this.props;\n\n    if (gradientMode === GraphGradientMode.None && dynamicSeriesColor) {\n      return (plot: uPlot, seriesIdx: number) => dynamicSeriesColor(seriesIdx) ?? lineColor ?? FALLBACK_COLOR;\n    }\n\n    if (gradientMode === GraphGradientMode.Scheme && colorMode?.id !== FieldColorModeId.Fixed) {\n      return getScaleGradientFn(1, theme, colorMode, thresholds, hardMin, hardMax, softMin, softMax);\n    }\n\n    return lineColor ?? FALLBACK_COLOR;\n  }\n\n  private getFill(): Series.Fill | undefined {\n    const {\n      lineColor,\n      fillColor,\n      gradientMode,\n      fillOpacity,\n      colorMode,\n      thresholds,\n      theme,\n      hardMin,\n      hardMax,\n      softMin,\n      softMax,\n      dynamicSeriesColor,\n    } = this.props;\n\n    if (fillColor) {\n      return fillColor;\n    }\n\n    const mode = gradientMode ?? GraphGradientMode.None;\n    const opacityPercent = (fillOpacity ?? 0) / 100;\n\n    if (mode === GraphGradientMode.None && dynamicSeriesColor && opacityPercent > 0) {\n      return (u: uPlot, seriesIdx: number) => {\n        // @ts-ignore\n        let lineColor = u.series[seriesIdx]._stroke; // cache\n        return colorManipulator.alpha(lineColor ?? '', opacityPercent);\n      };\n    }\n\n    switch (mode) {\n      case GraphGradientMode.Opacity:\n        return getOpacityGradientFn((fillColor ?? lineColor)!, opacityPercent);\n      case GraphGradientMode.Hue:\n        return getHueGradientFn((fillColor ?? lineColor)!, opacityPercent, theme);\n      case GraphGradientMode.Scheme:\n        if (colorMode?.id !== FieldColorModeId.Fixed) {\n          return getScaleGradientFn(opacityPercent, theme, colorMode, thresholds, hardMin, hardMax, softMin, softMax);\n        }\n      // intentional fall-through to handle Scheme with Fixed color\n      default:\n        if (opacityPercent > 0) {\n          return colorManipulator.alpha(lineColor ?? '', opacityPercent);\n        }\n    }\n\n    return undefined;\n  }\n}\n\ninterface PathBuilders {\n  linear: Series.PathBuilder;\n  smooth: Series.PathBuilder;\n  stepBefore: Series.PathBuilder;\n  stepAfter: Series.PathBuilder;\n  [key: string]: Series.PathBuilder;\n}\n\nlet builders: PathBuilders | undefined = undefined;\n\nfunction mapDrawStyleToPathBuilder(\n  style: GraphDrawStyle,\n  lineInterpolation?: LineInterpolation,\n  barAlignment = 0,\n  barWidthFactor = 0.6,\n  barMaxWidth = 200\n): Series.PathBuilder {\n  const pathBuilders = uPlot.paths;\n\n  if (!builders) {\n    // This should be global static, but Jest initalization was failing so we lazy load to avoid the issue\n    builders = {\n      linear: pathBuilders.linear!(),\n      smooth: pathBuilders.spline!(),\n      stepBefore: pathBuilders.stepped!({ align: -1 }),\n      stepAfter: pathBuilders.stepped!({ align: 1 }),\n    };\n  }\n\n  if (style === GraphDrawStyle.Bars) {\n    // each bars pathBuilder is lazy-initialized and globally cached by a key composed of its options\n    let barsCfgKey = `bars|${barAlignment}|${barWidthFactor}|${barMaxWidth}`;\n\n    if (!builders[barsCfgKey]) {\n      builders[barsCfgKey] = pathBuilders.bars!({\n        size: [barWidthFactor, barMaxWidth],\n        align: barAlignment as BarAlignment,\n      });\n    }\n\n    return builders[barsCfgKey];\n  } else if (style === GraphDrawStyle.Line) {\n    if (lineInterpolation === LineInterpolation.StepBefore) {\n      return builders.stepBefore;\n    }\n    if (lineInterpolation === LineInterpolation.StepAfter) {\n      return builders.stepAfter;\n    }\n    if (lineInterpolation === LineInterpolation.Smooth) {\n      return builders.smooth;\n    }\n  }\n\n  return builders.linear; // the default\n}\n","import tinycolor from 'tinycolor2';\nimport uPlot from 'uplot';\n\nimport { GrafanaTheme2, Threshold, ThresholdsConfig, ThresholdsMode } from '@grafana/data';\nimport { GraphThresholdsStyleConfig, GraphTresholdsStyleMode } from '@grafana/schema';\n\nimport { getGradientRange, scaleGradient } from './gradientFills';\n\nexport interface UPlotThresholdOptions {\n  scaleKey: string;\n  thresholds: ThresholdsConfig;\n  config: GraphThresholdsStyleConfig;\n  theme: GrafanaTheme2;\n  hardMin?: number | null;\n  hardMax?: number | null;\n  softMin?: number | null;\n  softMax?: number | null;\n}\n\nexport function getThresholdsDrawHook(options: UPlotThresholdOptions) {\n  const dashSegments =\n    options.config.mode === GraphTresholdsStyleMode.Dashed ||\n    options.config.mode === GraphTresholdsStyleMode.DashedAndArea\n      ? [10, 10]\n      : null;\n\n  function addLines(u: uPlot, yScaleKey: string, steps: Threshold[], theme: GrafanaTheme2) {\n    let ctx = u.ctx;\n\n    // Thresholds below a transparent threshold is treated like \"less than\", and line drawn previous threshold\n    let transparentIndex = 0;\n\n    for (let idx = 0; idx < steps.length; idx++) {\n      const step = steps[idx];\n      if (step.color === 'transparent') {\n        transparentIndex = idx;\n        break;\n      }\n    }\n\n    ctx.lineWidth = 2;\n\n    if (dashSegments) {\n      ctx.setLineDash(dashSegments);\n    }\n\n    // Ignore the base -Infinity threshold by always starting on index 1\n    for (let idx = 1; idx < steps.length; idx++) {\n      const step = steps[idx];\n      let color: tinycolor.Instance;\n\n      // if we are below a transparent index treat this a less then threshold, use previous thresholds color\n      if (transparentIndex >= idx && idx > 0) {\n        color = tinycolor(theme.visualization.getColorByName(steps[idx - 1].color));\n      } else {\n        color = tinycolor(theme.visualization.getColorByName(step.color));\n      }\n\n      // Unless alpha specififed set to default value\n      if (color.getAlpha() === 1) {\n        color.setAlpha(0.7);\n      }\n\n      let x0 = Math.round(u.bbox.left);\n      let y0 = Math.round(u.valToPos(step.value, yScaleKey, true));\n      let x1 = Math.round(u.bbox.left + u.bbox.width);\n      let y1 = Math.round(u.valToPos(step.value, yScaleKey, true));\n\n      ctx.beginPath();\n      ctx.moveTo(x0, y0);\n      ctx.lineTo(x1, y1);\n\n      ctx.strokeStyle = color.toString();\n      ctx.stroke();\n    }\n  }\n\n  function addAreas(u: uPlot, yScaleKey: string, steps: Threshold[], theme: GrafanaTheme2) {\n    let ctx = u.ctx;\n\n    let grd = scaleGradient(\n      u,\n      yScaleKey,\n      steps.map((step) => {\n        let color = tinycolor(theme.visualization.getColorByName(step.color));\n\n        if (color.getAlpha() === 1) {\n          color.setAlpha(0.15);\n        }\n\n        return [step.value, color.toString()];\n      }),\n      true\n    );\n\n    ctx.fillStyle = grd;\n    ctx.fillRect(u.bbox.left, u.bbox.top, u.bbox.width, u.bbox.height);\n  }\n\n  const { scaleKey, thresholds, theme, config, hardMin, hardMax, softMin, softMax } = options;\n\n  return (u: uPlot) => {\n    const ctx = u.ctx;\n    const { min: xMin, max: xMax } = u.scales.x;\n    const { min: yMin, max: yMax } = u.scales[scaleKey];\n\n    if (xMin == null || xMax == null || yMin == null || yMax == null) {\n      return;\n    }\n\n    let { steps, mode } = thresholds;\n\n    if (mode === ThresholdsMode.Percentage) {\n      let [min, max] = getGradientRange(u, scaleKey, hardMin, hardMax, softMin, softMax);\n      let range = max - min;\n\n      steps = steps.map((step) => ({\n        ...step,\n        value: min + range * (step.value / 100),\n      }));\n    }\n\n    ctx.save();\n\n    switch (config.mode) {\n      case GraphTresholdsStyleMode.Line:\n      case GraphTresholdsStyleMode.Dashed:\n        addLines(u, scaleKey, steps, theme);\n        break;\n      case GraphTresholdsStyleMode.Area:\n        addAreas(u, scaleKey, steps, theme);\n        break;\n      case GraphTresholdsStyleMode.LineAndArea:\n      case GraphTresholdsStyleMode.DashedAndArea:\n        addAreas(u, scaleKey, steps, theme);\n        addLines(u, scaleKey, steps, theme);\n    }\n\n    ctx.restore();\n  };\n}\n","import { merge } from 'lodash';\nimport uPlot, { Cursor, Band, Hooks, Select, AlignedData, Padding, Series } from 'uplot';\n\nimport {\n  DataFrame,\n  DefaultTimeZone,\n  EventBus,\n  Field,\n  getTimeZoneInfo,\n  GrafanaTheme2,\n  TimeRange,\n  TimeZone,\n} from '@grafana/data';\nimport { AxisPlacement } from '@grafana/schema';\n\nimport { FacetedData, PlotConfig, PlotTooltipInterpolator } from '../types';\nimport { DEFAULT_PLOT_CONFIG, getStackingBands, pluginLog, StackingGroup } from '../utils';\n\nimport { AxisProps, UPlotAxisBuilder } from './UPlotAxisBuilder';\nimport { ScaleProps, UPlotScaleBuilder } from './UPlotScaleBuilder';\nimport { SeriesProps, UPlotSeriesBuilder } from './UPlotSeriesBuilder';\nimport { getThresholdsDrawHook, UPlotThresholdOptions } from './UPlotThresholds';\n\nconst cursorDefaults: Cursor = {\n  // prevent client-side zoom from triggering at the end of a selection\n  drag: { setScale: false },\n  points: {\n    /*@ts-ignore*/\n    size: (u, seriesIdx) => u.series[seriesIdx].points.size * 2,\n    /*@ts-ignore*/\n    width: (u, seriesIdx, size) => size / 4,\n  },\n  focus: {\n    prox: 30,\n  },\n};\n\ntype PrepData = (frames: DataFrame[]) => AlignedData | FacetedData;\ntype PreDataStacked = (frames: DataFrame[], stackingGroups: StackingGroup[]) => AlignedData | FacetedData;\n\nexport class UPlotConfigBuilder {\n  series: UPlotSeriesBuilder[] = [];\n  private axes: Record<string, UPlotAxisBuilder> = {};\n  private scales: UPlotScaleBuilder[] = [];\n  private bands: Band[] = [];\n  private stackingGroups: StackingGroup[] = [];\n  private cursor: Cursor | undefined;\n  private select: uPlot.Select | undefined;\n  private hasLeftAxis = false;\n  private hooks: Hooks.Arrays = {};\n  private tz: string | undefined = undefined;\n  private sync = false;\n  private mode: uPlot.Mode = 1;\n  private frames: DataFrame[] | undefined = undefined;\n  // to prevent more than one threshold per scale\n  private thresholds: Record<string, UPlotThresholdOptions> = {};\n  // Custom handler for closest datapoint and series lookup\n  private tooltipInterpolator: PlotTooltipInterpolator | undefined = undefined;\n  private padding?: Padding = undefined;\n\n  prepData: PrepData | undefined = undefined;\n\n  constructor(timeZone: TimeZone = DefaultTimeZone) {\n    this.tz = getTimeZoneInfo(timeZone, Date.now())?.ianaName;\n  }\n\n  // Exposed to let the container know the primary scale keys\n  scaleKeys: [string, string] = ['', ''];\n\n  addHook<T extends keyof Hooks.Defs>(type: T, hook: Hooks.Defs[T]) {\n    pluginLog('UPlotConfigBuilder', false, 'addHook', type);\n\n    if (!this.hooks[type]) {\n      this.hooks[type] = [];\n    }\n\n    this.hooks[type]!.push(hook as any);\n  }\n\n  addThresholds(options: UPlotThresholdOptions) {\n    if (!this.thresholds[options.scaleKey]) {\n      this.thresholds[options.scaleKey] = options;\n      this.addHook('drawClear', getThresholdsDrawHook(options));\n    }\n  }\n\n  addAxis(props: AxisProps) {\n    props.placement = props.placement ?? AxisPlacement.Auto;\n    props.grid = props.grid ?? {};\n    let scaleKey = props.scaleKey;\n\n    if (scaleKey === 'x') {\n      scaleKey += props.timeZone ?? '';\n    }\n\n    if (this.axes[scaleKey]) {\n      this.axes[scaleKey].merge(props);\n      return;\n    }\n\n    // Handle auto placement logic\n    if (props.placement === AxisPlacement.Auto) {\n      props.placement = this.hasLeftAxis ? AxisPlacement.Right : AxisPlacement.Left;\n    }\n\n    if (props.placement === AxisPlacement.Left) {\n      this.hasLeftAxis = true;\n    }\n\n    if (props.placement === AxisPlacement.Hidden) {\n      props.grid.show = false;\n      props.size = 0;\n    }\n\n    this.axes[scaleKey] = new UPlotAxisBuilder(props);\n  }\n\n  getAxisPlacement(scaleKey: string): AxisPlacement {\n    const axis = this.axes[scaleKey];\n    return axis?.props.placement! ?? AxisPlacement.Left;\n  }\n\n  setCursor(cursor?: Cursor) {\n    this.cursor = merge({}, this.cursor, cursor);\n  }\n\n  setMode(mode: uPlot.Mode) {\n    this.mode = mode;\n  }\n\n  setSelect(select: Select) {\n    this.select = select;\n  }\n\n  addSeries(props: SeriesProps) {\n    this.series.push(new UPlotSeriesBuilder(props));\n  }\n\n  getSeries() {\n    return this.series;\n  }\n\n  /** Add or update the scale with the scale key */\n  addScale(props: ScaleProps) {\n    const current = this.scales.find((v) => v.props.scaleKey === props.scaleKey);\n    if (current) {\n      current.merge(props);\n      return;\n    }\n    this.scales.push(new UPlotScaleBuilder(props));\n  }\n\n  addBand(band: Band) {\n    this.bands.push(band);\n  }\n\n  setStackingGroups(groups: StackingGroup[]) {\n    this.stackingGroups = groups;\n  }\n\n  getStackingGroups() {\n    return this.stackingGroups;\n  }\n\n  setTooltipInterpolator(interpolator: PlotTooltipInterpolator) {\n    this.tooltipInterpolator = interpolator;\n  }\n\n  getTooltipInterpolator() {\n    return this.tooltipInterpolator;\n  }\n\n  setPrepData(prepData: PreDataStacked) {\n    this.prepData = (frames) => {\n      this.frames = frames;\n      return prepData(frames, this.getStackingGroups());\n    };\n  }\n\n  setSync() {\n    this.sync = true;\n  }\n\n  hasSync() {\n    return this.sync;\n  }\n\n  setPadding(padding: Padding) {\n    this.padding = padding;\n  }\n\n  getConfig() {\n    const config: PlotConfig = {\n      ...DEFAULT_PLOT_CONFIG,\n      mode: this.mode,\n      series: [\n        this.mode === 2\n          ? (null as unknown as Series)\n          : {\n              value: () => '',\n            },\n      ],\n    };\n    config.axes = this.ensureNonOverlappingAxes(Object.values(this.axes)).map((a) => a.getConfig());\n    config.series = [...config.series, ...this.series.map((s) => s.getConfig())];\n    config.scales = this.scales.reduce((acc, s) => {\n      return { ...acc, ...s.getConfig() };\n    }, {});\n\n    config.hooks = this.hooks;\n\n    config.select = this.select;\n\n    const pointColorFn =\n      (alphaHex = '') =>\n      (u: uPlot, seriesIdx: number) => {\n        /*@ts-ignore*/\n        let s = u.series[seriesIdx].points._stroke;\n\n        // interpolate for gradients/thresholds\n        if (typeof s !== 'string') {\n          let field = this.frames![0].fields[seriesIdx];\n          s = field.display!(field.values.get(u.cursor.idxs![seriesIdx]!)).color!;\n        }\n\n        return s + alphaHex;\n      };\n\n    config.cursor = merge(\n      {},\n      cursorDefaults,\n      {\n        points: {\n          stroke: pointColorFn('80'),\n          fill: pointColorFn(),\n        },\n      },\n      this.cursor\n    );\n\n    config.tzDate = this.tzDate;\n\n    if (Array.isArray(this.padding)) {\n      config.padding = this.padding;\n    }\n\n    if (this.stackingGroups.length) {\n      this.stackingGroups.forEach((group) => {\n        getStackingBands(group).forEach((band) => {\n          this.addBand(band);\n        });\n      });\n    }\n\n    if (this.bands.length) {\n      config.bands = this.bands;\n    }\n\n    return config;\n  }\n\n  private tzDate = (ts: number) => {\n    let date = new Date(ts);\n\n    return this.tz ? uPlot.tzDate(date, this.tz) : date;\n  };\n\n  private ensureNonOverlappingAxes(axes: UPlotAxisBuilder[]): UPlotAxisBuilder[] {\n    const xAxis = axes.find((a) => a.props.scaleKey === 'x');\n    const axesWithoutGridSet = axes.filter((a) => a.props.grid?.show === undefined);\n    const firstValueAxisIdx = axesWithoutGridSet.findIndex(\n      (a) =>\n        a.props.placement === AxisPlacement.Left ||\n        a.props.placement === AxisPlacement.Right ||\n        (a.props.placement === AxisPlacement.Bottom && a !== xAxis)\n    );\n\n    // For all axes with no grid set, set the grid automatically (grid only for first left axis )\n    for (let i = 0; i < axesWithoutGridSet.length; i++) {\n      if (axesWithoutGridSet[i] === xAxis || i === firstValueAxisIdx) {\n        axesWithoutGridSet[i].props.grid!.show = true;\n      } else {\n        axesWithoutGridSet[i].props.grid!.show = false;\n      }\n    }\n\n    return axes;\n  }\n}\n\nexport type Renderers = Array<{\n  fieldMap: Record<string, string>;\n  indicesOnly: string[];\n  init: (config: UPlotConfigBuilder, fieldIndices: Record<string, number>) => void;\n}>;\n\n/** @alpha */\ntype UPlotConfigPrepOpts<T extends Record<string, any> = {}> = {\n  frame: DataFrame;\n  theme: GrafanaTheme2;\n  timeZones: TimeZone[];\n  getTimeRange: () => TimeRange;\n  eventBus: EventBus;\n  allFrames: DataFrame[];\n  renderers?: Renderers;\n  tweakScale?: (opts: ScaleProps, forField: Field) => ScaleProps;\n  tweakAxis?: (opts: AxisProps, forField: Field) => AxisProps;\n} & T;\n\n/** @alpha */\nexport type UPlotConfigPrepFn<T extends {} = {}> = (opts: UPlotConfigPrepOpts<T>) => UPlotConfigBuilder;\n","import { DataFrame, FieldConfig, FieldSparkline, IndexVector } from '@grafana/data';\nimport { GraphFieldConfig } from '@grafana/schema';\n\nimport { applyNullInsertThreshold } from '../GraphNG/nullInsertThreshold';\n\n/** @internal\n * Given a sparkline config returns a DataFrame ready to be turned into Plot data set\n **/\nexport function preparePlotFrame(sparkline: FieldSparkline, config?: FieldConfig<GraphFieldConfig>): DataFrame {\n  const length = sparkline.y.values.length;\n  const yFieldConfig = {\n    ...sparkline.y.config,\n    ...config,\n  };\n\n  return applyNullInsertThreshold({\n    frame: {\n      refId: 'sparkline',\n      fields: [\n        sparkline.x ?? IndexVector.newField(length),\n        {\n          ...sparkline.y,\n          config: yFieldConfig,\n        },\n      ],\n      length,\n    },\n  });\n}\n","import { isEqual } from 'lodash';\nimport React, { PureComponent } from 'react';\nimport { AlignedData, Range } from 'uplot';\n\nimport {\n  compareDataFrameStructures,\n  DataFrame,\n  Field,\n  FieldConfig,\n  FieldSparkline,\n  FieldType,\n  getFieldColorModeForField,\n} from '@grafana/data';\nimport {\n  AxisPlacement,\n  GraphDrawStyle,\n  GraphFieldConfig,\n  VisibilityMode,\n  ScaleDirection,\n  ScaleOrientation,\n} from '@grafana/schema';\n\nimport { Themeable2 } from '../../types';\nimport { UPlotChart } from '../uPlot/Plot';\nimport { UPlotConfigBuilder } from '../uPlot/config/UPlotConfigBuilder';\nimport { preparePlotData2, getStackingGroups } from '../uPlot/utils';\n\nimport { preparePlotFrame } from './utils';\n\nexport interface SparklineProps extends Themeable2 {\n  width: number;\n  height: number;\n  config?: FieldConfig<GraphFieldConfig>;\n  sparkline: FieldSparkline;\n}\n\ninterface State {\n  data: AlignedData;\n  alignedDataFrame: DataFrame;\n  configBuilder: UPlotConfigBuilder;\n}\n\nconst defaultConfig: GraphFieldConfig = {\n  drawStyle: GraphDrawStyle.Line,\n  showPoints: VisibilityMode.Auto,\n  axisPlacement: AxisPlacement.Hidden,\n  pointSize: 2,\n};\n\n/** @internal */\nexport class Sparkline extends PureComponent<SparklineProps, State> {\n  constructor(props: SparklineProps) {\n    super(props);\n\n    const alignedDataFrame = preparePlotFrame(props.sparkline, props.config);\n\n    this.state = {\n      data: preparePlotData2(alignedDataFrame, getStackingGroups(alignedDataFrame)),\n      alignedDataFrame,\n      configBuilder: this.prepareConfig(alignedDataFrame),\n    };\n  }\n\n  static getDerivedStateFromProps(props: SparklineProps, state: State) {\n    const frame = preparePlotFrame(props.sparkline, props.config);\n    if (!frame) {\n      return { ...state };\n    }\n\n    return {\n      ...state,\n      data: preparePlotData2(frame, getStackingGroups(frame)),\n      alignedDataFrame: frame,\n    };\n  }\n\n  componentDidUpdate(prevProps: SparklineProps, prevState: State) {\n    const { alignedDataFrame } = this.state;\n\n    if (!alignedDataFrame) {\n      return;\n    }\n\n    let rebuildConfig = false;\n\n    if (prevProps.sparkline !== this.props.sparkline) {\n      rebuildConfig = !compareDataFrameStructures(this.state.alignedDataFrame, prevState.alignedDataFrame);\n    } else {\n      rebuildConfig = !isEqual(prevProps.config, this.props.config);\n    }\n\n    if (rebuildConfig) {\n      this.setState({ configBuilder: this.prepareConfig(alignedDataFrame) });\n    }\n  }\n\n  getYRange(field: Field): Range.MinMax {\n    let { min, max } = this.state.alignedDataFrame.fields[1].state?.range!;\n\n    if (min === max) {\n      if (min === 0) {\n        max = 100;\n      } else {\n        min = 0;\n        max! *= 2;\n      }\n\n      return [min, max!];\n    }\n\n    return [Math.max(min!, field.config.min ?? -Infinity), Math.min(max!, field.config.max ?? Infinity)];\n  }\n\n  prepareConfig(data: DataFrame) {\n    const { theme } = this.props;\n    const builder = new UPlotConfigBuilder();\n\n    builder.setCursor({\n      show: false,\n      x: false, // no crosshairs\n      y: false,\n    });\n\n    // X is the first field in the alligned frame\n    const xField = data.fields[0];\n    builder.addScale({\n      scaleKey: 'x',\n      orientation: ScaleOrientation.Horizontal,\n      direction: ScaleDirection.Right,\n      isTime: false, //xField.type === FieldType.time,\n      range: () => {\n        const { sparkline } = this.props;\n        if (sparkline.x) {\n          if (sparkline.timeRange && sparkline.x.type === FieldType.time) {\n            return [sparkline.timeRange.from.valueOf(), sparkline.timeRange.to.valueOf()];\n          }\n          const vals = sparkline.x.values;\n          return [vals.get(0), vals.get(vals.length - 1)];\n        }\n        return [0, sparkline.y.values.length - 1];\n      },\n    });\n\n    builder.addAxis({\n      scaleKey: 'x',\n      theme,\n      placement: AxisPlacement.Hidden,\n    });\n\n    for (let i = 0; i < data.fields.length; i++) {\n      const field = data.fields[i];\n      const config: FieldConfig<GraphFieldConfig> = field.config;\n      const customConfig: GraphFieldConfig = {\n        ...defaultConfig,\n        ...config.custom,\n      };\n\n      if (field === xField || field.type !== FieldType.number) {\n        continue;\n      }\n\n      const scaleKey = config.unit || '__fixed';\n      builder.addScale({\n        scaleKey,\n        orientation: ScaleOrientation.Vertical,\n        direction: ScaleDirection.Up,\n        range: () => this.getYRange(field),\n      });\n\n      builder.addAxis({\n        scaleKey,\n        theme,\n        placement: AxisPlacement.Hidden,\n      });\n\n      const colorMode = getFieldColorModeForField(field);\n      const seriesColor = colorMode.getCalculator(field, theme)(0, 0);\n      const pointsMode =\n        customConfig.drawStyle === GraphDrawStyle.Points ? VisibilityMode.Always : customConfig.showPoints;\n\n      builder.addSeries({\n        pxAlign: false,\n        scaleKey,\n        theme,\n        colorMode,\n        thresholds: config.thresholds,\n        drawStyle: customConfig.drawStyle!,\n        lineColor: customConfig.lineColor ?? seriesColor,\n        lineWidth: customConfig.lineWidth,\n        lineInterpolation: customConfig.lineInterpolation,\n        showPoints: pointsMode,\n        pointSize: customConfig.pointSize,\n        fillOpacity: customConfig.fillOpacity,\n        fillColor: customConfig.fillColor,\n        lineStyle: customConfig.lineStyle,\n        gradientMode: customConfig.gradientMode,\n      });\n    }\n\n    return builder;\n  }\n\n  render() {\n    const { data, configBuilder } = this.state;\n    const { width, height, sparkline } = this.props;\n    return (\n      <UPlotChart data={data} config={configBuilder} width={width} height={height} timeRange={sparkline.timeRange!} />\n    );\n  }\n}\n","import { isArray } from 'lodash';\nimport React from 'react';\n\nimport {\n  ArrayVector,\n  FieldType,\n  FieldConfig,\n  getMinMaxAndDelta,\n  FieldSparkline,\n  isDataFrame,\n  Field,\n} from '@grafana/data';\nimport {\n  BarAlignment,\n  GraphDrawStyle,\n  GraphFieldConfig,\n  GraphGradientMode,\n  LineInterpolation,\n  TableSparklineCellOptions,\n  TableCellDisplayMode,\n  VisibilityMode,\n} from '@grafana/schema';\n\nimport { Sparkline } from '../Sparkline/Sparkline';\n\nimport { TableCellProps } from './types';\nimport { getCellOptions } from './utils';\n\nexport const defaultSparklineCellConfig: GraphFieldConfig = {\n  drawStyle: GraphDrawStyle.Line,\n  lineInterpolation: LineInterpolation.Smooth,\n  lineWidth: 1,\n  fillOpacity: 17,\n  gradientMode: GraphGradientMode.Hue,\n  pointSize: 2,\n  barAlignment: BarAlignment.Center,\n  showPoints: VisibilityMode.Never,\n};\n\nexport const SparklineCell = (props: TableCellProps) => {\n  const { field, innerWidth, tableStyles, cell, cellProps } = props;\n\n  const sparkline = getSparkline(cell.value);\n\n  if (!sparkline) {\n    return (\n      <div {...cellProps} className={tableStyles.cellContainer}>\n        no data\n      </div>\n    );\n  }\n\n  const range = getMinMaxAndDelta(sparkline.y);\n  sparkline.y.config.min = range.min;\n  sparkline.y.config.max = range.max;\n  sparkline.y.state = { range };\n\n  const cellOptions = getTableSparklineCellOptions(field);\n\n  const config: FieldConfig<GraphFieldConfig> = {\n    color: field.config.color,\n    custom: {\n      ...defaultSparklineCellConfig,\n      ...cellOptions,\n    },\n  };\n\n  return (\n    <div {...cellProps} className={tableStyles.cellContainer}>\n      <Sparkline\n        width={innerWidth}\n        height={tableStyles.cellHeightInner}\n        sparkline={sparkline}\n        config={config}\n        theme={tableStyles.theme}\n      />\n    </div>\n  );\n};\n\nfunction getSparkline(value: unknown): FieldSparkline | undefined {\n  if (isArray(value)) {\n    return {\n      y: {\n        name: 'test',\n        type: FieldType.number,\n        values: new ArrayVector(value),\n        config: {},\n      },\n    };\n  }\n\n  if (isDataFrame(value)) {\n    const timeField = value.fields.find((x) => x.type === FieldType.time);\n    const numberField = value.fields.find((x) => x.type === FieldType.number);\n\n    if (timeField && numberField) {\n      return { x: timeField, y: numberField };\n    }\n  }\n\n  return;\n}\n\nfunction getTableSparklineCellOptions(field: Field): TableSparklineCellOptions {\n  let options = getCellOptions(field);\n  if (options.type === TableCellDisplayMode.Auto) {\n    options = { ...options, type: TableCellDisplayMode.Sparkline };\n  }\n  if (options.type === TableCellDisplayMode.Sparkline) {\n    return options;\n  }\n  throw new Error(`Excpected options type ${TableCellDisplayMode.Sparkline} but got ${options.type}`);\n}\n","import { Property } from 'csstype';\nimport { clone } from 'lodash';\nimport memoizeOne from 'memoize-one';\nimport { Row } from 'react-table';\n\nimport {\n  DataFrame,\n  Field,\n  FieldType,\n  formattedValueToString,\n  getFieldDisplayName,\n  SelectableValue,\n  fieldReducers,\n  getDisplayProcessor,\n  reduceField,\n  GrafanaTheme2,\n  ArrayVector,\n  isDataFrame,\n  isTimeSeriesFrame,\n} from '@grafana/data';\nimport {\n  BarGaugeDisplayMode,\n  TableAutoCellOptions,\n  TableCellBackgroundDisplayMode,\n  TableCellOptions,\n} from '@grafana/schema';\n\nimport { BarGaugeCell } from './BarGaugeCell';\nimport { DefaultCell } from './DefaultCell';\nimport { getFooterValue } from './FooterRow';\nimport { GeoCell } from './GeoCell';\nimport { ImageCell } from './ImageCell';\nimport { JSONViewCell } from './JSONViewCell';\nimport { RowExpander } from './RowExpander';\nimport { SparklineCell } from './SparklineCell';\nimport {\n  CellComponent,\n  TableCellDisplayMode,\n  TableFieldOptions,\n  FooterItem,\n  GrafanaTableColumn,\n  TableFooterCalc,\n} from './types';\n\nexport const EXPANDER_WIDTH = 50;\n\nexport function getTextAlign(field?: Field): Property.JustifyContent {\n  if (!field) {\n    return 'flex-start';\n  }\n\n  if (field.config.custom) {\n    const custom = field.config.custom as TableFieldOptions;\n\n    switch (custom.align) {\n      case 'right':\n        return 'flex-end';\n      case 'left':\n        return 'flex-start';\n      case 'center':\n        return 'center';\n    }\n  }\n\n  if (field.type === FieldType.number) {\n    return 'flex-end';\n  }\n\n  return 'flex-start';\n}\n\nexport function getColumns(\n  data: DataFrame,\n  availableWidth: number,\n  columnMinWidth: number,\n  expander: boolean,\n  footerValues?: FooterItem[],\n  isCountRowsSet?: boolean\n): GrafanaTableColumn[] {\n  const columns: GrafanaTableColumn[] = [];\n  let fieldCountWithoutWidth = 0;\n\n  if (expander) {\n    columns.push({\n      // Make an expander cell\n      Header: () => null, // No header\n      id: 'expander', // It needs an ID\n      Cell: RowExpander,\n      width: EXPANDER_WIDTH,\n      minWidth: EXPANDER_WIDTH,\n      filter: (_rows: Row[], _id: string, _filterValues?: SelectableValue[]) => {\n        return [];\n      },\n      justifyContent: 'left',\n      field: data.fields[0],\n      sortType: 'basic',\n    });\n\n    availableWidth -= EXPANDER_WIDTH;\n  }\n\n  for (const [fieldIndex, field] of data.fields.entries()) {\n    const fieldTableOptions = (field.config.custom || {}) as TableFieldOptions;\n    if (fieldTableOptions.hidden) {\n      continue;\n    }\n\n    if (fieldTableOptions.width) {\n      availableWidth -= fieldTableOptions.width;\n    } else {\n      fieldCountWithoutWidth++;\n    }\n\n    const selectSortType = (type: FieldType) => {\n      switch (type) {\n        case FieldType.number:\n          return 'number';\n        case FieldType.time:\n          return 'basic';\n        default:\n          return 'alphanumeric-insensitive';\n      }\n    };\n\n    const Cell = getCellComponent(fieldTableOptions.cellOptions?.type, field);\n    columns.push({\n      Cell,\n      id: fieldIndex.toString(),\n      field: field,\n      Header: getFieldDisplayName(field, data),\n      accessor: (_row: any, i: number) => {\n        return field.values.get(i);\n      },\n      sortType: selectSortType(field.type),\n      width: fieldTableOptions.width,\n      minWidth: fieldTableOptions.minWidth ?? columnMinWidth,\n      filter: memoizeOne(filterByValue(field)),\n      justifyContent: getTextAlign(field),\n      Footer: getFooterValue(fieldIndex, footerValues, isCountRowsSet),\n    });\n  }\n\n  // set columns that are at minimum width\n  let sharedWidth = availableWidth / fieldCountWithoutWidth;\n  for (let i = fieldCountWithoutWidth; i > 0; i--) {\n    for (const column of columns) {\n      if (!column.width && column.minWidth > sharedWidth) {\n        column.width = column.minWidth;\n        availableWidth -= column.width;\n        fieldCountWithoutWidth -= 1;\n        sharedWidth = availableWidth / fieldCountWithoutWidth;\n      }\n    }\n  }\n\n  // divide up the rest of the space\n  for (const column of columns) {\n    if (!column.width) {\n      column.width = sharedWidth;\n    }\n    column.minWidth = 50;\n  }\n\n  return columns;\n}\n\nexport function getCellComponent(displayMode: TableCellDisplayMode, field: Field): CellComponent {\n  switch (displayMode) {\n    case TableCellDisplayMode.ColorText:\n    case TableCellDisplayMode.ColorBackground:\n      return DefaultCell;\n    case TableCellDisplayMode.Image:\n      return ImageCell;\n    case TableCellDisplayMode.Gauge:\n      return BarGaugeCell;\n    case TableCellDisplayMode.Sparkline:\n      return SparklineCell;\n    case TableCellDisplayMode.JSONView:\n      return JSONViewCell;\n  }\n\n  if (field.type === FieldType.geo) {\n    return GeoCell;\n  }\n\n  if (field.type === FieldType.frame) {\n    const firstValue = field.values.get(0);\n    if (isDataFrame(firstValue) && isTimeSeriesFrame(firstValue)) {\n      return SparklineCell;\n    }\n\n    return JSONViewCell;\n  }\n\n  // Default or Auto\n  if (field.type === FieldType.other) {\n    return JSONViewCell;\n  }\n\n  return DefaultCell;\n}\n\nexport function filterByValue(field?: Field) {\n  return function (rows: Row[], id: string, filterValues?: SelectableValue[]) {\n    if (rows.length === 0) {\n      return rows;\n    }\n\n    if (!filterValues) {\n      return rows;\n    }\n\n    if (!field) {\n      return rows;\n    }\n\n    return rows.filter((row) => {\n      if (!row.values.hasOwnProperty(id)) {\n        return false;\n      }\n      const value = rowToFieldValue(row, field);\n      return filterValues.find((filter) => filter.value === value) !== undefined;\n    });\n  };\n}\n\nexport function calculateUniqueFieldValues(rows: any[], field?: Field) {\n  if (!field || rows.length === 0) {\n    return {};\n  }\n\n  const set: Record<string, string> = {};\n\n  for (let index = 0; index < rows.length; index++) {\n    const value = rowToFieldValue(rows[index], field);\n    set[value || '(Blanks)'] = value;\n  }\n\n  return set;\n}\n\nexport function rowToFieldValue(row: any, field?: Field): string {\n  if (!field || !row) {\n    return '';\n  }\n\n  const fieldValue = field.values.get(row.index);\n  const displayValue = field.display ? field.display(fieldValue) : fieldValue;\n  const value = field.display ? formattedValueToString(displayValue) : displayValue;\n\n  return value;\n}\n\nexport function valuesToOptions(unique: Record<string, any>): SelectableValue[] {\n  return Object.keys(unique)\n    .reduce((all, key) => all.concat({ value: unique[key], label: key }), [] as SelectableValue[])\n    .sort(sortOptions);\n}\n\nexport function sortOptions(a: SelectableValue, b: SelectableValue): number {\n  if (a.label === undefined && b.label === undefined) {\n    return 0;\n  }\n\n  if (a.label === undefined && b.label !== undefined) {\n    return -1;\n  }\n\n  if (a.label !== undefined && b.label === undefined) {\n    return 1;\n  }\n\n  if (a.label! < b.label!) {\n    return -1;\n  }\n\n  if (a.label! > b.label!) {\n    return 1;\n  }\n\n  return 0;\n}\n\nexport function getFilteredOptions(options: SelectableValue[], filterValues?: SelectableValue[]): SelectableValue[] {\n  if (!filterValues) {\n    return [];\n  }\n\n  return options.filter((option) => filterValues.some((filtered) => filtered.value === option.value));\n}\n\nexport function sortCaseInsensitive(a: Row<any>, b: Row<any>, id: string) {\n  return String(a.values[id]).localeCompare(String(b.values[id]), undefined, { sensitivity: 'base' });\n}\n\n// sortNumber needs to have great performance as it is called a lot\nexport function sortNumber(rowA: Row<any>, rowB: Row<any>, id: string) {\n  const a = toNumber(rowA.values[id]);\n  const b = toNumber(rowB.values[id]);\n  return a === b ? 0 : a > b ? 1 : -1;\n}\n\nfunction toNumber(value: any): number {\n  if (value === null || value === undefined || value === '' || isNaN(value)) {\n    return Number.NEGATIVE_INFINITY;\n  }\n\n  if (typeof value === 'number') {\n    return value;\n  }\n\n  return Number(value);\n}\n\nexport function getFooterItems(\n  filterFields: Array<{ id: string; field?: Field } | undefined>,\n  values: any[number],\n  options: TableFooterCalc,\n  theme2: GrafanaTheme2\n): FooterItem[] {\n  /*\n    The FooterItems[] are calculated using both the `headerGroups[0].headers`\n    (filterFields) and `rows` (values) destructured from the useTable() hook.\n    This cacluation is based on the data from each index in `filterFields`\n    array as well as the corresponding index in the `values` array.\n    When the user hides a column through an override, the getColumns()\n    hook is invoked, removes said hidden column, sends the updated column\n    data to the useTable() hook, which then builds `headerGroups[0].headers`\n    without the hidden column. However, it doesn't remove the hidden column\n    from the `row` data, instead it substututes the hidden column row data\n    with an `undefined` value. Therefore, the `row` array length never changes,\n    despite the `headerGroups[0].headers` length changing at every column removal.\n    This makes all footer reduce calculations AFTER the first hidden column\n    in the `headerGroups[0].headers` break, since the indexing of both\n    arrays is no longer in parity.\n\n    So, here we simply recursively test for the \"hidden\" columns\n    from `headerGroups[0].headers`. Each column has an ID property that corresponds\n    to its own index, therefore if (`filterField.id` !== `String(index)`),\n    we know there is one or more hidden columns; at which point we update\n    the index with an ersatz placeholder with just an `id` property.\n  */\n  addMissingColumnIndex(filterFields);\n\n  return filterFields.map((data, i) => {\n    // Then test for numerical data - this will filter out placeholder `filterFields` as well.\n    if (data?.field?.type !== FieldType.number) {\n      // Show the reducer in the first column\n      if (i === 0 && options.reducer && options.reducer.length > 0) {\n        const reducer = fieldReducers.get(options.reducer[0]);\n        return reducer.name;\n      }\n      // Render an <EmptyCell />.\n      return undefined;\n    }\n\n    let newField = clone(data.field);\n    newField.values = new ArrayVector(values[data.id]);\n    newField.state = undefined;\n\n    data.field = newField;\n\n    if (options.fields && options.fields.length > 0) {\n      const f = options.fields.find((f) => f === data?.field?.name);\n      if (f) {\n        return getFormattedValue(data.field, options.reducer, theme2);\n      }\n      return undefined;\n    }\n    return getFormattedValue(data.field, options.reducer || [], theme2);\n  });\n}\n\nfunction getFormattedValue(field: Field, reducer: string[], theme: GrafanaTheme2) {\n  const fmt = field.display ?? getDisplayProcessor({ field, theme });\n  const calc = reducer[0];\n  const v = reduceField({ field, reducers: reducer })[calc];\n  return formattedValueToString(fmt(v));\n}\n\n// This strips the raw vales from the `rows` object.\nexport function createFooterCalculationValues(rows: Row[]): any[number] {\n  const values: any[number] = [];\n\n  for (const key in rows) {\n    for (const [valKey, val] of Object.entries(rows[key].values)) {\n      if (values[valKey] === undefined) {\n        values[valKey] = [];\n      }\n      values[valKey].push(val);\n    }\n  }\n\n  return values;\n}\n\nconst defaultCellOptions: TableAutoCellOptions = { type: TableCellDisplayMode.Auto };\n\nexport function getCellOptions(field: Field): TableCellOptions {\n  if (field.config.custom?.displayMode) {\n    return migrateTableDisplayModeToCellOptions(field.config.custom?.displayMode);\n  }\n\n  if (!field.config.custom?.cellOptions) {\n    return defaultCellOptions;\n  }\n\n  return (field.config.custom as TableFieldOptions).cellOptions;\n}\n\n/**\n * Migrates table cell display mode to new object format.\n *\n * @param displayMode The display mode of the cell\n * @returns TableCellOptions object in the correct format\n * relative to the old display mode.\n */\nexport function migrateTableDisplayModeToCellOptions(displayMode: TableCellDisplayMode): TableCellOptions {\n  switch (displayMode) {\n    // In the case of the gauge we move to a different option\n    case 'basic':\n    case 'gradient-gauge':\n    case 'lcd-gauge':\n      let gaugeMode = BarGaugeDisplayMode.Basic;\n\n      if (displayMode === 'gradient-gauge') {\n        gaugeMode = BarGaugeDisplayMode.Gradient;\n      } else if (displayMode === 'lcd-gauge') {\n        gaugeMode = BarGaugeDisplayMode.Lcd;\n      }\n\n      return {\n        type: TableCellDisplayMode.Gauge,\n        mode: gaugeMode,\n      };\n    // Also true in the case of the color background\n    case 'color-background':\n    case 'color-background-solid':\n      let mode = TableCellBackgroundDisplayMode.Basic;\n\n      // Set the new mode field, somewhat confusingly the\n      // color-background mode is for gradient display\n      if (displayMode === 'color-background') {\n        mode = TableCellBackgroundDisplayMode.Gradient;\n      }\n\n      return {\n        type: TableCellDisplayMode.ColorBackground,\n        mode: mode,\n      };\n    default:\n      return {\n        // @ts-ignore\n        type: displayMode,\n      };\n  }\n}\n\n/**\n * This recurses through an array of `filterFields` (Array<{ id: string; field?: Field } | undefined>)\n * and adds back the missing indecies that are removed due to hiding a column through an panel override.\n * This is necessary to create Array.length parity between the `filterFields` array and the `values` array (any[number]),\n * since the footer value calculations are based on the corresponding index values of both arrays.\n *\n * @remarks\n * This function uses the splice() method, and therefore mutates the array.\n *\n * @param columns - An array of `filterFields` (Array<{ id: string; field?: Field } | undefined>).\n * @returns void; this function returns nothing; it only mutates values as a side effect.\n */\nfunction addMissingColumnIndex(columns: Array<{ id: string; field?: Field } | undefined>): void {\n  const missingIndex = columns.findIndex((field, index) => field?.id !== String(index));\n\n  // Base case\n  if (missingIndex === -1) {\n    return;\n  }\n\n  // Splice in missing column\n  columns.splice(missingIndex, 0, { id: String(missingIndex) });\n\n  // Recurse\n  addMissingColumnIndex(columns);\n}\n","import { css, cx } from '@emotion/css';\nimport React, { useCallback, useMemo, useState } from 'react';\n\nimport { Field, GrafanaTheme2, SelectableValue } from '@grafana/data';\n\nimport { Button, ClickOutsideWrapper, HorizontalGroup, IconButton, Label, VerticalGroup } from '..';\nimport { useStyles2, useTheme2 } from '../../themes';\n\nimport { FilterList } from './FilterList';\nimport { TableStyles } from './styles';\nimport { calculateUniqueFieldValues, getFilteredOptions, valuesToOptions } from './utils';\n\ninterface Props {\n  column: any;\n  tableStyles: TableStyles;\n  onClose: () => void;\n  field?: Field;\n}\n\nexport const FilterPopup = ({ column: { preFilteredRows, filterValue, setFilter }, onClose, field }: Props) => {\n  const theme = useTheme2();\n  const uniqueValues = useMemo(() => calculateUniqueFieldValues(preFilteredRows, field), [preFilteredRows, field]);\n  const options = useMemo(() => valuesToOptions(uniqueValues), [uniqueValues]);\n  const filteredOptions = useMemo(() => getFilteredOptions(options, filterValue), [options, filterValue]);\n  const [values, setValues] = useState<SelectableValue[]>(filteredOptions);\n  const [matchCase, setMatchCase] = useState(false);\n\n  const onCancel = useCallback((event?: React.MouseEvent) => onClose(), [onClose]);\n\n  const onFilter = useCallback(\n    (event: React.MouseEvent) => {\n      const filtered = values.length ? values : undefined;\n\n      setFilter(filtered);\n      onClose();\n    },\n    [setFilter, values, onClose]\n  );\n\n  const onClearFilter = useCallback(\n    (event: React.MouseEvent) => {\n      setFilter(undefined);\n      onClose();\n    },\n    [setFilter, onClose]\n  );\n\n  const clearFilterVisible = useMemo(() => filterValue !== undefined, [filterValue]);\n  const styles = useStyles2(getStyles);\n\n  return (\n    <ClickOutsideWrapper onClick={onCancel} useCapture={true}>\n      {/* This is just blocking click events from bubbeling and should not have a keyboard interaction. */}\n      {/* eslint-disable-next-line jsx-a11y/no-static-element-interactions */}\n      <div className={cx(styles.filterContainer)} onClick={stopPropagation}>\n        <VerticalGroup spacing=\"lg\">\n          <VerticalGroup spacing=\"xs\">\n            <HorizontalGroup justify=\"space-between\" align=\"center\">\n              <Label className={styles.label}>Filter by values:</Label>\n              <IconButton\n                name=\"text-fields\"\n                tooltip=\"Match case\"\n                style={{ color: matchCase ? theme.colors.text.link : theme.colors.text.disabled }}\n                onClick={() => {\n                  setMatchCase((s) => !s);\n                }}\n              />\n            </HorizontalGroup>\n            <div className={cx(styles.listDivider)} />\n            <FilterList onChange={setValues} values={values} options={options} caseSensitive={matchCase} />\n          </VerticalGroup>\n          <HorizontalGroup spacing=\"lg\">\n            <HorizontalGroup>\n              <Button size=\"sm\" onClick={onFilter}>\n                Ok\n              </Button>\n              <Button size=\"sm\" variant=\"secondary\" onClick={onCancel}>\n                Cancel\n              </Button>\n            </HorizontalGroup>\n            {clearFilterVisible && (\n              <HorizontalGroup>\n                <Button fill=\"text\" size=\"sm\" onClick={onClearFilter}>\n                  Clear filter\n                </Button>\n              </HorizontalGroup>\n            )}\n          </HorizontalGroup>\n        </VerticalGroup>\n      </div>\n    </ClickOutsideWrapper>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  filterContainer: css`\n    label: filterContainer;\n    width: 100%;\n    min-width: 250px;\n    height: 100%;\n    max-height: 400px;\n    background-color: ${theme.colors.background.primary};\n    border: 1px solid ${theme.colors.border.weak};\n    padding: ${theme.spacing(2)};\n    margin: ${theme.spacing(1)} 0;\n    box-shadow: ${theme.shadows.z3};\n    border-radius: ${theme.shape.radius.default};\n  `,\n  listDivider: css`\n    label: listDivider;\n    width: 100%;\n    border-top: 1px solid ${theme.colors.border.medium};\n    padding: ${theme.spacing(0.5, 2)};\n  `,\n  label: css`\n    margin-bottom: 0;\n  `,\n});\n\nconst stopPropagation = (event: React.MouseEvent) => {\n  event.stopPropagation();\n};\n","import { css, cx } from '@emotion/css';\nimport React, { useCallback, useMemo, useRef, useState } from 'react';\n\nimport { Field, GrafanaTheme2 } from '@grafana/data';\n\nimport { Popover } from '..';\nimport { useStyles2 } from '../../themes';\nimport { Icon } from '../Icon/Icon';\n\nimport { FilterPopup } from './FilterPopup';\nimport { TableStyles } from './styles';\n\ninterface Props {\n  column: any;\n  tableStyles: TableStyles;\n  field?: Field;\n}\n\nexport const Filter = ({ column, field, tableStyles }: Props) => {\n  const ref = useRef<HTMLButtonElement>(null);\n  const [isPopoverVisible, setPopoverVisible] = useState<boolean>(false);\n  const styles = useStyles2(getStyles);\n  const filterEnabled = useMemo(() => Boolean(column.filterValue), [column.filterValue]);\n  const onShowPopover = useCallback(() => setPopoverVisible(true), [setPopoverVisible]);\n  const onClosePopover = useCallback(() => setPopoverVisible(false), [setPopoverVisible]);\n\n  if (!field || !field.config.custom?.filterable) {\n    return null;\n  }\n  return (\n    <button\n      className={cx(tableStyles.headerFilter, filterEnabled ? styles.filterIconEnabled : styles.filterIconDisabled)}\n      ref={ref}\n      type=\"button\"\n      onClick={onShowPopover}\n    >\n      <Icon name=\"filter\" />\n      {isPopoverVisible && ref.current && (\n        <Popover\n          content={<FilterPopup column={column} tableStyles={tableStyles} field={field} onClose={onClosePopover} />}\n          placement=\"bottom-start\"\n          referenceElement={ref.current}\n          show\n        />\n      )}\n    </button>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  filterIconEnabled: css`\n    label: filterIconEnabled;\n    color: ${theme.colors.primary.text};\n  `,\n  filterIconDisabled: css`\n    label: filterIconDisabled;\n    color: ${theme.colors.text.disabled};\n  `,\n});\n","import React from 'react';\nimport { HeaderGroup, Column } from 'react-table';\n\nimport { selectors } from '@grafana/e2e-selectors';\n\nimport { getFieldTypeIcon } from '../../types';\nimport { Icon } from '../Icon/Icon';\n\nimport { Filter } from './Filter';\nimport { TableStyles } from './styles';\n\nexport interface HeaderRowProps {\n  headerGroups: HeaderGroup[];\n  showTypeIcons?: boolean;\n  tableStyles: TableStyles;\n}\n\nexport const HeaderRow = (props: HeaderRowProps) => {\n  const { headerGroups, showTypeIcons, tableStyles } = props;\n  const e2eSelectorsTable = selectors.components.Panels.Visualization.Table;\n\n  return (\n    <div role=\"rowgroup\" className={tableStyles.headerRow}>\n      {headerGroups.map((headerGroup: HeaderGroup) => {\n        const { key, ...headerGroupProps } = headerGroup.getHeaderGroupProps();\n        return (\n          <div\n            className={tableStyles.thead}\n            {...headerGroupProps}\n            key={key}\n            aria-label={e2eSelectorsTable.header}\n            role=\"row\"\n          >\n            {headerGroup.headers.map((column: Column, index: number) =>\n              renderHeaderCell(column, tableStyles, showTypeIcons)\n            )}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nfunction renderHeaderCell(column: any, tableStyles: TableStyles, showTypeIcons?: boolean) {\n  const headerProps = column.getHeaderProps();\n  const field = column.field ?? null;\n\n  if (column.canResize) {\n    headerProps.style.userSelect = column.isResizing ? 'none' : 'auto'; // disables selecting text while resizing\n  }\n\n  headerProps.style.position = 'absolute';\n  headerProps.style.justifyContent = column.justifyContent;\n\n  return (\n    <div className={tableStyles.headerCell} {...headerProps} role=\"columnheader\">\n      {column.canSort && (\n        <>\n          <button {...column.getSortByToggleProps()} className={tableStyles.headerCellLabel}>\n            {showTypeIcons && (\n              <Icon name={getFieldTypeIcon(field)} title={field?.type} size=\"sm\" className={tableStyles.typeIcon} />\n            )}\n            <div>{column.render('Header')}</div>\n            {column.isSorted &&\n              (column.isSortedDesc ? (\n                <Icon size=\"lg\" name=\"arrow-down\" className={tableStyles.sortIcon} />\n              ) : (\n                <Icon name=\"arrow-up\" size=\"lg\" className={tableStyles.sortIcon} />\n              ))}\n          </button>\n          {column.canFilter && <Filter column={column} tableStyles={tableStyles} field={field} />}\n        </>\n      )}\n      {!column.canSort && column.render('Header')}\n      {!column.canSort && column.canFilter && <Filter column={column} tableStyles={tableStyles} field={field} />}\n      {column.canResize && <div {...column.getResizerProps()} className={tableStyles.resizeHandle} />}\n    </div>\n  );\n}\n","import React from 'react';\nimport { Cell } from 'react-table';\n\nimport { TableStyles } from './styles';\nimport { GrafanaTableColumn, TableFilterActionCallback } from './types';\n\nexport interface Props {\n  cell: Cell;\n  tableStyles: TableStyles;\n  onCellFilterAdded?: TableFilterActionCallback;\n  columnIndex: number;\n  columnCount: number;\n  userProps?: object;\n}\n\nexport const TableCell = ({ cell, tableStyles, onCellFilterAdded, userProps }: Props) => {\n  const cellProps = cell.getCellProps();\n  const field = (cell.column as unknown as GrafanaTableColumn).field;\n\n  if (!field?.display) {\n    return null;\n  }\n\n  if (cellProps.style) {\n    cellProps.style.minWidth = cellProps.style.width;\n    cellProps.style.justifyContent = (cell.column as any).justifyContent;\n  }\n\n  let innerWidth = ((cell.column.width as number) ?? 24) - tableStyles.cellPadding * 2;\n\n  return cell.render('Cell', {\n    field,\n    tableStyles,\n    onCellFilterAdded,\n    cellProps,\n    innerWidth,\n    userProps,\n  }) as React.ReactElement;\n};\n","import React, { useEffect } from 'react';\nimport { VariableSizeList } from 'react-window';\n\nimport { DataFrame } from '@grafana/data';\n\nimport { GrafanaTableState } from './types';\n\n/** \n  To have the custom vertical scrollbar always visible (https://github.com/grafana/grafana/issues/52136),\n  we need to bring the element from the VariableSizeList scope to the outer Table container scope,\n  because the VariableSizeList scope has overflow. By moving scrollbar to container scope we will have\n  it always visible since the entire width is in view.\n  Select the scrollbar element from the VariableSizeList scope\n */\nexport function useFixScrollbarContainer(\n  variableSizeListScrollbarRef: React.RefObject<HTMLDivElement>,\n  tableDivRef: React.RefObject<HTMLDivElement>\n) {\n  useEffect(() => {\n    const listVerticalScrollbarHTML = (variableSizeListScrollbarRef.current as HTMLDivElement)?.querySelector(\n      '.track-vertical'\n    );\n\n    // Select Table custom scrollbars\n    const tableScrollbarView = (tableDivRef.current as HTMLDivElement)?.firstChild;\n\n    //If they exists, move the scrollbar element to the Table container scope\n    if (tableScrollbarView && listVerticalScrollbarHTML) {\n      listVerticalScrollbarHTML?.remove();\n      (tableScrollbarView as HTMLDivElement).querySelector(':scope > .track-vertical')?.remove();\n\n      (tableScrollbarView as HTMLDivElement).append(listVerticalScrollbarHTML as Node);\n    }\n  });\n}\n\n/**\n  react-table caches the height of cells so we need to reset them when expanding/collapsing rows\n   We need to take the minimum of the current expanded indexes and the previous expandedIndexes array to account\n  for collapsed rows, since they disappear from expandedIndexes but still keep their expanded height\n */\nexport function useResetVariableListSizeCache(\n  extendedState: GrafanaTableState,\n  listRef: React.RefObject<VariableSizeList>,\n  data: DataFrame\n) {\n  useEffect(() => {\n    if (extendedState.lastExpandedIndex !== undefined) {\n      listRef.current?.resetAfterIndex(Math.max(extendedState.lastExpandedIndex - 1, 0));\n      return;\n    }\n  }, [extendedState.lastExpandedIndex, extendedState.toggleRowExpandedCounter, listRef, data]);\n}\n","import { useCallback } from 'react';\n\nimport { getFieldDisplayName } from '@grafana/data';\n\nimport { TableSortByFieldState, GrafanaTableColumn, GrafanaTableState, Props } from './types';\n\nexport interface ActionType {\n  type: string;\n  id: string | undefined;\n}\n\nexport function useTableStateReducer({ onColumnResize, onSortByChange, data }: Props) {\n  return useCallback(\n    (newState: GrafanaTableState, action: ActionType) => {\n      switch (action.type) {\n        case 'columnDoneResizing':\n          if (onColumnResize) {\n            const info = (newState.columnResizing.headerIdWidths as any)[0];\n            const columnIdString = info[0];\n            const fieldIndex = parseInt(columnIdString, 10);\n            const width = Math.round(newState.columnResizing.columnWidths[columnIdString] as number);\n\n            const field = data.fields[fieldIndex];\n            if (!field) {\n              return newState;\n            }\n\n            const fieldDisplayName = getFieldDisplayName(field, data);\n            onColumnResize(fieldDisplayName, width);\n          }\n        case 'toggleSortBy':\n          if (onSortByChange) {\n            const sortByFields: TableSortByFieldState[] = [];\n\n            for (const sortItem of newState.sortBy) {\n              const field = data.fields[parseInt(sortItem.id, 10)];\n              if (!field) {\n                continue;\n              }\n\n              sortByFields.push({\n                displayName: getFieldDisplayName(field, data),\n                desc: sortItem.desc,\n              });\n            }\n\n            onSortByChange(sortByFields);\n          }\n        case 'toggleRowExpanded': {\n          if (action.id) {\n            return {\n              ...newState,\n              lastExpandedIndex: parseInt(action.id, 10),\n              toggleRowExpandedCounter: newState.toggleRowExpandedCounter + 1,\n            };\n          }\n        }\n      }\n\n      return newState;\n    },\n    [data, onColumnResize, onSortByChange]\n  );\n}\n\nexport function getInitialState(\n  initialSortBy: Props['initialSortBy'],\n  columns: GrafanaTableColumn[]\n): Partial<GrafanaTableState> {\n  const state: Partial<GrafanaTableState> = {\n    toggleRowExpandedCounter: 0,\n  };\n\n  if (initialSortBy) {\n    state.sortBy = [];\n\n    for (const sortBy of initialSortBy) {\n      for (const col of columns) {\n        if (col.Header === sortBy.displayName) {\n          state.sortBy.push({ id: col.id!, desc: sortBy.desc });\n        }\n      }\n    }\n  }\n\n  return state;\n}\n","import { css, CSSObject } from '@emotion/css';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { TableCellHeight } from '@grafana/schema';\n\nexport function useTableStyles(theme: GrafanaTheme2, cellHeightOption: TableCellHeight) {\n  const borderColor = theme.colors.border.weak;\n  const resizerColor = theme.colors.primary.border;\n  const cellPadding = 6;\n  const cellHeight = getCellHeight(theme, cellHeightOption, cellPadding);\n  const rowHeight = cellHeight + 2;\n  const headerHeight = 28;\n  const rowHoverBg = theme.colors.emphasize(theme.colors.background.primary, 0.03);\n\n  const buildCellContainerStyle = (color?: string, background?: string, overflowOnHover?: boolean) => {\n    const cellActionsOverflow: CSSObject = {\n      margin: theme.spacing(0, -0.5, 0, 0.5),\n    };\n\n    const cellActionsNoOverflow: CSSObject = {\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      margin: 'auto',\n    };\n\n    const onHoverOverflow: CSSObject = {\n      overflow: 'visible',\n      width: 'auto !important',\n      boxShadow: `0 0 2px ${theme.colors.primary.main}`,\n      background: background ?? rowHoverBg,\n      zIndex: 1,\n    };\n\n    return css`\n      label: ${overflowOnHover ? 'cellContainerOverflow' : 'cellContainerNoOverflow'};\n      padding: ${cellPadding}px;\n      width: 100%;\n      // Cell height need to account for row border\n      height: ${rowHeight - 1}px;\n      display: flex;\n      align-items: center;\n      border-right: 1px solid ${borderColor};\n\n      ${color ? `color: ${color};` : ''};\n      ${background ? `background: ${background};` : ''};\n      background-clip: padding-box;\n\n      &:last-child:not(:only-child) {\n        border-right: none;\n      }\n\n      &:hover {\n        ${overflowOnHover && onHoverOverflow};\n        .cellActions {\n          visibility: visible;\n          opacity: 1;\n          width: auto;\n        }\n      }\n\n      a {\n        color: inherit;\n      }\n\n      .cellActions {\n        display: flex;\n        ${overflowOnHover ? cellActionsOverflow : cellActionsNoOverflow}\n        visibility: hidden;\n        opacity: 0;\n        width: 0;\n        align-items: center;\n        height: 100%;\n        padding: ${theme.spacing(1, 0.5, 1, 0.5)};\n        background: ${background ? 'none' : theme.colors.emphasize(theme.colors.background.primary, 0.03)};\n\n        svg {\n          color: ${color};\n        }\n      }\n\n      .cellActionsLeft {\n        right: auto !important;\n        left: 0;\n      }\n\n      .cellActionsTransparent {\n        background: none;\n      }\n    `;\n  };\n\n  return {\n    theme,\n    cellHeight,\n    buildCellContainerStyle,\n    cellPadding,\n    cellHeightInner: cellHeight - cellPadding * 2,\n    rowHeight,\n    table: css`\n      height: 100%;\n      width: 100%;\n      overflow: auto;\n      display: flex;\n      flex-direction: column;\n    `,\n    thead: css`\n      label: thead;\n      height: ${headerHeight}px;\n      overflow-y: auto;\n      overflow-x: hidden;\n      position: relative;\n    `,\n    tfoot: css`\n      label: tfoot;\n      height: ${headerHeight}px;\n      border-top: 1px solid ${borderColor};\n      overflow-y: auto;\n      overflow-x: hidden;\n      position: relative;\n    `,\n    headerRow: css`\n      label: row;\n      border-bottom: 1px solid ${borderColor};\n    `,\n    headerCell: css`\n      height: 100%;\n      padding: 0 ${cellPadding}px;\n      overflow: hidden;\n      white-space: nowrap;\n      display: flex;\n      align-items: center;\n      font-weight: ${theme.typography.fontWeightMedium};\n\n      &:last-child {\n        border-right: none;\n      }\n    `,\n    headerCellLabel: css`\n      border: none;\n      padding: 0;\n      background: inherit;\n      cursor: pointer;\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      font-weight: ${theme.typography.fontWeightMedium};\n      display: flex;\n      align-items: center;\n      margin-right: ${theme.spacing(0.5)};\n\n      &:hover {\n        text-decoration: underline;\n        color: ${theme.colors.text.link};\n      }\n    `,\n    cellContainer: buildCellContainerStyle(undefined, undefined, true),\n    cellContainerNoOverflow: buildCellContainerStyle(undefined, undefined, false),\n    cellText: css`\n      overflow: hidden;\n      text-overflow: ellipsis;\n      user-select: text;\n      white-space: nowrap;\n    `,\n    sortIcon: css`\n      margin-left: ${theme.spacing(0.5)};\n    `,\n    cellLink: css`\n      cursor: pointer;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      user-select: text;\n      white-space: nowrap;\n      color: ${theme.colors.text.link};\n      font-weight: ${theme.typography.fontWeightMedium};\n      &:hover {\n        text-decoration: underline;\n        color: ${theme.colors.text.link};\n      }\n    `,\n    cellLinkForColoredCell: css`\n      cursor: pointer;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      user-select: text;\n      white-space: nowrap;\n      font-weight: ${theme.typography.fontWeightMedium};\n      text-decoration: underline;\n    `,\n    imageCellLink: css`\n      cursor: pointer;\n      overflow: hidden;\n      height: 100%;\n    `,\n    headerFilter: css`\n      background: transparent;\n      border: none;\n      label: headerFilter;\n      padding: 0;\n    `,\n    paginationWrapper: css`\n      display: flex;\n      height: ${cellHeight}px;\n      justify-content: center;\n      align-items: center;\n      width: 100%;\n      li {\n        margin-bottom: 0;\n      }\n    `,\n    paginationSummary: css`\n      color: ${theme.colors.text.secondary};\n      font-size: ${theme.typography.bodySmall.fontSize};\n      display: flex;\n      justify-content: flex-end;\n      padding: ${theme.spacing(0, 1, 0, 2)};\n    `,\n\n    tableContentWrapper: (totalColumnsWidth: number) => {\n      const width = totalColumnsWidth !== undefined ? `${totalColumnsWidth}px` : '100%';\n\n      return css`\n        label: tableContentWrapper;\n        width: ${width};\n        display: flex;\n        flex-direction: column;\n      `;\n    },\n    row: css`\n      label: row;\n      border-bottom: 1px solid ${borderColor};\n\n      &:hover {\n        background-color: ${rowHoverBg};\n      }\n\n      &:last-child {\n        border-bottom: 0;\n      }\n    `,\n    imageCell: css`\n      height: 100%;\n    `,\n    resizeHandle: css`\n      label: resizeHandle;\n      cursor: col-resize !important;\n      display: inline-block;\n      background: ${resizerColor};\n      opacity: 0;\n      transition: opacity 0.2s ease-in-out;\n      width: 8px;\n      height: 100%;\n      position: absolute;\n      right: -4px;\n      border-radius: ${theme.shape.radius.default};\n      top: 0;\n      touch-action: none;\n\n      &:hover {\n        opacity: 1;\n      }\n    `,\n    typeIcon: css`\n      margin-right: ${theme.spacing(1)};\n      color: ${theme.colors.text.secondary};\n    `,\n    noData: css`\n      align-items: center;\n      display: flex;\n      height: 100%;\n      justify-content: center;\n      width: 100%;\n    `,\n    expanderCell: css`\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      height: ${rowHeight}px;\n      cursor: pointer;\n    `,\n  };\n}\n\nexport type TableStyles = ReturnType<typeof useTableStyles>;\n\nfunction getCellHeight(theme: GrafanaTheme2, cellHeightOption: TableCellHeight, cellPadding: number) {\n  const bodyFontSize = theme.typography.fontSize;\n  const lineHeight = theme.typography.body.lineHeight;\n\n  switch (cellHeightOption) {\n    case 'md':\n      return 42;\n    case 'lg':\n      return 48;\n    case 'sm':\n    default:\n      return cellPadding * 2 + bodyFontSize * lineHeight;\n  }\n}\n","import React, { CSSProperties, memo, useCallback, useEffect, useMemo, useRef, useState, UIEventHandler } from 'react';\nimport {\n  Cell,\n  useAbsoluteLayout,\n  useExpanded,\n  useFilters,\n  usePagination,\n  useResizeColumns,\n  useSortBy,\n  useTable,\n} from 'react-table';\nimport { VariableSizeList } from 'react-window';\n\nimport { Field, ReducerID } from '@grafana/data';\nimport { TableCellHeight } from '@grafana/schema';\n\nimport { useTheme2 } from '../../themes';\nimport { CustomScrollbar } from '../CustomScrollbar/CustomScrollbar';\nimport { Pagination } from '../Pagination/Pagination';\n\nimport { FooterRow } from './FooterRow';\nimport { HeaderRow } from './HeaderRow';\nimport { TableCell } from './TableCell';\nimport { useFixScrollbarContainer, useResetVariableListSizeCache } from './hooks';\nimport { getInitialState, useTableStateReducer } from './reducer';\nimport { useTableStyles } from './styles';\nimport { FooterItem, GrafanaTableState, Props } from './types';\nimport {\n  getColumns,\n  sortCaseInsensitive,\n  sortNumber,\n  getFooterItems,\n  createFooterCalculationValues,\n  EXPANDER_WIDTH,\n} from './utils';\n\nconst COLUMN_MIN_WIDTH = 150;\nconst FOOTER_ROW_HEIGHT = 36;\n\nexport const Table = memo((props: Props) => {\n  const {\n    ariaLabel,\n    data,\n    subData,\n    height,\n    onCellFilterAdded,\n    width,\n    columnMinWidth = COLUMN_MIN_WIDTH,\n    noHeader,\n    resizable = true,\n    initialSortBy,\n    footerOptions,\n    showTypeIcons,\n    footerValues,\n    enablePagination,\n    cellHeight = TableCellHeight.Sm,\n  } = props;\n\n  const listRef = useRef<VariableSizeList>(null);\n  const tableDivRef = useRef<HTMLDivElement>(null);\n  const variableSizeListScrollbarRef = useRef<HTMLDivElement>(null);\n  const theme = useTheme2();\n  const tableStyles = useTableStyles(theme, cellHeight);\n  const headerHeight = noHeader ? 0 : tableStyles.rowHeight;\n  const [footerItems, setFooterItems] = useState<FooterItem[] | undefined>(footerValues);\n\n  const footerHeight = useMemo(() => {\n    const EXTENDED_ROW_HEIGHT = FOOTER_ROW_HEIGHT;\n    let length = 0;\n\n    if (!footerItems) {\n      return 0;\n    }\n\n    for (const fv of footerItems) {\n      if (Array.isArray(fv) && fv.length > length) {\n        length = fv.length;\n      }\n    }\n\n    if (length > 1) {\n      return EXTENDED_ROW_HEIGHT * length;\n    }\n\n    return EXTENDED_ROW_HEIGHT;\n  }, [footerItems]);\n\n  // React table data array. This data acts just like a dummy array to let react-table know how many rows exist.\n  // The cells use the field to look up values, therefore this is simply a length/size placeholder.\n  const memoizedData = useMemo(() => {\n    if (!data.fields.length) {\n      return [];\n    }\n    // As we only use this to fake the length of our data set for react-table we need to make sure we always return an array\n    // filled with values at each index otherwise we'll end up trying to call accessRow for null|undefined value in\n    // https://github.com/tannerlinsley/react-table/blob/7be2fc9d8b5e223fc998af88865ae86a88792fdb/src/hooks/useTable.js#L585\n    return Array(data.length).fill(0);\n  }, [data]);\n\n  // This checks whether `Show table footer` is toggled on, the `Calculation` is set to `Count`, and finally, whether `Count rows` is toggled on.\n  const isCountRowsSet = Boolean(\n    footerOptions?.countRows &&\n      footerOptions.reducer &&\n      footerOptions.reducer.length &&\n      footerOptions.reducer[0] === ReducerID.count\n  );\n\n  // React-table column definitions\n  const memoizedColumns = useMemo(\n    () => getColumns(data, width, columnMinWidth, !!subData?.length, footerItems, isCountRowsSet),\n    [data, width, columnMinWidth, footerItems, subData, isCountRowsSet]\n  );\n\n  // Internal react table state reducer\n  const stateReducer = useTableStateReducer(props);\n\n  const options: any = useMemo(\n    () => ({\n      columns: memoizedColumns,\n      data: memoizedData,\n      disableResizing: !resizable,\n      stateReducer: stateReducer,\n      initialState: getInitialState(initialSortBy, memoizedColumns),\n      autoResetFilters: false,\n      sortTypes: {\n        number: sortNumber, // the builtin number type on react-table does not handle NaN values\n        'alphanumeric-insensitive': sortCaseInsensitive, // should be replace with the builtin string when react-table is upgraded, see https://github.com/tannerlinsley/react-table/pull/3235\n      },\n    }),\n    [initialSortBy, memoizedColumns, memoizedData, resizable, stateReducer]\n  );\n\n  const {\n    getTableProps,\n    headerGroups,\n    footerGroups,\n    rows,\n    prepareRow,\n    totalColumnsWidth,\n    page,\n    state,\n    gotoPage,\n    setPageSize,\n    pageOptions,\n  } = useTable(options, useFilters, useSortBy, useAbsoluteLayout, useResizeColumns, useExpanded, usePagination);\n\n  const extendedState = state as GrafanaTableState;\n\n  /*\n    Footer value calculation is being moved in the Table component and the footerValues prop will be deprecated.\n    The footerValues prop is still used in the Table component for backwards compatibility. Adding the\n    footerOptions prop will switch the Table component to use the new footer calculation. Using both props will\n    result in the footerValues prop being ignored.\n  */\n  useEffect(() => {\n    if (!footerOptions) {\n      setFooterItems(footerValues);\n    }\n  }, [footerValues, footerOptions]);\n\n  useEffect(() => {\n    if (!footerOptions) {\n      return;\n    }\n\n    if (!footerOptions.show) {\n      setFooterItems(undefined);\n      return;\n    }\n\n    if (isCountRowsSet) {\n      const footerItemsCountRows: FooterItem[] = [];\n      footerItemsCountRows[0] = headerGroups[0]?.headers[0]?.filteredRows.length.toString() ?? data.length.toString();\n      setFooterItems(footerItemsCountRows);\n      return;\n    }\n\n    const footerItems = getFooterItems(\n      headerGroups[0].headers as unknown as Array<{ id: string; field: Field }>,\n      createFooterCalculationValues(rows),\n      footerOptions,\n      theme\n    );\n\n    setFooterItems(footerItems);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [footerOptions, theme, state.filters, data]);\n\n  let listHeight = height - (headerHeight + footerHeight);\n\n  if (enablePagination) {\n    listHeight -= tableStyles.cellHeight;\n  }\n\n  const pageSize = Math.round(listHeight / tableStyles.rowHeight) - 1;\n\n  useEffect(() => {\n    // Don't update the page size if it is less than 1\n    if (pageSize <= 0) {\n      return;\n    }\n    setPageSize(pageSize);\n  }, [pageSize, setPageSize]);\n\n  useResetVariableListSizeCache(extendedState, listRef, data);\n  useFixScrollbarContainer(variableSizeListScrollbarRef, tableDivRef);\n\n  const renderSubTable = useCallback(\n    (rowIndex: number) => {\n      if (state.expanded[rowIndex]) {\n        const rowSubData = subData?.find((frame) => frame.meta?.custom?.parentRowIndex === rowIndex);\n        if (rowSubData) {\n          const noHeader = !!rowSubData.meta?.custom?.noHeader;\n          const subTableStyle: CSSProperties = {\n            height: tableStyles.rowHeight * (rowSubData.length + (noHeader ? 0 : 1)), // account for the header with + 1\n            background: theme.colors.emphasize(theme.colors.background.primary, 0.015),\n            paddingLeft: EXPANDER_WIDTH,\n            position: 'absolute',\n            bottom: 0,\n          };\n\n          return (\n            <div style={subTableStyle}>\n              <Table\n                data={rowSubData}\n                width={width - EXPANDER_WIDTH}\n                height={tableStyles.rowHeight * (rowSubData.length + 1)}\n                noHeader={noHeader}\n              />\n            </div>\n          );\n        }\n      }\n      return null;\n    },\n    [state.expanded, subData, tableStyles.rowHeight, theme.colors, width]\n  );\n\n  const RenderRow = useCallback(\n    ({ index: rowIndex, style }: { index: number; style: CSSProperties }) => {\n      let row = rows[rowIndex];\n      if (enablePagination) {\n        row = page[rowIndex];\n      }\n\n      prepareRow(row);\n\n      return (\n        <div {...row.getRowProps({ style })} className={tableStyles.row}>\n          {/*add the subtable to the DOM first to prevent a 1px border CSS issue on the last cell of the row*/}\n          {renderSubTable(rowIndex)}\n          {row.cells.map((cell: Cell, index: number) => (\n            <TableCell\n              key={index}\n              tableStyles={tableStyles}\n              cell={cell}\n              onCellFilterAdded={onCellFilterAdded}\n              columnIndex={index}\n              columnCount={row.cells.length}\n            />\n          ))}\n        </div>\n      );\n    },\n    [onCellFilterAdded, page, enablePagination, prepareRow, rows, tableStyles, renderSubTable]\n  );\n\n  const onNavigate = useCallback(\n    (toPage: number) => {\n      gotoPage(toPage - 1);\n    },\n    [gotoPage]\n  );\n\n  const itemCount = enablePagination ? page.length : rows.length;\n  let paginationEl = null;\n  if (enablePagination) {\n    const itemsRangeStart = state.pageIndex * state.pageSize + 1;\n    let itemsRangeEnd = itemsRangeStart + state.pageSize - 1;\n    const isSmall = width < 550;\n    if (itemsRangeEnd > data.length) {\n      itemsRangeEnd = data.length;\n    }\n    paginationEl = (\n      <div className={tableStyles.paginationWrapper}>\n        <Pagination\n          currentPage={state.pageIndex + 1}\n          numberOfPages={pageOptions.length}\n          showSmallVersion={isSmall}\n          onNavigate={onNavigate}\n        />\n        {isSmall ? null : (\n          <div className={tableStyles.paginationSummary}>\n            {itemsRangeStart} - {itemsRangeEnd} of {data.length} rows\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  const getItemSize = (index: number): number => {\n    if (state.expanded[index]) {\n      const rowSubData = subData?.find((frame) => frame.meta?.custom?.parentRowIndex === index);\n      if (rowSubData) {\n        const noHeader = !!rowSubData.meta?.custom?.noHeader;\n        return tableStyles.rowHeight * (rowSubData.length + 1 + (noHeader ? 0 : 1)); // account for the header and the row data with + 1 + 1\n      }\n    }\n    return tableStyles.rowHeight;\n  };\n\n  const handleScroll: UIEventHandler = (event) => {\n    const { scrollTop } = event.target as HTMLDivElement;\n\n    if (listRef.current !== null) {\n      listRef.current.scrollTo(scrollTop);\n    }\n  };\n\n  return (\n    <div {...getTableProps()} className={tableStyles.table} aria-label={ariaLabel} role=\"table\" ref={tableDivRef}>\n      <CustomScrollbar hideVerticalTrack={true}>\n        <div className={tableStyles.tableContentWrapper(totalColumnsWidth)}>\n          {!noHeader && (\n            <HeaderRow headerGroups={headerGroups} showTypeIcons={showTypeIcons} tableStyles={tableStyles} />\n          )}\n          {itemCount > 0 ? (\n            <div ref={variableSizeListScrollbarRef}>\n              <CustomScrollbar onScroll={handleScroll} hideHorizontalTrack={true}>\n                <VariableSizeList\n                  // This component needs an unmount/remount when row height changes\n                  key={tableStyles.rowHeight}\n                  height={listHeight}\n                  itemCount={itemCount}\n                  itemSize={getItemSize}\n                  width={'100%'}\n                  ref={listRef}\n                  style={{ overflow: undefined }}\n                >\n                  {RenderRow}\n                </VariableSizeList>\n              </CustomScrollbar>\n            </div>\n          ) : (\n            <div style={{ height: height - headerHeight }} className={tableStyles.noData}>\n              No data\n            </div>\n          )}\n          {footerItems && (\n            <FooterRow\n              isPaginationVisible={Boolean(enablePagination)}\n              footerValues={footerItems}\n              footerGroups={footerGroups}\n              totalColumnsWidth={totalColumnsWidth}\n              tableStyles={tableStyles}\n            />\n          )}\n        </div>\n      </CustomScrollbar>\n      {paginationEl}\n    </div>\n  );\n});\n\nTable.displayName = 'Table';\n","import { css, cx } from '@emotion/css';\nimport React, { HTMLProps } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { stylesFactory, useTheme2 } from '../../themes';\nimport { getFocusStyle, sharedInputStyle } from '../Forms/commonStyles';\n\nexport interface Props extends Omit<HTMLProps<HTMLTextAreaElement>, 'size'> {\n  /** Show an invalid state around the input */\n  invalid?: boolean;\n}\n\nexport const TextArea = React.forwardRef<HTMLTextAreaElement, Props>(({ invalid, className, ...props }, ref) => {\n  const theme = useTheme2();\n  const styles = getTextAreaStyle(theme, invalid);\n\n  return <textarea {...props} className={cx(styles.textarea, className)} ref={ref} />;\n});\n\nconst getTextAreaStyle = stylesFactory((theme: GrafanaTheme2, invalid = false) => {\n  return {\n    textarea: cx(\n      sharedInputStyle(theme),\n      getFocusStyle(theme),\n      css`\n        border-radius: ${theme.shape.borderRadius()};\n        padding: ${theme.spacing.gridSize / 4}px ${theme.spacing.gridSize}px;\n        width: 100%;\n        border-color: ${invalid ? theme.colors.error.border : theme.components.input.borderColor};\n      `\n    ),\n  };\n});\n\nTextArea.displayName = 'TextArea';\n","import { css } from '@emotion/css';\nimport { debounce } from 'lodash';\nimport React, { PureComponent } from 'react';\n\nimport { DataFrame, CSVConfig, readCSV, GrafanaTheme2 } from '@grafana/data';\n\nimport { stylesFactory, withTheme2 } from '../../themes';\nimport { Themeable2 } from '../../types/theme';\nimport { Icon } from '../Icon/Icon';\nimport { TextArea } from '../TextArea/TextArea';\n\ninterface Props extends Themeable2 {\n  config?: CSVConfig;\n  text: string;\n  width: string | number;\n  height: string | number;\n  onSeriesParsed: (data: DataFrame[], text: string) => void;\n}\n\ninterface State {\n  text: string;\n  data: DataFrame[];\n}\n\n/**\n * Expects the container div to have size set and will fill it 100%\n */\nexport class UnThemedTableInputCSV extends PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    const { text, config } = props;\n    this.state = {\n      text,\n      data: readCSV(text, { config }),\n    };\n  }\n\n  readCSV = debounce(() => {\n    const { config } = this.props;\n    const { text } = this.state;\n\n    this.setState({ data: readCSV(text, { config }) });\n  }, 150);\n\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    const { text } = this.state;\n\n    if (text !== prevState.text || this.props.config !== prevProps.config) {\n      this.readCSV();\n    }\n\n    // If the props text has changed, replace our local version\n    if (this.props.text !== prevProps.text && this.props.text !== text) {\n      this.setState({ text: this.props.text });\n    }\n\n    if (this.state.data !== prevState.data) {\n      this.props.onSeriesParsed(this.state.data, this.state.text);\n    }\n  }\n\n  onTextChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    this.setState({ text: event.target.value });\n  };\n\n  render() {\n    const { width, height, theme } = this.props;\n    const { data } = this.state;\n    const styles = getStyles(theme);\n    return (\n      <div className={styles.tableInputCsv}>\n        <TextArea\n          style={{ width, height }}\n          placeholder=\"Enter CSV here...\"\n          value={this.state.text}\n          onChange={this.onTextChange}\n          className={styles.textarea}\n        />\n        {data && (\n          <footer className={styles.footer}>\n            {data.map((frame, index) => {\n              return (\n                <span key={index}>\n                  Rows:{frame.length}, Columns:{frame.fields.length} &nbsp;\n                  <Icon name=\"check-circle\" />\n                </span>\n              );\n            })}\n          </footer>\n        )}\n      </div>\n    );\n  }\n}\n\nexport const TableInputCSV = withTheme2(UnThemedTableInputCSV);\nTableInputCSV.displayName = 'TableInputCSV';\n\nconst getStyles = stylesFactory((theme: GrafanaTheme2) => {\n  return {\n    tableInputCsv: css`\n      position: relative;\n    `,\n    textarea: css`\n      height: 100%;\n      width: 100%;\n    `,\n    footer: css`\n      position: absolute;\n      bottom: 15px;\n      right: 15px;\n      border: 1px solid #222;\n      background: ${theme.colors.success.main};\n      padding: 1px ${theme.spacing(0.5)};\n      font-size: 80%;\n    `,\n  };\n});\n","import { css, cx } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\n\nimport { useStyles2 } from '../../themes/ThemeContext';\nimport { Icon } from '../Icon/Icon';\n\nimport { Counter } from './Counter';\nimport { TabProps } from './Tab';\n\nexport const VerticalTab = React.forwardRef<HTMLAnchorElement, TabProps>(\n  ({ label, active, icon, counter, className, suffix: Suffix, onChangeTab, href, ...otherProps }, ref) => {\n    const tabsStyles = useStyles2(getTabStyles);\n    const content = () => (\n      <>\n        {icon && <Icon name={icon} />}\n        {label}\n        {typeof counter === 'number' && <Counter value={counter} />}\n        {Suffix && <Suffix className={tabsStyles.suffix} />}\n      </>\n    );\n\n    const linkClass = cx(tabsStyles.link, active && tabsStyles.activeStyle);\n\n    return (\n      <a\n        href={href}\n        className={linkClass}\n        {...otherProps}\n        onClick={onChangeTab}\n        aria-label={otherProps['aria-label'] || selectors.components.Tab.title(label)}\n        role=\"tab\"\n        aria-selected={active}\n        ref={ref}\n      >\n        {content()}\n      </a>\n    );\n  }\n);\n\nVerticalTab.displayName = 'Tab';\n\nconst getTabStyles = (theme: GrafanaTheme2) => {\n  return {\n    link: css`\n      padding: 6px 12px;\n      display: block;\n      height: 100%;\n      cursor: pointer;\n      position: relative;\n\n      color: ${theme.colors.text.primary};\n\n      svg {\n        margin-right: ${theme.spacing(1)};\n      }\n\n      &:hover,\n      &:focus {\n        text-decoration: underline;\n      }\n    `,\n    activeStyle: css`\n      label: activeTabStyle;\n      color: ${theme.colors.text.maxContrast};\n      overflow: hidden;\n\n      &::before {\n        display: block;\n        content: ' ';\n        position: absolute;\n        left: 0;\n        width: 4px;\n        bottom: 2px;\n        top: 2px;\n        border-radius: ${theme.shape.radius.default};\n        background-image: linear-gradient(0deg, #f05a28 30%, #fbca0a 99%);\n      }\n    `,\n    suffix: css`\n      margin-left: ${theme.spacing(1)};\n    `,\n  };\n};\n","import { css, cx } from '@emotion/css';\nimport React, { HTMLAttributes, ReactNode } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { stylesFactory, useTheme2 } from '../../themes';\n\ninterface Props extends HTMLAttributes<HTMLDivElement> {\n  children: ReactNode;\n}\n\nconst getTabContentStyle = stylesFactory((theme: GrafanaTheme2) => {\n  return {\n    tabContent: css`\n      background: ${theme.colors.background.primary};\n    `,\n  };\n});\n\nexport const TabContent = ({ children, className, ...restProps }: Props) => {\n  const theme = useTheme2();\n  const styles = getTabContentStyle(theme);\n\n  return (\n    <div {...restProps} className={cx(styles.tabContent, className)}>\n      {children}\n    </div>\n  );\n};\n","import React, { HTMLAttributes, PropsWithChildren } from 'react';\n\nimport { textUtil } from '@grafana/data';\n\nexport interface RenderUserContentAsHTMLProps<T = HTMLSpanElement>\n  extends Omit<HTMLAttributes<T>, 'dangerouslySetInnerHTML'> {\n  component?: keyof React.ReactHTML;\n  content: string;\n}\n\nexport function RenderUserContentAsHTML<T>({\n  component,\n  content,\n  ...rest\n}: PropsWithChildren<RenderUserContentAsHTMLProps<T>>): JSX.Element {\n  return React.createElement(component || 'span', {\n    dangerouslySetInnerHTML: { __html: textUtil.sanitize(content) },\n    ...rest,\n  });\n}\n","import React, { CSSProperties } from 'react';\nimport tinycolor from 'tinycolor2';\n\nimport { formattedValueToString, DisplayValue, FieldConfig, FieldType, VizOrientation } from '@grafana/data';\nimport { GraphDrawStyle, GraphFieldConfig } from '@grafana/schema';\n\nimport { getTextColorForAlphaBackground } from '../../utils';\nimport { calculateFontSize } from '../../utils/measureText';\nimport { Sparkline } from '../Sparkline/Sparkline';\n\nimport { BigValueColorMode, Props, BigValueJustifyMode, BigValueTextMode } from './BigValue';\n\nconst LINE_HEIGHT = 1.2;\nconst MAX_TITLE_SIZE = 30;\nconst VALUE_FONT_WEIGHT = 500;\n\nexport abstract class BigValueLayout {\n  titleFontSize: number;\n  valueFontSize: number;\n  chartHeight: number;\n  chartWidth: number;\n  valueColor: string;\n  panelPadding: number;\n  justifyCenter: boolean;\n  titleToAlignTo?: string;\n  valueToAlignTo: string;\n  maxTextWidth: number;\n  maxTextHeight: number;\n  textValues: BigValueTextValues;\n\n  constructor(private props: Props) {\n    const { width, height, value, text } = props;\n\n    this.valueColor = value.color ?? 'gray';\n    this.panelPadding = height > 100 ? 12 : 8;\n    this.textValues = getTextValues(props);\n    this.justifyCenter = shouldJustifyCenter(props.justifyMode, this.textValues.title);\n    this.valueToAlignTo = this.textValues.valueToAlignTo;\n    this.titleToAlignTo = this.textValues.titleToAlignTo;\n    this.titleFontSize = 0;\n    this.valueFontSize = 0;\n    this.chartHeight = 0;\n    this.chartWidth = 0;\n    this.maxTextWidth = width - this.panelPadding * 2;\n    this.maxTextHeight = height - this.panelPadding * 2;\n\n    // Explicit font sizing\n    if (text) {\n      if (text.titleSize) {\n        this.titleFontSize = text.titleSize;\n        this.titleToAlignTo = undefined;\n      }\n      if (text.valueSize) {\n        this.valueFontSize = text.valueSize;\n        this.valueToAlignTo = '';\n      }\n    }\n  }\n\n  getTitleStyles(): CSSProperties {\n    const styles: CSSProperties = {\n      fontSize: `${this.titleFontSize}px`,\n      lineHeight: LINE_HEIGHT,\n    };\n\n    if (this.props.parentOrientation === VizOrientation.Horizontal && this.justifyCenter) {\n      styles.paddingRight = '0.75ch';\n    }\n\n    if (\n      this.props.colorMode === BigValueColorMode.Background ||\n      this.props.colorMode === BigValueColorMode.BackgroundSolid\n    ) {\n      styles.color = getTextColorForAlphaBackground(this.valueColor, this.props.theme.isDark);\n    }\n\n    return styles;\n  }\n\n  getValueStyles(): CSSProperties {\n    const styles: CSSProperties = {\n      fontSize: this.valueFontSize,\n      fontWeight: VALUE_FONT_WEIGHT,\n      lineHeight: LINE_HEIGHT,\n      position: 'relative',\n      zIndex: 1,\n    };\n\n    if (this.justifyCenter) {\n      styles.textAlign = 'center';\n    }\n\n    switch (this.props.colorMode) {\n      case BigValueColorMode.Value:\n        styles.color = this.valueColor;\n        break;\n      case BigValueColorMode.Background:\n      case BigValueColorMode.BackgroundSolid:\n        styles.color = getTextColorForAlphaBackground(this.valueColor, this.props.theme.isDark);\n        break;\n      case BigValueColorMode.None:\n        styles.color = this.props.theme.colors.text.primary;\n        break;\n    }\n\n    return styles;\n  }\n\n  getValueAndTitleContainerStyles() {\n    const styles: CSSProperties = {\n      display: 'flex',\n    };\n\n    if (this.justifyCenter) {\n      styles.alignItems = 'center';\n      styles.justifyContent = 'center';\n      styles.flexGrow = 1;\n    }\n\n    return styles;\n  }\n\n  getPanelStyles(): CSSProperties {\n    const { width, height, theme, colorMode } = this.props;\n\n    const panelStyles: CSSProperties = {\n      width: `${width}px`,\n      height: `${height}px`,\n      padding: `${this.panelPadding}px`,\n      borderRadius: theme.shape.borderRadius(),\n      position: 'relative',\n      display: 'flex',\n    };\n\n    const themeFactor = theme.isDark ? 1 : -0.7;\n\n    switch (colorMode) {\n      case BigValueColorMode.Background:\n        const bgColor2 = tinycolor(this.valueColor)\n          .darken(15 * themeFactor)\n          .spin(8)\n          .toRgbString();\n        const bgColor3 = tinycolor(this.valueColor)\n          .darken(5 * themeFactor)\n          .spin(-8)\n          .toRgbString();\n        panelStyles.background = `linear-gradient(120deg, ${bgColor2}, ${bgColor3})`;\n        break;\n      case BigValueColorMode.BackgroundSolid:\n        panelStyles.background = tinycolor(this.valueColor).toString();\n        break;\n      case BigValueColorMode.Value:\n        panelStyles.background = `transparent`;\n        break;\n    }\n\n    if (this.justifyCenter) {\n      panelStyles.alignItems = 'center';\n      panelStyles.flexDirection = 'row';\n    }\n\n    return panelStyles;\n  }\n\n  renderChart(): JSX.Element | null {\n    const { sparkline, colorMode } = this.props;\n\n    if (!sparkline || sparkline.y?.type !== FieldType.number) {\n      return null;\n    }\n\n    let fillColor: string;\n    let lineColor: string;\n\n    switch (colorMode) {\n      case BigValueColorMode.Background:\n      case BigValueColorMode.BackgroundSolid:\n        fillColor = 'rgba(255,255,255,0.4)';\n        lineColor = tinycolor(this.valueColor).brighten(40).toRgbString();\n        break;\n      case BigValueColorMode.None:\n      case BigValueColorMode.Value:\n      default:\n        lineColor = this.valueColor;\n        fillColor = tinycolor(this.valueColor).setAlpha(0.2).toRgbString();\n        break;\n    }\n\n    // The graph field configuration applied to Y values\n    const config: FieldConfig<GraphFieldConfig> = {\n      custom: {\n        drawStyle: GraphDrawStyle.Line,\n        lineWidth: 1,\n        fillColor,\n        lineColor,\n      },\n    };\n\n    return (\n      <div style={this.getChartStyles()}>\n        <Sparkline\n          height={this.chartHeight}\n          width={this.chartWidth}\n          sparkline={sparkline}\n          config={config}\n          theme={this.props.theme}\n        />\n      </div>\n    );\n  }\n  getChartStyles(): CSSProperties {\n    return {\n      position: 'absolute',\n      right: 0,\n      bottom: 0,\n    };\n  }\n}\n\nexport class WideNoChartLayout extends BigValueLayout {\n  constructor(props: Props) {\n    super(props);\n\n    const valueWidthPercent = this.titleToAlignTo?.length ? 0.3 : 1.0;\n\n    if (this.valueToAlignTo.length) {\n      // initial value size\n      this.valueFontSize = calculateFontSize(\n        this.valueToAlignTo,\n        this.maxTextWidth * valueWidthPercent,\n        this.maxTextHeight,\n        LINE_HEIGHT,\n        undefined,\n        VALUE_FONT_WEIGHT\n      );\n    }\n\n    if (this.titleToAlignTo?.length) {\n      // How big can we make the title and still have it fit\n      this.titleFontSize = calculateFontSize(\n        this.titleToAlignTo,\n        this.maxTextWidth * 0.6,\n        this.maxTextHeight,\n        LINE_HEIGHT,\n        MAX_TITLE_SIZE\n      );\n\n      // make sure it's a bit smaller than valueFontSize\n      this.titleFontSize = Math.min(this.valueFontSize * 0.7, this.titleFontSize);\n    }\n  }\n\n  getValueAndTitleContainerStyles() {\n    const styles = super.getValueAndTitleContainerStyles();\n    styles.flexDirection = 'row';\n    styles.alignItems = 'center';\n    styles.flexGrow = 1;\n\n    if (!this.justifyCenter) {\n      styles.justifyContent = 'space-between';\n    }\n\n    return styles;\n  }\n\n  renderChart(): JSX.Element | null {\n    return null;\n  }\n\n  getPanelStyles() {\n    const panelStyles = super.getPanelStyles();\n    panelStyles.alignItems = 'center';\n    return panelStyles;\n  }\n}\n\nexport class WideWithChartLayout extends BigValueLayout {\n  constructor(props: Props) {\n    super(props);\n\n    const { width, height } = props;\n\n    const chartHeightPercent = 0.5;\n    const titleWidthPercent = 0.6;\n    const valueWidthPercent = 1 - titleWidthPercent;\n    const textHeightPercent = 0.4;\n\n    this.chartWidth = width;\n    this.chartHeight = height * chartHeightPercent;\n\n    if (this.titleToAlignTo?.length) {\n      this.titleFontSize = calculateFontSize(\n        this.titleToAlignTo,\n        this.maxTextWidth * titleWidthPercent,\n        this.maxTextHeight * textHeightPercent,\n        LINE_HEIGHT,\n        MAX_TITLE_SIZE\n      );\n    }\n\n    if (this.valueToAlignTo.length) {\n      this.valueFontSize = calculateFontSize(\n        this.valueToAlignTo,\n        this.maxTextWidth * valueWidthPercent,\n        this.maxTextHeight * chartHeightPercent,\n        LINE_HEIGHT,\n        undefined,\n        VALUE_FONT_WEIGHT\n      );\n    }\n  }\n\n  getValueAndTitleContainerStyles() {\n    const styles = super.getValueAndTitleContainerStyles();\n    styles.flexDirection = 'row';\n    styles.flexGrow = 1;\n\n    if (!this.justifyCenter) {\n      styles.justifyContent = 'space-between';\n    }\n\n    return styles;\n  }\n\n  getPanelStyles() {\n    const styles = super.getPanelStyles();\n    styles.flexDirection = 'row';\n    styles.justifyContent = 'space-between';\n    return styles;\n  }\n}\n\nexport class StackedWithChartLayout extends BigValueLayout {\n  constructor(props: Props) {\n    super(props);\n\n    const { width, height } = props;\n    const titleHeightPercent = 0.15;\n    const chartHeightPercent = 0.25;\n    let titleHeight = 0;\n\n    this.chartHeight = height * chartHeightPercent;\n    this.chartWidth = width;\n\n    if (this.titleToAlignTo?.length) {\n      this.titleFontSize = calculateFontSize(\n        this.titleToAlignTo,\n        this.maxTextWidth,\n        height * titleHeightPercent,\n        LINE_HEIGHT,\n        MAX_TITLE_SIZE\n      );\n\n      titleHeight = this.titleFontSize * LINE_HEIGHT;\n    }\n\n    if (this.valueToAlignTo.length) {\n      this.valueFontSize = calculateFontSize(\n        this.valueToAlignTo,\n        this.maxTextWidth,\n        this.maxTextHeight - this.chartHeight - titleHeight,\n        LINE_HEIGHT,\n        undefined,\n        VALUE_FONT_WEIGHT\n      );\n    }\n\n    // make title fontsize it's a bit smaller than valueFontSize\n    if (this.titleToAlignTo?.length) {\n      this.titleFontSize = Math.min(this.valueFontSize * 0.7, this.titleFontSize);\n    }\n\n    // make chart take up unused space\n    this.chartHeight = height - this.titleFontSize * LINE_HEIGHT - this.valueFontSize * LINE_HEIGHT;\n  }\n\n  getValueAndTitleContainerStyles() {\n    const styles = super.getValueAndTitleContainerStyles();\n    styles.flexDirection = 'column';\n    styles.justifyContent = 'center';\n    return styles;\n  }\n\n  getPanelStyles() {\n    const styles = super.getPanelStyles();\n    styles.flexDirection = 'column';\n    return styles;\n  }\n}\n\nexport class StackedWithNoChartLayout extends BigValueLayout {\n  constructor(props: Props) {\n    super(props);\n\n    const { height } = props;\n    const titleHeightPercent = 0.15;\n    let titleHeight = 0;\n\n    if (this.titleToAlignTo?.length) {\n      this.titleFontSize = calculateFontSize(\n        this.titleToAlignTo,\n        this.maxTextWidth,\n        height * titleHeightPercent,\n        LINE_HEIGHT,\n        MAX_TITLE_SIZE\n      );\n\n      titleHeight = this.titleFontSize * LINE_HEIGHT;\n    }\n\n    if (this.valueToAlignTo.length) {\n      this.valueFontSize = calculateFontSize(\n        this.valueToAlignTo,\n        this.maxTextWidth,\n        this.maxTextHeight - titleHeight,\n        LINE_HEIGHT,\n        undefined,\n        VALUE_FONT_WEIGHT\n      );\n    }\n\n    if (this.titleToAlignTo?.length) {\n      // make title fontsize it's a bit smaller than valueFontSize\n      this.titleFontSize = Math.min(this.valueFontSize * 0.7, this.titleFontSize);\n    }\n  }\n\n  getValueAndTitleContainerStyles() {\n    const styles = super.getValueAndTitleContainerStyles();\n    styles.flexDirection = 'column';\n    styles.flexGrow = 1;\n    return styles;\n  }\n\n  renderChart(): JSX.Element | null {\n    return null;\n  }\n\n  getPanelStyles() {\n    const styles = super.getPanelStyles();\n    styles.alignItems = 'center';\n    return styles;\n  }\n}\n\nexport function buildLayout(props: Props): BigValueLayout {\n  const { width, height, sparkline } = props;\n  const useWideLayout = width / height > 2.5;\n\n  if (useWideLayout) {\n    if (height > 50 && !!sparkline && sparkline.y.values.length > 1) {\n      return new WideWithChartLayout(props);\n    } else {\n      return new WideNoChartLayout(props);\n    }\n  }\n\n  // stacked layouts\n  if (height > 100 && sparkline && sparkline.y.values.length > 1) {\n    return new StackedWithChartLayout(props);\n  } else {\n    return new StackedWithNoChartLayout(props);\n  }\n}\n\nexport function shouldJustifyCenter(justifyMode?: BigValueJustifyMode, title?: string) {\n  if (justifyMode === BigValueJustifyMode.Center) {\n    return true;\n  }\n\n  return (title ?? '').length === 0;\n}\n\nexport interface BigValueTextValues extends DisplayValue {\n  valueToAlignTo: string;\n  titleToAlignTo?: string;\n  tooltip?: string;\n}\n\nfunction getTextValues(props: Props): BigValueTextValues {\n  const { value, alignmentFactors, count } = props;\n  let { textMode } = props;\n\n  const titleToAlignTo = alignmentFactors ? alignmentFactors.title : value.title;\n  const valueToAlignTo = formattedValueToString(alignmentFactors ? alignmentFactors : value);\n\n  // In the auto case we only show title if this big value is part of more panes (count > 1)\n  if (textMode === BigValueTextMode.Auto && (count ?? 1) === 1) {\n    textMode = BigValueTextMode.Value;\n  }\n\n  switch (textMode) {\n    case BigValueTextMode.Name:\n      return {\n        ...value,\n        title: undefined,\n        prefix: undefined,\n        suffix: undefined,\n        text: value.title || '',\n        titleToAlignTo: undefined,\n        valueToAlignTo: titleToAlignTo ?? '',\n        tooltip: formattedValueToString(value),\n      };\n    case BigValueTextMode.Value:\n      return {\n        ...value,\n        title: undefined,\n        titleToAlignTo: undefined,\n        valueToAlignTo,\n        tooltip: value.title,\n      };\n    case BigValueTextMode.None:\n      return {\n        numeric: value.numeric,\n        color: value.color,\n        title: undefined,\n        text: '',\n        titleToAlignTo: undefined,\n        valueToAlignTo: '1',\n        tooltip: `Name: ${value.title}\\nValue: ${formattedValueToString(value)}`,\n      };\n    case BigValueTextMode.ValueAndName:\n    default:\n      return {\n        ...value,\n        titleToAlignTo,\n        valueToAlignTo,\n      };\n  }\n}\n","import { cx } from '@emotion/css';\nimport React, { PureComponent } from 'react';\n\nimport { DisplayValue, DisplayValueAlignmentFactors, FieldSparkline, VizOrientation } from '@grafana/data';\nimport { VizTextDisplayOptions } from '@grafana/schema';\n\nimport { Themeable2 } from '../../types';\nimport { clearButtonStyles } from '../Button';\nimport { FormattedValueDisplay } from '../FormattedValueDisplay/FormattedValueDisplay';\n\nimport { buildLayout } from './BigValueLayout';\n\nexport enum BigValueColorMode {\n  Background = 'background',\n  BackgroundSolid = 'background_solid',\n  None = 'none',\n  Value = 'value',\n}\n\nexport enum BigValueGraphMode {\n  None = 'none',\n  Line = 'line',\n  Area = 'area',\n}\n\nexport enum BigValueJustifyMode {\n  Auto = 'auto',\n  Center = 'center',\n}\n\n/**\n * Options for how the value & title are to be displayed\n */\nexport enum BigValueTextMode {\n  Auto = 'auto',\n  Value = 'value',\n  ValueAndName = 'value_and_name',\n  Name = 'name',\n  None = 'none',\n}\n\nexport interface Props extends Themeable2 {\n  /** Height of the component */\n  height: number;\n  /** Width of the component */\n  width: number;\n  /** Value displayed as Big Value */\n  value: DisplayValue;\n  /** Sparkline values for showing a graph under/behind the value  */\n  sparkline?: FieldSparkline;\n  /** onClick handler for the value */\n  onClick?: React.MouseEventHandler<HTMLElement>;\n  /** Custom styling */\n  className?: string;\n  /** Color mode for coloring the value or the background */\n  colorMode: BigValueColorMode;\n  /** Show a graph behind/under the value */\n  graphMode: BigValueGraphMode;\n  /** Auto justify value and text or center it */\n  justifyMode?: BigValueJustifyMode;\n  /** Factors that should influence the positioning of the text  */\n  alignmentFactors?: DisplayValueAlignmentFactors;\n  /** Explicit font size control */\n  text?: VizTextDisplayOptions;\n  /** Specify which text should be visible in the BigValue */\n  textMode?: BigValueTextMode;\n  /** If true disables the tooltip */\n  hasLinks?: boolean;\n  /** The orientation of the parent container */\n  parentOrientation?: VizOrientation;\n\n  /**\n   * If part of a series of stat panes, this is the total number.\n   * Used by BigValueTextMode.Auto text mode.\n   */\n  count?: number;\n}\n\nexport class BigValue extends PureComponent<Props> {\n  static defaultProps: Partial<Props> = {\n    justifyMode: BigValueJustifyMode.Auto,\n  };\n\n  render() {\n    const { onClick, className, hasLinks, theme } = this.props;\n    const layout = buildLayout(this.props);\n    const panelStyles = layout.getPanelStyles();\n    const valueAndTitleContainerStyles = layout.getValueAndTitleContainerStyles();\n    const valueStyles = layout.getValueStyles();\n    const titleStyles = layout.getTitleStyles();\n    const textValues = layout.textValues;\n\n    // When there is an outer data link this tooltip will override the outer native tooltip\n    const tooltip = hasLinks ? undefined : textValues.tooltip;\n\n    if (!onClick) {\n      return (\n        <div className={className} style={panelStyles} title={tooltip}>\n          <div style={valueAndTitleContainerStyles}>\n            {textValues.title && <div style={titleStyles}>{textValues.title}</div>}\n            <FormattedValueDisplay value={textValues} style={valueStyles} />\n          </div>\n          {layout.renderChart()}\n        </div>\n      );\n    }\n\n    return (\n      <button\n        type=\"button\"\n        className={cx(clearButtonStyles(theme), className)}\n        style={panelStyles}\n        onClick={onClick}\n        title={tooltip}\n      >\n        <div style={valueAndTitleContainerStyles}>\n          {textValues.title && <div style={titleStyles}>{textValues.title}</div>}\n          <FormattedValueDisplay value={textValues} style={valueStyles} />\n        </div>\n        {layout.renderChart()}\n      </button>\n    );\n  }\n}\n","import {\n  DisplayValue,\n  FALLBACK_COLOR,\n  FieldColorModeId,\n  FieldConfig,\n  GAUGE_DEFAULT_MAXIMUM,\n  GAUGE_DEFAULT_MINIMUM,\n  getActiveThreshold,\n  GrafanaTheme,\n  GrafanaTheme2,\n  Threshold,\n  ThresholdsConfig,\n  ThresholdsMode,\n} from '@grafana/data';\n\ninterface GaugeAutoProps {\n  titleFontSize: number;\n  gaugeHeight: number;\n  showLabel: boolean;\n}\n\nexport const DEFAULT_THRESHOLDS: ThresholdsConfig = {\n  mode: ThresholdsMode.Absolute,\n  steps: [\n    { value: -Infinity, color: 'green' },\n    { value: 80, color: 'red' },\n  ],\n};\n\nexport function calculateGaugeAutoProps(width: number, height: number, title: string | undefined): GaugeAutoProps {\n  const showLabel = title !== null && title !== undefined;\n  const titleFontSize = Math.min((width * 0.15) / 1.5, 20); // 20% of height * line-height, max 40px\n  const titleHeight = titleFontSize * 1.5;\n  const availableHeight = showLabel ? height - titleHeight : height;\n  const gaugeHeight = Math.min(availableHeight, width);\n\n  return {\n    showLabel,\n    gaugeHeight,\n    titleFontSize,\n  };\n}\n\nexport function getFormattedThresholds(\n  decimals: number,\n  field: FieldConfig,\n  value: DisplayValue,\n  theme: GrafanaTheme | GrafanaTheme2\n): Threshold[] {\n  if (field.color?.mode !== FieldColorModeId.Thresholds) {\n    return [{ value: field.min ?? GAUGE_DEFAULT_MINIMUM, color: value.color ?? FALLBACK_COLOR }];\n  }\n\n  const thresholds = field.thresholds ?? DEFAULT_THRESHOLDS;\n  const isPercent = thresholds.mode === ThresholdsMode.Percentage;\n  const steps = thresholds.steps;\n\n  let min = field.min ?? GAUGE_DEFAULT_MINIMUM;\n  let max = field.max ?? GAUGE_DEFAULT_MAXIMUM;\n\n  if (isPercent) {\n    min = 0;\n    max = 100;\n  }\n\n  const first = getActiveThreshold(min, steps);\n  const last = getActiveThreshold(max, steps);\n  const formatted: Threshold[] = [\n    { value: +min.toFixed(decimals), color: theme.visualization.getColorByName(first.color) },\n  ];\n  let skip = true;\n  for (let i = 0; i < steps.length; i++) {\n    const step = steps[i];\n    if (skip) {\n      if (first === step) {\n        skip = false;\n      }\n      continue;\n    }\n    const prev = steps[i - 1];\n    formatted.push({ value: step.value, color: theme.visualization.getColorByName(prev.color) });\n    if (step === last) {\n      break;\n    }\n  }\n  formatted.push({ value: +max.toFixed(decimals), color: theme.visualization.getColorByName(last.color) });\n  return formatted;\n}\n","import $ from 'jquery';\nimport React, { PureComponent } from 'react';\n\nimport {\n  DisplayValue,\n  formattedValueToString,\n  FieldConfig,\n  ThresholdsMode,\n  GAUGE_DEFAULT_MAXIMUM,\n  GAUGE_DEFAULT_MINIMUM,\n  GrafanaTheme2,\n} from '@grafana/data';\nimport { VizTextDisplayOptions } from '@grafana/schema';\n\nimport { calculateFontSize } from '../../utils/measureText';\nimport { clearButtonStyles } from '../Button';\n\nimport { calculateGaugeAutoProps, DEFAULT_THRESHOLDS, getFormattedThresholds } from './utils';\n\nexport interface Props {\n  height: number;\n  field: FieldConfig;\n  showThresholdMarkers: boolean;\n  showThresholdLabels: boolean;\n  width: number;\n  value: DisplayValue;\n  text?: VizTextDisplayOptions;\n  onClick?: React.MouseEventHandler<HTMLElement>;\n  className?: string;\n  theme: GrafanaTheme2;\n}\n\nexport class Gauge extends PureComponent<Props> {\n  canvasElement: HTMLDivElement | null = null;\n\n  static defaultProps: Partial<Props> = {\n    showThresholdMarkers: true,\n    showThresholdLabels: false,\n    field: {\n      min: 0,\n      max: 100,\n      thresholds: DEFAULT_THRESHOLDS,\n    },\n  };\n\n  componentDidMount() {\n    this.draw();\n  }\n\n  componentDidUpdate() {\n    this.draw();\n  }\n\n  draw() {\n    const { field, showThresholdLabels, showThresholdMarkers, width, height, theme, value } = this.props;\n\n    const autoProps = calculateGaugeAutoProps(width, height, value.title);\n    const dimension = Math.min(width, autoProps.gaugeHeight);\n    const backgroundColor = theme.colors.background.secondary;\n    const gaugeWidthReduceRatio = showThresholdLabels ? 1.5 : 1;\n    const gaugeWidth = Math.min(dimension / 5.5, 40) / gaugeWidthReduceRatio;\n    const thresholdMarkersWidth = gaugeWidth / 5;\n    const text = formattedValueToString(value);\n    // This not 100% accurate as I am unsure of flot's calculations here\n    const valueWidthBase = Math.min(width, dimension * 1.3) * 0.9;\n    // remove gauge & marker width (on left and right side)\n    // and 10px is some padding that flot adds to the outer canvas\n    const valueWidth =\n      valueWidthBase -\n      ((gaugeWidth + (showThresholdMarkers ? thresholdMarkersWidth : 0) + (showThresholdLabels ? 10 : 0)) * 2 + 10);\n    const fontSize = this.props.text?.valueSize ?? calculateFontSize(text, valueWidth, dimension, 1, gaugeWidth * 1.7);\n    const thresholdLabelFontSize = Math.max(fontSize / 2.5, 12);\n\n    let min = field.min ?? GAUGE_DEFAULT_MINIMUM;\n    let max = field.max ?? GAUGE_DEFAULT_MAXIMUM;\n    let numeric = value.numeric;\n\n    if (field.thresholds?.mode === ThresholdsMode.Percentage) {\n      min = 0;\n      max = 100;\n      if (value.percent === undefined) {\n        numeric = ((numeric - min) / (max - min)) * 100;\n      } else {\n        numeric = value.percent! * 100;\n      }\n    }\n\n    const decimals = field.decimals === undefined ? 2 : field.decimals!;\n\n    if (showThresholdMarkers) {\n      min = +min.toFixed(decimals);\n      max = +max.toFixed(decimals);\n    }\n\n    const options = {\n      series: {\n        gauges: {\n          gauge: {\n            min,\n            max,\n            neutralValue: field.custom?.neutral,\n            background: { color: backgroundColor },\n            border: { color: null },\n            shadow: { show: false },\n            width: gaugeWidth,\n          },\n          frame: { show: false },\n          label: { show: false },\n          layout: { margin: 0, thresholdWidth: 0, vMargin: 0 },\n          cell: { border: { width: 0 } },\n          threshold: {\n            values: getFormattedThresholds(decimals, field, value, theme),\n            label: {\n              show: showThresholdLabels,\n              margin: thresholdMarkersWidth + 1,\n              font: { size: thresholdLabelFontSize },\n            },\n            show: showThresholdMarkers,\n            width: thresholdMarkersWidth,\n          },\n          value: {\n            color: value.color,\n            formatter: () => {\n              return text;\n            },\n            font: { size: fontSize, family: theme.typography.fontFamily },\n          },\n          show: true,\n        },\n      },\n    };\n\n    const plotSeries = {\n      data: [[0, numeric]],\n      label: value.title,\n    };\n\n    try {\n      if (this.canvasElement) {\n        $.plot(this.canvasElement, [plotSeries], options);\n      }\n    } catch (err) {\n      console.error('Gauge rendering error', err, options, value);\n    }\n  }\n\n  renderVisualization = () => {\n    const { width, value, height, onClick, text, theme } = this.props;\n    const autoProps = calculateGaugeAutoProps(width, height, value.title);\n    const gaugeElement = (\n      <div\n        style={{ height: `${autoProps.gaugeHeight}px`, width: '100%' }}\n        ref={(element) => (this.canvasElement = element)}\n      />\n    );\n\n    return (\n      <>\n        {onClick ? (\n          <button className={clearButtonStyles(theme)} type=\"button\" onClick={onClick}>\n            {gaugeElement}\n          </button>\n        ) : (\n          gaugeElement\n        )}\n        {autoProps.showLabel && (\n          <div\n            style={{\n              textAlign: 'center',\n              fontSize: text?.titleSize ?? autoProps.titleFontSize,\n              overflow: 'hidden',\n              textOverflow: 'ellipsis',\n              whiteSpace: 'nowrap',\n              position: 'relative',\n              width: '100%',\n              top: '-4px',\n              cursor: 'default',\n            }}\n          >\n            {value.title}\n          </div>\n        )}\n      </>\n    );\n  };\n\n  render() {\n    return (\n      <div\n        style={{\n          width: '100%',\n          height: '100%',\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'center',\n          overflow: 'hidden',\n        }}\n        className={this.props.className}\n      >\n        {this.renderVisualization()}\n      </div>\n    );\n  }\n}\n","export const calculateTooltipPosition = (\n  xPos = 0,\n  yPos = 0,\n  tooltipWidth = 0,\n  tooltipHeight = 0,\n  xOffset = 0,\n  yOffset = 0,\n  windowWidth = 0,\n  windowHeight = 0\n) => {\n  let x = xPos;\n  let y = yPos;\n\n  const overflowRight = Math.max(xPos + xOffset + tooltipWidth - (windowWidth - xOffset), 0);\n  const overflowLeft = Math.abs(Math.min(xPos - xOffset - tooltipWidth - xOffset, 0));\n  const wouldOverflowRight = overflowRight > 0;\n  const wouldOverflowLeft = overflowLeft > 0;\n\n  const overflowBelow = Math.max(yPos + yOffset + tooltipHeight - (windowHeight - yOffset), 0);\n  const overflowAbove = Math.abs(Math.min(yPos - yOffset - tooltipHeight - yOffset, 0));\n  const wouldOverflowBelow = overflowBelow > 0;\n  const wouldOverflowAbove = overflowAbove > 0;\n\n  if (wouldOverflowRight && wouldOverflowLeft) {\n    x = overflowRight > overflowLeft ? xOffset : windowWidth - xOffset - tooltipWidth;\n  } else if (wouldOverflowRight) {\n    x = xPos - xOffset - tooltipWidth;\n  } else {\n    x = xPos + xOffset;\n  }\n\n  if (wouldOverflowBelow && wouldOverflowAbove) {\n    y = overflowBelow > overflowAbove ? yOffset : windowHeight - yOffset - tooltipHeight;\n  } else if (wouldOverflowBelow) {\n    y = yPos - yOffset - tooltipHeight;\n  } else {\n    y = yPos + yOffset;\n  }\n  return { x, y };\n};\n","import { css, cx } from '@emotion/css';\nimport React, { useState, HTMLAttributes, useMemo, useRef, useLayoutEffect } from 'react';\nimport { useWindowSize } from 'react-use';\n\nimport { Dimensions2D, GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\nimport { getTooltipContainerStyles } from '../../themes/mixins';\n\nimport { calculateTooltipPosition } from './utils';\n\n/**\n * @public\n */\nexport interface VizTooltipContainerProps extends HTMLAttributes<HTMLDivElement> {\n  position: { x: number; y: number };\n  offset: { x: number; y: number };\n  children?: React.ReactNode;\n  allowPointerEvents?: boolean;\n}\n\n/**\n * @public\n */\nexport const VizTooltipContainer = ({\n  position: { x: positionX, y: positionY },\n  offset: { x: offsetX, y: offsetY },\n  children,\n  allowPointerEvents = false,\n  className,\n  ...otherProps\n}: VizTooltipContainerProps) => {\n  const tooltipRef = useRef<HTMLDivElement>(null);\n  const [tooltipMeasurement, setTooltipMeasurement] = useState<Dimensions2D>({ width: 0, height: 0 });\n  const { width, height } = useWindowSize();\n  const [placement, setPlacement] = useState({\n    x: positionX + offsetX,\n    y: positionY + offsetY,\n  });\n\n  const resizeObserver = useMemo(\n    () =>\n      // TS has hard time playing games with @types/resize-observer-browser, hence the ignore\n      // @ts-ignore\n      new ResizeObserver((entries) => {\n        for (let entry of entries) {\n          const tW = Math.floor(entry.contentRect.width + 2 * 8); //  adding padding until Safari supports borderBoxSize\n          const tH = Math.floor(entry.contentRect.height + 2 * 8);\n          if (tooltipMeasurement.width !== tW || tooltipMeasurement.height !== tH) {\n            setTooltipMeasurement({\n              width: Math.min(tW, width),\n              height: Math.min(tH, height),\n            });\n          }\n        }\n      }),\n    [tooltipMeasurement, width, height]\n  );\n\n  useLayoutEffect(() => {\n    if (tooltipRef.current) {\n      resizeObserver.observe(tooltipRef.current);\n    }\n\n    return () => {\n      resizeObserver.disconnect();\n    };\n  }, [resizeObserver]);\n\n  // Make sure tooltip does not overflow window\n  useLayoutEffect(() => {\n    if (tooltipRef && tooltipRef.current) {\n      const { x, y } = calculateTooltipPosition(\n        positionX,\n        positionY,\n        tooltipMeasurement.width,\n        tooltipMeasurement.height,\n        offsetX,\n        offsetY,\n        width,\n        height\n      );\n\n      setPlacement({ x, y });\n    }\n  }, [width, height, positionX, offsetX, positionY, offsetY, tooltipMeasurement]);\n\n  const styles = useStyles2(getStyles);\n\n  return (\n    <div\n      ref={tooltipRef}\n      style={{\n        position: 'fixed',\n        left: 0,\n        // disabling pointer-events is to prevent the tooltip from flickering when moving left to right\n        // see e.g. https://github.com/grafana/grafana/pull/33609\n        pointerEvents: allowPointerEvents ? 'auto' : 'none',\n        top: 0,\n        transform: `translate(${placement.x}px, ${placement.y}px)`,\n        transition: 'transform ease-out 0.1s',\n      }}\n      {...otherProps}\n      className={cx(styles.wrapper, className)}\n    >\n      {children}\n    </div>\n  );\n};\n\nVizTooltipContainer.displayName = 'VizTooltipContainer';\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  wrapper: css`\n    ${getTooltipContainerStyles(theme)}\n  `,\n});\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { Dimensions, TimeZone } from '@grafana/data';\nimport { TooltipDisplayMode } from '@grafana/schema';\n\nimport { useStyles2 } from '../../themes';\nimport { FlotPosition } from '../Graph/types';\nimport { Portal } from '../Portal/Portal';\n\nimport { VizTooltipContainer } from './VizTooltipContainer';\n\n// Describes active dimensions user interacts with\n// It's a key-value pair where:\n// - key is the name of the dimension\n// - value is a tuple addressing which column and row from given dimension is active.\n//   If row is undefined, it means that we are not hovering over a datapoint\nexport type ActiveDimensions<T extends Dimensions = any> = { [key in keyof T]: [number, number | undefined] | null };\n\nexport interface VizTooltipContentProps<T extends Dimensions = any> {\n  // Each dimension is described by array of fields representing it\n  // I.e. for graph there are two dimensions: x and y axis:\n  // { xAxis: [<array of time fields>], yAxis: [<array of value fields>]}\n  // TODO: type this better, no good idea how yet\n  dimensions: T; // Dimension[]\n  activeDimensions?: ActiveDimensions<T>;\n  timeZone?: TimeZone;\n  pos: FlotPosition;\n  mode: TooltipDisplayMode;\n}\n\nexport interface VizTooltipProps {\n  /** Element used as tooltips content */\n  content?: React.ReactElement;\n\n  /** Optional component to be used as a tooltip content */\n  tooltipComponent?: React.ComponentType<React.PropsWithChildren<VizTooltipContentProps>>;\n\n  /** x/y position relative to the window */\n  position?: { x: number; y: number };\n\n  /** x/y offset relative to tooltip origin element, i.e. graph's datapoint */\n  offset?: { x: number; y: number };\n\n  // Mode in which tooltip works\n  // - single - display single series info\n  // - multi - display all series info\n  mode?: TooltipDisplayMode;\n}\n\n/**\n * @public\n */\nexport const VizTooltip = ({ content, position, offset }: VizTooltipProps) => {\n  const styles = useStyles2(getStyles);\n  if (position) {\n    return (\n      <Portal className={styles.portal}>\n        <VizTooltipContainer position={position} offset={offset || { x: 0, y: 0 }}>\n          {content}\n        </VizTooltipContainer>\n      </Portal>\n    );\n  }\n  return null;\n};\n\nVizTooltip.displayName = 'VizTooltip';\n\nconst getStyles = () => {\n  return {\n    portal: css`\n      position: absolute;\n      top: 0;\n      left: 0;\n      pointer-events: none;\n      width: 100%;\n      height: 100%;\n    `,\n  };\n};\n","import React, { CSSProperties } from 'react';\n\nimport { fieldColorModeRegistry } from '@grafana/data';\n\nimport { useTheme2 } from '../../themes';\n\nexport interface Props extends React.HTMLAttributes<HTMLDivElement> {\n  color?: string;\n  gradient?: string;\n}\n\nexport const SeriesIcon = React.memo(\n  React.forwardRef<HTMLDivElement, Props>(({ color, className, gradient, ...restProps }, ref) => {\n    const theme = useTheme2();\n    let cssColor: string;\n\n    if (gradient) {\n      const colors = fieldColorModeRegistry.get(gradient).getColors?.(theme);\n      if (colors?.length) {\n        cssColor = `linear-gradient(90deg, ${colors.join(', ')})`;\n      } else {\n        // Not sure what to default to, this will return gray, this should not happen though.\n        cssColor = theme.visualization.getColorByName('');\n      }\n    } else {\n      cssColor = color!;\n    }\n\n    const styles: CSSProperties = {\n      background: cssColor,\n      width: '14px',\n      height: '4px',\n      borderRadius: theme.shape.radius.default,\n      display: 'inline-block',\n      marginRight: '8px',\n    };\n\n    return <div data-testid=\"series-icon\" ref={ref} className={className} style={styles} {...restProps} />;\n  })\n);\n\nSeriesIcon.displayName = 'SeriesIcon';\n","import { css, cx } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2, GraphSeriesValue } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\nimport { SeriesIcon } from '../VizLegend/SeriesIcon';\n\n/**\n * @public\n */\nexport interface SeriesTableRowProps {\n  color?: string;\n  label?: React.ReactNode;\n  value?: string | GraphSeriesValue;\n  isActive?: boolean;\n}\n\nconst getSeriesTableRowStyles = (theme: GrafanaTheme2) => {\n  return {\n    icon: css`\n      margin-right: ${theme.spacing(1)};\n      vertical-align: middle;\n    `,\n    seriesTable: css`\n      display: table;\n    `,\n    seriesTableRow: css`\n      display: table-row;\n      font-size: ${theme.typography.bodySmall.fontSize};\n    `,\n    seriesTableCell: css`\n      display: table-cell;\n    `,\n    label: css`\n      word-break: break-all;\n    `,\n    value: css`\n      padding-left: ${theme.spacing(2)};\n    `,\n    activeSeries: css`\n      font-weight: ${theme.typography.fontWeightBold};\n      color: ${theme.colors.text.maxContrast};\n    `,\n    timestamp: css`\n      font-weight: ${theme.typography.fontWeightBold};\n      font-size: ${theme.typography.bodySmall.fontSize};\n    `,\n  };\n};\n\n/**\n * @public\n */\nexport const SeriesTableRow = ({ color, label, value, isActive }: SeriesTableRowProps) => {\n  const styles = useStyles2(getSeriesTableRowStyles);\n\n  return (\n    <div data-testid=\"SeriesTableRow\" className={cx(styles.seriesTableRow, isActive && styles.activeSeries)}>\n      {color && (\n        <div className={styles.seriesTableCell}>\n          <SeriesIcon color={color} className={styles.icon} />\n        </div>\n      )}\n      {label && <div className={cx(styles.seriesTableCell, styles.label)}>{label}</div>}\n      {value && <div className={cx(styles.seriesTableCell, styles.value)}>{value}</div>}\n    </div>\n  );\n};\n\n/**\n * @public\n */\nexport interface SeriesTableProps {\n  timestamp?: string | GraphSeriesValue;\n  series: SeriesTableRowProps[];\n}\n\n/**\n * @public\n */\nexport const SeriesTable = ({ timestamp, series }: SeriesTableProps) => {\n  const styles = useStyles2(getSeriesTableRowStyles);\n\n  return (\n    <>\n      {timestamp && (\n        <div className={styles.timestamp} aria-label=\"Timestamp\">\n          {timestamp}\n        </div>\n      )}\n      {series.map((s, i) => {\n        return (\n          <SeriesTableRow\n            isActive={s.isActive}\n            label={s.label}\n            color={s.color}\n            value={s.value}\n            key={`${s.label}-${i}`}\n          />\n        );\n      })}\n    </>\n  );\n};\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport {\n  FlotDataPoint,\n  getValueFromDimension,\n  Dimensions,\n  dateTimeFormat,\n  TimeZone,\n  FormattedValue,\n  GrafanaTheme2,\n} from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\nimport { ContextMenu, ContextMenuProps } from '../ContextMenu/ContextMenu';\nimport { FormattedValueDisplay } from '../FormattedValueDisplay/FormattedValueDisplay';\nimport { HorizontalGroup } from '../Layout/Layout';\nimport { MenuGroup, MenuGroupProps } from '../Menu/MenuGroup';\nimport { MenuItem } from '../Menu/MenuItem';\nimport { SeriesIcon } from '../VizLegend/SeriesIcon';\n\nimport { GraphDimensions } from './GraphTooltip/types';\n\nexport type ContextDimensions<T extends Dimensions = any> = { [key in keyof T]: [number, number | undefined] | null };\n\nexport type GraphContextMenuProps = ContextMenuProps & {\n  getContextMenuSource: () => FlotDataPoint | null;\n  timeZone?: TimeZone;\n  itemsGroup?: MenuGroupProps[];\n  dimensions?: GraphDimensions;\n  contextDimensions?: ContextDimensions;\n};\n\n/** @internal */\nexport const GraphContextMenu = ({\n  getContextMenuSource,\n  timeZone,\n  itemsGroup,\n  dimensions,\n  contextDimensions,\n  ...otherProps\n}: GraphContextMenuProps) => {\n  const source = getContextMenuSource();\n\n  //  Do not render items that do not have label specified\n  const itemsToRender = itemsGroup\n    ? itemsGroup.map((group) => ({\n        ...group,\n        items: group.items?.filter((item) => item.label),\n      }))\n    : [];\n\n  const renderHeader = () => {\n    if (!source) {\n      return null;\n    }\n\n    // If dimensions supplied, we can calculate and display value\n    let value;\n    if (dimensions?.yAxis && contextDimensions?.yAxis?.[1]) {\n      const valueFromDimensions = getValueFromDimension(\n        dimensions.yAxis,\n        contextDimensions.yAxis[0],\n        contextDimensions.yAxis[1]\n      );\n      const display = source.series.valueField.display!;\n      value = display(valueFromDimensions);\n    }\n\n    const formattedValue = dateTimeFormat(source.datapoint[0], {\n      defaultWithMS: source.series.hasMsResolution,\n      timeZone,\n    });\n\n    return (\n      <GraphContextMenuHeader\n        timestamp={formattedValue}\n        seriesColor={source.series.color}\n        displayName={source.series.alias || source.series.label}\n        displayValue={value}\n      />\n    );\n  };\n  const renderMenuGroupItems = () => {\n    return itemsToRender?.map((group, index) => (\n      <MenuGroup key={`${group.label}${index}`} label={group.label}>\n        {(group.items || []).map((item) => (\n          <MenuItem\n            key={`${item.label}`}\n            url={item.url}\n            label={item.label}\n            target={item.target}\n            icon={item.icon}\n            active={item.active}\n            onClick={item.onClick}\n          />\n        ))}\n      </MenuGroup>\n    ));\n  };\n\n  return <ContextMenu {...otherProps} renderMenuItems={renderMenuGroupItems} renderHeader={renderHeader} />;\n};\n\n/** @internal */\nexport const GraphContextMenuHeader = ({\n  timestamp,\n  seriesColor,\n  displayName,\n  displayValue,\n}: {\n  timestamp: string;\n  seriesColor: string;\n  displayName: string;\n  displayValue: FormattedValue;\n}) => {\n  const styles = useStyles2(getStyles);\n\n  return (\n    <div className={styles.wrapper}>\n      <strong>{timestamp}</strong>\n      <HorizontalGroup>\n        <div>\n          <SeriesIcon color={seriesColor} />\n          <span className={styles.displayName}>{displayName}</span>\n        </div>\n        {displayValue && <FormattedValueDisplay value={displayValue} />}\n      </HorizontalGroup>\n    </div>\n  );\n};\n\nfunction getStyles(theme: GrafanaTheme2) {\n  return {\n    wrapper: css`\n      padding: ${theme.spacing(0.5)} ${theme.spacing(1)};\n      font-size: ${theme.typography.size.sm};\n      z-index: ${theme.zIndex.tooltip};\n    `,\n    displayName: css`\n      white-space: nowrap;\n      padding-left: ${theme.spacing(0.5)};\n    `,\n  };\n}\n","import {\n  GraphSeriesValue,\n  Field,\n  formattedValueToString,\n  getFieldDisplayName,\n  TimeZone,\n  dateTimeFormat,\n  systemDateFormats,\n} from '@grafana/data';\n\n/**\n * Returns index of the closest datapoint BEFORE hover position\n *\n * @param posX\n * @param series\n */\nexport const findHoverIndexFromData = (xAxisDimension: Field, xPos: number) => {\n  let lower = 0;\n  let upper = xAxisDimension.values.length - 1;\n  let middle;\n\n  while (true) {\n    if (lower > upper) {\n      return Math.max(upper, 0);\n    }\n    middle = Math.floor((lower + upper) / 2);\n    const xPosition = xAxisDimension.values.get(middle);\n\n    if (xPosition === xPos) {\n      return middle;\n    } else if (xPosition && xPosition < xPos) {\n      lower = middle + 1;\n    } else {\n      upper = middle - 1;\n    }\n  }\n};\n\ninterface MultiSeriesHoverInfo {\n  value: string;\n  time: string;\n  datapointIndex: number;\n  seriesIndex: number;\n  label?: string;\n  color?: string;\n}\n\n/**\n * Returns information about closest datapoints when hovering over a Graph\n *\n * @param seriesList list of series visible on the Graph\n * @param pos mouse cursor position, based on jQuery.flot position\n */\nexport const getMultiSeriesGraphHoverInfo = (\n  // x and y axis dimensions order is aligned\n  yAxisDimensions: Field[],\n  xAxisDimensions: Field[],\n  /** Well, time basically */\n  xAxisPosition: number,\n  timeZone?: TimeZone\n): {\n  results: MultiSeriesHoverInfo[];\n  time?: GraphSeriesValue;\n} => {\n  let i, field, hoverIndex, hoverDistance, pointTime;\n\n  const results: MultiSeriesHoverInfo[] = [];\n\n  let minDistance, minTime;\n\n  for (i = 0; i < yAxisDimensions.length; i++) {\n    field = yAxisDimensions[i];\n    const time = xAxisDimensions[i];\n    hoverIndex = findHoverIndexFromData(time, xAxisPosition);\n    hoverDistance = xAxisPosition - time.values.get(hoverIndex);\n    pointTime = time.values.get(hoverIndex);\n    // Take the closest point before the cursor, or if it does not exist, the closest after\n    if (\n      minDistance === undefined ||\n      (hoverDistance >= 0 && (hoverDistance < minDistance || minDistance < 0)) ||\n      (hoverDistance < 0 && hoverDistance > minDistance)\n    ) {\n      minDistance = hoverDistance;\n      minTime = time.display ? formattedValueToString(time.display(pointTime)) : pointTime;\n    }\n\n    const disp = field.display!(field.values.get(hoverIndex));\n\n    results.push({\n      value: formattedValueToString(disp),\n      datapointIndex: hoverIndex,\n      seriesIndex: i,\n      color: disp.color,\n      label: getFieldDisplayName(field),\n      time: time.display ? formattedValueToString(time.display(pointTime)) : pointTime,\n    });\n  }\n\n  return {\n    results,\n    time: minTime,\n  };\n};\n\nexport const graphTickFormatter = (epoch: number, axis: any) => {\n  return dateTimeFormat(epoch, {\n    format: axis?.options?.timeformat,\n    timeZone: axis?.options?.timezone,\n  });\n};\n\nexport const graphTimeFormat = (ticks: number | null, min: number | null, max: number | null): string => {\n  if (min && max && ticks) {\n    const range = max - min;\n    const secPerTick = range / ticks / 1000;\n    // Need have 10 millisecond margin on the day range\n    // As sometimes last 24 hour dashboard evaluates to more than 86400000\n    const oneDay = 86400010;\n    const oneYear = 31536000000;\n\n    if (secPerTick <= 10) {\n      return systemDateFormats.interval.millisecond;\n    }\n    if (secPerTick <= 45) {\n      return systemDateFormats.interval.second;\n    }\n    if (range <= oneDay) {\n      return systemDateFormats.interval.minute;\n    }\n    if (secPerTick <= 80000) {\n      return systemDateFormats.interval.hour;\n    }\n    if (range <= oneYear) {\n      return systemDateFormats.interval.day;\n    }\n    if (secPerTick <= 31536000) {\n      return systemDateFormats.interval.month;\n    }\n    return systemDateFormats.interval.year;\n  }\n\n  return systemDateFormats.interval.minute;\n};\n","import React from 'react';\n\nimport { getValueFromDimension } from '@grafana/data';\n\nimport { SeriesTable } from '../../VizTooltip';\nimport { FlotPosition } from '../types';\nimport { getMultiSeriesGraphHoverInfo } from '../utils';\n\nimport { GraphTooltipContentProps } from './types';\n\ntype Props = GraphTooltipContentProps & {\n  // We expect position to figure out correct values when not hovering over a datapoint\n  pos: FlotPosition;\n};\n\nexport const MultiModeGraphTooltip = ({ dimensions, activeDimensions, pos, timeZone }: Props) => {\n  let activeSeriesIndex: number | null = null;\n  // when no x-axis provided, skip rendering\n  if (activeDimensions.xAxis === null) {\n    return null;\n  }\n\n  if (activeDimensions.yAxis) {\n    activeSeriesIndex = activeDimensions.yAxis[0];\n  }\n\n  // when not hovering over a point, time is undefined, and we use pos.x as time\n  const time = activeDimensions.xAxis[1]\n    ? getValueFromDimension(dimensions.xAxis, activeDimensions.xAxis[0], activeDimensions.xAxis[1])\n    : pos.x;\n\n  const hoverInfo = getMultiSeriesGraphHoverInfo(dimensions.yAxis.columns, dimensions.xAxis.columns, time, timeZone);\n  const timestamp = hoverInfo.time;\n\n  const series = hoverInfo.results.map((s, i) => {\n    return {\n      color: s.color,\n      label: s.label,\n      value: s.value,\n      isActive: activeSeriesIndex === i,\n    };\n  });\n\n  return <SeriesTable series={series} timestamp={timestamp} />;\n};\n\nMultiModeGraphTooltip.displayName = 'MultiModeGraphTooltip';\n","import React from 'react';\n\nimport {\n  getValueFromDimension,\n  getColumnFromDimension,\n  formattedValueToString,\n  getFieldDisplayName,\n} from '@grafana/data';\n\nimport { SeriesTable } from '../../VizTooltip';\n\nimport { GraphTooltipContentProps } from './types';\n\nexport const SingleModeGraphTooltip = ({ dimensions, activeDimensions, timeZone }: GraphTooltipContentProps) => {\n  // not hovering over a point, skip rendering\n  if (\n    activeDimensions.yAxis === null ||\n    activeDimensions.yAxis[1] === undefined ||\n    activeDimensions.xAxis === null ||\n    activeDimensions.xAxis[1] === undefined\n  ) {\n    return null;\n  }\n  const time = getValueFromDimension(dimensions.xAxis, activeDimensions.xAxis[0], activeDimensions.xAxis[1]);\n  const timeField = getColumnFromDimension(dimensions.xAxis, activeDimensions.xAxis[0]);\n  const processedTime = timeField.display ? formattedValueToString(timeField.display(time)) : time;\n\n  const valueField = getColumnFromDimension(dimensions.yAxis, activeDimensions.yAxis[0]);\n  const value = getValueFromDimension(dimensions.yAxis, activeDimensions.yAxis[0], activeDimensions.yAxis[1]);\n  const display = valueField.display!;\n  const disp = display(value);\n\n  return (\n    <SeriesTable\n      series={[\n        {\n          color: disp.color,\n          label: getFieldDisplayName(valueField),\n          value: formattedValueToString(disp),\n        },\n      ]}\n      timestamp={processedTime}\n    />\n  );\n};\n\nSingleModeGraphTooltip.displayName = 'SingleModeGraphTooltip';\n","import React from 'react';\n\nimport { TooltipDisplayMode } from '@grafana/schema';\n\nimport { VizTooltipContentProps } from '../../VizTooltip';\n\nimport { MultiModeGraphTooltip } from './MultiModeGraphTooltip';\nimport { SingleModeGraphTooltip } from './SingleModeGraphTooltip';\nimport { GraphDimensions } from './types';\n\nexport const GraphTooltip = ({\n  mode = TooltipDisplayMode.Single,\n  dimensions,\n  activeDimensions,\n  pos,\n  timeZone,\n}: VizTooltipContentProps<GraphDimensions>) => {\n  // When\n  // [1] no active dimension or\n  // [2] no xAxis position\n  // we assume no tooltip should be rendered\n  if (!activeDimensions || !activeDimensions.xAxis) {\n    return null;\n  }\n\n  if (mode === 'single') {\n    return <SingleModeGraphTooltip dimensions={dimensions} activeDimensions={activeDimensions} timeZone={timeZone} />;\n  } else {\n    return (\n      <MultiModeGraphTooltip\n        dimensions={dimensions}\n        activeDimensions={activeDimensions}\n        pos={pos}\n        timeZone={timeZone}\n      />\n    );\n  }\n};\n\nGraphTooltip.displayName = 'GraphTooltip';\n","// Libraries\nimport $ from 'jquery';\nimport { uniqBy } from 'lodash';\nimport React, { PureComponent } from 'react';\n\n// Types\nimport { TimeRange, GraphSeriesXY, TimeZone, createDimension } from '@grafana/data';\nimport { TooltipDisplayMode } from '@grafana/schema';\n\nimport { VizTooltipProps, VizTooltipContentProps, ActiveDimensions, VizTooltip } from '../VizTooltip';\n\nimport { GraphContextMenu, GraphContextMenuProps, ContextDimensions } from './GraphContextMenu';\nimport { GraphTooltip } from './GraphTooltip/GraphTooltip';\nimport { GraphDimensions } from './GraphTooltip/types';\nimport { FlotPosition, FlotItem } from './types';\nimport { graphTimeFormat, graphTickFormatter } from './utils';\n\nexport interface GraphProps {\n  ariaLabel?: string;\n  children?: JSX.Element | JSX.Element[];\n  series: GraphSeriesXY[];\n  timeRange: TimeRange; // NOTE: we should aim to make `time` a property of the axis, not force it for all graphs\n  timeZone?: TimeZone; // NOTE: we should aim to make `time` a property of the axis, not force it for all graphs\n  showLines?: boolean;\n  showPoints?: boolean;\n  showBars?: boolean;\n  width: number;\n  height: number;\n  isStacked?: boolean;\n  lineWidth?: number;\n  onHorizontalRegionSelected?: (from: number, to: number) => void;\n}\n\ninterface GraphState {\n  pos?: FlotPosition;\n  contextPos?: FlotPosition;\n  isTooltipVisible: boolean;\n  isContextVisible: boolean;\n  activeItem?: FlotItem<GraphSeriesXY>;\n  contextItem?: FlotItem<GraphSeriesXY>;\n}\n\n/**\n * This is a react wrapper for the angular, flot based graph visualization.\n * Rather than using this component, you should use the `<PanelRender .../> with\n * timeseries panel configs.\n *\n * @deprecated\n */\nexport class Graph extends PureComponent<GraphProps, GraphState> {\n  static defaultProps = {\n    showLines: true,\n    showPoints: false,\n    showBars: false,\n    isStacked: false,\n    lineWidth: 1,\n  };\n\n  state: GraphState = {\n    isTooltipVisible: false,\n    isContextVisible: false,\n  };\n\n  element: HTMLElement | null = null;\n  $element: any;\n\n  componentDidUpdate(prevProps: GraphProps, prevState: GraphState) {\n    if (prevProps !== this.props) {\n      this.draw();\n    }\n  }\n\n  componentDidMount() {\n    this.draw();\n    if (this.element) {\n      this.$element = $(this.element);\n      this.$element.bind('plotselected', this.onPlotSelected);\n      this.$element.bind('plothover', this.onPlotHover);\n      this.$element.bind('plotclick', this.onPlotClick);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.$element) {\n      this.$element.unbind('plotselected', this.onPlotSelected);\n    }\n  }\n\n  onPlotSelected = (event: JQueryEventObject, ranges: { xaxis: { from: number; to: number } }) => {\n    const { onHorizontalRegionSelected } = this.props;\n    if (onHorizontalRegionSelected) {\n      onHorizontalRegionSelected(ranges.xaxis.from, ranges.xaxis.to);\n    }\n  };\n\n  onPlotHover = (event: JQueryEventObject, pos: FlotPosition, item?: FlotItem<GraphSeriesXY>) => {\n    this.setState({\n      isTooltipVisible: true,\n      activeItem: item,\n      pos,\n    });\n  };\n\n  onPlotClick = (event: JQueryEventObject, contextPos: FlotPosition, item?: FlotItem<GraphSeriesXY>) => {\n    this.setState({\n      isContextVisible: true,\n      isTooltipVisible: false,\n      contextItem: item,\n      contextPos,\n    });\n  };\n\n  getYAxes(series: GraphSeriesXY[]) {\n    if (series.length === 0) {\n      return [{ show: true, min: -1, max: 1 }];\n    }\n    return uniqBy(\n      series.map((s) => {\n        const index = s.yAxis ? s.yAxis.index : 1;\n        const min = s.yAxis && s.yAxis.min && !isNaN(s.yAxis.min) ? s.yAxis.min : null;\n        const tickDecimals =\n          s.yAxis && s.yAxis.tickDecimals && !isNaN(s.yAxis.tickDecimals) ? s.yAxis.tickDecimals : null;\n        return {\n          show: true,\n          index,\n          position: index === 1 ? 'left' : 'right',\n          min,\n          tickDecimals,\n        };\n      }),\n      (yAxisConfig) => yAxisConfig.index\n    );\n  }\n\n  renderTooltip = () => {\n    const { children, series, timeZone } = this.props;\n    const { pos, activeItem, isTooltipVisible } = this.state;\n    let tooltipElement: React.ReactElement<VizTooltipProps> | null = null;\n\n    if (!isTooltipVisible || !pos || series.length === 0) {\n      return null;\n    }\n\n    // Find children that indicate tooltip to be rendered\n    React.Children.forEach(children, (c) => {\n      // We have already found tooltip\n      if (tooltipElement) {\n        return;\n      }\n      // @ts-ignore\n      const childType = c && c.type && (c.type.displayName || c.type.name);\n\n      if (childType === VizTooltip.displayName) {\n        tooltipElement = c as React.ReactElement<VizTooltipProps>;\n      }\n    });\n    // If no tooltip provided, skip rendering\n    if (!tooltipElement) {\n      return null;\n    }\n    const tooltipElementProps = (tooltipElement as React.ReactElement<VizTooltipProps>).props;\n\n    const tooltipMode = tooltipElementProps.mode || 'single';\n\n    // If mode is single series and user is not hovering over item, skip rendering\n    if (!activeItem && tooltipMode === 'single') {\n      return null;\n    }\n\n    // Check if tooltip needs to be rendered with custom tooltip component, otherwise default to GraphTooltip\n    const tooltipContentRenderer = tooltipElementProps.tooltipComponent || GraphTooltip;\n    // Indicates column(field) index in y-axis dimension\n    const seriesIndex = activeItem ? activeItem.series.seriesIndex : 0;\n    // Indicates row index in active field values\n    const rowIndex = activeItem ? activeItem.dataIndex : undefined;\n\n    const activeDimensions: ActiveDimensions<GraphDimensions> = {\n      // Described x-axis active item\n      // When hovering over an item - let's take it's dataIndex, otherwise undefined\n      // Tooltip itself needs to figure out correct datapoint display information based on pos passed to it\n      xAxis: [seriesIndex, rowIndex],\n      // Describes y-axis active item\n      yAxis: activeItem ? [activeItem.series.seriesIndex, activeItem.dataIndex] : null,\n    };\n\n    const tooltipContentProps: VizTooltipContentProps<GraphDimensions> = {\n      dimensions: {\n        // time/value dimension columns are index-aligned - see getGraphSeriesModel\n        xAxis: createDimension(\n          'xAxis',\n          series.map((s) => s.timeField)\n        ),\n        yAxis: createDimension(\n          'yAxis',\n          series.map((s) => s.valueField)\n        ),\n      },\n      activeDimensions,\n      pos,\n      mode: tooltipElementProps.mode || TooltipDisplayMode.Single,\n      timeZone,\n    };\n\n    const tooltipContent = React.createElement(tooltipContentRenderer, { ...tooltipContentProps });\n\n    return React.cloneElement<VizTooltipProps>(tooltipElement as React.ReactElement<VizTooltipProps>, {\n      content: tooltipContent,\n      position: { x: pos.pageX, y: pos.pageY },\n      offset: { x: 10, y: 10 },\n    });\n  };\n\n  renderContextMenu = () => {\n    const { series } = this.props;\n    const { contextPos, contextItem, isContextVisible } = this.state;\n\n    if (!isContextVisible || !contextPos || !contextItem || series.length === 0) {\n      return null;\n    }\n\n    // Indicates column(field) index in y-axis dimension\n    const seriesIndex = contextItem ? contextItem.series.seriesIndex : 0;\n    // Indicates row index in context field values\n    const rowIndex = contextItem ? contextItem.dataIndex : undefined;\n\n    const contextDimensions: ContextDimensions<GraphDimensions> = {\n      // Described x-axis context item\n      xAxis: [seriesIndex, rowIndex],\n      // Describes y-axis context item\n      yAxis: contextItem ? [contextItem.series.seriesIndex, contextItem.dataIndex] : null,\n    };\n\n    const dimensions: GraphDimensions = {\n      // time/value dimension columns are index-aligned - see getGraphSeriesModel\n      xAxis: createDimension(\n        'xAxis',\n        series.map((s) => s.timeField)\n      ),\n      yAxis: createDimension(\n        'yAxis',\n        series.map((s) => s.valueField)\n      ),\n    };\n\n    const closeContext = () => this.setState({ isContextVisible: false });\n\n    const getContextMenuSource = () => {\n      return {\n        datapoint: contextItem.datapoint,\n        dataIndex: contextItem.dataIndex,\n        series: contextItem.series,\n        seriesIndex: contextItem.series.seriesIndex,\n        pageX: contextPos.pageX,\n        pageY: contextPos.pageY,\n      };\n    };\n\n    const contextContentProps: GraphContextMenuProps = {\n      x: contextPos.pageX,\n      y: contextPos.pageY,\n      onClose: closeContext,\n      getContextMenuSource: getContextMenuSource,\n      timeZone: this.props.timeZone,\n      dimensions,\n      contextDimensions,\n    };\n\n    return <GraphContextMenu {...contextContentProps} />;\n  };\n\n  getBarWidth = () => {\n    const { series } = this.props;\n    return Math.min(...series.map((s) => s.timeStep));\n  };\n\n  draw() {\n    if (this.element === null) {\n      return;\n    }\n\n    const {\n      width,\n      series,\n      timeRange,\n      showLines,\n      showBars,\n      showPoints,\n      isStacked,\n      lineWidth,\n      timeZone,\n      onHorizontalRegionSelected,\n    } = this.props;\n\n    if (!width) {\n      return;\n    }\n\n    const ticks = width / 100;\n    const min = timeRange.from.valueOf();\n    const max = timeRange.to.valueOf();\n    const yaxes = this.getYAxes(series);\n\n    const flotOptions: any = {\n      legend: {\n        show: false,\n      },\n      series: {\n        stack: isStacked,\n        lines: {\n          show: showLines,\n          lineWidth: lineWidth,\n          zero: false,\n        },\n        points: {\n          show: showPoints,\n          fill: 1,\n          fillColor: false,\n          radius: 2,\n        },\n        bars: {\n          show: showBars,\n          fill: 1,\n          // Dividig the width by 1.5 to make the bars not touch each other\n          barWidth: showBars ? this.getBarWidth() / 1.5 : 1,\n          zero: false,\n          lineWidth: lineWidth,\n        },\n        shadowSize: 0,\n      },\n      xaxis: {\n        timezone: timeZone,\n        show: true,\n        mode: 'time',\n        min: min,\n        max: max,\n        label: 'Datetime',\n        ticks: ticks,\n        timeformat: graphTimeFormat(ticks, min, max),\n        tickFormatter: graphTickFormatter,\n      },\n      yaxes,\n      grid: {\n        minBorderMargin: 0,\n        markings: [],\n        backgroundColor: null,\n        borderWidth: 0,\n        hoverable: true,\n        clickable: true,\n        color: '#a1a1a1',\n        margin: { left: 0, right: 0 },\n        labelMarginX: 0,\n        mouseActiveRadius: 30,\n      },\n      selection: {\n        mode: onHorizontalRegionSelected ? 'x' : null,\n        color: '#666',\n      },\n      crosshair: {\n        mode: 'x',\n      },\n    };\n\n    try {\n      $.plot(\n        this.element,\n        series.filter((s) => s.isVisible),\n        flotOptions\n      );\n    } catch (err) {\n      console.error('Graph rendering error', err, flotOptions, series);\n      throw new Error('Error rendering panel');\n    }\n  }\n\n  render() {\n    const { ariaLabel, height, width, series } = this.props;\n    const noDataToBeDisplayed = series.length === 0;\n    const tooltip = this.renderTooltip();\n    const context = this.renderContextMenu();\n    return (\n      <div className=\"graph-panel\" aria-label={ariaLabel}>\n        <div\n          className=\"graph-panel__chart\"\n          ref={(e) => (this.element = e)}\n          style={{ height, width }}\n          onMouseLeave={() => {\n            this.setState({ isTooltipVisible: false });\n          }}\n        />\n        {noDataToBeDisplayed && <div className=\"datapoints-warning\">No data</div>}\n        {tooltip}\n        {context}\n      </div>\n    );\n  }\n}\n\nexport default Graph;\n","import { GrafanaThemeCommons } from '@grafana/data';\n\nexport const commonColorsPalette = {\n  // New greys palette used by next-gen form elements\n  gray98: '#f7f8fa',\n  gray97: '#f1f5f9',\n  gray95: '#e9edf2',\n  gray90: '#dce1e6',\n  gray85: '#c7d0d9',\n  gray70: '#9fa7b3',\n  gray60: '#7b8087',\n  gray33: '#464c54',\n  gray25: '#2c3235',\n  gray15: '#202226',\n  gray10: '#141619',\n  gray05: '#0b0c0e',\n\n  // New blues palette used by next-gen form elements\n  blue95: '#5794f2', // blue95\n  blue85: '#33a2e5', // blueText\n  blue80: '#3274d9', // blue80\n  blue77: '#1f60c4', // blue77\n\n  // New reds palette used by next-gen form elements\n  red88: '#e02f44',\n};\n\nconst SPACING_BASE = 8;\n\nconst theme: GrafanaThemeCommons = {\n  name: 'Grafana Default',\n  typography: {\n    fontFamily: {\n      sansSerif: '\"Inter\", \"Helvetica\", \"Arial\", sans-serif',\n      monospace: \"'Roboto Mono', monospace\",\n    },\n    size: {\n      base: '14px',\n      xs: '10px',\n      sm: '12px',\n      md: '14px',\n      lg: '18px',\n    },\n    heading: {\n      h1: '28px',\n      h2: '24px',\n      h3: '21px',\n      h4: '18px',\n      h5: '16px',\n      h6: '14px',\n    },\n    weight: {\n      light: 300,\n      regular: 400,\n      semibold: 500,\n      bold: 500,\n    },\n    lineHeight: {\n      xs: 1,\n      sm: 1.1,\n      md: 1.5,\n      lg: 2,\n    },\n    link: {\n      decoration: 'none',\n      hoverDecoration: 'none',\n    },\n  },\n  breakpoints: {\n    xs: '0',\n    sm: '544px',\n    md: '769px', // 1 more than regular ipad in portrait\n    lg: '992px',\n    xl: '1200px',\n    xxl: '1440px',\n  },\n  spacing: {\n    base: SPACING_BASE,\n    insetSquishMd: '4px 8px',\n    d: '16px',\n    xxs: '2px',\n    xs: '4px',\n    sm: '8px',\n    md: '16px',\n    lg: '24px',\n    xl: '32px',\n    gutter: '30px',\n\n    // Next-gen forms spacing variables\n    // TODO: Move variables definition to respective components when implementing\n    formSpacingBase: SPACING_BASE,\n    formMargin: `${SPACING_BASE * 4}px`,\n    formFieldsetMargin: `${SPACING_BASE * 2}px`,\n    formInputHeight: SPACING_BASE * 4,\n    formButtonHeight: SPACING_BASE * 4,\n    formInputPaddingHorizontal: `${SPACING_BASE}px`,\n\n    // Used for icons do define spacing between icon and input field\n    // Applied on the right(prefix) or left(suffix)\n    formInputAffixPaddingHorizontal: `${SPACING_BASE / 2}px`,\n\n    formInputMargin: `${SPACING_BASE * 2}px`,\n    formLabelPadding: '0 0 0 2px',\n    formLabelMargin: `0 0 ${SPACING_BASE / 2 + 'px'} 0`,\n    formValidationMessagePadding: '4px 8px',\n    formValidationMessageMargin: '4px 0 0 0',\n    inlineFormMargin: '4px',\n  },\n  border: {\n    radius: {\n      sm: '2px',\n      md: '3px',\n      lg: '5px',\n    },\n    width: {\n      sm: '1px',\n    },\n  },\n  height: {\n    sm: 24,\n    md: 32,\n    lg: 48,\n  },\n  panelPadding: 8,\n  panelHeaderHeight: 28,\n  zIndex: {\n    navbarFixed: 1000,\n    sidemenu: 1020,\n    dropdown: 1030,\n    typeahead: 1030,\n    tooltip: 1040,\n    modalBackdrop: 1050,\n    modal: 1060,\n    portal: 1061,\n  },\n};\n\nexport default theme;\n","import { css, cx } from '@emotion/css';\nimport React from 'react';\n\nimport { useStyles2 } from '../../themes';\nimport { commonColorsPalette } from '../../themes/default';\nimport { Icon } from '../Icon/Icon';\nimport { Tooltip } from '../Tooltip/Tooltip';\n\n/**\n * @internal\n */\nexport type ErrorIndicatorProps = {\n  error?: string;\n  onClick?: () => void;\n};\n\n/**\n * @internal\n */\nexport const ErrorIndicator = ({ error, onClick }: ErrorIndicatorProps) => {\n  const styles = useStyles2(getStyles);\n\n  if (!error) {\n    return null;\n  }\n\n  return (\n    <Tooltip theme=\"error\" content={error}>\n      <Icon\n        onClick={onClick}\n        className={cx(styles.icon, { [styles.clickable]: !!onClick })}\n        size=\"sm\"\n        name=\"exclamation-triangle\"\n      />\n    </Tooltip>\n  );\n};\n\nconst getStyles = () => {\n  return {\n    clickable: css({\n      cursor: 'pointer',\n    }),\n    icon: css({\n      color: `${commonColorsPalette.red88}`,\n    }),\n  };\n};\n","import { css, cx } from '@emotion/css';\nimport React from 'react';\n\nimport { selectors } from '@grafana/e2e-selectors';\n\nimport { useStyles2 } from '../../themes';\nimport { Icon } from '../Icon/Icon';\nimport { Tooltip } from '../Tooltip/Tooltip';\n\n/**\n * @internal\n */\nexport type LoadingIndicatorProps = {\n  loading: boolean;\n  onCancel: () => void;\n};\n\n/**\n * @internal\n */\nexport const LoadingIndicator = ({ onCancel, loading }: LoadingIndicatorProps) => {\n  const styles = useStyles2(getStyles);\n\n  if (!loading) {\n    return null;\n  }\n\n  return (\n    <Tooltip content=\"Cancel query\">\n      <Icon\n        className={cx('spin-clockwise', { [styles.clickable]: !!onCancel })}\n        name=\"sync\"\n        size=\"sm\"\n        onClick={onCancel}\n        aria-label={selectors.components.LoadingIndicator.icon}\n      />\n    </Tooltip>\n  );\n};\n\nconst getStyles = () => {\n  return {\n    clickable: css({\n      cursor: 'pointer',\n    }),\n  };\n};\n","import React, { useEffect, useState } from 'react';\n\ninterface Props {\n  children: React.ReactNode;\n  delay: number;\n}\n\n/**\n * Delay the rendering of the children by N amount of milliseconds\n */\nexport function DelayRender({ children, delay }: Props) {\n  const [shouldRender, setShouldRender] = useState(false);\n  useEffect(() => {\n    window.setTimeout(() => {\n      setShouldRender(true);\n    }, delay);\n  }, [children, delay]);\n\n  return <>{shouldRender ? children : null}</>;\n}\n","import { css } from '@emotion/css';\nimport { FocusScope } from '@react-aria/focus';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { usePopperTooltip } from 'react-popper-tooltip';\nimport { CSSTransition } from 'react-transition-group';\n\nimport { ReactUtils } from '../../utils';\nimport { Portal } from '../Portal/Portal';\nimport { TooltipPlacement } from '../Tooltip/types';\n\nexport interface Props {\n  overlay: React.ReactElement | (() => React.ReactElement);\n  placement?: TooltipPlacement;\n  children: React.ReactElement | ((isOpen: boolean) => React.ReactElement);\n  /** Amount in pixels to nudge the dropdown vertically and horizontally, respectively. */\n  offset?: [number, number];\n  onVisibleChange?: (state: boolean) => void;\n}\n\nexport const Dropdown = React.memo(({ children, overlay, placement, offset, onVisibleChange }: Props) => {\n  const [show, setShow] = useState(false);\n  const transitionRef = useRef(null);\n\n  useEffect(() => {\n    onVisibleChange?.(show);\n  }, [onVisibleChange, show]);\n\n  const { getArrowProps, getTooltipProps, setTooltipRef, setTriggerRef, visible } = usePopperTooltip({\n    visible: show,\n    placement: placement,\n    onVisibleChange: setShow,\n    interactive: true,\n    delayHide: 0,\n    delayShow: 0,\n    offset: offset ?? [0, 8],\n    trigger: ['click'],\n  });\n\n  const animationDuration = 150;\n  const animationStyles = getStyles(animationDuration);\n\n  const onOverlayClicked = () => {\n    setShow(false);\n  };\n\n  const handleKeys = (event: React.KeyboardEvent) => {\n    if (event.key === 'Escape' || event.key === 'Tab') {\n      setShow(false);\n    }\n  };\n\n  return (\n    <>\n      {React.cloneElement(typeof children === 'function' ? children(visible) : children, {\n        ref: setTriggerRef,\n      })}\n      {visible && (\n        <Portal>\n          <FocusScope autoFocus restoreFocus contain>\n            {/*\n              this is handling bubbled events from the inner overlay\n              see https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/main/docs/rules/no-static-element-interactions.md#case-the-event-handler-is-only-being-used-to-capture-bubbled-events\n            */}\n            {/* eslint-disable-next-line jsx-a11y/no-static-element-interactions, jsx-a11y/click-events-have-key-events */}\n            <div ref={setTooltipRef} {...getTooltipProps()} onClick={onOverlayClicked} onKeyDown={handleKeys}>\n              <div {...getArrowProps({ className: 'tooltip-arrow' })} />\n              <CSSTransition\n                nodeRef={transitionRef}\n                appear={true}\n                in={true}\n                timeout={{ appear: animationDuration, exit: 0, enter: 0 }}\n                classNames={animationStyles}\n              >\n                <div ref={transitionRef}>{ReactUtils.renderOrCallToRender(overlay)}</div>\n              </CSSTransition>\n            </div>\n          </FocusScope>\n        </Portal>\n      )}\n    </>\n  );\n});\n\nDropdown.displayName = 'Dropdown';\n\nconst getStyles = (duration: number) => {\n  return {\n    appear: css({\n      opacity: '0',\n      position: 'relative',\n      transform: 'scaleY(0.5)',\n      transformOrigin: 'top',\n    }),\n    appearActive: css({\n      opacity: '1',\n      transform: 'scaleY(1)',\n      transition: `transform ${duration}ms cubic-bezier(0.2, 0, 0.2, 1), opacity ${duration}ms cubic-bezier(0.2, 0, 0.2, 1)`,\n    }),\n  };\n};\n","import { cx } from '@emotion/css';\nimport React, { ReactElement, useCallback } from 'react';\n\nimport { selectors } from '@grafana/e2e-selectors';\n\nimport { Dropdown } from '../Dropdown/Dropdown';\nimport { ToolbarButton } from '../ToolbarButton';\nimport { TooltipPlacement } from '../Tooltip';\n\ninterface PanelMenuProps {\n  menu: ReactElement | (() => ReactElement);\n  menuButtonClass?: string;\n  dragClassCancel?: string;\n  title?: string;\n  placement?: TooltipPlacement;\n  offset?: [number, number];\n  onVisibleChange?: (state: boolean) => void;\n  onOpenMenu?: () => void;\n}\n\nexport function PanelMenu({\n  menu,\n  title,\n  placement = 'bottom',\n  offset,\n  dragClassCancel,\n  menuButtonClass,\n  onVisibleChange,\n  onOpenMenu,\n}: PanelMenuProps) {\n  const testId = title ? selectors.components.Panels.Panel.menu(title) : `panel-menu-button`;\n\n  const handleVisibility = useCallback(\n    (show: boolean) => {\n      if (show && onOpenMenu) {\n        onOpenMenu();\n      }\n      return onVisibleChange;\n    },\n    [onOpenMenu, onVisibleChange]\n  );\n\n  return (\n    <Dropdown overlay={menu} placement={placement} offset={offset} onVisibleChange={handleVisibility}>\n      <ToolbarButton\n        aria-label={`Menu for panel with ${title ? `title ${title}` : 'no title'}`}\n        title=\"Menu\"\n        icon=\"ellipsis-v\"\n        iconSize=\"md\"\n        narrow\n        data-testid={testId}\n        className={cx(menuButtonClass, dragClassCancel)}\n      />\n    </Dropdown>\n  );\n}\n","import { css, cx } from '@emotion/css';\nimport React, { ReactElement, useCallback, useRef, useState } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\nimport { Icon } from '../Icon/Icon';\n\nimport { PanelMenu } from './PanelMenu';\n\ninterface Props {\n  children?: React.ReactNode;\n  menu?: ReactElement | (() => ReactElement);\n  title?: string;\n  offset?: number;\n  dragClass?: string;\n  onOpenMenu?: () => void;\n}\n\nexport function HoverWidget({ menu, title, dragClass, children, offset = -32, onOpenMenu }: Props) {\n  const styles = useStyles2(getStyles);\n  const draggableRef = useRef<HTMLDivElement>(null);\n  // Capture the pointer to keep the widget visible while dragging\n  const onPointerDown = useCallback((e: React.PointerEvent<HTMLDivElement>) => {\n    draggableRef.current?.setPointerCapture(e.pointerId);\n  }, []);\n\n  const onPointerUp = useCallback((e: React.PointerEvent<HTMLDivElement>) => {\n    draggableRef.current?.releasePointerCapture(e.pointerId);\n  }, []);\n\n  const [menuOpen, setMenuOpen] = useState(false);\n\n  if (children === undefined || React.Children.count(children) === 0) {\n    return null;\n  }\n\n  return (\n    <div\n      className={cx(styles.container, { 'show-on-hover': !menuOpen })}\n      style={{ top: `${offset}px` }}\n      data-testid=\"hover-header-container\"\n    >\n      {dragClass && (\n        <div\n          className={cx(styles.square, styles.draggable, dragClass)}\n          onPointerDown={onPointerDown}\n          onPointerUp={onPointerUp}\n          ref={draggableRef}\n        >\n          <Icon name=\"expand-arrows\" className={styles.draggableIcon} />\n        </div>\n      )}\n      {!title && <h6 className={cx(styles.untitled, styles.draggable, dragClass)}>Untitled</h6>}\n      {children}\n      {menu && (\n        <PanelMenu\n          menu={menu}\n          title={title}\n          placement=\"bottom\"\n          menuButtonClass={styles.menuButton}\n          onVisibleChange={setMenuOpen}\n          onOpenMenu={onOpenMenu}\n        />\n      )}\n    </div>\n  );\n}\n\nfunction getStyles(theme: GrafanaTheme2) {\n  return {\n    hidden: css({\n      visibility: 'hidden',\n      opacity: '0',\n    }),\n    container: css({\n      label: 'hover-container-widget',\n      transition: `all .1s linear`,\n      display: 'flex',\n      position: 'absolute',\n      zIndex: 1,\n      right: 0,\n      boxSizing: 'content-box',\n      alignItems: 'center',\n      background: theme.colors.background.secondary,\n      color: theme.colors.text.primary,\n      border: `1px solid ${theme.colors.border.weak}`,\n      borderRadius: theme.shape.radius.default,\n      height: theme.spacing(4),\n      boxShadow: theme.shadows.z1,\n    }),\n    square: css({\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      width: theme.spacing(4),\n      height: '100%',\n    }),\n    draggable: css({\n      cursor: 'move',\n      // mobile do not support draggable panels\n      [theme.breakpoints.down('md')]: {\n        display: 'none',\n      },\n    }),\n    menuButton: css({\n      // Background and border are overriden when topnav toggle is disabled\n      background: 'inherit',\n      border: 'none',\n      '&:hover': {\n        background: theme.colors.secondary.main,\n      },\n    }),\n    untitled: css({\n      color: theme.colors.text.disabled,\n      fontStyle: 'italic',\n      padding: theme.spacing(0, 1),\n      marginBottom: 0,\n    }),\n    draggableIcon: css({\n      transform: 'rotate(45deg)',\n      color: theme.colors.text.secondary,\n      '&:hover': {\n        color: theme.colors.text.primary,\n      },\n    }),\n  };\n}\n","import { cx, css } from '@emotion/css';\nimport React, { forwardRef } from 'react';\n\nimport { GrafanaTheme2, LinkModel, LinkTarget } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\nimport { getFocusStyles, getMouseFocusStyles } from '../../themes/mixins';\nimport { Button } from '../Button';\n\ntype TitleItemProps = {\n  className?: string;\n  children: React.ReactNode;\n  onClick?: LinkModel['onClick'];\n  href?: string;\n  target?: LinkTarget;\n  title?: string;\n};\n\ntype TitleItemElement = HTMLAnchorElement & HTMLButtonElement;\n\nexport const TitleItem = forwardRef<TitleItemElement, TitleItemProps>(\n  ({ className, children, href, onClick, target, title, ...rest }, ref) => {\n    const styles = useStyles2(getStyles);\n\n    if (href) {\n      return (\n        <a\n          ref={ref}\n          href={href}\n          onClick={onClick}\n          target={target}\n          title={title}\n          className={cx(styles.linkItem, className)}\n          {...rest}\n        >\n          {children}\n        </a>\n      );\n    } else if (onClick) {\n      return (\n        <Button ref={ref} className={cx(styles.item, className)} variant=\"secondary\" fill=\"text\" onClick={onClick}>\n          {children}\n        </Button>\n      );\n    } else {\n      return (\n        <span ref={ref} className={cx(styles.item, className)} {...rest}>\n          {children}\n        </span>\n      );\n    }\n  }\n);\n\nTitleItem.displayName = 'TitleItem';\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  const item = css({\n    color: `${theme.colors.text.secondary}`,\n    label: 'panel-header-item',\n    cursor: 'auto',\n    border: 'none',\n    borderRadius: `${theme.shape.borderRadius()}`,\n    padding: `${theme.spacing(0, 1)}`,\n    height: `${theme.spacing(theme.components.panel.headerHeight)}`,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n\n    '&:focus, &:focus-visible': {\n      ...getFocusStyles(theme),\n      zIndex: 1,\n    },\n    '&: focus:not(:focus-visible)': getMouseFocusStyles(theme),\n\n    '&:hover ': {\n      boxShadow: `${theme.shadows.z1}`,\n      background: `${theme.colors.background.secondary}`,\n      color: `${theme.colors.text.primary}`,\n    },\n  });\n\n  return {\n    item,\n    linkItem: cx(item, css({ cursor: 'pointer' })),\n  };\n};\n","import { css, cx } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\nimport { Icon } from '../Icon/Icon';\nimport { Tooltip } from '../Tooltip';\n\nimport { TitleItem } from './TitleItem';\n\ninterface Props {\n  description: string | (() => string);\n  className?: string;\n}\n\nexport function PanelDescription({ description, className }: Props) {\n  const styles = useStyles2(getStyles);\n\n  const getDescriptionContent = (): JSX.Element => {\n    // description\n    const panelDescription = typeof description === 'function' ? description() : description;\n\n    return (\n      <div className=\"panel-info-content markdown-html\">\n        <div dangerouslySetInnerHTML={{ __html: panelDescription }} />\n      </div>\n    );\n  };\n\n  return description !== '' ? (\n    <Tooltip interactive content={getDescriptionContent}>\n      <TitleItem className={cx(className, styles.description)}>\n        <Icon name=\"info-circle\" size=\"md\" />\n      </TitleItem>\n    </Tooltip>\n  ) : null;\n}\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    description: css({\n      code: {\n        whiteSpace: 'normal',\n        wordWrap: 'break-word',\n      },\n\n      'pre > code': {\n        display: 'block',\n      },\n    }),\n  };\n};\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\nimport { ToolbarButton } from '../ToolbarButton/ToolbarButton';\n\nexport interface Props {\n  message?: string;\n  onClick?: (e: React.SyntheticEvent) => void;\n  ariaLabel?: string;\n}\n\nexport function PanelStatus({ message, onClick, ariaLabel = 'status' }: Props) {\n  const styles = useStyles2(getStyles);\n\n  return (\n    <ToolbarButton\n      className={styles.buttonStyles}\n      onClick={onClick}\n      variant={'destructive'}\n      icon=\"exclamation-triangle\"\n      iconSize=\"md\"\n      tooltip={message || ''}\n      aria-label={ariaLabel}\n    />\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  const { headerHeight, padding } = theme.components.panel;\n\n  return {\n    buttonStyles: css({\n      label: 'panel-header-state-button',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      padding: theme.spacing(padding),\n      width: theme.spacing(headerHeight),\n      height: theme.spacing(headerHeight),\n      borderRadius: theme.shape.radius.default,\n    }),\n  };\n};\n","import { css, cx } from '@emotion/css';\nimport React, { CSSProperties, ReactElement, ReactNode } from 'react';\n\nimport { GrafanaTheme2, LoadingState } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\n\nimport { useStyles2, useTheme2 } from '../../themes';\nimport { DelayRender } from '../../utils/DelayRender';\nimport { Icon } from '../Icon/Icon';\nimport { LoadingBar } from '../LoadingBar/LoadingBar';\nimport { Tooltip } from '../Tooltip';\n\nimport { HoverWidget } from './HoverWidget';\nimport { PanelDescription } from './PanelDescription';\nimport { PanelMenu } from './PanelMenu';\nimport { PanelStatus } from './PanelStatus';\nimport { TitleItem } from './TitleItem';\n\n/**\n * @internal\n */\nexport interface PanelChromeProps {\n  width: number;\n  height: number;\n  children: (innerWidth: number, innerHeight: number) => ReactNode;\n  padding?: PanelPadding;\n  hoverHeaderOffset?: number;\n  title?: string;\n  description?: string | (() => string);\n  titleItems?: ReactNode;\n  menu?: ReactElement | (() => ReactElement);\n  dragClass?: string;\n  dragClassCancel?: string;\n  hoverHeader?: boolean;\n  /**\n   * Use only to indicate loading or streaming data in the panel.\n   * Any other values of loadingState are ignored.\n   */\n  loadingState?: LoadingState;\n  /**\n   * Used to display status message (used for panel errors currently)\n   */\n  statusMessage?: string;\n  /**\n   * Handle opening error details view (like inspect / error tab)\n   */\n  statusMessageOnClick?: (e: React.SyntheticEvent) => void;\n  /**\n   * @deprecated use `actions' instead\n   **/\n  leftItems?: ReactNode[];\n  actions?: ReactNode;\n  displayMode?: 'default' | 'transparent';\n  onCancelQuery?: () => void;\n  /**\n   * callback when opening the panel menu\n   */\n  onOpenMenu?: () => void;\n}\n\n/**\n * @internal\n */\nexport type PanelPadding = 'none' | 'md';\n\n/**\n * @internal\n */\nexport function PanelChrome({\n  width,\n  height,\n  children,\n  padding = 'md',\n  title = '',\n  description = '',\n  displayMode = 'default',\n  titleItems,\n  menu,\n  dragClass,\n  dragClassCancel,\n  hoverHeader = false,\n  hoverHeaderOffset,\n  loadingState,\n  statusMessage,\n  statusMessageOnClick,\n  leftItems,\n  actions,\n  onCancelQuery,\n  onOpenMenu,\n}: PanelChromeProps) {\n  const theme = useTheme2();\n  const styles = useStyles2(getStyles);\n\n  const hasHeader = !hoverHeader;\n\n  // hover menu is only shown on hover when not on touch devices\n  const showOnHoverClass = 'show-on-hover';\n\n  const headerHeight = getHeaderHeight(theme, hasHeader);\n  const { contentStyle, innerWidth, innerHeight } = getContentStyle(padding, theme, width, headerHeight, height);\n\n  const headerStyles: CSSProperties = {\n    height: headerHeight,\n    cursor: dragClass ? 'move' : 'auto',\n  };\n\n  const containerStyles: CSSProperties = { width, height };\n  if (displayMode === 'transparent') {\n    containerStyles.backgroundColor = 'transparent';\n    containerStyles.border = 'none';\n  }\n\n  /** Old property name now maps to actions */\n  if (leftItems) {\n    actions = leftItems;\n  }\n\n  const testid = title ? selectors.components.Panels.Panel.title(title) : 'Panel';\n\n  const headerContent = (\n    <>\n      {title && (\n        <h6 title={title} className={styles.title}>\n          {title}\n        </h6>\n      )}\n\n      <div className={cx(styles.titleItems, dragClassCancel)} data-testid=\"title-items-container\">\n        <PanelDescription description={description} className={dragClassCancel} />\n        {titleItems}\n      </div>\n\n      {loadingState === LoadingState.Streaming && (\n        <Tooltip content={onCancelQuery ? 'Stop streaming' : 'Streaming'}>\n          <TitleItem className={dragClassCancel} data-testid=\"panel-streaming\" onClick={onCancelQuery}>\n            <Icon name=\"circle-mono\" size=\"md\" className={styles.streaming} />\n          </TitleItem>\n        </Tooltip>\n      )}\n      {loadingState === LoadingState.Loading && onCancelQuery && (\n        <DelayRender delay={2000}>\n          <Tooltip content=\"Cancel query\">\n            <TitleItem\n              className={cx(dragClassCancel, styles.pointer)}\n              data-testid=\"panel-cancel-query\"\n              onClick={onCancelQuery}\n            >\n              <Icon name=\"sync-slash\" size=\"md\" />\n            </TitleItem>\n          </Tooltip>\n        </DelayRender>\n      )}\n      <div className={styles.rightAligned}>\n        {actions && <div className={styles.rightActions}>{itemsRenderer(actions, (item) => item)}</div>}\n      </div>\n    </>\n  );\n\n  return (\n    <div className={styles.container} style={containerStyles} data-testid={testid}>\n      <div className={styles.loadingBarContainer}>\n        {loadingState === LoadingState.Loading ? <LoadingBar width={width} ariaLabel=\"Panel loading bar\" /> : null}\n      </div>\n\n      {hoverHeader && (\n        <>\n          <HoverWidget\n            menu={menu}\n            title={title}\n            offset={hoverHeaderOffset}\n            dragClass={dragClass}\n            onOpenMenu={onOpenMenu}\n          >\n            {headerContent}\n          </HoverWidget>\n\n          {statusMessage && (\n            <div className={styles.errorContainerFloating}>\n              <PanelStatus message={statusMessage} onClick={statusMessageOnClick} ariaLabel=\"Panel status\" />\n            </div>\n          )}\n        </>\n      )}\n\n      {hasHeader && (\n        <div className={cx(styles.headerContainer, dragClass)} style={headerStyles} data-testid=\"header-container\">\n          {statusMessage && (\n            <div className={dragClassCancel}>\n              <PanelStatus message={statusMessage} onClick={statusMessageOnClick} ariaLabel=\"Panel status\" />\n            </div>\n          )}\n\n          {headerContent}\n\n          {menu && (\n            <PanelMenu\n              menu={menu}\n              title={title}\n              placement=\"bottom-end\"\n              menuButtonClass={cx(styles.menuItem, dragClassCancel, showOnHoverClass)}\n              onOpenMenu={onOpenMenu}\n            />\n          )}\n        </div>\n      )}\n\n      <div className={styles.content} style={contentStyle}>\n        {children(innerWidth, innerHeight)}\n      </div>\n    </div>\n  );\n}\n\nconst itemsRenderer = (items: ReactNode[] | ReactNode, renderer: (items: ReactNode[]) => ReactNode): ReactNode => {\n  const toRender = React.Children.toArray(items).filter(Boolean);\n  return toRender.length > 0 ? renderer(toRender) : null;\n};\n\nconst getHeaderHeight = (theme: GrafanaTheme2, hasHeader: boolean) => {\n  if (hasHeader) {\n    return theme.spacing.gridSize * theme.components.panel.headerHeight;\n  }\n\n  return 0;\n};\n\nconst getContentStyle = (\n  padding: string,\n  theme: GrafanaTheme2,\n  width: number,\n  headerHeight: number,\n  height: number\n) => {\n  const chromePadding = (padding === 'md' ? theme.components.panel.padding : 0) * theme.spacing.gridSize;\n\n  const panelPadding = chromePadding * 2;\n  const panelBorder = 1 * 2;\n\n  const innerWidth = width - panelPadding - panelBorder;\n  const innerHeight = height - headerHeight - panelPadding - panelBorder;\n\n  const contentStyle: CSSProperties = {\n    padding: chromePadding,\n  };\n\n  return { contentStyle, innerWidth, innerHeight };\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  const { background, borderColor, padding } = theme.components.panel;\n\n  return {\n    container: css({\n      label: 'panel-container',\n      backgroundColor: background,\n      border: `1px solid ${borderColor}`,\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius(1),\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'column',\n      flex: '1 1 0',\n\n      '.show-on-hover': {\n        visibility: 'hidden',\n        opacity: '0',\n      },\n\n      '&:focus-visible, &:hover': {\n        // only show menu icon on hover or focused panel\n        '.show-on-hover': {\n          visibility: 'visible',\n          opacity: '1',\n        },\n      },\n\n      '&:focus-visible': {\n        outline: `1px solid ${theme.colors.action.focus}`,\n      },\n\n      '&:focus-within': {\n        '.show-on-hover': {\n          visibility: 'visible',\n          opacity: '1',\n        },\n      },\n    }),\n    loadingBarContainer: css({\n      label: 'panel-loading-bar-container',\n      position: 'absolute',\n      top: 0,\n      width: '100%',\n      overflow: 'hidden',\n    }),\n    content: css({\n      label: 'panel-content',\n      flexGrow: 1,\n      contain: 'strict',\n    }),\n    headerContainer: css({\n      label: 'panel-header',\n      display: 'flex',\n      alignItems: 'center',\n    }),\n    pointer: css({\n      cursor: 'pointer',\n    }),\n    streaming: css({\n      label: 'panel-streaming',\n      marginRight: 0,\n      color: theme.colors.success.text,\n\n      '&:hover': {\n        color: theme.colors.success.text,\n      },\n    }),\n    title: css({\n      label: 'panel-title',\n      marginBottom: 0, // override default h6 margin-bottom\n      padding: theme.spacing(0, padding),\n      textOverflow: 'ellipsis',\n      overflow: 'hidden',\n      whiteSpace: 'nowrap',\n      fontSize: theme.typography.h6.fontSize,\n      fontWeight: theme.typography.h6.fontWeight,\n    }),\n    items: css({\n      display: 'flex',\n    }),\n    item: css({\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n    }),\n    hiddenMenu: css({\n      visibility: 'hidden',\n    }),\n    menuItem: css({\n      label: 'panel-menu',\n      border: 'none',\n      background: theme.colors.secondary.main,\n      '&:hover': {\n        background: theme.colors.secondary.shade,\n      },\n    }),\n    errorContainerFloating: css({\n      label: 'error-container',\n      position: 'absolute',\n      left: 0,\n      top: 0,\n      zIndex: theme.zIndex.tooltip,\n    }),\n    rightActions: css({\n      display: 'flex',\n      padding: theme.spacing(0, padding),\n      gap: theme.spacing(1),\n    }),\n    rightAligned: css({\n      label: 'right-aligned-container',\n      marginLeft: 'auto',\n      display: 'flex',\n      alignItems: 'center',\n    }),\n    titleItems: css({\n      display: 'flex',\n      height: '100%',\n    }),\n  };\n};\n","/**\n * Mode to describe if a legend is isolated/selected or being appended to an existing\n * series selection.\n * @alpha\n */\n\nexport enum SeriesVisibilityChangeMode {\n  ToggleSelection = 'select',\n  AppendToSelection = 'append',\n}\n","import React from 'react';\n\nimport { ErrorIndicator } from './ErrorIndicator';\nimport { LoadingIndicator } from './LoadingIndicator';\nimport { PanelChrome as PanelChromeComponent, PanelChromeProps } from './PanelChrome';\nimport { TitleItem } from './TitleItem';\n\n/**\n * @internal\n */\nexport type { PanelChromeProps, PanelPadding } from './PanelChrome';\n\n/**\n * @internal\n */\nexport interface PanelChromeType extends React.FC<PanelChromeProps> {\n  LoadingIndicator: typeof LoadingIndicator;\n  ErrorIndicator: typeof ErrorIndicator;\n  TitleItem: typeof TitleItem;\n}\n\n/**\n * @internal\n */\nexport const PanelChrome = PanelChromeComponent as PanelChromeType;\nPanelChrome.LoadingIndicator = LoadingIndicator;\nPanelChrome.ErrorIndicator = ErrorIndicator;\nPanelChrome.TitleItem = TitleItem;\n\n/**\n * Exporting the components for extensibility and since it is a good practice\n * according to the api-extractor.\n */\nexport {\n  LoadingIndicator as PanelChromeLoadingIndicator,\n  type LoadingIndicatorProps as PanelChromeLoadingIndicatorProps,\n} from './LoadingIndicator';\n\nexport {\n  ErrorIndicator as PanelChromeErrorIndicator,\n  type ErrorIndicatorProps as PanelChromeErrorIndicatorProps,\n} from './ErrorIndicator';\n\nexport { PanelDescription } from './PanelDescription';\n\nexport { usePanelContext, PanelContextProvider, type PanelContext, PanelContextRoot } from './PanelContext';\n\nexport * from './types';\n","import React, { PureComponent } from 'react';\n\nimport { ListProps, AbstractList } from './AbstractList';\n\nexport class InlineList<T> extends PureComponent<ListProps<T>> {\n  render() {\n    return <AbstractList inline {...this.props} />;\n  }\n}\n","import React, { useCallback } from 'react';\n\nimport { SeriesColorPicker } from '../ColorPicker/ColorPicker';\nimport { usePanelContext } from '../PanelChrome';\n\nimport { SeriesIcon } from './SeriesIcon';\n\ninterface Props {\n  seriesName: string;\n  color?: string;\n  gradient?: string;\n  readonly?: boolean;\n}\n\n/**\n * @internal\n */\nexport const VizLegendSeriesIcon = React.memo(({ seriesName, color, gradient, readonly }: Props) => {\n  const { onSeriesColorChange } = usePanelContext();\n  const onChange = useCallback(\n    (color: string) => {\n      return onSeriesColorChange!(seriesName, color);\n    },\n    [seriesName, onSeriesColorChange]\n  );\n\n  if (seriesName && onSeriesColorChange && color && !readonly) {\n    return (\n      <SeriesColorPicker color={color} onChange={onChange} enableNamedColors>\n        {({ ref, showColorPicker, hideColorPicker }) => (\n          <SeriesIcon\n            color={color}\n            className=\"pointer\"\n            ref={ref}\n            onClick={showColorPicker}\n            onMouseLeave={hideColorPicker}\n          />\n        )}\n      </SeriesColorPicker>\n    );\n  }\n  return <SeriesIcon color={color} gradient={gradient} />;\n});\n\nVizLegendSeriesIcon.displayName = 'VizLegendSeriesIcon';\n","import { css } from '@emotion/css';\nimport { capitalize } from 'lodash';\nimport React from 'react';\n\nimport { DisplayValue, formattedValueToString } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes/ThemeContext';\nimport { InlineList } from '../List/InlineList';\n\ninterface Props {\n  stats: DisplayValue[];\n}\n\n/**\n * @internal\n */\nexport const VizLegendStatsList = ({ stats }: Props) => {\n  const styles = useStyles2(getStyles);\n\n  if (stats.length === 0) {\n    return null;\n  }\n\n  return (\n    <InlineList\n      className={styles.list}\n      items={stats}\n      renderItem={(stat) => (\n        <div className={styles.item} title={stat.description}>\n          {stat.title && `${capitalize(stat.title)}:`} {formattedValueToString(stat)}\n        </div>\n      )}\n    />\n  );\n};\n\nconst getStyles = () => ({\n  list: css`\n    flex-grow: 1;\n    text-align: right;\n  `,\n  item: css`\n    margin-left: 8px;\n  `,\n});\n\nVizLegendStatsList.displayName = 'VizLegendStatsList';\n","import { css, cx } from '@emotion/css';\nimport React, { useCallback } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\n\nimport { useStyles2 } from '../../themes';\n\nimport { VizLegendSeriesIcon } from './VizLegendSeriesIcon';\nimport { VizLegendStatsList } from './VizLegendStatsList';\nimport { VizLegendItem } from './types';\n\nexport interface Props<T> {\n  item: VizLegendItem<T>;\n  className?: string;\n  onLabelClick?: (item: VizLegendItem<T>, event: React.MouseEvent<HTMLButtonElement>) => void;\n  onLabelMouseOver?: (\n    item: VizLegendItem,\n    event: React.MouseEvent<HTMLButtonElement> | React.FocusEvent<HTMLButtonElement>\n  ) => void;\n  onLabelMouseOut?: (\n    item: VizLegendItem,\n    event: React.MouseEvent<HTMLButtonElement> | React.FocusEvent<HTMLButtonElement>\n  ) => void;\n  readonly?: boolean;\n}\n\n/**\n * @internal\n */\nexport const VizLegendListItem = <T = unknown,>({\n  item,\n  onLabelClick,\n  onLabelMouseOver,\n  onLabelMouseOut,\n  className,\n  readonly,\n}: Props<T>) => {\n  const styles = useStyles2(getStyles);\n\n  const onMouseOver = useCallback(\n    (event: React.MouseEvent<HTMLButtonElement, MouseEvent> | React.FocusEvent<HTMLButtonElement>) => {\n      if (onLabelMouseOver) {\n        onLabelMouseOver(item, event);\n      }\n    },\n    [item, onLabelMouseOver]\n  );\n\n  const onMouseOut = useCallback(\n    (event: React.MouseEvent<HTMLButtonElement, MouseEvent> | React.FocusEvent<HTMLButtonElement>) => {\n      if (onLabelMouseOut) {\n        onLabelMouseOut(item, event);\n      }\n    },\n    [item, onLabelMouseOut]\n  );\n\n  const onClick = useCallback(\n    (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n      if (onLabelClick) {\n        onLabelClick(item, event);\n      }\n    },\n    [item, onLabelClick]\n  );\n\n  return (\n    <div\n      className={cx(styles.itemWrapper, item.disabled && styles.itemDisabled, className)}\n      aria-label={selectors.components.VizLegend.seriesName(item.label)}\n    >\n      <VizLegendSeriesIcon seriesName={item.label} color={item.color} gradient={item.gradient} readonly={readonly} />\n      <button\n        disabled={readonly}\n        type=\"button\"\n        onBlur={onMouseOut}\n        onFocus={onMouseOver}\n        onMouseOver={onMouseOver}\n        onMouseOut={onMouseOut}\n        onClick={onClick}\n        className={styles.label}\n      >\n        {item.label}\n      </button>\n\n      {item.getDisplayValues && <VizLegendStatsList stats={item.getDisplayValues()} />}\n    </div>\n  );\n};\n\nVizLegendListItem.displayName = 'VizLegendListItem';\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  label: css`\n    label: LegendLabel;\n    white-space: nowrap;\n    background: none;\n    border: none;\n    font-size: inherit;\n    padding: 0;\n    user-select: text;\n  `,\n  itemDisabled: css`\n    label: LegendLabelDisabled;\n    color: ${theme.colors.text.disabled};\n  `,\n  itemWrapper: css`\n    label: LegendItemWrapper;\n    display: flex;\n    white-space: nowrap;\n    align-items: center;\n    flex-grow: 1;\n  `,\n  value: css`\n    text-align: right;\n  `,\n  yAxisLabel: css`\n    color: ${theme.v1.palette.gray2};\n  `,\n});\n","import { css, cx } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\nimport { InlineList } from '../List/InlineList';\nimport { List } from '../List/List';\n\nimport { VizLegendListItem } from './VizLegendListItem';\nimport { VizLegendBaseProps, VizLegendItem } from './types';\n\nexport interface Props<T> extends VizLegendBaseProps<T> {}\n\n/**\n * @internal\n */\nexport const VizLegendList = <T extends unknown>({\n  items,\n  itemRenderer,\n  onLabelMouseOver,\n  onLabelMouseOut,\n  onLabelClick,\n  placement,\n  className,\n  readonly,\n}: Props<T>) => {\n  const styles = useStyles2(getStyles);\n\n  if (!itemRenderer) {\n    /* eslint-disable-next-line react/display-name */\n    itemRenderer = (item) => (\n      <VizLegendListItem\n        item={item}\n        onLabelClick={onLabelClick}\n        onLabelMouseOver={onLabelMouseOver}\n        onLabelMouseOut={onLabelMouseOut}\n        readonly={readonly}\n      />\n    );\n  }\n\n  const getItemKey = (item: VizLegendItem<T>) => `${item.getItemKey ? item.getItemKey() : item.label}`;\n\n  switch (placement) {\n    case 'right': {\n      const renderItem = (item: VizLegendItem<T>, index: number) => {\n        return <span className={styles.itemRight}>{itemRenderer!(item, index)}</span>;\n      };\n\n      return (\n        <div className={cx(styles.rightWrapper, className)}>\n          <List items={items} renderItem={renderItem} getItemKey={getItemKey} />\n        </div>\n      );\n    }\n    case 'bottom':\n    default: {\n      const renderItem = (item: VizLegendItem<T>, index: number) => {\n        return <span className={styles.itemBottom}>{itemRenderer!(item, index)}</span>;\n      };\n\n      return (\n        <div className={cx(styles.bottomWrapper, className)}>\n          <div className={styles.section}>\n            <InlineList\n              items={items.filter((item) => item.yAxis === 1)}\n              renderItem={renderItem}\n              getItemKey={getItemKey}\n            />\n          </div>\n          <div className={cx(styles.section, styles.sectionRight)}>\n            <InlineList\n              items={items.filter((item) => item.yAxis !== 1)}\n              renderItem={renderItem}\n              getItemKey={getItemKey}\n            />\n          </div>\n        </div>\n      );\n    }\n  }\n};\n\nVizLegendList.displayName = 'VizLegendList';\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  const itemStyles = css`\n    padding-right: 10px;\n    display: flex;\n    font-size: ${theme.typography.bodySmall.fontSize};\n    white-space: nowrap;\n  `;\n\n  return {\n    itemBottom: itemStyles,\n    itemRight: cx(\n      itemStyles,\n      css`\n        margin-bottom: ${theme.spacing(0.5)};\n      `\n    ),\n    rightWrapper: css`\n      padding-left: ${theme.spacing(0.5)};\n    `,\n    bottomWrapper: css`\n      display: flex;\n      flex-wrap: wrap;\n      justify-content: space-between;\n      width: 100%;\n      padding-left: ${theme.spacing(0.5)};\n    `,\n    section: css`\n      display: flex;\n    `,\n    sectionRight: css`\n      justify-content: flex-end;\n      flex-grow: 1;\n    `,\n  };\n};\n","import { css, cx } from '@emotion/css';\nimport React, { useCallback } from 'react';\n\nimport { formattedValueToString, GrafanaTheme2 } from '@grafana/data';\n\nimport { styleMixins } from '../../themes';\nimport { useStyles2 } from '../../themes/ThemeContext';\n\nimport { VizLegendSeriesIcon } from './VizLegendSeriesIcon';\nimport { VizLegendItem } from './types';\n\nexport interface Props {\n  key?: React.Key;\n  item: VizLegendItem;\n  className?: string;\n  onLabelClick?: (item: VizLegendItem, event: React.MouseEvent<HTMLButtonElement>) => void;\n  onLabelMouseOver?: (\n    item: VizLegendItem,\n    event: React.MouseEvent<HTMLButtonElement> | React.FocusEvent<HTMLButtonElement>\n  ) => void;\n  onLabelMouseOut?: (\n    item: VizLegendItem,\n    event: React.MouseEvent<HTMLButtonElement> | React.FocusEvent<HTMLButtonElement>\n  ) => void;\n  readonly?: boolean;\n}\n\n/**\n * @internal\n */\nexport const LegendTableItem = ({\n  item,\n  onLabelClick,\n  onLabelMouseOver,\n  onLabelMouseOut,\n  className,\n  readonly,\n}: Props) => {\n  const styles = useStyles2(getStyles);\n\n  const onMouseOver = useCallback(\n    (event: React.MouseEvent<HTMLButtonElement, MouseEvent> | React.FocusEvent<HTMLButtonElement>) => {\n      if (onLabelMouseOver) {\n        onLabelMouseOver(item, event);\n      }\n    },\n    [item, onLabelMouseOver]\n  );\n\n  const onMouseOut = useCallback(\n    (event: React.MouseEvent<HTMLButtonElement, MouseEvent> | React.FocusEvent<HTMLButtonElement>) => {\n      if (onLabelMouseOut) {\n        onLabelMouseOut(item, event);\n      }\n    },\n    [item, onLabelMouseOut]\n  );\n\n  const onClick = useCallback(\n    (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n      if (onLabelClick) {\n        onLabelClick(item, event);\n      }\n    },\n    [item, onLabelClick]\n  );\n\n  return (\n    <tr className={cx(styles.row, className)}>\n      <td>\n        <span className={styles.itemWrapper}>\n          <VizLegendSeriesIcon color={item.color} seriesName={item.label} readonly={readonly} />\n          <button\n            disabled={readonly}\n            type=\"button\"\n            onBlur={onMouseOut}\n            onFocus={onMouseOver}\n            onMouseOver={onMouseOver}\n            onMouseOut={onMouseOut}\n            onClick={!readonly ? onClick : undefined}\n            className={cx(styles.label, item.disabled && styles.labelDisabled)}\n          >\n            {item.label} {item.yAxis === 2 && <span className={styles.yAxisLabel}>(right y-axis)</span>}\n          </button>\n        </span>\n      </td>\n      {item.getDisplayValues &&\n        item.getDisplayValues().map((stat, index) => {\n          return (\n            <td className={styles.value} key={`${stat.title}-${index}`}>\n              {formattedValueToString(stat)}\n            </td>\n          );\n        })}\n    </tr>\n  );\n};\n\nLegendTableItem.displayName = 'LegendTableItem';\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  const rowHoverBg = styleMixins.hoverColor(theme.colors.background.primary, theme);\n\n  return {\n    row: css`\n      label: LegendRow;\n      font-size: ${theme.v1.typography.size.sm};\n      border-bottom: 1px solid ${theme.colors.border.weak};\n      td {\n        padding: ${theme.spacing(0.25, 1)};\n        white-space: nowrap;\n      }\n\n      &:hover {\n        background: ${rowHoverBg};\n      }\n    `,\n    label: css`\n      label: LegendLabel;\n      white-space: nowrap;\n      background: none;\n      border: none;\n      font-size: inherit;\n      padding: 0;\n    `,\n    labelDisabled: css`\n      label: LegendLabelDisabled;\n      color: ${theme.colors.text.disabled};\n    `,\n    itemWrapper: css`\n      display: flex;\n      white-space: nowrap;\n      align-items: center;\n    `,\n    value: css`\n      text-align: right;\n    `,\n    yAxisLabel: css`\n      color: ${theme.colors.text.secondary};\n    `,\n  };\n};\n","import { css, cx } from '@emotion/css';\nimport { orderBy } from 'lodash';\nimport React from 'react';\n\nimport { DisplayValue, GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes/ThemeContext';\nimport { Icon } from '../Icon/Icon';\n\nimport { LegendTableItem } from './VizLegendTableItem';\nimport { VizLegendTableProps } from './types';\n\n/**\n * @internal\n */\nexport const VizLegendTable = <T extends unknown>({\n  items,\n  sortBy: sortKey,\n  sortDesc,\n  itemRenderer,\n  className,\n  onToggleSort,\n  onLabelClick,\n  onLabelMouseOver,\n  onLabelMouseOut,\n  readonly,\n}: VizLegendTableProps<T>): JSX.Element => {\n  const styles = useStyles2(getStyles);\n  const stats: Record<string, DisplayValue> = {};\n\n  for (const item of items) {\n    if (item.getDisplayValues) {\n      for (const displayValue of item.getDisplayValues()) {\n        stats[displayValue.title ?? '?'] = displayValue;\n      }\n    }\n  }\n\n  const sortedItems = sortKey\n    ? orderBy(\n        items,\n        (item) => {\n          if (item.getDisplayValues) {\n            const stat = item.getDisplayValues().filter((stat) => stat.title === sortKey)[0];\n            return stat && stat.numeric;\n          }\n          return undefined;\n        },\n        sortDesc ? 'desc' : 'asc'\n      )\n    : items;\n\n  if (!itemRenderer) {\n    /* eslint-disable-next-line react/display-name */\n    itemRenderer = (item, index) => (\n      <LegendTableItem\n        key={`${item.label}-${index}`}\n        item={item}\n        onLabelClick={onLabelClick}\n        onLabelMouseOver={onLabelMouseOver}\n        onLabelMouseOut={onLabelMouseOut}\n        readonly={readonly}\n      />\n    );\n  }\n\n  return (\n    <table className={cx(styles.table, className)}>\n      <thead>\n        <tr>\n          <th></th>\n          {Object.keys(stats).map((columnTitle) => {\n            const displayValue = stats[columnTitle];\n            return (\n              <th\n                title={displayValue.description}\n                key={columnTitle}\n                className={cx(styles.header, onToggleSort && styles.headerSortable, {\n                  [styles.withIcon]: sortKey === columnTitle,\n                })}\n                onClick={() => {\n                  if (onToggleSort) {\n                    onToggleSort(columnTitle);\n                  }\n                }}\n              >\n                {columnTitle}\n                {sortKey === columnTitle && <Icon size=\"xs\" name={sortDesc ? 'angle-down' : 'angle-up'} />}\n              </th>\n            );\n          })}\n        </tr>\n      </thead>\n      <tbody>{sortedItems.map(itemRenderer!)}</tbody>\n    </table>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  table: css`\n    width: 100%;\n    th:first-child {\n      width: 100%;\n      border-bottom: 1px solid ${theme.colors.border.weak};\n    }\n  `,\n  header: css`\n    color: ${theme.colors.primary.text};\n    font-weight: ${theme.typography.fontWeightMedium};\n    border-bottom: 1px solid ${theme.colors.border.weak};\n    padding: ${theme.spacing(0.25, 1, 0.25, 1)};\n    font-size: ${theme.typography.bodySmall.fontSize};\n    text-align: right;\n    white-space: nowrap;\n  `,\n  // This needs to be padding-right - icon size(xs==12) to avoid jumping\n  withIcon: css`\n    padding-right: 4px;\n  `,\n  headerSortable: css`\n    cursor: pointer;\n  `,\n});\n","import React from 'react';\n\nimport { DataFrameFieldIndex, DisplayValue } from '@grafana/data';\nimport { LegendDisplayMode, LegendPlacement } from '@grafana/schema';\n\nexport enum SeriesVisibilityChangeBehavior {\n  Isolate,\n  Hide,\n}\n\nexport interface VizLegendBaseProps<T> {\n  placement: LegendPlacement;\n  className?: string;\n  items: Array<VizLegendItem<T>>;\n  seriesVisibilityChangeBehavior?: SeriesVisibilityChangeBehavior;\n  onLabelClick?: (item: VizLegendItem<T>, event: React.MouseEvent<HTMLButtonElement>) => void;\n  itemRenderer?: (item: VizLegendItem<T>, index: number) => JSX.Element;\n  onLabelMouseOver?: (\n    item: VizLegendItem,\n    event: React.MouseEvent<HTMLButtonElement> | React.FocusEvent<HTMLButtonElement>\n  ) => void;\n  onLabelMouseOut?: (\n    item: VizLegendItem,\n    event: React.MouseEvent<HTMLButtonElement> | React.FocusEvent<HTMLButtonElement>\n  ) => void;\n  readonly?: boolean;\n}\n\nexport interface VizLegendTableProps<T> extends VizLegendBaseProps<T> {\n  sortBy?: string;\n  sortDesc?: boolean;\n  onToggleSort?: (sortBy: string) => void;\n}\n\nexport interface LegendProps<T = any> extends VizLegendBaseProps<T>, VizLegendTableProps<T> {\n  displayMode: LegendDisplayMode;\n}\n\nexport interface VizLegendItem<T = any> {\n  getItemKey?: () => string;\n  label: string;\n  color?: string;\n  gradient?: string;\n  yAxis: number;\n  disabled?: boolean;\n  // displayValues?: DisplayValue[];\n  getDisplayValues?: () => DisplayValue[];\n  fieldIndex?: DataFrameFieldIndex;\n  data?: T;\n}\n","import { SeriesVisibilityChangeMode } from '..';\n\nexport function mapMouseEventToMode(event: React.MouseEvent): SeriesVisibilityChangeMode {\n  if (event.ctrlKey || event.metaKey || event.shiftKey) {\n    return SeriesVisibilityChangeMode.AppendToSelection;\n  }\n  return SeriesVisibilityChangeMode.ToggleSelection;\n}\n","import React, { useCallback } from 'react';\n\nimport { DataHoverClearEvent, DataHoverEvent } from '@grafana/data';\nimport { LegendDisplayMode } from '@grafana/schema';\n\nimport { SeriesVisibilityChangeMode, usePanelContext } from '../PanelChrome';\n\nimport { VizLegendList } from './VizLegendList';\nimport { VizLegendTable } from './VizLegendTable';\nimport { LegendProps, SeriesVisibilityChangeBehavior, VizLegendItem } from './types';\nimport { mapMouseEventToMode } from './utils';\n\n/**\n * @public\n */\nexport function VizLegend<T>({\n  items,\n  displayMode,\n  sortBy: sortKey,\n  seriesVisibilityChangeBehavior = SeriesVisibilityChangeBehavior.Isolate,\n  sortDesc,\n  onLabelClick,\n  onToggleSort,\n  placement,\n  className,\n  itemRenderer,\n  readonly,\n}: LegendProps<T>) {\n  const { eventBus, onToggleSeriesVisibility, onToggleLegendSort } = usePanelContext();\n\n  const onMouseOver = useCallback(\n    (\n      item: VizLegendItem,\n      event: React.MouseEvent<HTMLButtonElement, MouseEvent> | React.FocusEvent<HTMLButtonElement>\n    ) => {\n      eventBus?.publish({\n        type: DataHoverEvent.type,\n        payload: {\n          raw: event,\n          x: 0,\n          y: 0,\n          dataId: item.label,\n        },\n      });\n    },\n    [eventBus]\n  );\n\n  const onMouseOut = useCallback(\n    (\n      item: VizLegendItem,\n      event: React.MouseEvent<HTMLButtonElement, MouseEvent> | React.FocusEvent<HTMLButtonElement>\n    ) => {\n      eventBus?.publish({\n        type: DataHoverClearEvent.type,\n        payload: {\n          raw: event,\n          x: 0,\n          y: 0,\n          dataId: item.label,\n        },\n      });\n    },\n    [eventBus]\n  );\n\n  const onLegendLabelClick = useCallback(\n    (item: VizLegendItem, event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n      if (onLabelClick) {\n        onLabelClick(item, event);\n      }\n      if (onToggleSeriesVisibility) {\n        onToggleSeriesVisibility(\n          item.label,\n          seriesVisibilityChangeBehavior === SeriesVisibilityChangeBehavior.Hide\n            ? SeriesVisibilityChangeMode.AppendToSelection\n            : mapMouseEventToMode(event)\n        );\n      }\n    },\n    [onToggleSeriesVisibility, onLabelClick, seriesVisibilityChangeBehavior]\n  );\n\n  switch (displayMode) {\n    case LegendDisplayMode.Table:\n      return (\n        <VizLegendTable<T>\n          className={className}\n          items={items}\n          placement={placement}\n          sortBy={sortKey}\n          sortDesc={sortDesc}\n          onLabelClick={onLegendLabelClick}\n          onToggleSort={onToggleSort || onToggleLegendSort}\n          onLabelMouseOver={onMouseOver}\n          onLabelMouseOut={onMouseOut}\n          itemRenderer={itemRenderer}\n          readonly={readonly}\n        />\n      );\n    case LegendDisplayMode.List:\n      return (\n        <VizLegendList<T>\n          className={className}\n          items={items}\n          placement={placement}\n          onLabelMouseOver={onMouseOver}\n          onLabelMouseOut={onMouseOut}\n          onLabelClick={onLegendLabelClick}\n          itemRenderer={itemRenderer}\n          readonly={readonly}\n        />\n      );\n    default:\n      return null;\n  }\n}\n\nVizLegend.displayName = 'VizLegend';\n","// Libraries\n\nimport { css } from '@emotion/css';\nimport React from 'react';\n\nimport { GraphSeriesValue } from '@grafana/data';\nimport { LegendDisplayMode, LegendPlacement } from '@grafana/schema';\n\nimport { stylesFactory } from '../../themes';\nimport { CustomScrollbar } from '../CustomScrollbar/CustomScrollbar';\nimport { VizLegend } from '../VizLegend/VizLegend';\nimport { VizLegendItem } from '../VizLegend/types';\n\nimport { Graph, GraphProps } from './Graph';\n\nexport interface GraphWithLegendProps extends GraphProps {\n  legendDisplayMode: LegendDisplayMode;\n  legendVisibility: boolean;\n  placement: LegendPlacement;\n  hideEmpty?: boolean;\n  hideZero?: boolean;\n  sortLegendBy?: string;\n  sortLegendDesc?: boolean;\n  onSeriesToggle?: (label: string, event: React.MouseEvent<HTMLElement>) => void;\n  onToggleSort: (sortBy: string) => void;\n}\n\nconst getGraphWithLegendStyles = stylesFactory(({ placement }: GraphWithLegendProps) => ({\n  wrapper: css`\n    display: flex;\n    flex-direction: ${placement === 'bottom' ? 'column' : 'row'};\n  `,\n  graphContainer: css`\n    min-height: 65%;\n    flex-grow: 1;\n  `,\n  legendContainer: css`\n    padding: 10px 0;\n    max-height: ${placement === 'bottom' ? '35%' : 'none'};\n  `,\n}));\n\nconst shouldHideLegendItem = (data: GraphSeriesValue[][], hideEmpty = false, hideZero = false) => {\n  const isZeroOnlySeries = data.reduce((acc, current) => acc + (current[1] || 0), 0) === 0;\n  const isNullOnlySeries = !data.reduce((acc, current) => acc && current[1] !== null, true);\n\n  return (hideEmpty && isNullOnlySeries) || (hideZero && isZeroOnlySeries);\n};\n\nexport const GraphWithLegend = (props: GraphWithLegendProps) => {\n  const {\n    series,\n    timeRange,\n    width,\n    height,\n    showBars,\n    showLines,\n    showPoints,\n    sortLegendBy,\n    sortLegendDesc,\n    legendDisplayMode,\n    legendVisibility,\n    placement,\n    onSeriesToggle,\n    onToggleSort,\n    hideEmpty,\n    hideZero,\n    isStacked,\n    lineWidth,\n    onHorizontalRegionSelected,\n    timeZone,\n    children,\n    ariaLabel,\n  } = props;\n  const { graphContainer, wrapper, legendContainer } = getGraphWithLegendStyles(props);\n\n  const legendItems = series.reduce<VizLegendItem[]>((acc, s) => {\n    return shouldHideLegendItem(s.data, hideEmpty, hideZero)\n      ? acc\n      : acc.concat([\n          {\n            label: s.label,\n            color: s.color || '',\n            disabled: !s.isVisible,\n            yAxis: s.yAxis.index,\n            getDisplayValues: () => s.info || [],\n          },\n        ]);\n  }, []);\n\n  return (\n    <div className={wrapper} aria-label={ariaLabel}>\n      <div className={graphContainer}>\n        <Graph\n          series={series}\n          timeRange={timeRange}\n          timeZone={timeZone}\n          showLines={showLines}\n          showPoints={showPoints}\n          showBars={showBars}\n          width={width}\n          height={height}\n          isStacked={isStacked}\n          lineWidth={lineWidth}\n          onHorizontalRegionSelected={onHorizontalRegionSelected}\n        >\n          {children}\n        </Graph>\n      </div>\n\n      {legendVisibility && (\n        <div className={legendContainer}>\n          <CustomScrollbar hideHorizontalTrack>\n            <VizLegend\n              items={legendItems}\n              displayMode={legendDisplayMode}\n              placement={placement}\n              sortBy={sortLegendBy}\n              sortDesc={sortLegendDesc}\n              onLabelClick={(item, event) => {\n                if (onSeriesToggle) {\n                  onSeriesToggle(item.label, event);\n                }\n              }}\n              onToggleSort={onToggleSort}\n            />\n          </CustomScrollbar>\n        </div>\n      )}\n    </div>\n  );\n};\n","/**\n * This function will calculate how many squares we can fit inside a rectangle.\n * Please have a look at this post for more details about the implementation:\n * https://math.stackexchange.com/questions/466198/algorithm-to-get-the-maximum-size-of-n-squares-that-fit-into-a-rectangle-with-a\n *\n * @param parentWidth width of the parent container\n * @param parentHeight height of the parent container\n * @param numberOfChildren number of children that should fit in the parent container\n */\nexport const calculateGridDimensions = (\n  parentWidth: number,\n  parentHeight: number,\n  itemSpacing: number,\n  numberOfChildren: number\n) => {\n  const vertical = calculateSizeOfChild(parentWidth, parentHeight, numberOfChildren);\n  const horizontal = calculateSizeOfChild(parentHeight, parentWidth, numberOfChildren);\n  const square = Math.max(vertical, horizontal);\n  let xCount = Math.floor(parentWidth / square);\n  let yCount = Math.ceil(numberOfChildren / xCount);\n\n  // after yCount update xCount to make split between rows more even\n  xCount = Math.ceil(numberOfChildren / yCount);\n\n  const itemsOnLastRow = xCount - (xCount * yCount - numberOfChildren);\n  const widthOnLastRow = parentWidth / itemsOnLastRow - itemSpacing + itemSpacing / itemsOnLastRow;\n\n  return {\n    width: parentWidth / xCount - itemSpacing + itemSpacing / xCount,\n    height: parentHeight / yCount - itemSpacing + itemSpacing / yCount,\n    widthOnLastRow,\n    xCount,\n    yCount,\n  };\n};\n\nfunction calculateSizeOfChild(parentWidth: number, parentHeight: number, numberOfChildren: number): number {\n  const parts = Math.ceil(Math.sqrt((numberOfChildren * parentWidth) / parentHeight));\n\n  if (Math.floor((parts * parentHeight) / parentWidth) * parts < numberOfChildren) {\n    return parentHeight / Math.ceil((parts * parentHeight) / parentWidth);\n  }\n\n  return parentWidth / parts;\n}\n","import React, { PureComponent, CSSProperties } from 'react';\n\nimport { VizOrientation } from '@grafana/data';\n\nimport { calculateGridDimensions } from '../../utils/squares';\n\ninterface Props<V, D> {\n  /**\n   * Optionally precalculate dimensions to support consistent behavior between repeated\n   * values.  Two typical patterns are:\n   * 1) Calculate raw values like font size etc and pass them to each vis\n   * 2) find the maximum input values and pass that to the vis\n   */\n  getAlignmentFactors?: (values: V[], width: number, height: number) => D;\n\n  /**\n   * Render a single value\n   */\n  renderValue: (props: VizRepeaterRenderValueProps<V, D>) => JSX.Element;\n  height: number;\n  width: number;\n  source: unknown; // If this changes, new values will be requested\n  getValues: () => V[];\n  renderCounter: number; // force update of values & render\n  orientation: VizOrientation;\n  itemSpacing?: number;\n  /** When orientation is set to auto layout items in a grid */\n  autoGrid?: boolean;\n  minVizWidth?: number;\n  minVizHeight?: number;\n}\n\nexport interface VizRepeaterRenderValueProps<V, D = {}> {\n  value: V;\n  width: number;\n  height: number;\n  orientation: VizOrientation;\n  alignmentFactors: D;\n  /**\n   * Total number of values being shown in repeater\n   */\n  count: number;\n}\n\ninterface DefaultProps {\n  itemSpacing: number;\n}\n\ntype PropsWithDefaults<V, D> = Props<V, D> & DefaultProps;\n\ninterface State<V> {\n  values: V[];\n}\n\nexport class VizRepeater<V, D = {}> extends PureComponent<Props<V, D>, State<V>> {\n  static defaultProps: DefaultProps = {\n    itemSpacing: 8,\n  };\n\n  constructor(props: Props<V, D>) {\n    super(props);\n\n    this.state = {\n      values: props.getValues(),\n    };\n  }\n\n  componentDidUpdate(prevProps: Props<V, D>) {\n    const { renderCounter, source } = this.props;\n    if (renderCounter !== prevProps.renderCounter || source !== prevProps.source) {\n      this.setState({ values: this.props.getValues() });\n    }\n  }\n\n  getOrientation(): VizOrientation {\n    const { orientation, width, height } = this.props;\n\n    if (orientation === VizOrientation.Auto) {\n      if (width > height) {\n        return VizOrientation.Vertical;\n      } else {\n        return VizOrientation.Horizontal;\n      }\n    }\n\n    return orientation;\n  }\n\n  renderGrid() {\n    const { renderValue, height, width, itemSpacing, getAlignmentFactors, orientation } = this\n      .props as PropsWithDefaults<V, D>;\n\n    const { values } = this.state;\n    const grid = calculateGridDimensions(width, height, itemSpacing, values.length);\n    const alignmentFactors = getAlignmentFactors ? getAlignmentFactors(values, grid.width, grid.height) : ({} as D);\n\n    let xGrid = 0;\n    let yGrid = 0;\n    let items: JSX.Element[] = [];\n\n    for (let i = 0; i < values.length; i++) {\n      const value = values[i];\n      const isLastRow = yGrid === grid.yCount - 1;\n\n      const itemWidth = isLastRow ? grid.widthOnLastRow : grid.width;\n      const itemHeight = grid.height;\n\n      const xPos = xGrid * itemWidth + itemSpacing * xGrid;\n      const yPos = yGrid * itemHeight + itemSpacing * yGrid;\n\n      const itemStyles: CSSProperties = {\n        position: 'absolute',\n        left: xPos,\n        top: yPos,\n        width: `${itemWidth}px`,\n        height: `${itemHeight}px`,\n      };\n\n      items.push(\n        <div key={i} style={itemStyles}>\n          {renderValue({\n            value,\n            width: itemWidth,\n            height: itemHeight,\n            alignmentFactors,\n            orientation,\n            count: values.length,\n          })}\n        </div>\n      );\n\n      xGrid++;\n\n      if (xGrid === grid.xCount) {\n        xGrid = 0;\n        yGrid++;\n      }\n    }\n\n    return <div style={{ position: 'relative' }}>{items}</div>;\n  }\n\n  render() {\n    const {\n      renderValue,\n      height,\n      width,\n      itemSpacing,\n      getAlignmentFactors,\n      autoGrid,\n      orientation,\n      minVizWidth,\n      minVizHeight,\n    } = this.props as PropsWithDefaults<V, D>;\n    const { values } = this.state;\n\n    if (autoGrid && orientation === VizOrientation.Auto) {\n      return this.renderGrid();\n    }\n\n    const itemStyles: React.CSSProperties = {\n      display: 'flex',\n    };\n\n    const repeaterStyle: React.CSSProperties = {\n      display: 'flex',\n      overflow: `${minVizWidth ? 'auto' : 'hidden'} ${minVizHeight ? 'auto' : 'hidden'}`,\n    };\n\n    let vizHeight = height;\n    let vizWidth = width;\n\n    let resolvedOrientation = this.getOrientation();\n\n    switch (resolvedOrientation) {\n      case VizOrientation.Horizontal:\n        repeaterStyle.flexDirection = 'column';\n        repeaterStyle.height = `${height}px`;\n        itemStyles.marginBottom = `${itemSpacing}px`;\n        vizWidth = width;\n        vizHeight = Math.max(height / values.length - itemSpacing + itemSpacing / values.length, minVizHeight ?? 0);\n        break;\n      case VizOrientation.Vertical:\n        repeaterStyle.flexDirection = 'row';\n        repeaterStyle.justifyContent = 'space-between';\n        itemStyles.marginRight = `${itemSpacing}px`;\n        vizHeight = height;\n        vizWidth = Math.max(width / values.length - itemSpacing + itemSpacing / values.length, minVizWidth ?? 0);\n    }\n\n    itemStyles.width = `${vizWidth}px`;\n    itemStyles.height = `${vizHeight}px`;\n\n    const alignmentFactors = getAlignmentFactors ? getAlignmentFactors(values, vizWidth, vizHeight) : ({} as D);\n\n    return (\n      <div style={repeaterStyle}>\n        {values.map((value, index) => {\n          return (\n            <div key={index} style={getItemStylesForIndex(itemStyles, index, values.length)}>\n              {renderValue({\n                value,\n                width: vizWidth,\n                height: vizHeight,\n                alignmentFactors,\n                orientation: resolvedOrientation,\n                count: values.length,\n              })}\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\n/*\n * Removes any padding on the last item\n */\nfunction getItemStylesForIndex(itemStyles: CSSProperties, index: number, length: number): CSSProperties {\n  if (index === length - 1) {\n    return {\n      ...itemStyles,\n      marginRight: 0,\n      marginBottom: 0,\n    };\n  }\n  return itemStyles;\n}\n","import { css, cx } from '@emotion/css';\nimport React, { AriaRole, HTMLAttributes, ReactNode } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\n\nimport { useTheme2 } from '../../themes';\nimport { IconName } from '../../types/icon';\nimport { Button } from '../Button/Button';\nimport { Icon } from '../Icon/Icon';\nimport { IconButton } from '../IconButton/IconButton';\n\nexport type AlertVariant = 'success' | 'warning' | 'error' | 'info';\n\nexport interface Props extends HTMLAttributes<HTMLDivElement> {\n  title: string;\n  /** On click handler for alert button, mostly used for dismissing the alert */\n  onRemove?: (event: React.MouseEvent) => void;\n  severity?: AlertVariant;\n  children?: ReactNode;\n  elevated?: boolean;\n  buttonContent?: React.ReactNode | string;\n  bottomSpacing?: number;\n  topSpacing?: number;\n}\n\nexport const Alert = React.forwardRef<HTMLDivElement, Props>(\n  (\n    {\n      title,\n      onRemove,\n      children,\n      buttonContent,\n      elevated,\n      bottomSpacing,\n      topSpacing,\n      className,\n      severity = 'error',\n      ...restProps\n    },\n    ref\n  ) => {\n    const theme = useTheme2();\n    const hasTitle = Boolean(title);\n    const styles = getStyles(theme, severity, hasTitle, elevated, bottomSpacing, topSpacing);\n    const rolesBySeverity: Record<AlertVariant, AriaRole> = {\n      error: 'alert',\n      warning: 'alert',\n      info: 'status',\n      success: 'status',\n    };\n    const role = restProps['role'] || rolesBySeverity[severity];\n    const ariaLabel = restProps['aria-label'] || title;\n\n    return (\n      <div\n        ref={ref}\n        className={cx(styles.alert, className)}\n        data-testid={selectors.components.Alert.alertV2(severity)}\n        role={role}\n        aria-label={ariaLabel}\n        {...restProps}\n      >\n        <div className={styles.icon}>\n          <Icon size=\"xl\" name={getIconFromSeverity(severity)} />\n        </div>\n\n        <div className={styles.body}>\n          <div className={styles.title}>{title}</div>\n          {children && <div className={styles.content}>{children}</div>}\n        </div>\n\n        {/* If onRemove is specified, giving preference to onRemove */}\n        {onRemove && !buttonContent && (\n          <div className={styles.close}>\n            <IconButton aria-label=\"Close alert\" name=\"times\" onClick={onRemove} size=\"lg\" type=\"button\" />\n          </div>\n        )}\n\n        {onRemove && buttonContent && (\n          <div className={styles.buttonWrapper}>\n            <Button aria-label=\"Close alert\" variant=\"secondary\" onClick={onRemove} type=\"button\">\n              {buttonContent}\n            </Button>\n          </div>\n        )}\n      </div>\n    );\n  }\n);\n\nAlert.displayName = 'Alert';\n\nexport const getIconFromSeverity = (severity: AlertVariant): IconName => {\n  switch (severity) {\n    case 'error':\n    case 'warning':\n      return 'exclamation-triangle';\n    case 'info':\n      return 'info-circle';\n    case 'success':\n      return 'check';\n  }\n};\n\nconst getStyles = (\n  theme: GrafanaTheme2,\n  severity: AlertVariant,\n  hasTitle: boolean,\n  elevated?: boolean,\n  bottomSpacing?: number,\n  topSpacing?: number\n) => {\n  const color = theme.colors[severity];\n  const borderRadius = theme.shape.borderRadius();\n\n  return {\n    alert: css`\n      flex-grow: 1;\n      position: relative;\n      border-radius: ${borderRadius};\n      display: flex;\n      flex-direction: row;\n      align-items: stretch;\n      background: ${theme.colors.background.secondary};\n      box-shadow: ${elevated ? theme.shadows.z3 : theme.shadows.z1};\n      margin-bottom: ${theme.spacing(bottomSpacing ?? 2)};\n      margin-top: ${theme.spacing(topSpacing ?? 0)};\n\n      &:before {\n        content: '';\n        position: absolute;\n        top: 0;\n        left: 0;\n        bottom: 0;\n        right: 0;\n        background: ${theme.colors.background.primary};\n        z-index: -1;\n      }\n    `,\n    icon: css`\n      padding: ${theme.spacing(2, 3)};\n      background: ${color.main};\n      border-radius: ${borderRadius} 0 0 ${borderRadius};\n      color: ${color.contrastText};\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    `,\n    title: css`\n      font-weight: ${theme.typography.fontWeightMedium};\n      color: ${theme.colors.text.primary};\n    `,\n    body: css`\n      color: ${theme.colors.text.secondary};\n      padding: ${theme.spacing(2)};\n      flex-grow: 1;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      overflow-wrap: break-word;\n      word-break: break-word;\n    `,\n    content: css`\n      color: ${theme.colors.text.secondary};\n      padding-top: ${hasTitle ? theme.spacing(1) : 0};\n      max-height: 50vh;\n      overflow-y: auto;\n    `,\n    buttonWrapper: css`\n      padding: ${theme.spacing(1)};\n      background: none;\n      display: flex;\n      align-items: center;\n    `,\n    close: css`\n      padding: ${theme.spacing(2, 1)};\n      background: none;\n      display: flex;\n    `,\n  };\n};\n","import { difference, isEqual } from 'lodash';\nimport React, { Component } from 'react';\n\nimport { GraphSeriesXY } from '@grafana/data';\n\nexport interface GraphSeriesTogglerAPI {\n  onSeriesToggle: (label: string, event: React.MouseEvent<HTMLElement>) => void;\n  toggledSeries: GraphSeriesXY[];\n}\n\nexport interface GraphSeriesTogglerProps {\n  children: (api: GraphSeriesTogglerAPI) => JSX.Element;\n  series: GraphSeriesXY[];\n  onHiddenSeriesChanged?: (hiddenSeries: string[]) => void;\n}\n\nexport interface GraphSeriesTogglerState {\n  hiddenSeries: string[];\n  toggledSeries: GraphSeriesXY[];\n}\n\nexport class GraphSeriesToggler extends Component<GraphSeriesTogglerProps, GraphSeriesTogglerState> {\n  constructor(props: GraphSeriesTogglerProps) {\n    super(props);\n\n    this.onSeriesToggle = this.onSeriesToggle.bind(this);\n\n    this.state = {\n      hiddenSeries: [],\n      toggledSeries: props.series,\n    };\n  }\n\n  componentDidUpdate(prevProps: Readonly<GraphSeriesTogglerProps>) {\n    const { series } = this.props;\n    if (!isEqual(prevProps.series, series)) {\n      this.setState({ hiddenSeries: [], toggledSeries: series });\n    }\n  }\n\n  onSeriesToggle(label: string, event: React.MouseEvent<HTMLElement>) {\n    const { series, onHiddenSeriesChanged } = this.props;\n    const { hiddenSeries } = this.state;\n\n    if (event.ctrlKey || event.metaKey || event.shiftKey) {\n      // Toggling series with key makes the series itself to toggle\n      const newHiddenSeries =\n        hiddenSeries.indexOf(label) > -1\n          ? hiddenSeries.filter((series) => series !== label)\n          : hiddenSeries.concat([label]);\n\n      const toggledSeries = series.map((series) => ({\n        ...series,\n        isVisible: newHiddenSeries.indexOf(series.label) === -1,\n      }));\n      this.setState({ hiddenSeries: newHiddenSeries, toggledSeries }, () =>\n        onHiddenSeriesChanged ? onHiddenSeriesChanged(newHiddenSeries) : undefined\n      );\n      return;\n    }\n\n    // Toggling series with out key toggles all the series but the clicked one\n    const allSeriesLabels = series.map((series) => series.label);\n    const newHiddenSeries =\n      hiddenSeries.length + 1 === allSeriesLabels.length ? [] : difference(allSeriesLabels, [label]);\n    const toggledSeries = series.map((series) => ({\n      ...series,\n      isVisible: newHiddenSeries.indexOf(series.label) === -1,\n    }));\n\n    this.setState({ hiddenSeries: newHiddenSeries, toggledSeries }, () =>\n      onHiddenSeriesChanged ? onHiddenSeriesChanged(newHiddenSeries) : undefined\n    );\n  }\n\n  render() {\n    const { children } = this.props;\n    const { toggledSeries } = this.state;\n\n    return children({\n      onSeriesToggle: this.onSeriesToggle,\n      toggledSeries,\n    });\n  }\n}\n","import { css, cx } from '@emotion/css';\nimport React, { useState } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes/ThemeContext';\nimport { clearButtonStyles } from '../Button';\nimport { Icon } from '../Icon/Icon';\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  collapse: css`\n    label: collapse;\n    margin-bottom: ${theme.spacing(1)};\n    background-color: ${theme.colors.background.primary};\n    border: 1px solid ${theme.colors.border.medium};\n    position: relative;\n    border-radius: ${theme.shape.radius.default};\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    flex: 1 1 0;\n  `,\n  collapseBody: css`\n    label: collapse__body;\n    padding: ${theme.spacing(theme.components.panel.padding)};\n    padding-top: 0;\n    flex: 1;\n    overflow: hidden;\n    display: flex;\n    flex-direction: column;\n  `,\n  bodyContentWrapper: css`\n    label: bodyContentWrapper;\n    flex: 1;\n    overflow: hidden;\n  `,\n  loader: css`\n    label: collapse__loader;\n    height: 2px;\n    position: relative;\n    overflow: hidden;\n    background: none;\n    margin: ${theme.spacing(0.5)};\n  `,\n  loaderActive: css`\n    label: collapse__loader_active;\n    &:after {\n      content: ' ';\n      display: block;\n      width: 25%;\n      top: 0;\n      top: -50%;\n      height: 250%;\n      position: absolute;\n      animation: loader 2s cubic-bezier(0.17, 0.67, 0.83, 0.67) 500ms;\n      animation-iteration-count: 100;\n      left: -25%;\n      background: ${theme.colors.primary.main};\n    }\n    @keyframes loader {\n      from {\n        left: -25%;\n        opacity: 0.1;\n      }\n      to {\n        left: 100%;\n        opacity: 1;\n      }\n    }\n  `,\n  header: css`\n    label: collapse__header;\n    padding: ${theme.spacing(1, 2, 1, 2)};\n    display: flex;\n    transition: all 0.1s linear;\n  `,\n  headerCollapsed: css`\n    label: collapse__header--collapsed;\n    padding: ${theme.spacing(1, 2, 1, 2)};\n  `,\n  headerLabel: css`\n    label: collapse__header-label;\n    font-weight: ${theme.typography.fontWeightMedium};\n    margin-right: ${theme.spacing(1)};\n    font-size: ${theme.typography.size.md};\n  `,\n  icon: css`\n    label: collapse__icon;\n    margin: ${theme.spacing(0.25, 1, 0, -1)};\n  `,\n});\n\nexport interface Props {\n  /** Expand or collapse te content */\n  isOpen?: boolean;\n  /** Element or text for the Collapse header */\n  label: React.ReactNode;\n  /** Indicates loading state of the content */\n  loading?: boolean;\n  /** Toggle collapsed header icon */\n  collapsible?: boolean;\n  /** Callback for the toggle functionality */\n  onToggle?: (isOpen: boolean) => void;\n  /** Additional class name for the root element */\n  className?: string;\n}\n\nexport const ControlledCollapse = ({ isOpen, onToggle, ...otherProps }: React.PropsWithChildren<Props>) => {\n  const [open, setOpen] = useState(isOpen);\n  return (\n    <Collapse\n      isOpen={open}\n      collapsible\n      {...otherProps}\n      onToggle={() => {\n        setOpen(!open);\n        if (onToggle) {\n          onToggle(!open);\n        }\n      }}\n    />\n  );\n};\n\nexport const Collapse = ({\n  isOpen,\n  label,\n  loading,\n  collapsible,\n  onToggle,\n  className,\n  children,\n}: React.PropsWithChildren<Props>) => {\n  const buttonStyles = useStyles2(clearButtonStyles);\n  const style = useStyles2(getStyles);\n  const onClickToggle = () => {\n    if (onToggle) {\n      onToggle(!isOpen);\n    }\n  };\n\n  const panelClass = cx([style.collapse, className]);\n  const loaderClass = loading ? cx([style.loader, style.loaderActive]) : cx([style.loader]);\n  const headerClass = collapsible ? cx([style.header]) : cx([style.headerCollapsed]);\n\n  return (\n    <div className={panelClass}>\n      <button type=\"button\" className={cx(buttonStyles, headerClass)} onClick={onClickToggle}>\n        {collapsible && <Icon className={style.icon} name={isOpen ? 'angle-down' : 'angle-right'} />}\n        <div className={cx([style.headerLabel])}>{label}</div>\n      </button>\n      {isOpen && (\n        <div className={cx([style.collapseBody])}>\n          <div className={loaderClass} />\n          <div className={style.bodyContentWrapper}>{children}</div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nCollapse.displayName = 'Collapse';\n","import { css, cx } from '@emotion/css';\nimport { uniqueId } from 'lodash';\nimport React, { ReactNode, useRef, useState } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { Icon, Spinner } from '..';\nimport { useStyles2 } from '../../themes';\nimport { getFocusStyles } from '../../themes/mixins';\n\nexport interface Props {\n  label: ReactNode;\n  isOpen: boolean;\n  /** Callback for the toggle functionality */\n  onToggle?: (isOpen: boolean) => void;\n  children: ReactNode;\n  className?: string;\n  contentClassName?: string;\n  loading?: boolean;\n  labelId?: string;\n  headerDataTestId?: string;\n  contentDataTestId?: string;\n}\n\nexport const CollapsableSection = ({\n  label,\n  isOpen,\n  onToggle,\n  className,\n  contentClassName,\n  children,\n  labelId,\n  loading = false,\n  headerDataTestId,\n  contentDataTestId,\n}: Props) => {\n  const [open, toggleOpen] = useState<boolean>(isOpen);\n  const styles = useStyles2(collapsableSectionStyles);\n\n  const onClick = (e: React.MouseEvent) => {\n    if (e.target instanceof HTMLElement && e.target.tagName === 'A') {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n\n    onToggle?.(!open);\n    toggleOpen(!open);\n  };\n  const { current: id } = useRef(uniqueId());\n\n  const buttonLabelId = labelId ?? `collapse-label-${id}`;\n\n  return (\n    <>\n      {/* disabling the a11y rules here as the button handles keyboard interactions */}\n      {/* this is just to provide a better experience for mouse users */}\n      {/* eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions */}\n      <div onClick={onClick} className={cx(styles.header, className)}>\n        <button\n          type=\"button\"\n          id={`collapse-button-${id}`}\n          className={styles.button}\n          onClick={onClick}\n          aria-expanded={open && !loading}\n          aria-controls={`collapse-content-${id}`}\n          aria-labelledby={buttonLabelId}\n        >\n          {loading ? (\n            <Spinner className={styles.spinner} />\n          ) : (\n            <Icon name={open ? 'angle-up' : 'angle-down'} className={styles.icon} />\n          )}\n        </button>\n        <div className={styles.label} id={`collapse-label-${id}`} data-testid={headerDataTestId}>\n          {label}\n        </div>\n      </div>\n      {open && (\n        <div\n          id={`collapse-content-${id}`}\n          className={cx(styles.content, contentClassName)}\n          data-testid={contentDataTestId}\n        >\n          {children}\n        </div>\n      )}\n    </>\n  );\n};\n\nconst collapsableSectionStyles = (theme: GrafanaTheme2) => ({\n  header: css({\n    display: 'flex',\n    cursor: 'pointer',\n    boxSizing: 'border-box',\n    flexDirection: 'row-reverse',\n    position: 'relative',\n    justifyContent: 'space-between',\n    fontSize: theme.typography.size.lg,\n    padding: `${theme.spacing(0.5)} 0`,\n    '&:focus-within': getFocusStyles(theme),\n  }),\n  button: css({\n    all: 'unset',\n    '&:focus-visible': {\n      outline: 'none',\n      outlineOffset: 'unset',\n      transition: 'none',\n      boxShadow: 'none',\n    },\n  }),\n  icon: css({\n    color: theme.colors.text.secondary,\n  }),\n  content: css({\n    padding: `${theme.spacing(2)} 0`,\n  }),\n  spinner: css({\n    display: 'flex',\n    alignItems: 'center',\n    width: theme.spacing(2),\n  }),\n  label: css({\n    display: 'flex',\n  }),\n});\n","import { css, cx } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2, Labels } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes/ThemeContext';\n\n// Levels are already encoded in color, filename is a Loki-ism\nconst HIDDEN_LABELS = ['level', 'lvl', 'filename'];\n\ninterface Props {\n  labels: Labels;\n}\n\n/** @deprecated will be removed in the next major version */\nexport const LogLabels = ({ labels }: Props) => {\n  const styles = useStyles2(getStyles);\n  const displayLabels = Object.keys(labels).filter((label) => !label.startsWith('_') && !HIDDEN_LABELS.includes(label));\n\n  if (displayLabels.length === 0) {\n    return (\n      <span className={cx([styles.logsLabels])}>\n        <span className={cx([styles.logsLabel])}>(no unique labels)</span>\n      </span>\n    );\n  }\n\n  return (\n    <span className={cx([styles.logsLabels])}>\n      {displayLabels.sort().map((label) => {\n        const value = labels[label];\n        if (!value) {\n          return;\n        }\n        const tooltip = `${label}: ${value}`;\n        return (\n          <span key={label} className={cx([styles.logsLabel])}>\n            <span className={cx([styles.logsLabelValue])} title={tooltip}>\n              {value}\n            </span>\n          </span>\n        );\n      })}\n    </span>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    logsLabels: css`\n      display: flex;\n      flex-wrap: wrap;\n      font-size: ${theme.typography.size.xs};\n    `,\n    logsLabel: css`\n      label: logs-label;\n      display: flex;\n      padding: 0 2px;\n      background-color: ${theme.colors.background.secondary};\n      border-radius: ${theme.shape.borderRadius(1)};\n      margin: 1px 4px 0 0;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n      overflow: hidden;\n    `,\n    logsLabelValue: css`\n      label: logs-label__value;\n      display: inline-block;\n      max-width: 20em;\n      text-overflow: ellipsis;\n      overflow: hidden;\n    `,\n  };\n};\n","import ansicolor from 'ansicolor';\nimport React, { PureComponent } from 'react';\nimport Highlighter from 'react-highlight-words';\n\nimport { findHighlightChunksInText, GrafanaTheme2 } from '@grafana/data';\n\nimport { withTheme2 } from '../../themes';\nimport { Themeable2 } from '../../types';\n\ninterface Style {\n  [key: string]: string;\n}\n\ninterface ParsedChunk {\n  style: Style;\n  text: string;\n}\n\nfunction convertCSSToStyle(theme: GrafanaTheme2, css: string): Style {\n  return css.split(/;\\s*/).reduce<Style>((accumulated, line) => {\n    // The ansicolor package returns this color if the chunk has the ANSI dim\n    // style (`\\e[2m`), but it is nearly unreadable in the dark theme, so we use\n    // GrafanaTheme2 instead to style it in a way that works across all themes.\n    if (line === 'color:rgba(0,0,0,0.5)') {\n      return { color: theme.colors.text.secondary };\n    }\n\n    const match = line.match(/([^:\\s]+)\\s*:\\s*(.+)/);\n\n    if (match && match[1] && match[2]) {\n      const key = match[1].replace(/-([a-z])/g, (_, character) => character.toUpperCase());\n      accumulated[key] = match[2];\n    }\n\n    return accumulated;\n  }, {});\n}\n\ninterface Props extends Themeable2 {\n  value: string;\n  highlight?: {\n    searchWords: string[];\n    highlightClassName: string;\n  };\n}\n\ninterface State {\n  chunks: ParsedChunk[];\n  prevValue: string;\n}\n\n/** @deprecated will be removed in the next major version */\nexport class UnThemedLogMessageAnsi extends PureComponent<Props, State> {\n  state: State = {\n    chunks: [],\n    prevValue: '',\n  };\n\n  static getDerivedStateFromProps(props: Props, state: State) {\n    if (props.value === state.prevValue) {\n      return null;\n    }\n\n    const parsed = ansicolor.parse(props.value);\n\n    return {\n      chunks: parsed.spans.map((span) => {\n        return span.css\n          ? {\n              style: convertCSSToStyle(props.theme, span.css),\n              text: span.text,\n            }\n          : { text: span.text };\n      }),\n      prevValue: props.value,\n    };\n  }\n\n  render() {\n    const { chunks } = this.state;\n\n    return chunks.map((chunk, index) => {\n      const chunkText = this.props.highlight?.searchWords ? (\n        <Highlighter\n          key={index}\n          textToHighlight={chunk.text}\n          searchWords={this.props.highlight.searchWords}\n          findChunks={findHighlightChunksInText}\n          highlightClassName={this.props.highlight.highlightClassName}\n        />\n      ) : (\n        chunk.text\n      );\n      return chunk.style ? (\n        <span key={index} style={chunk.style} data-testid=\"ansiLogLine\">\n          {chunkText}\n        </span>\n      ) : (\n        chunkText\n      );\n    });\n  }\n}\n\n/** @deprecated will be removed in the next major version */\nexport const LogMessageAnsi = withTheme2(UnThemedLogMessageAnsi);\nLogMessageAnsi.displayName = 'LogMessageAnsi';\n","import React from 'react';\n\nimport { Field, LinkModel } from '@grafana/data';\n\nimport { ButtonProps, Button } from '../Button';\n\ntype DataLinkButtonProps = {\n  link: LinkModel<Field>;\n  buttonProps?: ButtonProps;\n};\n\n/**\n * @internal\n */\nexport function DataLinkButton({ link, buttonProps }: DataLinkButtonProps) {\n  return (\n    <a\n      href={link.href}\n      target={link.target}\n      rel=\"noreferrer\"\n      onClick={\n        link.onClick\n          ? (event) => {\n              if (!(event.ctrlKey || event.metaKey || event.shiftKey) && link.onClick) {\n                event.preventDefault();\n                link.onClick(event);\n              }\n            }\n          : undefined\n      }\n    >\n      <Button icon=\"external-link-alt\" variant=\"primary\" size=\"sm\" {...buttonProps}>\n        {link.title}\n      </Button>\n    </a>\n  );\n}\n","import { css, cx } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes/ThemeContext';\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  logsStatsRow: css`\n    label: logs-stats-row;\n    margin: ${parseInt(theme.spacing(2), 10) / 1.75}px 0;\n  `,\n  logsStatsRowActive: css`\n    label: logs-stats-row--active;\n    color: ${theme.colors.primary.text};\n    position: relative;\n  `,\n  logsStatsRowLabel: css`\n    label: logs-stats-row__label;\n    display: flex;\n    margin-bottom: 1px;\n  `,\n  logsStatsRowValue: css`\n    label: logs-stats-row__value;\n    flex: 1;\n    text-overflow: ellipsis;\n    overflow: hidden;\n  `,\n  logsStatsRowCount: css`\n    label: logs-stats-row__count;\n    text-align: right;\n    margin-left: 0.5em;\n  `,\n  logsStatsRowPercent: css`\n    label: logs-stats-row__percent;\n    text-align: right;\n    margin-left: 0.5em;\n    width: 3em;\n  `,\n  logsStatsRowBar: css`\n    label: logs-stats-row__bar;\n    height: 4px;\n    overflow: hidden;\n    background: ${theme.colors.text.disabled};\n  `,\n  logsStatsRowInnerBar: css`\n    label: logs-stats-row__innerbar;\n    height: 4px;\n    overflow: hidden;\n    background: ${theme.colors.primary.main};\n  `,\n});\n\n/** @deprecated will be removed in the next major version */\nexport interface Props {\n  active?: boolean;\n  count: number;\n  proportion: number;\n  value?: string;\n}\n\n/** @deprecated will be removed in the next major version */\nexport const LogLabelStatsRow = ({ active, count, proportion, value }: Props) => {\n  const style = useStyles2(getStyles);\n  const percent = `${Math.round(proportion * 100)}%`;\n  const barStyle = { width: percent };\n  const className = active ? cx([style.logsStatsRow, style.logsStatsRowActive]) : cx([style.logsStatsRow]);\n\n  return (\n    <div className={className}>\n      <div className={cx([style.logsStatsRowLabel])}>\n        <div className={cx([style.logsStatsRowValue])} title={value}>\n          {value}\n        </div>\n        <div className={cx([style.logsStatsRowCount])}>{count}</div>\n        <div className={cx([style.logsStatsRowPercent])}>{percent}</div>\n      </div>\n      <div className={cx([style.logsStatsRowBar])}>\n        <div className={cx([style.logsStatsRowInnerBar])} style={barStyle} />\n      </div>\n    </div>\n  );\n};\n\nLogLabelStatsRow.displayName = 'LogLabelStatsRow';\n","import { css } from '@emotion/css';\nimport React, { PureComponent } from 'react';\n\nimport { LogLabelStatsModel, GrafanaTheme2 } from '@grafana/data';\n\nimport { stylesFactory } from '../../themes';\nimport { withTheme2 } from '../../themes/index';\nimport { Themeable2 } from '../../types/theme';\n\n//Components\nimport { LogLabelStatsRow } from './LogLabelStatsRow';\n\nconst STATS_ROW_LIMIT = 5;\n\nconst getStyles = stylesFactory((theme: GrafanaTheme2) => {\n  return {\n    logsStats: css`\n      label: logs-stats;\n      background: inherit;\n      color: ${theme.colors.text.primary};\n      word-break: break-all;\n      width: fit-content;\n      max-width: 100%;\n    `,\n    logsStatsHeader: css`\n      label: logs-stats__header;\n      border-bottom: 1px solid ${theme.colors.border.medium};\n      display: flex;\n    `,\n    logsStatsTitle: css`\n      label: logs-stats__title;\n      font-weight: ${theme.typography.fontWeightMedium};\n      padding-right: ${theme.spacing(2)};\n      display: inline-block;\n      white-space: nowrap;\n      text-overflow: ellipsis;\n      flex-grow: 1;\n    `,\n    logsStatsClose: css`\n      label: logs-stats__close;\n      cursor: pointer;\n    `,\n    logsStatsBody: css`\n      label: logs-stats__body;\n      padding: 5px 0;\n    `,\n  };\n});\n\ninterface Props extends Themeable2 {\n  stats: LogLabelStatsModel[];\n  label: string;\n  value: string;\n  rowCount: number;\n  isLabel?: boolean;\n}\n\nclass UnThemedLogLabelStats extends PureComponent<Props> {\n  render() {\n    const { label, rowCount, stats, value, theme, isLabel } = this.props;\n    const style = getStyles(theme);\n    const topRows = stats.slice(0, STATS_ROW_LIMIT);\n    let activeRow = topRows.find((row) => row.value === value);\n    let otherRows = stats.slice(STATS_ROW_LIMIT);\n    const insertActiveRow = !activeRow;\n\n    // Remove active row from other to show extra\n    if (insertActiveRow) {\n      activeRow = otherRows.find((row) => row.value === value);\n      otherRows = otherRows.filter((row) => row.value !== value);\n    }\n\n    const otherCount = otherRows.reduce((sum, row) => sum + row.count, 0);\n    const topCount = topRows.reduce((sum, row) => sum + row.count, 0);\n    const total = topCount + otherCount;\n    const otherProportion = otherCount / total;\n\n    return (\n      <div className={style.logsStats} data-testid=\"logLabelStats\">\n        <div className={style.logsStatsHeader}>\n          <div className={style.logsStatsTitle}>\n            {label}: {total} of {rowCount} rows have that {isLabel ? 'label' : 'field'}\n          </div>\n        </div>\n        <div className={style.logsStatsBody}>\n          {topRows.map((stat) => (\n            <LogLabelStatsRow key={stat.value} {...stat} active={stat.value === value} />\n          ))}\n          {insertActiveRow && activeRow && <LogLabelStatsRow key={activeRow.value} {...activeRow} active />}\n          {otherCount > 0 && (\n            <LogLabelStatsRow key=\"__OTHERS__\" count={otherCount} value=\"Other\" proportion={otherProportion} />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\n/** @deprecated will be removed in the next major version */\nexport const LogLabelStats = withTheme2(UnThemedLogLabelStats);\nLogLabelStats.displayName = 'LogLabelStats';\n","import { css } from '@emotion/css';\n\nimport { GrafanaTheme2, LogLevel } from '@grafana/data';\n\nimport { styleMixins } from '../../themes';\n\n/** @deprecated will be removed in the next major version */\nexport const getLogRowStyles = (theme: GrafanaTheme2, logLevel?: LogLevel) => {\n  let logColor = theme.isLight ? theme.v1.palette.gray5 : theme.v1.palette.gray2;\n  const hoverBgColor = styleMixins.hoverColor(theme.colors.background.secondary, theme);\n\n  switch (logLevel) {\n    case LogLevel.crit:\n    case LogLevel.critical:\n      logColor = '#705da0';\n      break;\n    case LogLevel.error:\n    case LogLevel.err:\n      logColor = '#e24d42';\n      break;\n    case LogLevel.warning:\n    case LogLevel.warn:\n      logColor = theme.colors.warning.main;\n      break;\n    case LogLevel.info:\n      logColor = '#7eb26d';\n      break;\n    case LogLevel.debug:\n      logColor = '#1f78c1';\n      break;\n    case LogLevel.trace:\n      logColor = '#6ed0e0';\n      break;\n  }\n\n  return {\n    logsRowMatchHighLight: css`\n      label: logs-row__match-highlight;\n      background: inherit;\n      padding: inherit;\n      color: ${theme.components.textHighlight.text}\n      background-color: ${theme.components.textHighlight};\n    `,\n    logsRowsTable: css`\n      label: logs-rows;\n      font-family: ${theme.typography.fontFamilyMonospace};\n      font-size: ${theme.typography.bodySmall.fontSize};\n      width: 100%;\n    `,\n    context: css`\n      label: context;\n      visibility: hidden;\n      white-space: nowrap;\n      position: relative;\n      margin-left: 10px;\n    `,\n    logsRow: css`\n      label: logs-row;\n      width: 100%;\n      cursor: pointer;\n      vertical-align: top;\n\n      &:hover {\n        .log-row-context {\n          visibility: visible;\n          z-index: 1;\n          text-decoration: underline;\n          &:hover {\n            color: ${theme.colors.warning.main};\n          }\n        }\n      }\n\n      td:last-child {\n        width: 100%;\n      }\n\n      > td {\n        position: relative;\n        padding-right: ${theme.spacing(1)};\n        border-top: 1px solid transparent;\n        border-bottom: 1px solid transparent;\n        height: 100%;\n      }\n\n      &:hover {\n        background: ${hoverBgColor};\n      }\n    `,\n    logsRowDuplicates: css`\n      label: logs-row__duplicates;\n      text-align: right;\n      width: 4em;\n      cursor: default;\n    `,\n    logsRowLevel: css`\n      label: logs-row__level;\n      max-width: 10px;\n      cursor: default;\n      &::after {\n        content: '';\n        display: block;\n        position: absolute;\n        top: 1px;\n        bottom: 1px;\n        width: 3px;\n        left: 4px;\n        background-color: ${logColor};\n      }\n    `,\n    logIconError: css`\n      color: ${theme.colors.warning.main};\n    `,\n    logsRowToggleDetails: css`\n      label: logs-row-toggle-details__level;\n      font-size: 9px;\n      padding-top: 5px;\n      max-width: 15px;\n    `,\n    logsRowLocalTime: css`\n      label: logs-row__localtime;\n      white-space: nowrap;\n    `,\n    logsRowLabels: css`\n      label: logs-row__labels;\n      white-space: nowrap;\n      max-width: 22em;\n\n      /* This is to make the labels vertical align */\n      > span {\n        margin-top: 0.75px;\n      }\n    `,\n    logsRowMessage: css`\n      label: logs-row__message;\n      white-space: pre-wrap;\n      word-break: break-all;\n    `,\n    //Log details specific CSS\n    logDetailsContainer: css`\n      label: logs-row-details-table;\n      border: 1px solid ${theme.colors.border.medium};\n      padding: 0 ${theme.spacing(1)} ${theme.spacing(1)};\n      border-radius: ${theme.shape.radius.default};\n      margin: 20px 8px 20px 16px;\n      cursor: default;\n    `,\n    logDetailsTable: css`\n      label: logs-row-details-table;\n      line-height: 18px;\n      width: 100%;\n      td:last-child {\n        width: 100%;\n      }\n    `,\n    logsDetailsIcon: css`\n      label: logs-row-details__icon;\n      position: relative;\n      color: ${theme.v1.palette.gray3};\n      padding-top: 6px;\n      padding-left: 6px;\n    `,\n    logDetailsLabel: css`\n      label: logs-row-details__label;\n      max-width: 30em;\n      min-width: 20em;\n      padding: 0 ${theme.spacing(1)};\n      overflow-wrap: break-word;\n    `,\n    logDetailsHeading: css`\n      label: logs-row-details__heading;\n      font-weight: ${theme.typography.fontWeightBold};\n      padding: ${theme.spacing(1)} 0 ${theme.spacing(0.5)};\n    `,\n    logDetailsValue: css`\n      label: logs-row-details__row;\n      position: relative;\n      vertical-align: middle;\n      cursor: default;\n\n      &:hover {\n        background-color: ${hoverBgColor};\n      }\n    `,\n  };\n};\n","import { css, cx } from '@emotion/css';\nimport React, { PureComponent } from 'react';\n\nimport { Field, LinkModel, LogLabelStatsModel, GrafanaTheme2 } from '@grafana/data';\n\nimport { withTheme2 } from '../../themes/index';\nimport { Themeable2 } from '../../types/theme';\nimport { ClipboardButton } from '../ClipboardButton/ClipboardButton';\nimport { DataLinkButton } from '../DataLinks/DataLinkButton';\nimport { IconButton } from '../IconButton/IconButton';\n\nimport { LogLabelStats } from './LogLabelStats';\nimport { getLogRowStyles } from './getLogRowStyles';\n\n/** @deprecated will be removed in the next major version */\nexport interface Props extends Themeable2 {\n  parsedValue: string;\n  parsedKey: string;\n  wrapLogMessage?: boolean;\n  isLabel?: boolean;\n  onClickFilterLabel?: (key: string, value: string) => void;\n  onClickFilterOutLabel?: (key: string, value: string) => void;\n  links?: Array<LinkModel<Field>>;\n  getStats: () => LogLabelStatsModel[] | null;\n  showDetectedFields?: string[];\n  onClickShowDetectedField?: (key: string) => void;\n  onClickHideDetectedField?: (key: string) => void;\n}\n\ninterface State {\n  showFieldsStats: boolean;\n  fieldCount: number;\n  fieldStats: LogLabelStatsModel[] | null;\n  mouseOver: boolean;\n}\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    noHoverBackground: css`\n      label: noHoverBackground;\n      :hover {\n        background-color: transparent;\n      }\n    `,\n    hoverCursor: css`\n      label: hoverCursor;\n      cursor: pointer;\n    `,\n    wordBreakAll: css`\n      label: wordBreakAll;\n      word-break: break-all;\n    `,\n    showingField: css`\n      color: ${theme.colors.primary.text};\n    `,\n    hoverValueCopy: css`\n      margin: ${theme.spacing(0, 0, 0, 1.2)};\n      position: absolute;\n      top: 0px;\n      justify-content: center;\n      border-radius: ${theme.shape.radius.circle};\n      width: 26px;\n      height: 26px;\n    `,\n    wrapLine: css`\n      label: wrapLine;\n      white-space: pre-wrap;\n    `,\n  };\n};\nclass UnThemedLogDetailsRow extends PureComponent<Props, State> {\n  state: State = {\n    showFieldsStats: false,\n    fieldCount: 0,\n    fieldStats: null,\n    mouseOver: false,\n  };\n\n  showField = () => {\n    const { onClickShowDetectedField, parsedKey } = this.props;\n    if (onClickShowDetectedField) {\n      onClickShowDetectedField(parsedKey);\n    }\n  };\n\n  hideField = () => {\n    const { onClickHideDetectedField, parsedKey } = this.props;\n    if (onClickHideDetectedField) {\n      onClickHideDetectedField(parsedKey);\n    }\n  };\n\n  filterLabel = () => {\n    const { onClickFilterLabel, parsedKey, parsedValue } = this.props;\n    if (onClickFilterLabel) {\n      onClickFilterLabel(parsedKey, parsedValue);\n    }\n  };\n\n  filterOutLabel = () => {\n    const { onClickFilterOutLabel, parsedKey, parsedValue } = this.props;\n    if (onClickFilterOutLabel) {\n      onClickFilterOutLabel(parsedKey, parsedValue);\n    }\n  };\n\n  showStats = () => {\n    const { showFieldsStats } = this.state;\n    if (!showFieldsStats) {\n      const fieldStats = this.props.getStats();\n      const fieldCount = fieldStats ? fieldStats.reduce((sum, stat) => sum + stat.count, 0) : 0;\n      this.setState({ fieldStats, fieldCount });\n    }\n    this.toggleFieldsStats();\n  };\n\n  toggleFieldsStats() {\n    this.setState((state) => {\n      return {\n        showFieldsStats: !state.showFieldsStats,\n      };\n    });\n  }\n\n  hoverValueCopy() {\n    const mouseOver = !this.state.mouseOver;\n    this.setState({ mouseOver });\n  }\n\n  render() {\n    const {\n      theme,\n      parsedKey,\n      parsedValue,\n      isLabel,\n      links,\n      showDetectedFields,\n      wrapLogMessage,\n      onClickShowDetectedField,\n      onClickHideDetectedField,\n      onClickFilterLabel,\n      onClickFilterOutLabel,\n    } = this.props;\n    const { showFieldsStats, fieldStats, fieldCount, mouseOver } = this.state;\n    const styles = getStyles(theme);\n    const style = getLogRowStyles(theme);\n\n    const hasDetectedFieldsFunctionality = onClickShowDetectedField && onClickHideDetectedField;\n    const hasFilteringFunctionality = onClickFilterLabel && onClickFilterOutLabel;\n\n    const toggleFieldButton =\n      !isLabel && showDetectedFields && showDetectedFields.includes(parsedKey) ? (\n        <IconButton name=\"eye\" className={styles.showingField} title=\"Hide this field\" onClick={this.hideField} />\n      ) : (\n        <IconButton name=\"eye\" title=\"Show this field instead of the message\" onClick={this.showField} />\n      );\n\n    return (\n      <tr className={cx(style.logDetailsValue, { [styles.noHoverBackground]: showFieldsStats })}>\n        {/* Action buttons - show stats/filter results */}\n        <td className={style.logsDetailsIcon}>\n          <IconButton name=\"signal\" title={'Ad-hoc statistics'} onClick={this.showStats} />\n        </td>\n\n        {hasFilteringFunctionality && isLabel && (\n          <>\n            <td className={style.logsDetailsIcon}>\n              <IconButton name=\"search-plus\" title=\"Filter for value\" onClick={this.filterLabel} />\n            </td>\n            <td className={style.logsDetailsIcon}>\n              <IconButton name=\"search-minus\" title=\"Filter out value\" onClick={this.filterOutLabel} />\n            </td>\n          </>\n        )}\n\n        {hasDetectedFieldsFunctionality && !isLabel && (\n          <td className={style.logsDetailsIcon} colSpan={2}>\n            {toggleFieldButton}\n          </td>\n        )}\n\n        {/* Key - value columns */}\n        <td className={style.logDetailsLabel}>{parsedKey}</td>\n        <td\n          className={cx(styles.wordBreakAll, wrapLogMessage && styles.wrapLine)}\n          onMouseEnter={this.hoverValueCopy.bind(this)}\n          onMouseLeave={this.hoverValueCopy.bind(this)}\n        >\n          {parsedValue}\n          {mouseOver && (\n            <ClipboardButton\n              getText={() => parsedValue}\n              title=\"Copy value to clipboard\"\n              fill=\"text\"\n              variant=\"secondary\"\n              icon=\"copy\"\n              size=\"sm\"\n              className={styles.hoverValueCopy}\n            />\n          )}\n          {links?.map((link) => (\n            <span key={link.title}>\n              &nbsp;\n              <DataLinkButton link={link} />\n            </span>\n          ))}\n          {showFieldsStats && (\n            <LogLabelStats\n              stats={fieldStats!}\n              label={parsedKey}\n              value={parsedValue}\n              rowCount={fieldCount}\n              isLabel={isLabel}\n            />\n          )}\n        </td>\n      </tr>\n    );\n  }\n}\n\n/** @deprecated will be removed in the next major version */\nexport const LogDetailsRow = withTheme2(UnThemedLogDetailsRow);\nLogDetailsRow.displayName = 'LogDetailsRow';\n","import { css, cx } from '@emotion/css';\nimport React, { useRef, useState, useLayoutEffect, useEffect } from 'react';\n\nimport { GrafanaTheme2, DataQueryError, LogRowModel, textUtil } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes/ThemeContext';\nimport { Alert } from '../Alert/Alert';\nimport { ClickOutsideWrapper } from '../ClickOutsideWrapper/ClickOutsideWrapper';\nimport { CustomScrollbar } from '../CustomScrollbar/CustomScrollbar';\nimport { List } from '../List/List';\n\nimport { LogMessageAnsi } from './LogMessageAnsi';\nimport { LogRowContextRows, LogRowContextQueryErrors, HasMoreContextRows } from './LogRowContextProvider';\n\ninterface LogRowContextProps {\n  row: LogRowModel;\n  context: LogRowContextRows;\n  wrapLogMessage: boolean;\n  errors?: LogRowContextQueryErrors;\n  hasMoreContextRows?: HasMoreContextRows;\n  onOutsideClick: () => void;\n  onLoadMoreContext: () => void;\n}\n\nconst getLogRowContextStyles = (theme: GrafanaTheme2, wrapLogMessage?: boolean) => {\n  /**\n   * This is workaround for displaying uncropped context when we have unwrapping log messages.\n   * We are using margins to correctly position context. Because non-wrapped logs have always 1 line of log\n   * and 1 line of Show/Hide context switch. Therefore correct position can be reliably achieved by margins.\n   * We also adjust width to 75%.\n   */\n\n  const afterContext = wrapLogMessage\n    ? css`\n        top: -250px;\n      `\n    : css`\n        margin-top: -250px;\n        width: 75%;\n      `;\n\n  const beforeContext = wrapLogMessage\n    ? css`\n        top: 100%;\n      `\n    : css`\n        margin-top: 40px;\n        width: 75%;\n      `;\n  return {\n    commonStyles: css`\n      position: absolute;\n      height: 250px;\n      z-index: ${theme.zIndex.dropdown};\n      overflow: hidden;\n      background: ${theme.colors.background.primary};\n      box-shadow: 0 0 10px ${theme.v1.palette.black};\n      border: 1px solid ${theme.colors.background.secondary};\n      border-radius: ${theme.shape.borderRadius()};\n      width: 100%;\n    `,\n    header: css`\n      height: 30px;\n      padding: 0 10px;\n      display: flex;\n      align-items: center;\n      background: ${theme.colors.background.secondary};\n    `,\n    logs: css`\n      height: 220px;\n      padding: 10px;\n    `,\n    afterContext,\n    beforeContext,\n  };\n};\n\ninterface LogRowContextGroupHeaderProps {\n  row: LogRowModel;\n  rows: Array<string | DataQueryError>;\n  onLoadMoreContext: () => void;\n  shouldScrollToBottom?: boolean;\n  canLoadMoreRows?: boolean;\n}\ninterface LogRowContextGroupProps extends LogRowContextGroupHeaderProps {\n  rows: Array<string | DataQueryError>;\n  className?: string;\n  error?: string;\n}\n\nconst LogRowContextGroupHeader = ({ row, rows, onLoadMoreContext, canLoadMoreRows }: LogRowContextGroupHeaderProps) => {\n  const { header } = useStyles2(getLogRowContextStyles);\n\n  return (\n    <div className={header}>\n      <span\n        className={css`\n          opacity: 0.6;\n        `}\n      >\n        Found {rows.length} rows.\n      </span>\n      {(rows.length >= 10 || (rows.length > 10 && rows.length % 10 !== 0)) && canLoadMoreRows && (\n        <span\n          className={css`\n            margin-left: 10px;\n            &:hover {\n              text-decoration: underline;\n              cursor: pointer;\n            }\n          `}\n          onClick={onLoadMoreContext}\n        >\n          Load 10 more\n        </span>\n      )}\n    </div>\n  );\n};\n\n/** @deprecated will be removed in the next major version */\nexport const LogRowContextGroup = ({\n  row,\n  rows,\n  error,\n  className,\n  shouldScrollToBottom,\n  canLoadMoreRows,\n  onLoadMoreContext,\n}: LogRowContextGroupProps) => {\n  const { commonStyles, logs } = useStyles2(getLogRowContextStyles);\n  const [scrollTop, setScrollTop] = useState(0);\n  const listContainerRef = useRef<HTMLDivElement>(null);\n\n  useLayoutEffect(() => {\n    // We want to scroll to bottom only when we receive first 10 log lines\n    const shouldScrollRows = rows.length > 0 && rows.length <= 10;\n    if (shouldScrollToBottom && shouldScrollRows && listContainerRef.current) {\n      setScrollTop(listContainerRef.current.offsetHeight);\n    }\n  }, [shouldScrollToBottom, rows]);\n\n  const headerProps = {\n    row,\n    rows,\n    onLoadMoreContext,\n    canLoadMoreRows,\n  };\n\n  return (\n    <div className={cx(commonStyles, className)}>\n      {/* When displaying \"after\" context */}\n      {shouldScrollToBottom && !error && <LogRowContextGroupHeader {...headerProps} />}\n      <div className={logs}>\n        <CustomScrollbar autoHide scrollTop={scrollTop} autoHeightMin={'210px'}>\n          <div ref={listContainerRef}>\n            {!error && (\n              <List\n                items={rows}\n                renderItem={(item) => {\n                  return (\n                    <div\n                      className={css`\n                        padding: 5px 0;\n                      `}\n                    >\n                      {typeof item === 'string' && textUtil.hasAnsiCodes(item) ? <LogMessageAnsi value={item} /> : item}\n                    </div>\n                  );\n                }}\n              />\n            )}\n            {error && <Alert title={error} />}\n          </div>\n        </CustomScrollbar>\n      </div>\n      {/* When displaying \"before\" context */}\n      {!shouldScrollToBottom && !error && <LogRowContextGroupHeader {...headerProps} />}\n    </div>\n  );\n};\n\n/** @deprecated will be removed in the next major version */\nexport const LogRowContext = ({\n  row,\n  context,\n  errors,\n  onOutsideClick,\n  onLoadMoreContext,\n  hasMoreContextRows,\n  wrapLogMessage,\n}: LogRowContextProps) => {\n  useEffect(() => {\n    const handleEscKeyDown = (e: KeyboardEvent): void => {\n      if (e.keyCode === 27) {\n        onOutsideClick();\n      }\n    };\n    document.addEventListener('keydown', handleEscKeyDown, false);\n    return () => {\n      document.removeEventListener('keydown', handleEscKeyDown, false);\n    };\n  }, [onOutsideClick]);\n  const { afterContext, beforeContext } = useStyles2((theme) => getLogRowContextStyles(theme, wrapLogMessage));\n\n  return (\n    <ClickOutsideWrapper onClick={onOutsideClick}>\n      {/* e.stopPropagation is necessary so the log details doesn't open when clicked on log line in context\n       * and/or when context log line is being highlighted */}\n      <div onClick={(e) => e.stopPropagation()}>\n        {context.after && (\n          <LogRowContextGroup\n            rows={context.after}\n            error={errors && errors.after}\n            row={row}\n            className={afterContext}\n            shouldScrollToBottom\n            canLoadMoreRows={hasMoreContextRows ? hasMoreContextRows.after : false}\n            onLoadMoreContext={onLoadMoreContext}\n          />\n        )}\n\n        {context.before && (\n          <LogRowContextGroup\n            onLoadMoreContext={onLoadMoreContext}\n            canLoadMoreRows={hasMoreContextRows ? hasMoreContextRows.before : false}\n            row={row}\n            rows={context.before}\n            error={errors && errors.before}\n            className={beforeContext}\n          />\n        )}\n      </div>\n    </ClickOutsideWrapper>\n  );\n};\n","import { css, cx } from '@emotion/css';\nimport memoizeOne from 'memoize-one';\nimport React, { PureComponent } from 'react';\nimport Highlighter from 'react-highlight-words';\nimport tinycolor from 'tinycolor2';\n\nimport { LogRowModel, findHighlightChunksInText, GrafanaTheme2 } from '@grafana/data';\n\nimport { withTheme2 } from '../../themes/index';\nimport { Themeable2 } from '../../types/theme';\nimport { IconButton } from '../IconButton/IconButton';\nimport { Tooltip } from '../Tooltip/Tooltip';\n\nimport { LogMessageAnsi } from './LogMessageAnsi';\nimport { LogRowContext } from './LogRowContext';\nimport { LogRowContextQueryErrors, HasMoreContextRows, LogRowContextRows } from './LogRowContextProvider';\nimport { getLogRowStyles } from './getLogRowStyles';\n\n/** @deprecated will be removed in the next major version */\nexport const MAX_CHARACTERS = 100000;\n\ninterface Props extends Themeable2 {\n  row: LogRowModel;\n  hasMoreContextRows?: HasMoreContextRows;\n  contextIsOpen: boolean;\n  wrapLogMessage: boolean;\n  prettifyLogMessage: boolean;\n  errors?: LogRowContextQueryErrors;\n  context?: LogRowContextRows;\n  showContextToggle?: (row?: LogRowModel) => boolean;\n  getRows: () => LogRowModel[];\n  onToggleContext: () => void;\n  updateLimit?: () => void;\n}\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  const outlineColor = tinycolor(theme.components.dashboard.background).setAlpha(0.7).toRgbString();\n\n  return {\n    positionRelative: css`\n      label: positionRelative;\n      position: relative;\n    `,\n    rowWithContext: css`\n      label: rowWithContext;\n      z-index: 1;\n      outline: 9999px solid ${outlineColor};\n    `,\n    horizontalScroll: css`\n      label: verticalScroll;\n      white-space: pre;\n    `,\n    contextNewline: css`\n      display: block;\n      margin-left: 0px;\n    `,\n    contextButton: css`\n      display: flex;\n      flex-wrap: nowrap;\n      flex-direction: row;\n      align-content: flex-end;\n      justify-content: space-evenly;\n      align-items: center;\n      position: absolute;\n      right: -8px;\n      top: 0;\n      bottom: auto;\n      width: 80px;\n      height: 36px;\n      background: ${theme.colors.background.primary};\n      box-shadow: ${theme.shadows.z3};\n      padding: ${theme.spacing(0, 0, 0, 0.5)};\n      z-index: 100;\n    `,\n  };\n};\n\nfunction renderLogMessage(\n  hasAnsi: boolean,\n  entry: string,\n  highlights: string[] | undefined,\n  highlightClassName: string\n) {\n  const needsHighlighter =\n    highlights && highlights.length > 0 && highlights[0] && highlights[0].length > 0 && entry.length < MAX_CHARACTERS;\n  const searchWords = highlights ?? [];\n  if (hasAnsi) {\n    const highlight = needsHighlighter ? { searchWords, highlightClassName } : undefined;\n    return <LogMessageAnsi value={entry} highlight={highlight} />;\n  } else if (needsHighlighter) {\n    return (\n      <Highlighter\n        textToHighlight={entry}\n        searchWords={searchWords}\n        findChunks={findHighlightChunksInText}\n        highlightClassName={highlightClassName}\n      />\n    );\n  } else {\n    return entry;\n  }\n}\n\nconst restructureLog = memoizeOne((line: string, prettifyLogMessage: boolean): string => {\n  if (prettifyLogMessage) {\n    try {\n      return JSON.stringify(JSON.parse(line), undefined, 2);\n    } catch (error) {\n      return line;\n    }\n  }\n  return line;\n});\n\nclass UnThemedLogRowMessage extends PureComponent<Props> {\n  onContextToggle = (e: React.SyntheticEvent<HTMLElement>) => {\n    e.stopPropagation();\n    this.props.onToggleContext();\n  };\n\n  render() {\n    const {\n      row,\n      theme,\n      errors,\n      hasMoreContextRows,\n      updateLimit,\n      context,\n      contextIsOpen,\n      showContextToggle,\n      wrapLogMessage,\n      prettifyLogMessage,\n      onToggleContext,\n    } = this.props;\n\n    const style = getLogRowStyles(theme, row.logLevel);\n    const { hasAnsi, raw } = row;\n    const restructuredEntry = restructureLog(raw, prettifyLogMessage);\n    const styles = getStyles(theme);\n\n    return (\n      // When context is open, the position has to be NOT relative.\n      // Setting the postion as inline-style to overwrite the more sepecific style definition from `style.logsRowMessage`.\n      <td style={contextIsOpen ? { position: 'unset' } : undefined} className={style.logsRowMessage}>\n        <div\n          className={cx({ [styles.positionRelative]: wrapLogMessage }, { [styles.horizontalScroll]: !wrapLogMessage })}\n        >\n          {contextIsOpen && context && (\n            <LogRowContext\n              row={row}\n              context={context}\n              errors={errors}\n              wrapLogMessage={wrapLogMessage}\n              hasMoreContextRows={hasMoreContextRows}\n              onOutsideClick={onToggleContext}\n              onLoadMoreContext={() => {\n                if (updateLimit) {\n                  updateLimit();\n                }\n              }}\n            />\n          )}\n          <span className={cx(styles.positionRelative, { [styles.rowWithContext]: contextIsOpen })}>\n            {renderLogMessage(hasAnsi, restructuredEntry, row.searchWords, style.logsRowMatchHighLight)}\n          </span>\n          {!contextIsOpen && showContextToggle?.(row) && (\n            <span\n              className={cx('log-row-context', style.context, styles.contextButton)}\n              onClick={(e) => e.stopPropagation()}\n            >\n              <Tooltip placement=\"top\" content={'Show context'}>\n                <IconButton size=\"md\" name=\"gf-show-context\" onClick={this.onContextToggle} />\n              </Tooltip>\n              <Tooltip placement=\"top\" content={'Copy'}>\n                <IconButton\n                  size=\"md\"\n                  name=\"copy\"\n                  onClick={() => navigator.clipboard.writeText(JSON.stringify(restructuredEntry))}\n                />\n              </Tooltip>\n            </span>\n          )}\n        </div>\n      </td>\n    );\n  }\n}\n\n/** @deprecated will be removed in the next major version */\nexport const LogRowMessage = withTheme2(UnThemedLogRowMessage);\nLogRowMessage.displayName = 'LogRowMessage';\n","import memoizeOne from 'memoize-one';\n\nimport { Field, FieldType, getParser, LinkModel, LogRowModel } from '@grafana/data';\n\nimport { MAX_CHARACTERS } from './LogRowMessage';\n\nconst memoizedGetParser = memoizeOne(getParser);\n\ntype FieldDef = {\n  key: string;\n  value: string;\n  links?: Array<LinkModel<Field>>;\n  fieldIndex?: number;\n};\n\n/**\n * Returns all fields for log row which consists of fields we parse from the message itself and additional fields\n * found in the dataframe (they may contain links).\n *\n * @deprecated will be removed in the next major version\n */\nexport const getAllFields = memoizeOne(\n  (row: LogRowModel, getFieldLinks?: (field: Field, rowIndex: number) => Array<LinkModel<Field>>) => {\n    const logMessageFields = parseMessage(row.entry);\n    const dataframeFields = getDataframeFields(row, getFieldLinks);\n    const fieldsMap = [...dataframeFields, ...logMessageFields].reduce((acc, field) => {\n      // Strip enclosing quotes for hashing. When values are parsed from log line the quotes are kept, but if same\n      // value is in the dataFrame it will be without the quotes. We treat them here as the same value.\n      // We need to handle this scenario:\n      // - we use derived-fields in Loki\n      // - we name the derived field the same as the parsed-field-name\n      // - the same field will appear twice\n      //   - in the fields coming from `logMessageFields`\n      //   - in the fields coming from `dataframeFields`\n      // - but, in the fields coming from `logMessageFields`, there might be doublequotes around the value\n      // - we want to \"merge\" data from both sources, so we remove quotes from the beginning and end\n      const value = field.value.replace(/(^\")|(\"$)/g, '');\n      const fieldHash = `${field.key}=${value}`;\n      if (acc[fieldHash]) {\n        acc[fieldHash].links = [...(acc[fieldHash].links || []), ...(field.links || [])];\n      } else {\n        acc[fieldHash] = field;\n      }\n      return acc;\n    }, {} as { [key: string]: FieldDef });\n\n    const allFields = Object.values(fieldsMap);\n    allFields.sort(sortFieldsLinkFirst);\n\n    return allFields;\n  }\n);\n\nconst parseMessage = memoizeOne((rowEntry): FieldDef[] => {\n  if (rowEntry.length > MAX_CHARACTERS) {\n    return [];\n  }\n  const parser = memoizedGetParser(rowEntry);\n  if (!parser) {\n    return [];\n  }\n  // Use parser to highlight detected fields\n  const detectedFields = parser.getFields(rowEntry);\n  const fields = detectedFields.map((field) => {\n    const key = parser.getLabelFromField(field);\n    const value = parser.getValueFromField(field);\n    return { key, value };\n  });\n\n  return fields;\n});\n\n// creates fields from the dataframe-fields, adding data-links, when field.config.links exists\nconst getDataframeFields = memoizeOne(\n  (row: LogRowModel, getFieldLinks?: (field: Field, rowIndex: number) => Array<LinkModel<Field>>): FieldDef[] => {\n    return row.dataFrame.fields\n      .map((field, index) => ({ ...field, index }))\n      .filter((field, index) => !shouldRemoveField(field, index, row))\n      .map((field) => {\n        const links = getFieldLinks ? getFieldLinks(field, row.rowIndex) : [];\n        return {\n          key: field.name,\n          value: field.values.get(row.rowIndex).toString(),\n          links: links,\n          fieldIndex: field.index,\n        };\n      });\n  }\n);\n\nfunction sortFieldsLinkFirst(fieldA: FieldDef, fieldB: FieldDef) {\n  if (fieldA.links?.length && !fieldB.links?.length) {\n    return -1;\n  }\n  if (!fieldA.links?.length && fieldB.links?.length) {\n    return 1;\n  }\n  return fieldA.key > fieldB.key ? 1 : fieldA.key < fieldB.key ? -1 : 0;\n}\n\nfunction shouldRemoveField(field: Field, index: number, row: LogRowModel) {\n  // Remove field if it is:\n  // \"labels\" field that is in Loki used to store all labels\n  if (field.name === 'labels' && field.type === FieldType.other) {\n    return true;\n  }\n  // \"id\" field which we use for react key\n  if (field.name === 'id') {\n    return true;\n  }\n  // entry field which we are showing as the log message\n  if (row.entryFieldIndex === index) {\n    return true;\n  }\n  // hidden field\n  if (field.config.custom?.hidden) {\n    return true;\n  }\n  // field that has empty value (we want to keep 0 or empty string)\n  if (field.values.get(row.rowIndex) == null) {\n    return true;\n  }\n  return false;\n}\n","import { css, cx } from '@emotion/css';\nimport memoizeOne from 'memoize-one';\nimport React, { PureComponent } from 'react';\n\nimport {\n  calculateFieldStats,\n  calculateLogsLabelStats,\n  calculateStats,\n  Field,\n  getParser,\n  LinkModel,\n  LogRowModel,\n  GrafanaTheme2,\n} from '@grafana/data';\n\nimport { withTheme2 } from '../../themes/index';\nimport { Themeable2 } from '../../types/theme';\nimport { Icon } from '../Icon/Icon';\nimport { Tooltip } from '../Tooltip/Tooltip';\n\nimport { LogDetailsRow } from './LogDetailsRow';\nimport { getLogRowStyles } from './getLogRowStyles';\nimport { getAllFields } from './logParser';\n\n/** @deprecated will be removed in the next major version */\nexport interface Props extends Themeable2 {\n  row: LogRowModel;\n  showDuplicates: boolean;\n  getRows: () => LogRowModel[];\n  wrapLogMessage: boolean;\n  className?: string;\n  hasError?: boolean;\n\n  onClickFilterLabel?: (key: string, value: string) => void;\n  onClickFilterOutLabel?: (key: string, value: string) => void;\n  getFieldLinks?: (field: Field, rowIndex: number) => Array<LinkModel<Field>>;\n  showDetectedFields?: string[];\n  onClickShowDetectedField?: (key: string) => void;\n  onClickHideDetectedField?: (key: string) => void;\n}\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    logsRowLevelDetails: css`\n      label: logs-row__level_details;\n      &::after {\n        top: -3px;\n      }\n    `,\n    logDetails: css`\n      label: logDetailsDefaultCursor;\n      cursor: default;\n\n      &:hover {\n        background-color: ${theme.colors.background.primary};\n      }\n    `,\n  };\n};\n\nclass UnThemedLogDetails extends PureComponent<Props> {\n  getParser = memoizeOne(getParser);\n\n  getStatsForDetectedField = (key: string) => {\n    const matcher = this.getParser(this.props.row.entry)!.buildMatcher(key);\n    return calculateFieldStats(this.props.getRows(), matcher);\n  };\n\n  render() {\n    const {\n      row,\n      theme,\n      hasError,\n      onClickFilterOutLabel,\n      onClickFilterLabel,\n      getRows,\n      showDuplicates,\n      className,\n      onClickShowDetectedField,\n      onClickHideDetectedField,\n      showDetectedFields,\n      getFieldLinks,\n      wrapLogMessage,\n    } = this.props;\n    const style = getLogRowStyles(theme, row.logLevel);\n    const styles = getStyles(theme);\n    const labels = row.labels ? row.labels : {};\n    const labelsAvailable = Object.keys(labels).length > 0;\n    const fields = getAllFields(row, getFieldLinks);\n    const detectedFieldsAvailable = fields && fields.length > 0;\n    // If logs with error, we are not showing the level color\n    const levelClassName = cx(!hasError && [style.logsRowLevel, styles.logsRowLevelDetails]);\n\n    return (\n      <tr className={cx(className, styles.logDetails)}>\n        {showDuplicates && <td />}\n        <td className={levelClassName} aria-label=\"Log level\" />\n        <td colSpan={4}>\n          <div className={style.logDetailsContainer}>\n            <table className={style.logDetailsTable}>\n              <tbody>\n                {labelsAvailable && (\n                  <tr>\n                    <td colSpan={5} className={style.logDetailsHeading} aria-label=\"Log labels\">\n                      Log labels\n                    </td>\n                  </tr>\n                )}\n                {Object.keys(labels)\n                  .sort()\n                  .map((key) => {\n                    const value = labels[key];\n                    return (\n                      <LogDetailsRow\n                        key={`${key}=${value}`}\n                        parsedKey={key}\n                        parsedValue={value}\n                        isLabel={true}\n                        getStats={() => calculateLogsLabelStats(getRows(), key)}\n                        onClickFilterOutLabel={onClickFilterOutLabel}\n                        onClickFilterLabel={onClickFilterLabel}\n                      />\n                    );\n                  })}\n\n                {detectedFieldsAvailable && (\n                  <tr>\n                    <td colSpan={5} className={style.logDetailsHeading} aria-label=\"Detected fields\">\n                      Detected fields\n                      <Tooltip content=\"Fields that are parsed from log message and detected by Grafana.\">\n                        <Icon\n                          name=\"question-circle\"\n                          size=\"xs\"\n                          className={css`\n                            margin-left: 4px;\n                          `}\n                        />\n                      </Tooltip>\n                    </td>\n                  </tr>\n                )}\n                {fields.sort().map((field) => {\n                  const { key, value, links, fieldIndex } = field;\n                  return (\n                    <LogDetailsRow\n                      key={`${key}=${value}`}\n                      parsedKey={key}\n                      parsedValue={value}\n                      links={links}\n                      onClickShowDetectedField={onClickShowDetectedField}\n                      onClickHideDetectedField={onClickHideDetectedField}\n                      getStats={() =>\n                        fieldIndex === undefined\n                          ? this.getStatsForDetectedField(key)\n                          : calculateStats(row.dataFrame.fields[fieldIndex].values.toArray())\n                      }\n                      showDetectedFields={showDetectedFields}\n                      wrapLogMessage={wrapLogMessage}\n                    />\n                  );\n                })}\n                {!detectedFieldsAvailable && !labelsAvailable && (\n                  <tr>\n                    <td colSpan={5} aria-label=\"No details\">\n                      No details available\n                    </td>\n                  </tr>\n                )}\n              </tbody>\n            </table>\n          </div>\n        </td>\n      </tr>\n    );\n  }\n}\n\n/** @deprecated will be removed in the next major version */\nexport const LogDetails = withTheme2(UnThemedLogDetails);\nLogDetails.displayName = 'LogDetails';\n","import { useState, useEffect } from 'react';\nimport useAsync from 'react-use/lib/useAsync';\n\nimport {\n  LogRowModel,\n  toDataFrame,\n  Field,\n  FieldCache,\n  LogsSortOrder,\n  DataQueryResponse,\n  DataQueryError,\n} from '@grafana/data';\n\n/** @deprecated will be removed in the next major version */\nexport interface RowContextOptions {\n  direction?: 'BACKWARD' | 'FORWARD';\n  limit?: number;\n}\n\n/** @deprecated will be removed in the next major version */\nexport interface LogRowContextRows {\n  before?: string[];\n  after?: string[];\n}\n\n/** @deprecated will be removed in the next major version */\nexport interface LogRowContextQueryErrors {\n  before?: string;\n  after?: string;\n}\n\n/** @deprecated will be removed in the next major version */\nexport interface HasMoreContextRows {\n  before: boolean;\n  after: boolean;\n}\n\ninterface ResultType {\n  data: string[][];\n  errors: string[];\n}\n\ninterface LogRowContextProviderProps {\n  row: LogRowModel;\n  logsSortOrder?: LogsSortOrder | null;\n  getRowContext: (row: LogRowModel, options?: RowContextOptions) => Promise<DataQueryResponse>;\n  children: (props: {\n    result: LogRowContextRows;\n    errors: LogRowContextQueryErrors;\n    hasMoreContextRows: HasMoreContextRows;\n    updateLimit: () => void;\n    limit: number;\n  }) => JSX.Element;\n}\n\n/** @deprecated will be removed in the next major version */\nexport const getRowContexts = async (\n  getRowContext: (row: LogRowModel, options?: RowContextOptions) => Promise<DataQueryResponse>,\n  row: LogRowModel,\n  limit: number,\n  logsSortOrder?: LogsSortOrder | null\n) => {\n  const promises = [\n    getRowContext(row, {\n      limit,\n    }),\n    getRowContext(row, {\n      // The start time is inclusive so we will get the one row we are using as context entry\n      limit: limit + 1,\n      direction: 'FORWARD',\n    }),\n  ];\n\n  const results: Array<DataQueryResponse | DataQueryError> = await Promise.all(promises.map((p) => p.catch((e) => e)));\n\n  const data = results.map((result) => {\n    const dataResult: DataQueryResponse = result as DataQueryResponse;\n    if (!dataResult.data) {\n      return [];\n    }\n\n    const data = [];\n    for (let index = 0; index < dataResult.data.length; index++) {\n      const dataFrame = toDataFrame(dataResult.data[index]);\n      const fieldCache = new FieldCache(dataFrame);\n      const timestampField: Field<string> = fieldCache.getFieldByName('ts')!;\n      const idField: Field<string> | undefined = fieldCache.getFieldByName('id');\n\n      for (let fieldIndex = 0; fieldIndex < timestampField.values.length; fieldIndex++) {\n        // TODO: this filtering is datasource dependant so it will make sense to move it there so the API is\n        //  to return correct list of lines handling inclusive ranges or how to filter the correct line on the\n        //  datasource.\n\n        // Filter out the row that is the one used as a focal point for the context as we will get it in one of the\n        // requests.\n        if (idField) {\n          // For Loki this means we filter only the one row. Issue is we could have other rows logged at the same\n          // ns which came before but they come in the response that search for logs after. This means right now\n          // we will show those as if they came after. This is not strictly correct but seems better than losing them\n          // and making this correct would mean quite a bit of complexity to shuffle things around and messing up\n          //counts.\n          if (idField.values.get(fieldIndex) === row.uid) {\n            continue;\n          }\n        } else {\n          // Fallback to timestamp. This should not happen right now as this feature is implemented only for loki\n          // and that has ID. Later this branch could be used in other DS but mind that this could also filter out\n          // logs which were logged in the same timestamp and that can be a problem depending on the precision.\n          if (parseInt(timestampField.values.get(fieldIndex), 10) === row.timeEpochMs) {\n            continue;\n          }\n        }\n\n        const lineField: Field<string> = dataFrame.fields.filter((field) => field.name === 'line')[0];\n        const line = lineField.values.get(fieldIndex); // assuming that both fields have same length\n\n        data.push(line);\n      }\n    }\n\n    return logsSortOrder === LogsSortOrder.Ascending ? data.reverse() : data;\n  });\n\n  const errors = results.map((result) => {\n    const errorResult: DataQueryError = result as DataQueryError;\n    if (!errorResult.message) {\n      return '';\n    }\n\n    return errorResult.message;\n  });\n\n  return {\n    data: logsSortOrder === LogsSortOrder.Ascending ? data.reverse() : data,\n    errors: logsSortOrder === LogsSortOrder.Ascending ? errors.reverse() : errors,\n  };\n};\n\n/** @deprecated will be removed in the next major version */\nexport const LogRowContextProvider = ({ getRowContext, row, children, logsSortOrder }: LogRowContextProviderProps) => {\n  // React Hook that creates a number state value called limit to component state and a setter function called setLimit\n  // The initial value for limit is 10\n  // Used for the number of rows to retrieve from backend from a specific point in time\n  const [limit, setLimit] = useState(10);\n\n  // React Hook that creates an object state value called result to component state and a setter function called setResult\n  // The initial value for result is null\n  // Used for sorting the response from backend\n  const [result, setResult] = useState<ResultType | null>(null);\n\n  // React Hook that creates an object state value called hasMoreContextRows to component state and a setter function called setHasMoreContextRows\n  // The initial value for hasMoreContextRows is {before: true, after: true}\n  // Used for indicating in UI if there are more rows to load in a given direction\n  const [hasMoreContextRows, setHasMoreContextRows] = useState({\n    before: true,\n    after: true,\n  });\n\n  // React Hook that resolves two promises every time the limit prop changes\n  // First promise fetches limit number of rows backwards in time from a specific point in time\n  // Second promise fetches limit number of rows forwards in time from a specific point in time\n  const { value } = useAsync(async () => {\n    return await getRowContexts(getRowContext, row, limit, logsSortOrder); // Moved it to a separate function for debugging purposes\n  }, [limit]);\n\n  // React Hook that performs a side effect every time the value (from useAsync hook) prop changes\n  // The side effect changes the result state with the response from the useAsync hook\n  // The side effect changes the hasMoreContextRows state if there are more context rows before or after the current result\n  useEffect(() => {\n    if (value) {\n      setResult((currentResult) => {\n        let hasMoreLogsBefore = true,\n          hasMoreLogsAfter = true;\n\n        if (currentResult) {\n          const currentResultBefore = currentResult.data[0];\n          const currentResultAfter = currentResult.data[1];\n          const valueBefore = value.data[0];\n          const valueAfter = value.data[1];\n\n          // checks if there are more log rows in a given direction\n          // if after fetching additional rows the length of result is the same,\n          // we can assume there are no logs in that direction within a given time range\n          if (!valueBefore || currentResultBefore.length === valueBefore.length) {\n            hasMoreLogsBefore = false;\n          }\n\n          if (!valueAfter || currentResultAfter.length === valueAfter.length) {\n            hasMoreLogsAfter = false;\n          }\n        }\n\n        setHasMoreContextRows({\n          before: hasMoreLogsBefore,\n          after: hasMoreLogsAfter,\n        });\n\n        return value;\n      });\n    }\n  }, [value]);\n\n  return children({\n    result: {\n      before: result ? result.data[0] : [],\n      after: result ? result.data[1] : [],\n    },\n    errors: {\n      before: result ? result.errors[0] : undefined,\n      after: result ? result.errors[1] : undefined,\n    },\n    hasMoreContextRows,\n    updateLimit: () => setLimit(limit + 10),\n    limit,\n  });\n};\n","import { css } from '@emotion/css';\nimport React, { PureComponent } from 'react';\n\nimport { LogRowModel, Field, LinkModel } from '@grafana/data';\n\nimport { withTheme2 } from '../../themes/index';\nimport { Themeable2 } from '../../types/theme';\n\nimport { getAllFields } from './logParser';\n\n/** @deprecated will be removed in the next major version */\nexport interface Props extends Themeable2 {\n  row: LogRowModel;\n  showDetectedFields: string[];\n  wrapLogMessage: boolean;\n  getFieldLinks?: (field: Field, rowIndex: number) => Array<LinkModel<Field>>;\n}\n\nclass UnThemedLogRowMessageDetectedFields extends PureComponent<Props> {\n  render() {\n    const { row, showDetectedFields, getFieldLinks, wrapLogMessage } = this.props;\n    const fields = getAllFields(row, getFieldLinks);\n    const wrapClassName = wrapLogMessage\n      ? ''\n      : css`\n          white-space: nowrap;\n        `;\n\n    const line = showDetectedFields\n      .map((parsedKey) => {\n        const field = fields.find((field) => {\n          const { key } = field;\n          return key === parsedKey;\n        });\n\n        if (field) {\n          return `${parsedKey}=${field.value}`;\n        }\n\n        return null;\n      })\n      .filter((s) => s !== null)\n      .join(' ');\n\n    return <td className={wrapClassName}>{line}</td>;\n  }\n}\n\n/** @deprecated will be removed in the next major version */\nexport const LogRowMessageDetectedFields = withTheme2(UnThemedLogRowMessageDetectedFields);\nLogRowMessageDetectedFields.displayName = 'LogRowMessageDetectedFields';\n","import { cx, css } from '@emotion/css';\nimport React, { PureComponent } from 'react';\n\nimport {\n  Field,\n  LinkModel,\n  LogRowModel,\n  LogsSortOrder,\n  TimeZone,\n  DataQueryResponse,\n  dateTimeFormat,\n  checkLogsError,\n  escapeUnescapedString,\n  GrafanaTheme2,\n} from '@grafana/data';\n\nimport { styleMixins, withTheme2 } from '../../themes/index';\nimport { Themeable2 } from '../../types/theme';\nimport { Icon } from '../Icon/Icon';\nimport { Tooltip } from '../Tooltip/Tooltip';\n\nimport { LogDetails } from './LogDetails';\nimport { LogLabels } from './LogLabels';\nimport {\n  LogRowContextRows,\n  LogRowContextQueryErrors,\n  HasMoreContextRows,\n  LogRowContextProvider,\n  RowContextOptions,\n} from './LogRowContextProvider';\nimport { LogRowMessage } from './LogRowMessage';\nimport { LogRowMessageDetectedFields } from './LogRowMessageDetectedFields';\nimport { getLogRowStyles } from './getLogRowStyles';\n\n//Components\n\ninterface Props extends Themeable2 {\n  row: LogRowModel;\n  showDuplicates: boolean;\n  showLabels: boolean;\n  showTime: boolean;\n  wrapLogMessage: boolean;\n  prettifyLogMessage: boolean;\n  timeZone: TimeZone;\n  enableLogDetails: boolean;\n  logsSortOrder?: LogsSortOrder | null;\n  forceEscape?: boolean;\n  showDetectedFields?: string[];\n  getRows: () => LogRowModel[];\n  onClickFilterLabel?: (key: string, value: string) => void;\n  onClickFilterOutLabel?: (key: string, value: string) => void;\n  onContextClick?: () => void;\n  getRowContext: (row: LogRowModel, options?: RowContextOptions) => Promise<DataQueryResponse>;\n  getFieldLinks?: (field: Field, rowIndex: number) => Array<LinkModel<Field>>;\n  showContextToggle?: (row?: LogRowModel) => boolean;\n  onClickShowDetectedField?: (key: string) => void;\n  onClickHideDetectedField?: (key: string) => void;\n  onLogRowHover?: (row?: LogRowModel) => void;\n}\n\ninterface State {\n  showContext: boolean;\n  showDetails: boolean;\n}\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    topVerticalAlign: css`\n      label: topVerticalAlign;\n      margin-top: -${theme.spacing(0.9)};\n      margin-left: -${theme.spacing(0.25)};\n    `,\n    detailsOpen: css`\n      &:hover {\n        background-color: ${styleMixins.hoverColor(theme.colors.background.primary, theme)};\n      }\n    `,\n    errorLogRow: css`\n      label: erroredLogRow;\n      color: ${theme.colors.text.secondary};\n    `,\n  };\n};\n/**\n * Renders a log line.\n *\n * When user hovers over it for a certain time, it lazily parses the log line.\n * Once a parser is found, it will determine fields, that will be highlighted.\n * When the user requests stats for a field, they will be calculated and rendered below the row.\n */\nclass UnThemedLogRow extends PureComponent<Props, State> {\n  state: State = {\n    showContext: false,\n    showDetails: false,\n  };\n\n  toggleContext = () => {\n    this.setState((state) => {\n      return {\n        showContext: !state.showContext,\n      };\n    });\n  };\n\n  toggleDetails = () => {\n    if (!this.props.enableLogDetails) {\n      return;\n    }\n    this.setState((state) => {\n      return {\n        showDetails: !state.showDetails,\n      };\n    });\n  };\n\n  renderTimeStamp(epochMs: number) {\n    return dateTimeFormat(epochMs, {\n      timeZone: this.props.timeZone,\n    });\n  }\n\n  renderLogRow(\n    context?: LogRowContextRows,\n    errors?: LogRowContextQueryErrors,\n    hasMoreContextRows?: HasMoreContextRows,\n    updateLimit?: () => void\n  ) {\n    const {\n      getRows,\n      onClickFilterLabel,\n      onClickFilterOutLabel,\n      onClickShowDetectedField,\n      onClickHideDetectedField,\n      enableLogDetails,\n      row,\n      showDuplicates,\n      showContextToggle,\n      showLabels,\n      showTime,\n      showDetectedFields,\n      wrapLogMessage,\n      prettifyLogMessage,\n      theme,\n      getFieldLinks,\n      forceEscape,\n      onLogRowHover,\n    } = this.props;\n    const { showDetails, showContext } = this.state;\n    const style = getLogRowStyles(theme, row.logLevel);\n    const styles = getStyles(theme);\n    const { errorMessage, hasError } = checkLogsError(row);\n    const logRowBackground = cx(style.logsRow, {\n      [styles.errorLogRow]: hasError,\n    });\n\n    const processedRow =\n      row.hasUnescapedContent && forceEscape\n        ? { ...row, entry: escapeUnescapedString(row.entry), raw: escapeUnescapedString(row.raw) }\n        : row;\n\n    return (\n      <>\n        <tr\n          className={logRowBackground}\n          onClick={this.toggleDetails}\n          onMouseEnter={() => {\n            onLogRowHover && onLogRowHover(row);\n          }}\n          onMouseLeave={() => {\n            onLogRowHover && onLogRowHover(undefined);\n          }}\n        >\n          {showDuplicates && (\n            <td className={style.logsRowDuplicates}>\n              {processedRow.duplicates && processedRow.duplicates > 0 ? `${processedRow.duplicates + 1}x` : null}\n            </td>\n          )}\n          <td className={cx({ [style.logsRowLevel]: !hasError })}>\n            {hasError && (\n              <Tooltip content={`Error: ${errorMessage}`} placement=\"right\" theme=\"error\">\n                <Icon className={style.logIconError} name=\"exclamation-triangle\" size=\"xs\" />\n              </Tooltip>\n            )}\n          </td>\n          {enableLogDetails && (\n            <td title={showDetails ? 'Hide log details' : 'See log details'} className={style.logsRowToggleDetails}>\n              <Icon className={styles.topVerticalAlign} name={showDetails ? 'angle-down' : 'angle-right'} />\n            </td>\n          )}\n          {showTime && <td className={style.logsRowLocalTime}>{this.renderTimeStamp(row.timeEpochMs)}</td>}\n          {showLabels && processedRow.uniqueLabels && (\n            <td className={style.logsRowLabels}>\n              <LogLabels labels={processedRow.uniqueLabels} />\n            </td>\n          )}\n          {showDetectedFields && showDetectedFields.length > 0 ? (\n            <LogRowMessageDetectedFields\n              row={processedRow}\n              showDetectedFields={showDetectedFields!}\n              getFieldLinks={getFieldLinks}\n              wrapLogMessage={wrapLogMessage}\n            />\n          ) : (\n            <LogRowMessage\n              row={processedRow}\n              getRows={getRows}\n              errors={errors}\n              hasMoreContextRows={hasMoreContextRows}\n              updateLimit={updateLimit}\n              context={context}\n              contextIsOpen={showContext}\n              showContextToggle={showContextToggle}\n              wrapLogMessage={wrapLogMessage}\n              prettifyLogMessage={prettifyLogMessage}\n              onToggleContext={this.toggleContext}\n            />\n          )}\n        </tr>\n        {this.state.showDetails && (\n          <LogDetails\n            className={logRowBackground}\n            showDuplicates={showDuplicates}\n            getFieldLinks={getFieldLinks}\n            onClickFilterLabel={onClickFilterLabel}\n            onClickFilterOutLabel={onClickFilterOutLabel}\n            onClickShowDetectedField={onClickShowDetectedField}\n            onClickHideDetectedField={onClickHideDetectedField}\n            getRows={getRows}\n            row={processedRow}\n            wrapLogMessage={wrapLogMessage}\n            hasError={hasError}\n            showDetectedFields={showDetectedFields}\n          />\n        )}\n      </>\n    );\n  }\n\n  render() {\n    const { showContext } = this.state;\n    const { logsSortOrder, row, getRowContext } = this.props;\n\n    if (showContext) {\n      return (\n        <>\n          <LogRowContextProvider row={row} getRowContext={getRowContext} logsSortOrder={logsSortOrder}>\n            {({ result, errors, hasMoreContextRows, updateLimit }) => {\n              return <>{this.renderLogRow(result, errors, hasMoreContextRows, updateLimit)}</>;\n            }}\n          </LogRowContextProvider>\n        </>\n      );\n    }\n\n    return this.renderLogRow();\n  }\n}\n\n/** @deprecated will be removed in the next major version */\nexport const LogRow = withTheme2(UnThemedLogRow);\nLogRow.displayName = 'LogRow';\n","import memoizeOne from 'memoize-one';\nimport React, { PureComponent } from 'react';\n\nimport { TimeZone, LogsDedupStrategy, LogRowModel, Field, LinkModel, LogsSortOrder, sortLogRows } from '@grafana/data';\n\nimport { withTheme2 } from '../../themes/index';\nimport { Themeable2 } from '../../types/theme';\n\nimport { LogRow } from './LogRow';\nimport { RowContextOptions } from './LogRowContextProvider';\nimport { getLogRowStyles } from './getLogRowStyles';\n\n/** @deprecated will be removed in the next major version */\nexport const PREVIEW_LIMIT = 100;\n\n/** @deprecated will be removed in the next major version */\nexport interface Props extends Themeable2 {\n  logRows?: LogRowModel[];\n  deduplicatedRows?: LogRowModel[];\n  dedupStrategy: LogsDedupStrategy;\n  showLabels: boolean;\n  showTime: boolean;\n  wrapLogMessage: boolean;\n  prettifyLogMessage: boolean;\n  timeZone: TimeZone;\n  enableLogDetails: boolean;\n  logsSortOrder?: LogsSortOrder | null;\n  previewLimit?: number;\n  forceEscape?: boolean;\n  showDetectedFields?: string[];\n  showContextToggle?: (row?: LogRowModel) => boolean;\n  onClickFilterLabel?: (key: string, value: string) => void;\n  onClickFilterOutLabel?: (key: string, value: string) => void;\n  getRowContext?: (row: LogRowModel, options?: RowContextOptions) => Promise<any>;\n  getFieldLinks?: (field: Field, rowIndex: number) => Array<LinkModel<Field>>;\n  onClickShowDetectedField?: (key: string) => void;\n  onClickHideDetectedField?: (key: string) => void;\n  onLogRowHover?: (row?: LogRowModel) => void;\n}\n\ninterface State {\n  renderAll: boolean;\n}\n\nclass UnThemedLogRows extends PureComponent<Props, State> {\n  renderAllTimer: number | null = null;\n\n  static defaultProps = {\n    previewLimit: PREVIEW_LIMIT,\n  };\n\n  state: State = {\n    renderAll: false,\n  };\n\n  componentDidMount() {\n    // Staged rendering\n    const { logRows, previewLimit } = this.props;\n    const rowCount = logRows ? logRows.length : 0;\n    // Render all right away if not too far over the limit\n    const renderAll = rowCount <= previewLimit! * 2;\n    if (renderAll) {\n      this.setState({ renderAll });\n    } else {\n      this.renderAllTimer = window.setTimeout(() => this.setState({ renderAll: true }), 2000);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.renderAllTimer) {\n      clearTimeout(this.renderAllTimer);\n    }\n  }\n\n  makeGetRows = memoizeOne((orderedRows: LogRowModel[]) => {\n    return () => orderedRows;\n  });\n\n  sortLogs = memoizeOne((logRows: LogRowModel[], logsSortOrder: LogsSortOrder): LogRowModel[] =>\n    sortLogRows(logRows, logsSortOrder)\n  );\n\n  render() {\n    const {\n      dedupStrategy,\n      showContextToggle,\n      showLabels,\n      showTime,\n      wrapLogMessage,\n      prettifyLogMessage,\n      logRows,\n      deduplicatedRows,\n      timeZone,\n      onClickFilterLabel,\n      onClickFilterOutLabel,\n      theme,\n      enableLogDetails,\n      previewLimit,\n      getFieldLinks,\n      logsSortOrder,\n      showDetectedFields,\n      onClickShowDetectedField,\n      onClickHideDetectedField,\n      forceEscape,\n      onLogRowHover,\n    } = this.props;\n    const { renderAll } = this.state;\n    const { logsRowsTable } = getLogRowStyles(theme);\n    const dedupedRows = deduplicatedRows ? deduplicatedRows : logRows;\n    const hasData = logRows && logRows.length > 0;\n    const dedupCount = dedupedRows\n      ? dedupedRows.reduce((sum, row) => (row.duplicates ? sum + row.duplicates : sum), 0)\n      : 0;\n    const showDuplicates = dedupStrategy !== LogsDedupStrategy.none && dedupCount > 0;\n    // Staged rendering\n    const processedRows = dedupedRows ? dedupedRows : [];\n    const orderedRows = logsSortOrder ? this.sortLogs(processedRows, logsSortOrder) : processedRows;\n    const firstRows = orderedRows.slice(0, previewLimit!);\n    const lastRows = orderedRows.slice(previewLimit!, orderedRows.length);\n\n    // React profiler becomes unusable if we pass all rows to all rows and their labels, using getter instead\n    const getRows = this.makeGetRows(orderedRows);\n    const getRowContext = this.props.getRowContext ? this.props.getRowContext : () => Promise.resolve([]);\n\n    return (\n      <table className={logsRowsTable}>\n        <tbody>\n          {hasData &&\n            firstRows.map((row, index) => (\n              <LogRow\n                key={row.uid}\n                getRows={getRows}\n                getRowContext={getRowContext}\n                row={row}\n                showContextToggle={showContextToggle}\n                showDuplicates={showDuplicates}\n                showLabels={showLabels}\n                showTime={showTime}\n                showDetectedFields={showDetectedFields}\n                wrapLogMessage={wrapLogMessage}\n                prettifyLogMessage={prettifyLogMessage}\n                timeZone={timeZone}\n                enableLogDetails={enableLogDetails}\n                onClickFilterLabel={onClickFilterLabel}\n                onClickFilterOutLabel={onClickFilterOutLabel}\n                onClickShowDetectedField={onClickShowDetectedField}\n                onClickHideDetectedField={onClickHideDetectedField}\n                getFieldLinks={getFieldLinks}\n                logsSortOrder={logsSortOrder}\n                forceEscape={forceEscape}\n                onLogRowHover={onLogRowHover}\n              />\n            ))}\n          {hasData &&\n            renderAll &&\n            lastRows.map((row, index) => (\n              <LogRow\n                key={row.uid}\n                getRows={getRows}\n                getRowContext={getRowContext}\n                row={row}\n                showContextToggle={showContextToggle}\n                showDuplicates={showDuplicates}\n                showLabels={showLabels}\n                showTime={showTime}\n                showDetectedFields={showDetectedFields}\n                wrapLogMessage={wrapLogMessage}\n                prettifyLogMessage={prettifyLogMessage}\n                timeZone={timeZone}\n                enableLogDetails={enableLogDetails}\n                onClickFilterLabel={onClickFilterLabel}\n                onClickFilterOutLabel={onClickFilterOutLabel}\n                onClickShowDetectedField={onClickShowDetectedField}\n                onClickHideDetectedField={onClickHideDetectedField}\n                getFieldLinks={getFieldLinks}\n                logsSortOrder={logsSortOrder}\n                forceEscape={forceEscape}\n                onLogRowHover={onLogRowHover}\n              />\n            ))}\n          {hasData && !renderAll && (\n            <tr>\n              <td colSpan={5}>Rendering {orderedRows.length - previewLimit!} rows...</td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n    );\n  }\n}\n\n/** @deprecated will be removed in the next major version */\nexport const LogRows = withTheme2(UnThemedLogRows);\nLogRows.displayName = 'LogsRows';\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { Field, GrafanaTheme2, LinkModel } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\nimport { Icon } from '../Icon/Icon';\n\nimport { DataLinkButton } from './DataLinkButton';\n\ntype Props = {\n  links: Array<LinkModel<Field>>;\n};\n\n/**\n * @internal\n */\nexport function FieldLinkList({ links }: Props) {\n  const styles = useStyles2(getStyles);\n\n  if (links.length === 1) {\n    return <DataLinkButton link={links[0]} />;\n  }\n\n  const externalLinks = links.filter((link) => link.target === '_blank');\n  const internalLinks = links.filter((link) => link.target === '_self');\n\n  return (\n    <>\n      {internalLinks.map((link, i) => {\n        return <DataLinkButton key={i} link={link} />;\n      })}\n      <div className={styles.wrapper}>\n        <p className={styles.externalLinksHeading}>External links</p>\n        {externalLinks.map((link, i) => (\n          <a key={i} href={link.href} target={link.target} className={styles.externalLink}>\n            <Icon name=\"external-link-alt\" />\n            {link.title}\n          </a>\n        ))}\n      </div>\n    </>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  wrapper: css`\n    flex-basis: 150px;\n    width: 100px;\n    margin-top: ${theme.spacing(1)};\n  `,\n  externalLinksHeading: css`\n    color: ${theme.colors.text.secondary};\n    font-weight: ${theme.typography.fontWeightRegular};\n    font-size: ${theme.typography.size.sm};\n    margin: 0;\n  `,\n  externalLink: css`\n    color: ${theme.colors.text.link};\n    font-weight: ${theme.typography.fontWeightRegular};\n    display: block;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n\n    &:hover {\n      text-decoration: underline;\n    }\n\n    div {\n      margin-right: ${theme.spacing(1)};\n    }\n  `,\n});\n","import { css, cx } from '@emotion/css';\nimport React from 'react';\n\nimport { stylesFactory } from '../../themes';\n\nexport interface Props {\n  className?: string;\n}\n\nexport const FullWidthButtonContainer = ({ className, children }: React.PropsWithChildren<Props>) => {\n  const styles = getStyles();\n\n  return <div className={cx(styles, className)}>{children}</div>;\n};\n\nconst getStyles = stylesFactory(() => {\n  return css`\n    display: flex;\n\n    button {\n      flex-grow: 1;\n      justify-content: center;\n    }\n\n    > * {\n      flex-grow: 1;\n    }\n\n    label {\n      flex-grow: 1;\n      text-align: center;\n    }\n  `;\n});\n","import { cloneDeep, isNumber, omit } from 'lodash';\n\nimport {\n  convertOldAngularValueMappings,\n  FieldColorModeId,\n  FieldConfig,\n  fieldReducers,\n  PanelModel,\n  ReduceDataOptions,\n  ReducerID,\n  sortThresholds,\n  Threshold,\n  ThresholdsConfig,\n  ThresholdsMode,\n  validateFieldConfig,\n  ValueMapping,\n  VizOrientation,\n} from '@grafana/data';\nimport { OptionsWithTextFormatting } from '@grafana/schema';\n\nexport interface SingleStatBaseOptions extends OptionsWithTextFormatting {\n  reduceOptions: ReduceDataOptions;\n  orientation: VizOrientation;\n}\n\nconst optionsToKeep = ['reduceOptions', 'orientation'];\n\nexport function sharedSingleStatPanelChangedHandler(\n  panel: PanelModel<Partial<SingleStatBaseOptions>> | any,\n  prevPluginId: string,\n  prevOptions: any\n) {\n  let options = panel.options;\n\n  panel.fieldConfig = panel.fieldConfig || {\n    defaults: {},\n    overrides: [],\n  };\n\n  // Migrating from angular singlestat\n  if (prevPluginId === 'singlestat' && prevOptions.angular) {\n    return migrateFromAngularSinglestat(panel, prevOptions);\n  }\n\n  for (const k of optionsToKeep) {\n    if (prevOptions.hasOwnProperty(k)) {\n      options[k] = cloneDeep(prevOptions[k]);\n    }\n  }\n\n  return options;\n}\n\nfunction migrateFromAngularSinglestat(panel: PanelModel<Partial<SingleStatBaseOptions>> | any, prevOptions: any) {\n  const prevPanel = prevOptions.angular;\n  const reducer = fieldReducers.getIfExists(prevPanel.valueName);\n  const options = {\n    reduceOptions: {\n      calcs: [reducer ? reducer.id : ReducerID.mean],\n    },\n    orientation: VizOrientation.Horizontal,\n  } as any;\n\n  const defaults: FieldConfig = {};\n\n  if (prevPanel.format) {\n    defaults.unit = prevPanel.format;\n  }\n\n  if (prevPanel.tableColumn) {\n    options.reduceOptions.fields = `/^${prevPanel.tableColumn}$/`;\n  }\n\n  if (prevPanel.nullPointMode) {\n    defaults.nullValueMode = prevPanel.nullPointMode;\n  }\n\n  if (prevPanel.nullText) {\n    defaults.noValue = prevPanel.nullText;\n  }\n\n  if (prevPanel.decimals || prevPanel.decimals === 0) {\n    defaults.decimals = prevPanel.decimals;\n  }\n\n  // Convert thresholds and color values\n  if (prevPanel.thresholds && prevPanel.colors) {\n    const levels = prevPanel.thresholds.split(',').map((strVale: string) => {\n      return Number(strVale.trim());\n    });\n\n    // One more color than threshold\n    const thresholds: Threshold[] = [];\n    for (const color of prevPanel.colors) {\n      const idx = thresholds.length - 1;\n      if (idx >= 0) {\n        thresholds.push({ value: levels[idx], color });\n      } else {\n        thresholds.push({ value: -Infinity, color });\n      }\n    }\n\n    defaults.thresholds = {\n      mode: ThresholdsMode.Absolute,\n      steps: thresholds,\n    };\n  }\n\n  // Convert value mappings\n  const mappings = convertOldAngularValueMappings(prevPanel, defaults.thresholds);\n  if (mappings && mappings.length) {\n    defaults.mappings = mappings;\n  }\n\n  if (prevPanel.gauge && prevPanel.gauge.show) {\n    defaults.min = prevPanel.gauge.minValue;\n    defaults.max = prevPanel.gauge.maxValue;\n  }\n\n  panel.fieldConfig.defaults = defaults;\n\n  return options;\n}\n\nexport function sharedSingleStatMigrationHandler(panel: PanelModel<SingleStatBaseOptions>): SingleStatBaseOptions {\n  if (!panel.options) {\n    // This happens on the first load or when migrating from angular\n    return {} as any;\n  }\n\n  const previousVersion = parseFloat(panel.pluginVersion || '6.1');\n  let options = panel.options as any;\n\n  if (previousVersion < 6.2) {\n    options = migrateFromValueOptions(options);\n  }\n\n  if (previousVersion < 6.3) {\n    options = moveThresholdsAndMappingsToField(options);\n  }\n\n  const { fieldOptions } = options;\n\n  if (previousVersion < 6.6 && fieldOptions) {\n    // discard the old `override` options and enter an empty array\n    if (fieldOptions && fieldOptions.override) {\n      const { override, ...rest } = options.fieldOptions;\n      options = {\n        ...options,\n        fieldOptions: {\n          ...rest,\n          overrides: [],\n        },\n      };\n    }\n\n    // Move thresholds to steps\n    let thresholds = fieldOptions?.defaults?.thresholds;\n    if (thresholds) {\n      delete fieldOptions.defaults.thresholds;\n    } else {\n      thresholds = fieldOptions?.thresholds;\n      delete fieldOptions.thresholds;\n    }\n\n    if (thresholds) {\n      fieldOptions.defaults.thresholds = {\n        mode: ThresholdsMode.Absolute,\n        steps: thresholds,\n      };\n    }\n\n    // Migrate color from simple string to a mode\n    const { defaults } = fieldOptions;\n    if (defaults.color && typeof defaults.color === 'string') {\n      defaults.color = {\n        mode: FieldColorModeId.Fixed,\n        fixedColor: defaults.color,\n      };\n    }\n\n    validateFieldConfig(defaults);\n  }\n\n  if (previousVersion < 7.0) {\n    panel.fieldConfig = panel.fieldConfig || { defaults: {}, overrides: [] };\n    panel.fieldConfig = {\n      defaults:\n        fieldOptions && fieldOptions.defaults\n          ? { ...panel.fieldConfig.defaults, ...fieldOptions.defaults }\n          : panel.fieldConfig.defaults,\n      overrides:\n        fieldOptions && fieldOptions.overrides\n          ? [...panel.fieldConfig.overrides, ...fieldOptions.overrides]\n          : panel.fieldConfig.overrides,\n    };\n\n    if (fieldOptions) {\n      options.reduceOptions = {\n        values: fieldOptions.values,\n        limit: fieldOptions.limit,\n        calcs: fieldOptions.calcs,\n      };\n    }\n\n    delete options.fieldOptions;\n  }\n\n  if (previousVersion < 7.1) {\n    // move title to displayName\n    const oldTitle = (panel.fieldConfig.defaults as any).title;\n    if (oldTitle !== undefined && oldTitle !== null) {\n      panel.fieldConfig.defaults.displayName = oldTitle;\n      delete (panel.fieldConfig.defaults as any).title;\n    }\n  }\n\n  if (previousVersion < 8.0) {\n    // Explicit min/max was removed for percent/percentunit in 8.0\n    const config = panel.fieldConfig?.defaults;\n    let unit = config?.unit;\n    if (unit === 'percent') {\n      if (!isNumber(config.min)) {\n        config.min = 0;\n      }\n      if (!isNumber(config.max)) {\n        config.max = 100;\n      }\n    } else if (unit === 'percentunit') {\n      if (!isNumber(config.min)) {\n        config.min = 0;\n      }\n      if (!isNumber(config.max)) {\n        config.max = 1;\n      }\n    }\n  }\n\n  return options as SingleStatBaseOptions;\n}\n\nexport function moveThresholdsAndMappingsToField(old: any) {\n  const { fieldOptions } = old;\n\n  if (!fieldOptions) {\n    return old;\n  }\n\n  const { mappings, ...rest } = old.fieldOptions;\n\n  let thresholds: ThresholdsConfig | undefined = undefined;\n  if (old.thresholds) {\n    thresholds = {\n      mode: ThresholdsMode.Absolute,\n      steps: migrateOldThresholds(old.thresholds)!,\n    };\n  }\n\n  return {\n    ...old,\n    fieldOptions: {\n      ...rest,\n      defaults: {\n        ...fieldOptions.defaults,\n        mappings,\n        thresholds,\n      },\n    },\n  };\n}\n\n/*\n * Moves valueMappings and thresholds from root to new fieldOptions object\n * Renames valueOptions to to defaults and moves it under fieldOptions\n */\nexport function migrateFromValueOptions(old: any) {\n  const { valueOptions } = old;\n  if (!valueOptions) {\n    return old;\n  }\n\n  const fieldOptions: any = {};\n  const fieldDefaults: any = {};\n\n  fieldOptions.mappings = old.valueMappings;\n  fieldOptions.thresholds = old.thresholds;\n  fieldOptions.defaults = fieldDefaults;\n\n  fieldDefaults.unit = valueOptions.unit;\n  fieldDefaults.decimals = valueOptions.decimals;\n\n  // Make sure the stats have a valid name\n  if (valueOptions.stat) {\n    const reducer = fieldReducers.get(valueOptions.stat);\n    if (reducer) {\n      fieldOptions.calcs = [reducer.id];\n    }\n  }\n\n  fieldDefaults.min = old.minValue;\n  fieldDefaults.max = old.maxValue;\n\n  const newOptions = {\n    ...old,\n    fieldOptions,\n  };\n\n  return omit(newOptions, 'valueMappings', 'thresholds', 'valueOptions', 'minValue', 'maxValue');\n}\n\nexport function migrateOldThresholds(thresholds?: any[]): Threshold[] | undefined {\n  if (!thresholds || !thresholds.length) {\n    return undefined;\n  }\n  const copy = thresholds.map((t) => {\n    return {\n      // Drops 'index'\n      value: t.value === null ? -Infinity : t.value,\n      color: t.color,\n    };\n  });\n  sortThresholds(copy);\n  copy[0].value = -Infinity;\n  return copy;\n}\n\n/**\n * @deprecated use convertOldAngularValueMappings instead\n * Convert the angular single stat mapping to new react style\n */\nexport function convertOldAngularValueMapping(panel: any): ValueMapping[] {\n  return convertOldAngularValueMappings(panel);\n}\n","import { css, cx } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes/ThemeContext';\n\nexport interface CallToActionCardProps {\n  message?: string | JSX.Element;\n  callToActionElement: JSX.Element;\n  footer?: string | JSX.Element;\n  className?: string;\n}\n\nexport const CallToActionCard = ({ message, callToActionElement, footer, className }: CallToActionCardProps) => {\n  const css = useStyles2(getStyles);\n\n  return (\n    <div className={cx([css.wrapper, className])}>\n      {message && <div className={css.message}>{message}</div>}\n      {callToActionElement}\n      {footer && <div className={css.footer}>{footer}</div>}\n    </div>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  wrapper: css`\n    label: call-to-action-card;\n    padding: ${theme.spacing(3)};\n    background: ${theme.colors.background.secondary};\n    border-radius: ${theme.shape.radius.default};\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    flex-grow: 1;\n  `,\n  message: css`\n    margin-bottom: ${theme.spacing(3)};\n    font-style: italic;\n  `,\n  footer: css`\n    margin-top: ${theme.spacing(3)}};\n  `,\n});\n","import { css, cx } from '@emotion/css';\nimport { uniqueId } from 'lodash';\nimport React, { HTMLProps, useRef } from 'react';\n\nimport { GrafanaTheme2, deprecationWarning } from '@grafana/data';\n\nimport { stylesFactory, useTheme2 } from '../../themes';\nimport { getFocusStyles, getMouseFocusStyles } from '../../themes/mixins';\n\nexport interface Props extends Omit<HTMLProps<HTMLInputElement>, 'value'> {\n  value?: boolean;\n  /** Make switch's background and border transparent */\n  transparent?: boolean;\n}\n\nexport const Switch = React.forwardRef<HTMLInputElement, Props>(\n  ({ value, checked, onChange, id, label, disabled, ...inputProps }, ref) => {\n    if (checked) {\n      deprecationWarning('Switch', 'checked prop', 'value');\n    }\n\n    const theme = useTheme2();\n    const styles = getSwitchStyles(theme);\n    const switchIdRef = useRef(id ? id : uniqueId('switch-'));\n\n    return (\n      <div className={cx(styles.switch)}>\n        <input\n          type=\"checkbox\"\n          disabled={disabled}\n          checked={value}\n          onChange={(event) => {\n            !disabled && onChange?.(event);\n          }}\n          id={switchIdRef.current}\n          {...inputProps}\n          ref={ref}\n        />\n        <label htmlFor={switchIdRef.current} aria-label={label ?? 'Toggle switch'} />\n      </div>\n    );\n  }\n);\n\nSwitch.displayName = 'Switch';\n\nexport interface InlineSwitchProps extends Props {\n  showLabel?: boolean;\n}\n\nexport const InlineSwitch = React.forwardRef<HTMLInputElement, InlineSwitchProps>(\n  ({ transparent, className, showLabel, label, value, id, ...props }, ref) => {\n    const theme = useTheme2();\n    const styles = getSwitchStyles(theme, transparent);\n\n    return (\n      <div className={cx(styles.inlineContainer, className, props.disabled && styles.disabled)}>\n        {showLabel && (\n          <label\n            htmlFor={id}\n            className={cx(styles.inlineLabel, value && styles.inlineLabelEnabled, 'inline-switch-label')}\n          >\n            {label}\n          </label>\n        )}\n        <Switch {...props} id={id} label={label} ref={ref} value={value} />\n      </div>\n    );\n  }\n);\n\nInlineSwitch.displayName = 'Switch';\n\nconst getSwitchStyles = stylesFactory((theme: GrafanaTheme2, transparent?: boolean) => {\n  return {\n    switch: css`\n      width: 32px;\n      height: 16px;\n      position: relative;\n\n      input {\n        opacity: 0;\n        left: -100vw;\n        z-index: -1000;\n        position: absolute;\n\n        &:disabled + label {\n          background: ${theme.colors.action.disabledBackground};\n          cursor: not-allowed;\n        }\n\n        &:checked + label {\n          background: ${theme.colors.primary.main};\n          border-color: ${theme.colors.primary.main};\n\n          &:hover {\n            background: ${theme.colors.primary.shade};\n          }\n\n          &::after {\n            transform: translate3d(18px, -50%, 0);\n            background: ${theme.colors.primary.contrastText};\n          }\n        }\n\n        &:focus + label,\n        &:focus-visible + label {\n          ${getFocusStyles(theme)}\n        }\n\n        &:focus:not(:focus-visible) + label {\n          ${getMouseFocusStyles(theme)}\n        }\n      }\n\n      label {\n        width: 100%;\n        height: 100%;\n        cursor: pointer;\n        border: none;\n        border-radius: ${theme.shape.radius.pill};\n        background: ${theme.components.input.background};\n        border: 1px solid ${theme.components.input.borderColor};\n        transition: all 0.3s ease;\n\n        &:hover {\n          border-color: ${theme.components.input.borderHover};\n        }\n\n        &::after {\n          position: absolute;\n          display: block;\n          content: '';\n          width: 12px;\n          height: 12px;\n          border-radius: ${theme.shape.radius.circle};\n          background: ${theme.colors.text.secondary};\n          box-shadow: ${theme.shadows.z1};\n          top: 50%;\n          transform: translate3d(2px, -50%, 0);\n          transition: transform 0.2s cubic-bezier(0.19, 1, 0.22, 1);\n        }\n      }\n    `,\n    inlineContainer: css`\n      padding: ${theme.spacing(0, 1)};\n      height: ${theme.spacing(theme.components.height.md)};\n      display: inline-flex;\n      align-items: center;\n      background: ${transparent ? 'transparent' : theme.components.input.background};\n      border: 1px solid ${transparent ? 'transparent' : theme.components.input.borderColor};\n      border-radius: ${theme.shape.borderRadius()};\n\n      &:hover {\n        border: 1px solid ${transparent ? 'transparent' : theme.components.input.borderHover};\n\n        .inline-switch-label {\n          color: ${theme.colors.text.primary};\n        }\n      }\n    `,\n    disabled: css`\n      background-color: rgba(204, 204, 220, 0.04);\n      color: rgba(204, 204, 220, 0.6);\n      border: 1px solid rgba(204, 204, 220, 0.04);\n    `,\n    inlineLabel: css`\n      cursor: pointer;\n      padding-right: ${theme.spacing(1)};\n      color: ${theme.colors.text.secondary};\n      white-space: nowrap;\n    `,\n    inlineLabelEnabled: css`\n      color: ${theme.colors.text.primary};\n    `,\n  };\n});\n","import { css, cx } from '@emotion/css';\nimport { groupBy, capitalize } from 'lodash';\nimport React, { useRef, useMemo } from 'react';\nimport useClickAway from 'react-use/lib/useClickAway';\n\nimport { VariableSuggestion, GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\nimport { List } from '../index';\n\ninterface DataLinkSuggestionsProps {\n  activeRef?: React.RefObject<HTMLDivElement>;\n  suggestions: VariableSuggestion[];\n  activeIndex: number;\n  onSuggestionSelect: (suggestion: VariableSuggestion) => void;\n  onClose?: () => void;\n}\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    list: css`\n      border-bottom: 1px solid ${theme.colors.border.weak};\n      &:last-child {\n        border: none;\n      }\n    `,\n    wrapper: css`\n      background: ${theme.colors.background.primary};\n      width: 250px;\n    `,\n    item: css`\n      background: none;\n      padding: 2px 8px;\n      color: ${theme.colors.text.primary};\n      cursor: pointer;\n      &:hover {\n        background: ${theme.colors.action.hover};\n      }\n    `,\n    label: css`\n      color: ${theme.colors.text.secondary};\n    `,\n    activeItem: css`\n      background: ${theme.colors.background.secondary};\n      &:hover {\n        background: ${theme.colors.background.secondary};\n      }\n    `,\n    itemValue: css`\n      font-family: ${theme.typography.fontFamilyMonospace};\n      font-size: ${theme.typography.size.sm};\n    `,\n  };\n};\n\nexport const DataLinkSuggestions = ({ suggestions, ...otherProps }: DataLinkSuggestionsProps) => {\n  const ref = useRef(null);\n\n  useClickAway(ref, () => {\n    if (otherProps.onClose) {\n      otherProps.onClose();\n    }\n  });\n\n  const groupedSuggestions = useMemo(() => {\n    return groupBy(suggestions, (s) => s.origin);\n  }, [suggestions]);\n\n  const styles = useStyles2(getStyles);\n\n  return (\n    <div role=\"menu\" ref={ref} className={styles.wrapper}>\n      {Object.keys(groupedSuggestions).map((key, i) => {\n        const indexOffset =\n          i === 0\n            ? 0\n            : Object.keys(groupedSuggestions).reduce((acc, current, index) => {\n                if (index >= i) {\n                  return acc;\n                }\n                return acc + groupedSuggestions[current].length;\n              }, 0);\n\n        return (\n          <DataLinkSuggestionsList\n            {...otherProps}\n            suggestions={groupedSuggestions[key]}\n            label={`${capitalize(key)}`}\n            activeIndex={otherProps.activeIndex}\n            activeIndexOffset={indexOffset}\n            key={key}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nDataLinkSuggestions.displayName = 'DataLinkSuggestions';\n\ninterface DataLinkSuggestionsListProps extends DataLinkSuggestionsProps {\n  label: string;\n  activeIndexOffset: number;\n  activeRef?: React.RefObject<HTMLDivElement>;\n}\n\nconst DataLinkSuggestionsList = React.memo(\n  ({\n    activeIndex,\n    activeIndexOffset,\n    label,\n    onClose,\n    onSuggestionSelect,\n    suggestions,\n    activeRef: selectedRef,\n  }: DataLinkSuggestionsListProps) => {\n    const styles = useStyles2(getStyles);\n\n    return (\n      <>\n        <List\n          className={styles.list}\n          items={suggestions}\n          renderItem={(item, index) => {\n            const isActive = index + activeIndexOffset === activeIndex;\n            return (\n              // key events are handled by DataLinkInput\n              // eslint-disable-next-line jsx-a11y/click-events-have-key-events\n              <div\n                role=\"menuitem\"\n                tabIndex={0}\n                className={cx(styles.item, isActive && styles.activeItem)}\n                ref={isActive ? selectedRef : undefined}\n                onClick={() => {\n                  onSuggestionSelect(item);\n                }}\n                title={item.documentation}\n              >\n                <span className={styles.itemValue}>\n                  <span className={styles.label}>{label}</span> {item.label}\n                </span>\n              </div>\n            );\n          }}\n        />\n      </>\n    );\n  }\n);\n\nDataLinkSuggestionsList.displayName = 'DataLinkSuggestionsList';\n","import { VirtualElement } from '@popperjs/core/lib/types';\n\nexport class SelectionReference implements VirtualElement {\n  getBoundingClientRect() {\n    const selection = window.getSelection();\n    const node = selection && selection.anchorNode;\n\n    if (node && node.parentElement) {\n      const rect = node.parentElement.getBoundingClientRect();\n      return rect;\n    }\n\n    const fallbackDOMRect: DOMRect = {\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      width: 0,\n      height: 0,\n      x: 0,\n      y: 0,\n      toJSON: () => {},\n    };\n    return fallbackDOMRect;\n  }\n\n  get clientWidth() {\n    return this.getBoundingClientRect().width;\n  }\n\n  get clientHeight() {\n    return this.getBoundingClientRect().height;\n  }\n}\n","import { css, cx } from '@emotion/css';\nimport Prism, { Grammar, LanguageMap } from 'prismjs';\nimport React, { memo, useEffect, useMemo, useRef, useState } from 'react';\nimport { Popper as ReactPopper } from 'react-popper';\nimport usePrevious from 'react-use/lib/usePrevious';\nimport { Value } from 'slate';\nimport Plain from 'slate-plain-serializer';\nimport { Editor } from 'slate-react';\n\nimport { DataLinkBuiltInVars, GrafanaTheme2, VariableOrigin, VariableSuggestion } from '@grafana/data';\n\nimport { makeValue } from '../../index';\nimport { SlatePrism } from '../../slate-plugins';\nimport { useStyles2 } from '../../themes';\nimport { SCHEMA } from '../../utils/slate';\nimport CustomScrollbar from '../CustomScrollbar/CustomScrollbar';\nimport { getInputStyles } from '../Input/Input';\nimport { Portal } from '../index';\n\nimport { DataLinkSuggestions } from './DataLinkSuggestions';\nimport { SelectionReference } from './SelectionReference';\n\nconst modulo = (a: number, n: number) => a - n * Math.floor(a / n);\n\ninterface DataLinkInputProps {\n  value: string;\n  onChange: (url: string, callback?: () => void) => void;\n  suggestions: VariableSuggestion[];\n  placeholder?: string;\n}\n\nconst datalinksSyntax: Grammar = {\n  builtInVariable: {\n    pattern: /(\\${\\S+?})/,\n  },\n};\n\nconst plugins = [\n  SlatePrism(\n    {\n      onlyIn: (node: any) => node.type === 'code_block',\n      getSyntax: () => 'links',\n    },\n    { ...(Prism.languages as LanguageMap), links: datalinksSyntax }\n  ),\n];\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  input: getInputStyles({ theme, invalid: false }).input,\n  editor: css`\n    .token.builtInVariable {\n      color: ${theme.colors.success.text};\n    }\n    .token.variable {\n      color: ${theme.colors.primary.text};\n    }\n  `,\n  suggestionsWrapper: css`\n    box-shadow: ${theme.shadows.z2};\n  `,\n  // Wrapper with child selector needed.\n  // When classnames are applied to the same element as the wrapper, it causes the suggestions to stop working\n  wrapperOverrides: css`\n    width: 100%;\n    > .slate-query-field__wrapper {\n      padding: 0;\n      background-color: transparent;\n      border: none;\n    }\n  `,\n});\n\n// This memoised also because rerendering the slate editor grabs focus which created problem in some cases this\n// was used and changes to different state were propagated here.\nexport const DataLinkInput = memo(\n  ({\n    value,\n    onChange,\n    suggestions,\n    placeholder = 'http://your-grafana.com/d/000000010/annotations',\n  }: DataLinkInputProps) => {\n    const editorRef = useRef<Editor>(null);\n    const styles = useStyles2(getStyles);\n    const [showingSuggestions, setShowingSuggestions] = useState(false);\n    const [suggestionsIndex, setSuggestionsIndex] = useState(0);\n    const [linkUrl, setLinkUrl] = useState<Value>(makeValue(value));\n    const prevLinkUrl = usePrevious<Value>(linkUrl);\n    const [scrollTop, setScrollTop] = useState(0);\n\n    // Workaround for https://github.com/ianstormtaylor/slate/issues/2927\n    const stateRef = useRef({ showingSuggestions, suggestions, suggestionsIndex, linkUrl, onChange });\n    stateRef.current = { showingSuggestions, suggestions, suggestionsIndex, linkUrl, onChange };\n\n    // Used to get the height of the suggestion elements in order to scroll to them.\n    const activeRef = useRef<HTMLDivElement>(null);\n    useEffect(() => {\n      setScrollTop(getElementPosition(activeRef.current, suggestionsIndex));\n    }, [suggestionsIndex]);\n\n    // SelectionReference is used to position the variables suggestion relatively to current DOM selection\n    const selectionRef = useMemo(() => new SelectionReference(), []);\n\n    const onKeyDown = React.useCallback((event: React.KeyboardEvent, next: () => any) => {\n      if (!stateRef.current.showingSuggestions) {\n        if (event.key === '=' || event.key === '$' || (event.keyCode === 32 && event.ctrlKey)) {\n          return setShowingSuggestions(true);\n        }\n        return next();\n      }\n\n      switch (event.key) {\n        case 'Backspace':\n        case 'Escape':\n          setShowingSuggestions(false);\n          return setSuggestionsIndex(0);\n\n        case 'Enter':\n          event.preventDefault();\n          return onVariableSelect(stateRef.current.suggestions[stateRef.current.suggestionsIndex]);\n\n        case 'ArrowDown':\n        case 'ArrowUp':\n          event.preventDefault();\n          const direction = event.key === 'ArrowDown' ? 1 : -1;\n          return setSuggestionsIndex((index) => modulo(index + direction, stateRef.current.suggestions.length));\n        default:\n          return next();\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(() => {\n      // Update the state of the link in the parent. This is basically done on blur but we need to do it after\n      // our state have been updated. The duplicity of state is done for perf reasons and also because local\n      // state also contains things like selection and formating.\n      if (prevLinkUrl && prevLinkUrl.selection.isFocused && !linkUrl.selection.isFocused) {\n        stateRef.current.onChange(Plain.serialize(linkUrl));\n      }\n    }, [linkUrl, prevLinkUrl]);\n\n    const onUrlChange = React.useCallback(({ value }: { value: Value }) => {\n      setLinkUrl(value);\n    }, []);\n\n    const onVariableSelect = (item: VariableSuggestion, editor = editorRef.current!) => {\n      const precedingChar: string = getCharactersAroundCaret();\n      const precedingDollar = precedingChar === '$';\n      if (item.origin !== VariableOrigin.Template || item.value === DataLinkBuiltInVars.includeVars) {\n        editor.insertText(`${precedingDollar ? '' : '$'}\\{${item.value}}`);\n      } else {\n        editor.insertText(`${precedingDollar ? '' : '$'}\\{${item.value}:queryparam}`);\n      }\n\n      setLinkUrl(editor.value);\n      setShowingSuggestions(false);\n\n      setSuggestionsIndex(0);\n      stateRef.current.onChange(Plain.serialize(editor.value));\n    };\n\n    const getCharactersAroundCaret = () => {\n      const input: HTMLSpanElement | null = document.getElementById('data-link-input')!;\n      let precedingChar = '',\n        sel: Selection | null,\n        range: Range;\n      if (window.getSelection) {\n        sel = window.getSelection();\n        if (sel && sel.rangeCount > 0) {\n          range = sel.getRangeAt(0).cloneRange();\n          // Collapse to the start of the range\n          range.collapse(true);\n          range.setStart(input, 0);\n          precedingChar = range.toString().slice(-1);\n        }\n      }\n      return precedingChar;\n    };\n\n    return (\n      <div className={styles.wrapperOverrides}>\n        <div className=\"slate-query-field__wrapper\">\n          <div id=\"data-link-input\" className=\"slate-query-field\">\n            {showingSuggestions && (\n              <Portal>\n                <ReactPopper\n                  referenceElement={selectionRef}\n                  placement=\"bottom-end\"\n                  modifiers={[\n                    {\n                      name: 'preventOverflow',\n                      enabled: true,\n                      options: {\n                        rootBoundary: 'viewport',\n                      },\n                    },\n                    {\n                      name: 'arrow',\n                      enabled: false,\n                    },\n                    {\n                      name: 'offset',\n                      options: {\n                        offset: [250, 0],\n                      },\n                    },\n                  ]}\n                >\n                  {({ ref, style, placement }) => {\n                    return (\n                      <div ref={ref} style={style} data-placement={placement} className={styles.suggestionsWrapper}>\n                        <CustomScrollbar\n                          scrollTop={scrollTop}\n                          autoHeightMax=\"300px\"\n                          setScrollTop={({ scrollTop }) => setScrollTop(scrollTop)}\n                        >\n                          <DataLinkSuggestions\n                            activeRef={activeRef}\n                            suggestions={stateRef.current.suggestions}\n                            onSuggestionSelect={onVariableSelect}\n                            onClose={() => setShowingSuggestions(false)}\n                            activeIndex={suggestionsIndex}\n                          />\n                        </CustomScrollbar>\n                      </div>\n                    );\n                  }}\n                </ReactPopper>\n              </Portal>\n            )}\n            <Editor\n              schema={SCHEMA}\n              ref={editorRef}\n              placeholder={placeholder}\n              value={stateRef.current.linkUrl}\n              onChange={onUrlChange}\n              onKeyDown={(event, _editor, next) => onKeyDown(event, next)}\n              plugins={plugins}\n              className={cx(\n                styles.editor,\n                styles.input,\n                css`\n                  padding: 3px 8px;\n                `\n              )}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n);\n\nDataLinkInput.displayName = 'DataLinkInput';\n\nfunction getElementPosition(suggestionElement: HTMLElement | null, activeIndex: number) {\n  return (suggestionElement?.clientHeight ?? 0) * activeIndex;\n}\n","import { css } from '@emotion/css';\nimport React, { ChangeEvent } from 'react';\n\nimport { VariableSuggestion, GrafanaTheme2, DataLink } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes/index';\nimport { isCompactUrl } from '../../utils/dataLinks';\nimport { Field } from '../Forms/Field';\nimport { Input } from '../Input/Input';\nimport { Switch } from '../Switch/Switch';\n\nimport { DataLinkInput } from './DataLinkInput';\n\ninterface DataLinkEditorProps {\n  index: number;\n  isLast: boolean;\n  value: DataLink;\n  suggestions: VariableSuggestion[];\n  onChange: (index: number, link: DataLink, callback?: () => void) => void;\n}\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  listItem: css`\n    margin-bottom: ${theme.spacing()};\n  `,\n  infoText: css`\n    padding-bottom: ${theme.spacing(2)};\n    margin-left: 66px;\n    color: ${theme.colors.text.secondary};\n  `,\n});\n\nexport const DataLinkEditor = React.memo(({ index, value, onChange, suggestions, isLast }: DataLinkEditorProps) => {\n  const styles = useStyles2(getStyles);\n\n  const onUrlChange = (url: string, callback?: () => void) => {\n    onChange(index, { ...value, url }, callback);\n  };\n  const onTitleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    onChange(index, { ...value, title: event.target.value });\n  };\n\n  const onOpenInNewTabChanged = () => {\n    onChange(index, { ...value, targetBlank: !value.targetBlank });\n  };\n\n  return (\n    <div className={styles.listItem}>\n      <Field label=\"Title\">\n        <Input value={value.title} onChange={onTitleChange} placeholder=\"Show details\" />\n      </Field>\n\n      <Field\n        label=\"URL\"\n        invalid={isCompactUrl(value.url)}\n        error=\"Data link is an Explore URL in a deprecated format. Please visit the URL to be redirected, and edit this data link to use that URL.\"\n      >\n        <DataLinkInput value={value.url} onChange={onUrlChange} suggestions={suggestions} />\n      </Field>\n\n      <Field label=\"Open in new tab\">\n        <Switch value={value.targetBlank || false} onChange={onOpenInNewTabChanged} />\n      </Field>\n\n      {isLast && (\n        <div className={styles.infoText}>\n          With data links you can reference data variables like series name, labels and values. Type CMD+Space,\n          CTRL+Space, or $ to open variable suggestions.\n        </div>\n      )}\n    </div>\n  );\n});\n\nDataLinkEditor.displayName = 'DataLinkEditor';\n","import React, { useState } from 'react';\n\nimport { DataFrame, DataLink, VariableSuggestion } from '@grafana/data';\n\nimport { Button } from '../../Button';\nimport { Modal } from '../../Modal/Modal';\nimport { DataLinkEditor } from '../DataLinkEditor';\n\ninterface DataLinkEditorModalContentProps {\n  link: DataLink;\n  index: number;\n  data: DataFrame[];\n  getSuggestions: () => VariableSuggestion[];\n  onSave: (index: number, ink: DataLink) => void;\n  onCancel: (index: number) => void;\n}\n\nexport const DataLinkEditorModalContent = ({\n  link,\n  index,\n  getSuggestions,\n  onSave,\n  onCancel,\n}: DataLinkEditorModalContentProps) => {\n  const [dirtyLink, setDirtyLink] = useState(link);\n  return (\n    <>\n      <DataLinkEditor\n        value={dirtyLink}\n        index={index}\n        isLast={false}\n        suggestions={getSuggestions()}\n        onChange={(index, link) => {\n          setDirtyLink(link);\n        }}\n      />\n      <Modal.ButtonRow>\n        <Button variant=\"secondary\" onClick={() => onCancel(index)} fill=\"outline\">\n          Cancel\n        </Button>\n        <Button\n          onClick={() => {\n            onSave(index, dirtyLink);\n          }}\n        >\n          Save\n        </Button>\n      </Modal.ButtonRow>\n    </>\n  );\n};\n","import { css, cx } from '@emotion/css';\nimport React from 'react';\n\nimport { DataFrame, DataLink, GrafanaTheme2 } from '@grafana/data';\n\nimport { stylesFactory, useTheme2 } from '../../../themes';\nimport { isCompactUrl } from '../../../utils/dataLinks';\nimport { FieldValidationMessage } from '../../Forms/FieldValidationMessage';\nimport { IconButton } from '../../IconButton/IconButton';\n\nexport interface DataLinksListItemProps {\n  index: number;\n  link: DataLink;\n  data: DataFrame[];\n  onChange: (index: number, link: DataLink) => void;\n  onEdit: () => void;\n  onRemove: () => void;\n  isEditing?: boolean;\n}\n\nexport const DataLinksListItem = ({ link, onEdit, onRemove }: DataLinksListItemProps) => {\n  const theme = useTheme2();\n  const styles = getDataLinkListItemStyles(theme);\n  const { title = '', url = '' } = link;\n\n  const hasTitle = title.trim() !== '';\n  const hasUrl = url.trim() !== '';\n\n  const isCompactExploreUrl = isCompactUrl(url);\n\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles.titleWrapper}>\n        <div className={cx(styles.url, !hasUrl && styles.notConfigured, isCompactExploreUrl && styles.errored)}>\n          {hasTitle ? title : 'Data link title not provided'}\n        </div>\n        <div className={styles.actionButtons}>\n          <IconButton name=\"pen\" onClick={onEdit} />\n          <IconButton name=\"times\" onClick={onRemove} />\n        </div>\n      </div>\n      <div\n        className={cx(styles.url, !hasUrl && styles.notConfigured, isCompactExploreUrl && styles.errored)}\n        title={url}\n      >\n        {hasUrl ? url : 'Data link url not provided'}\n      </div>\n      {isCompactExploreUrl && (\n        <FieldValidationMessage>Explore data link may not work in the future. Please edit.</FieldValidationMessage>\n      )}\n    </div>\n  );\n};\n\nconst getDataLinkListItemStyles = stylesFactory((theme: GrafanaTheme2) => {\n  return {\n    wrapper: css`\n      margin-bottom: ${theme.spacing(2)};\n      width: 100%;\n      &:last-child {\n        margin-bottom: 0;\n      }\n      display: flex;\n      flex-direction: column;\n    `,\n    titleWrapper: css`\n      label: data-links-list-item-title;\n      justify-content: space-between;\n      display: flex;\n      width: 100%;\n      align-items: center;\n    `,\n    actionButtons: css`\n      margin-left: ${theme.spacing(1)};\n      display: flex;\n    `,\n    errored: css`\n      color: ${theme.colors.error.text};\n      font-style: italic;\n    `,\n    notConfigured: css`\n      font-style: italic;\n    `,\n    title: css`\n      color: ${theme.colors.text.primary};\n      font-size: ${theme.typography.size.sm};\n      font-weight: ${theme.typography.fontWeightMedium};\n    `,\n    url: css`\n      color: ${theme.colors.text.secondary};\n      font-size: ${theme.typography.size.sm};\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      max-width: 90%;\n    `,\n  };\n});\n","import { css } from '@emotion/css';\nimport { cloneDeep } from 'lodash';\nimport React, { useState } from 'react';\n\nimport { DataFrame, DataLink, GrafanaTheme2, VariableSuggestion } from '@grafana/data';\n\nimport { stylesFactory, useTheme2 } from '../../../themes';\nimport { Button } from '../../Button/Button';\nimport { Modal } from '../../Modal/Modal';\n\nimport { DataLinkEditorModalContent } from './DataLinkEditorModalContent';\nimport { DataLinksListItem } from './DataLinksListItem';\n\ninterface DataLinksInlineEditorProps {\n  links?: DataLink[];\n  onChange: (links: DataLink[]) => void;\n  getSuggestions: () => VariableSuggestion[];\n  data: DataFrame[];\n}\n\nexport const DataLinksInlineEditor = ({ links, onChange, getSuggestions, data }: DataLinksInlineEditorProps) => {\n  const theme = useTheme2();\n  const [editIndex, setEditIndex] = useState<number | null>(null);\n  const [isNew, setIsNew] = useState(false);\n\n  const styles = getDataLinksInlineEditorStyles(theme);\n  const linksSafe: DataLink[] = links ?? [];\n  const isEditing = editIndex !== null;\n\n  const onDataLinkChange = (index: number, link: DataLink) => {\n    if (isNew) {\n      if (link.title.trim() === '' && link.url.trim() === '') {\n        setIsNew(false);\n        setEditIndex(null);\n        return;\n      } else {\n        setEditIndex(null);\n        setIsNew(false);\n      }\n    }\n    const update = cloneDeep(linksSafe);\n    update[index] = link;\n    onChange(update);\n    setEditIndex(null);\n  };\n\n  const onDataLinkAdd = () => {\n    let update = cloneDeep(linksSafe);\n    setEditIndex(update.length);\n    setIsNew(true);\n  };\n\n  const onDataLinkCancel = (index: number) => {\n    if (isNew) {\n      setIsNew(false);\n    }\n    setEditIndex(null);\n  };\n\n  const onDataLinkRemove = (index: number) => {\n    const update = cloneDeep(linksSafe);\n    update.splice(index, 1);\n    onChange(update);\n  };\n\n  return (\n    <>\n      {linksSafe.length > 0 && (\n        <div className={styles.wrapper}>\n          {linksSafe.map((l, i) => {\n            return (\n              <DataLinksListItem\n                key={`${l.title}/${i}`}\n                index={i}\n                link={l}\n                onChange={onDataLinkChange}\n                onEdit={() => setEditIndex(i)}\n                onRemove={() => onDataLinkRemove(i)}\n                data={data}\n              />\n            );\n          })}\n        </div>\n      )}\n\n      {isEditing && editIndex !== null && (\n        <Modal\n          title=\"Edit link\"\n          isOpen={true}\n          closeOnBackdropClick={false}\n          onDismiss={() => {\n            onDataLinkCancel(editIndex);\n          }}\n        >\n          <DataLinkEditorModalContent\n            index={editIndex}\n            link={isNew ? { title: '', url: '' } : linksSafe[editIndex]}\n            data={data}\n            onSave={onDataLinkChange}\n            onCancel={onDataLinkCancel}\n            getSuggestions={getSuggestions}\n          />\n        </Modal>\n      )}\n\n      <Button size=\"sm\" icon=\"plus\" onClick={onDataLinkAdd} variant=\"secondary\">\n        Add link\n      </Button>\n    </>\n  );\n};\n\nconst getDataLinksInlineEditorStyles = stylesFactory((theme: GrafanaTheme2) => {\n  return {\n    wrapper: css`\n      margin-bottom: ${theme.spacing(2)};\n    `,\n  };\n});\n","import { css, cx } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { stylesFactory, useStyles2 } from '../../themes';\nimport { Alert, AlertVariant } from '../Alert/Alert';\nimport { Icon } from '../Icon/Icon';\n\nexport interface InfoBoxProps extends Omit<React.HTMLAttributes<HTMLDivElement>, 'title'> {\n  children: React.ReactNode;\n  /** Title of the box */\n  title?: string | JSX.Element;\n  /** Url of the read more link */\n  url?: string;\n  /** Text of the read more link */\n  urlTitle?: string;\n  /** Indicates whether or not box should be rendered with Grafana branding background */\n  branded?: boolean;\n  /** Color variant of the box */\n  severity?: AlertVariant;\n  /** Call back to be performed when box is dismissed */\n  onDismiss?: () => void;\n}\n\n/** @deprecated use Alert with severity info */\nexport const InfoBox = React.memo(\n  React.forwardRef<HTMLDivElement, InfoBoxProps>(\n    ({ title, className, children, branded, url, urlTitle, onDismiss, severity = 'info', ...otherProps }, ref) => {\n      const styles = useStyles2(getStyles);\n\n      return (\n        <Alert severity={severity} className={className} {...otherProps} ref={ref} title={title as string}>\n          <div>{children}</div>\n          {url && (\n            <a href={url} className={cx('external-link', styles.docsLink)} target=\"_blank\" rel=\"noreferrer\">\n              <Icon name=\"book\" /> {urlTitle || 'Read more'}\n            </a>\n          )}\n        </Alert>\n      );\n    }\n  )\n);\n\nInfoBox.displayName = 'InfoBox';\n\nconst getStyles = stylesFactory((theme: GrafanaTheme2) => {\n  return {\n    docsLink: css`\n      display: inline-block;\n      margin-top: ${theme.spacing(2)};\n    `,\n  };\n});\n","import { css, cx } from '@emotion/css';\nimport React, { HTMLAttributes, useCallback } from 'react';\nimport tinycolor from 'tinycolor2';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes/ThemeContext';\nimport { IconName } from '../../types';\nimport { Icon } from '../Icon/Icon';\nimport { HorizontalGroup } from '../Layout/Layout';\nimport { Tooltip } from '../Tooltip/Tooltip';\n\nexport type BadgeColor = 'blue' | 'red' | 'green' | 'orange' | 'purple';\n\nexport interface BadgeProps extends HTMLAttributes<HTMLDivElement> {\n  text: React.ReactNode;\n  color: BadgeColor;\n  icon?: IconName;\n  tooltip?: string;\n}\n\nexport const Badge = React.memo<BadgeProps>(({ icon, color, text, tooltip, className, ...otherProps }) => {\n  const styles = useStyles2(useCallback((theme) => getStyles(theme, color), [color]));\n  const badge = (\n    <div className={cx(styles.wrapper, className)} {...otherProps}>\n      <HorizontalGroup align=\"center\" spacing=\"xs\">\n        {icon && <Icon name={icon} size=\"sm\" />}\n        <span>{text}</span>\n      </HorizontalGroup>\n    </div>\n  );\n\n  return tooltip ? (\n    <Tooltip content={tooltip} placement=\"auto\">\n      {badge}\n    </Tooltip>\n  ) : (\n    badge\n  );\n});\n\nBadge.displayName = 'Badge';\n\nconst getStyles = (theme: GrafanaTheme2, color: BadgeColor) => {\n  let sourceColor = theme.visualization.getColorByName(color);\n  let borderColor = '';\n  let bgColor = '';\n  let textColor = '';\n\n  if (theme.isDark) {\n    bgColor = tinycolor(sourceColor).setAlpha(0.15).toString();\n    borderColor = tinycolor(sourceColor).darken(30).toString();\n    textColor = tinycolor(sourceColor).lighten(15).toString();\n  } else {\n    bgColor = tinycolor(sourceColor).setAlpha(0.15).toString();\n    borderColor = tinycolor(sourceColor).lighten(20).toString();\n    textColor = tinycolor(sourceColor).darken(20).toString();\n  }\n\n  return {\n    wrapper: css`\n      font-size: ${theme.typography.size.sm};\n      display: inline-flex;\n      padding: 1px 4px;\n      border-radius: ${theme.shape.radius.default};\n      background: ${bgColor};\n      border: 1px solid ${borderColor};\n      color: ${textColor};\n      font-weight: ${theme.typography.fontWeightRegular};\n\n      > span {\n        position: relative;\n        top: 1px;\n        margin-left: 2px;\n      }\n    `,\n  };\n};\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { FeatureState, GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\nimport { Badge, BadgeProps } from '../Badge/Badge';\n\nimport { InfoBox, InfoBoxProps } from './InfoBox';\n\nexport interface FeatureInfoBoxProps extends Omit<InfoBoxProps, 'title' | 'urlTitle'> {\n  title: string;\n  featureState?: FeatureState;\n}\n\n/** @deprecated use Alert with severity info */\nexport const FeatureInfoBox = React.memo(\n  React.forwardRef<HTMLDivElement, FeatureInfoBoxProps>(({ title, featureState, ...otherProps }, ref) => {\n    const styles = useStyles2(getFeatureInfoBoxStyles);\n\n    const titleEl = featureState ? (\n      <>\n        <div className={styles.badge}>\n          <FeatureBadge featureState={featureState} />\n        </div>\n        <h3>{title}</h3>\n      </>\n    ) : (\n      <h3>{title}</h3>\n    );\n    return <InfoBox branded title={titleEl} urlTitle=\"Read documentation\" ref={ref} {...otherProps} />;\n  })\n);\n\nFeatureInfoBox.displayName = 'FeatureInfoBox';\n\nconst getFeatureInfoBoxStyles = (theme: GrafanaTheme2) => {\n  return {\n    badge: css`\n      margin-bottom: ${theme.spacing(1)};\n    `,\n  };\n};\n\ninterface FeatureBadgeProps {\n  featureState: FeatureState;\n  tooltip?: string;\n}\n\nexport const FeatureBadge = ({ featureState, tooltip }: FeatureBadgeProps) => {\n  const display = getPanelStateBadgeDisplayModel(featureState);\n  return <Badge text={display.text} color={display.color} icon={display.icon} tooltip={tooltip} />;\n};\n\nfunction getPanelStateBadgeDisplayModel(featureState: FeatureState): BadgeProps {\n  switch (featureState) {\n    case FeatureState.alpha:\n      return {\n        text: 'Alpha',\n        icon: 'exclamation-triangle',\n        color: 'orange',\n      };\n  }\n\n  return {\n    text: 'Beta',\n    icon: 'rocket',\n    color: 'blue',\n  };\n}\n","// Based on work https://github.com/mohsen1/json-formatter-js\n// License MIT, Copyright (c) 2015 Mohsen Azimi\n\n/*\n * Escapes `\"` characters from string\n */\nexport function formatString(str: string): string {\n  return str.replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"');\n}\n\n/*\n * Determines if a value is an object\n */\nexport function isObject(value: unknown): boolean {\n  const type = typeof value;\n  return !!value && type === 'object';\n}\n\n/*\n * Gets constructor name of an object.\n * From http://stackoverflow.com/a/332429\n *\n */\nexport function getObjectName(object: object): string {\n  if (object === undefined) {\n    return '';\n  }\n  if (object === null) {\n    return 'Object';\n  }\n  if (typeof object === 'object' && !object.constructor) {\n    return 'Object';\n  }\n\n  const funcNameRegex = /function ([^(]*)/;\n  const results = funcNameRegex.exec(object.constructor.toString());\n  if (results && results.length > 1) {\n    return results[1];\n  } else {\n    return '';\n  }\n}\n\n/*\n * Gets type of an object. Returns \"null\" for null objects\n */\nexport function getType(object: object): string {\n  if (object === null) {\n    return 'null';\n  }\n  return typeof object;\n}\n\n/*\n * Generates inline preview for a JavaScript object based on a value\n */\nexport function getValuePreview(object: object, value: string): string {\n  const type = getType(object);\n\n  if (type === 'null' || type === 'undefined') {\n    return type;\n  }\n\n  if (type === 'string') {\n    value = '\"' + formatString(value) + '\"';\n  }\n  if (type === 'function') {\n    // Remove content of the function\n    return (\n      object\n        .toString()\n        .replace(/[\\r\\n]/g, '')\n        .replace(/\\{.*\\}/, '') + '{…}'\n    );\n  }\n  return value;\n}\n\n/*\n * Generates inline preview for a JavaScript object\n */\nlet value = '';\nexport function getPreview(obj: object): string {\n  if (isObject(obj)) {\n    value = getObjectName(obj);\n    if (Array.isArray(obj)) {\n      value += '[' + obj.length + ']';\n    }\n  } else {\n    value = getValuePreview(obj, obj.toString());\n  }\n  return value;\n}\n\n/*\n * Generates a prefixed CSS class name\n */\nexport function cssClass(className: string): string {\n  return `json-formatter-${className}`;\n}\n\n/*\n * Creates a new DOM element with given type and class\n * TODO: move me to helpers\n */\nexport function createElement(type: string, className?: string, content?: Element | string): Element {\n  const el = document.createElement(type);\n  if (className) {\n    el.classList.add(cssClass(className));\n  }\n  if (content !== undefined) {\n    if (content instanceof Node) {\n      el.appendChild(content);\n    } else {\n      el.appendChild(document.createTextNode(String(content)));\n    }\n  }\n  return el;\n}\n","// Based on work https://github.com/mohsen1/json-formatter-js\n// License MIT, Copyright (c) 2015 Mohsen Azimi\n\nimport { isNumber } from 'lodash';\n\nimport { isObject, getObjectName, getType, getValuePreview, cssClass, createElement } from './helpers';\n\nconst DATE_STRING_REGEX =\n  /(^\\d{1,4}[\\.|\\\\/|-]\\d{1,2}[\\.|\\\\/|-]\\d{1,4})(\\s*(?:0?[1-9]:[0-5]|1(?=[012])\\d:[0-5])\\d\\s*[ap]m)?$/;\nconst PARTIAL_DATE_REGEX = /\\d{2}:\\d{2}:\\d{2} GMT-\\d{4}/;\nconst JSON_DATE_REGEX = /\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}.\\d{3}Z/;\n\n// When toggling, don't animated removal or addition of more than a few items\nconst MAX_ANIMATED_TOGGLE_ITEMS = 10;\n\nconst requestAnimationFrame =\n  (typeof window !== 'undefined' && window.requestAnimationFrame) ||\n  ((cb: () => void) => {\n    cb();\n    return 0;\n  });\n\nexport interface JsonExplorerConfig {\n  animateOpen?: boolean;\n  animateClose?: boolean;\n  theme?: string;\n}\n\nconst _defaultConfig: JsonExplorerConfig = {\n  animateOpen: true,\n  animateClose: true,\n};\n\n/**\n * @class JsonExplorer\n *\n * JsonExplorer allows you to render JSON objects in HTML with a\n * **collapsible** navigation.\n */\nexport class JsonExplorer {\n  // Hold the open state after the toggler is used\n  private _isOpen: boolean | null = null;\n\n  // A reference to the element that we render to\n  private element: Element | null = null;\n\n  private skipChildren = false;\n\n  /**\n   * @param {object} json The JSON object you want to render. It has to be an\n   * object or array. Do NOT pass raw JSON string.\n   *\n   * @param {number} [open=1] his number indicates up to how many levels the\n   * rendered tree should expand. Set it to `0` to make the whole tree collapsed\n   * or set it to `Infinity` to expand the tree deeply\n   *\n   * @param {object} [config=defaultConfig] -\n   *  defaultConfig = {\n   *   hoverPreviewEnabled: false,\n   *   hoverPreviewArrayCount: 100,\n   *   hoverPreviewFieldCount: 5\n   * }\n   *\n   * Available configurations:\n   *  #####Hover Preview\n   * * `hoverPreviewEnabled`:  enable preview on hover\n   * * `hoverPreviewArrayCount`: number of array items to show in preview Any\n   *    array larger than this number will be shown as `Array[XXX]` where `XXX`\n   *    is length of the array.\n   * * `hoverPreviewFieldCount`: number of object properties to show for object\n   *   preview. Any object with more properties that thin number will be\n   *   truncated.\n   *\n   * @param {string} [key=undefined] The key that this object in its parent\n   * context\n   */\n  constructor(\n    public json: any,\n    private open = 1,\n    private config: JsonExplorerConfig = _defaultConfig,\n    private key?: string\n  ) {}\n\n  /*\n   * is formatter open?\n   */\n  private get isOpen(): boolean {\n    if (this._isOpen !== null) {\n      return this._isOpen;\n    } else {\n      return this.open > 0;\n    }\n  }\n\n  /*\n   * set open state (from toggler)\n   */\n  private set isOpen(value: boolean) {\n    this._isOpen = value;\n  }\n\n  /*\n   * is this a date string?\n   */\n  private get isDate(): boolean {\n    return (\n      this.type === 'string' &&\n      (DATE_STRING_REGEX.test(this.json) || JSON_DATE_REGEX.test(this.json) || PARTIAL_DATE_REGEX.test(this.json))\n    );\n  }\n\n  /*\n   * is this a URL string?\n   */\n  private get isUrl(): boolean {\n    return this.type === 'string' && this.json.indexOf('http') === 0;\n  }\n\n  /*\n   * is this an array?\n   */\n  private get isArray(): boolean {\n    return Array.isArray(this.json);\n  }\n\n  /*\n   * is this an object?\n   * Note: In this context arrays are object as well\n   */\n  private get isObject(): boolean {\n    return isObject(this.json);\n  }\n\n  /*\n   * is this an empty object with no properties?\n   */\n  private get isEmptyObject(): boolean {\n    return !this.keys.length && !this.isArray;\n  }\n\n  /*\n   * is this an empty object or array?\n   */\n  private get isEmpty(): boolean {\n    return this.isEmptyObject || (this.keys && !this.keys.length && this.isArray);\n  }\n\n  /*\n   * did we receive a key argument?\n   * This means that the formatter was called as a sub formatter of a parent formatter\n   */\n  private get hasKey(): boolean {\n    return typeof this.key !== 'undefined';\n  }\n\n  /*\n   * if this is an object, get constructor function name\n   */\n  private get constructorName(): string {\n    return getObjectName(this.json);\n  }\n\n  /*\n   * get type of this value\n   * Possible values: all JavaScript primitive types plus \"array\" and \"null\"\n   */\n  private get type(): string {\n    return getType(this.json);\n  }\n\n  /*\n   * get object keys\n   * If there is an empty key we pad it wit quotes to make it visible\n   */\n  private get keys(): string[] {\n    if (this.isObject) {\n      return Object.keys(this.json).map((key) => (key ? key : '\"\"'));\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Toggles `isOpen` state\n   *\n   */\n  toggleOpen() {\n    this.isOpen = !this.isOpen;\n\n    if (this.element) {\n      if (this.isOpen) {\n        this.appendChildren(this.config.animateOpen);\n      } else {\n        this.removeChildren(this.config.animateClose);\n      }\n      this.element.classList.toggle(cssClass('open'));\n    }\n  }\n\n  /**\n   * Open all children up to a certain depth.\n   * Allows actions such as expand all/collapse all\n   *\n   */\n  openAtDepth(depth = 1) {\n    if (depth < 0) {\n      return;\n    }\n\n    this.open = depth;\n    this.isOpen = depth !== 0;\n\n    if (this.element) {\n      this.removeChildren(false);\n\n      if (depth === 0) {\n        this.element.classList.remove(cssClass('open'));\n      } else {\n        this.appendChildren(this.config.animateOpen);\n        this.element.classList.add(cssClass('open'));\n      }\n    }\n  }\n\n  isNumberArray() {\n    return this.json.length > 0 && this.json.length < 4 && (isNumber(this.json[0]) || isNumber(this.json[1]));\n  }\n\n  renderArray() {\n    const arrayWrapperSpan = createElement('span');\n    arrayWrapperSpan.appendChild(createElement('span', 'bracket', '['));\n\n    // some pretty handling of number arrays\n    if (this.isNumberArray()) {\n      this.json.forEach((val: any, index: number) => {\n        if (index > 0) {\n          arrayWrapperSpan.appendChild(createElement('span', 'array-comma', ','));\n        }\n        arrayWrapperSpan.appendChild(createElement('span', 'number', val));\n      });\n      this.skipChildren = true;\n    } else {\n      arrayWrapperSpan.appendChild(createElement('span', 'number', this.json.length));\n    }\n\n    arrayWrapperSpan.appendChild(createElement('span', 'bracket', ']'));\n    return arrayWrapperSpan;\n  }\n\n  /**\n   * Renders an HTML element and installs event listeners\n   *\n   * @returns {HTMLDivElement}\n   */\n  render(skipRoot = false): HTMLDivElement {\n    // construct the root element and assign it to this.element\n    this.element = createElement('div', 'row');\n\n    // construct the toggler link\n    const togglerLink = createElement('a', 'toggler-link');\n    const togglerIcon = createElement('span', 'toggler');\n\n    // if this is an object we need a wrapper span (toggler)\n    if (this.isObject) {\n      togglerLink.appendChild(togglerIcon);\n    }\n\n    // if this is child of a parent formatter we need to append the key\n    if (this.hasKey) {\n      togglerLink.appendChild(createElement('span', 'key', `${this.key}:`));\n    }\n\n    // Value for objects and arrays\n    if (this.isObject) {\n      // construct the value holder element\n      const value = createElement('span', 'value');\n\n      // we need a wrapper span for objects\n      const objectWrapperSpan = createElement('span');\n\n      // get constructor name and append it to wrapper span\n      const constructorName = createElement('span', 'constructor-name', this.constructorName);\n      objectWrapperSpan.appendChild(constructorName);\n\n      // if it's an array append the array specific elements like brackets and length\n      if (this.isArray) {\n        const arrayWrapperSpan = this.renderArray();\n        objectWrapperSpan.appendChild(arrayWrapperSpan);\n      }\n\n      // append object wrapper span to toggler link\n      value.appendChild(objectWrapperSpan);\n      togglerLink.appendChild(value);\n      // Primitive values\n    } else {\n      // make a value holder element\n      const value = this.isUrl ? createElement('a') : createElement('span');\n\n      // add type and other type related CSS classes\n      value.classList.add(cssClass(this.type));\n      if (this.isDate) {\n        value.classList.add(cssClass('date'));\n      }\n      if (this.isUrl) {\n        value.classList.add(cssClass('url'));\n        value.setAttribute('href', this.json);\n      }\n\n      // Append value content to value element\n      const valuePreview = getValuePreview(this.json, this.json);\n      value.appendChild(document.createTextNode(valuePreview));\n\n      // append the value element to toggler link\n      togglerLink.appendChild(value);\n    }\n\n    // construct a children element\n    const children = createElement('div', 'children');\n\n    // set CSS classes for children\n    if (this.isObject) {\n      children.classList.add(cssClass('object'));\n    }\n    if (this.isArray) {\n      children.classList.add(cssClass('array'));\n    }\n    if (this.isEmpty) {\n      children.classList.add(cssClass('empty'));\n    }\n\n    // set CSS classes for root element\n    if (this.config && this.config.theme) {\n      this.element.classList.add(cssClass(this.config.theme));\n    }\n    if (this.isOpen) {\n      this.element.classList.add(cssClass('open'));\n    }\n\n    // append toggler and children elements to root element\n    if (!skipRoot) {\n      this.element.appendChild(togglerLink);\n    }\n\n    if (!this.skipChildren) {\n      this.element.appendChild(children);\n    } else {\n      // remove togglerIcon\n      togglerLink.removeChild(togglerIcon);\n    }\n\n    // if formatter is set to be open call appendChildren\n    if (this.isObject && this.isOpen) {\n      this.appendChildren();\n    }\n\n    // add event listener for toggling\n    if (this.isObject) {\n      togglerLink.addEventListener('click', this.toggleOpen.bind(this));\n    }\n\n    return this.element as HTMLDivElement;\n  }\n\n  /**\n   * Appends all the children to children element\n   * Animated option is used when user triggers this via a click\n   */\n  appendChildren(animated = false) {\n    const children = this.element && this.element.querySelector(`div.${cssClass('children')}`);\n\n    if (!children || this.isEmpty) {\n      return;\n    }\n\n    if (animated) {\n      let index = 0;\n      const addAChild = () => {\n        const key = this.keys[index];\n        const formatter = new JsonExplorer(this.json[key], this.open - 1, this.config, key);\n        children.appendChild(formatter.render());\n\n        index += 1;\n\n        if (index < this.keys.length) {\n          if (index > MAX_ANIMATED_TOGGLE_ITEMS) {\n            addAChild();\n          } else {\n            requestAnimationFrame(addAChild);\n          }\n        }\n      };\n\n      requestAnimationFrame(addAChild);\n    } else {\n      this.keys.forEach((key) => {\n        const formatter = new JsonExplorer(this.json[key], this.open - 1, this.config, key);\n        children.appendChild(formatter.render());\n      });\n    }\n  }\n\n  /**\n   * Removes all the children from children element\n   * Animated option is used when user triggers this via a click\n   */\n  removeChildren(animated = false) {\n    const childrenElement =\n      this.element && (this.element.querySelector(`div.${cssClass('children')}`) as HTMLDivElement);\n\n    if (animated) {\n      let childrenRemoved = 0;\n      const removeAChild = () => {\n        if (childrenElement && childrenElement.children.length) {\n          childrenElement.removeChild(childrenElement.children[0]);\n          childrenRemoved += 1;\n          if (childrenRemoved > MAX_ANIMATED_TOGGLE_ITEMS) {\n            removeAChild();\n          } else {\n            requestAnimationFrame(removeAChild);\n          }\n        }\n      };\n      requestAnimationFrame(removeAChild);\n    } else {\n      if (childrenElement) {\n        childrenElement.innerHTML = '';\n      }\n    }\n  }\n}\n","import React, { PureComponent, createRef } from 'react';\n\nimport { JsonExplorer, JsonExplorerConfig } from './json_explorer/json_explorer'; // We have made some monkey-patching of json-formatter-js so we can't switch right now\n\ninterface Props {\n  className?: string;\n  json: {};\n  config?: JsonExplorerConfig;\n  open?: number;\n  onDidRender?: (formattedJson: any) => void;\n}\n\nexport class JSONFormatter extends PureComponent<Props> {\n  private wrapperRef = createRef<HTMLDivElement>();\n\n  static defaultProps = {\n    open: 3,\n    config: {\n      animateOpen: true,\n    },\n  };\n\n  componentDidMount() {\n    this.renderJson();\n  }\n\n  componentDidUpdate() {\n    this.renderJson();\n  }\n\n  renderJson = () => {\n    const { json, config, open, onDidRender } = this.props;\n    const wrapperEl = this.wrapperRef.current;\n    const formatter = new JsonExplorer(json, open, config);\n    // @ts-ignore\n    const hasChildren: boolean = wrapperEl.hasChildNodes();\n    if (hasChildren) {\n      // @ts-ignore\n      wrapperEl.replaceChild(formatter.render(), wrapperEl.lastChild);\n    } else {\n      // @ts-ignore\n      wrapperEl.appendChild(formatter.render());\n    }\n\n    if (onDidRender) {\n      onDidRender(formatter.json);\n    }\n  };\n\n  render() {\n    const { className } = this.props;\n    return <div className={className} ref={this.wrapperRef} />;\n  }\n}\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { stylesFactory } from '../../themes';\n\nimport { ErrorBoundaryApi } from './ErrorBoundary';\n\nconst getStyles = stylesFactory(() => {\n  return css`\n    width: 500px;\n    margin: 64px auto;\n  `;\n});\n\nexport interface Props extends ErrorBoundaryApi {\n  title: string;\n}\n\nexport const ErrorWithStack = ({ error, errorInfo, title }: Props) => (\n  <div className={getStyles()}>\n    <h2>{title}</h2>\n    <details style={{ whiteSpace: 'pre-wrap' }}>\n      {error && error.toString()}\n      <br />\n      {errorInfo && errorInfo.componentStack}\n    </details>\n  </div>\n);\n\nErrorWithStack.displayName = 'ErrorWithStack';\n","import { captureException } from '@sentry/browser';\nimport React, { PureComponent, ReactNode, ComponentType } from 'react';\n\nimport { faro } from '@grafana/faro-web-sdk';\n\nimport { Alert } from '../Alert/Alert';\n\nimport { ErrorWithStack } from './ErrorWithStack';\n\nexport interface ErrorInfo {\n  componentStack: string;\n}\n\nexport interface ErrorBoundaryApi {\n  error: Error | null;\n  errorInfo: ErrorInfo | null;\n}\n\ninterface Props {\n  children: (r: ErrorBoundaryApi) => ReactNode;\n  /** Will re-render children after error if recover values changes */\n  dependencies?: unknown[];\n  /** Callback called on error */\n  onError?: (error: Error) => void;\n  /** Callback error state is cleared due to recover props change */\n  onRecover?: () => void;\n}\n\ninterface State {\n  error: Error | null;\n  errorInfo: ErrorInfo | null;\n}\n\nexport class ErrorBoundary extends PureComponent<Props, State> {\n  readonly state: State = {\n    error: null,\n    errorInfo: null,\n  };\n\n  componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    captureException(error, { contexts: { react: { componentStack: errorInfo.componentStack } } });\n    faro?.api?.pushError(error);\n    this.setState({ error, errorInfo });\n\n    if (this.props.onError) {\n      this.props.onError(error);\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { dependencies, onRecover } = this.props;\n\n    if (this.state.error) {\n      if (dependencies && prevProps.dependencies) {\n        for (let i = 0; i < dependencies.length; i++) {\n          if (dependencies[i] !== prevProps.dependencies[i]) {\n            this.setState({ error: null, errorInfo: null });\n            if (onRecover) {\n              onRecover();\n            }\n            break;\n          }\n        }\n      }\n    }\n  }\n\n  render() {\n    const { children } = this.props;\n    const { error, errorInfo } = this.state;\n\n    return children({\n      error,\n      errorInfo,\n    });\n  }\n}\n\n/**\n * Props for the ErrorBoundaryAlert component\n *\n * @public\n */\nexport interface ErrorBoundaryAlertProps {\n  /** Title for the error boundary alert */\n  title?: string;\n\n  /** Component to be wrapped with an error boundary */\n  children: ReactNode;\n\n  /** 'page' will render full page error with stacktrace. 'alertbox' will render an <Alert />. Default 'alertbox' */\n  style?: 'page' | 'alertbox';\n\n  /** Will re-render children after error if recover values changes */\n  dependencies?: unknown[];\n}\n\nexport class ErrorBoundaryAlert extends PureComponent<ErrorBoundaryAlertProps> {\n  static defaultProps: Partial<ErrorBoundaryAlertProps> = {\n    title: 'An unexpected error happened',\n    style: 'alertbox',\n  };\n\n  render() {\n    const { title, children, style, dependencies } = this.props;\n\n    return (\n      <ErrorBoundary dependencies={dependencies}>\n        {({ error, errorInfo }) => {\n          if (!errorInfo) {\n            return children;\n          }\n\n          if (style === 'alertbox') {\n            return (\n              <Alert title={title || ''}>\n                <details style={{ whiteSpace: 'pre-wrap' }}>\n                  {error && error.toString()}\n                  <br />\n                  {errorInfo.componentStack}\n                </details>\n              </Alert>\n            );\n          }\n\n          return <ErrorWithStack title={title || ''} error={error} errorInfo={errorInfo} />;\n        }}\n      </ErrorBoundary>\n    );\n  }\n}\n\n/**\n * HOC for wrapping a component in an error boundary.\n *\n * @param Component - the react component to wrap in error boundary\n * @param errorBoundaryProps - error boundary options\n *\n * @public\n */\nexport function withErrorBoundary<P extends {} = {}>(\n  Component: ComponentType<P>,\n  errorBoundaryProps: Omit<ErrorBoundaryAlertProps, 'children'> = {}\n): ComponentType<P> {\n  const comp = (props: P) => (\n    <ErrorBoundaryAlert {...errorBoundaryProps}>\n      <Component {...props} />\n    </ErrorBoundaryAlert>\n  );\n  comp.displayName = 'WithErrorBoundary';\n\n  return comp;\n}\n","import { css, cx } from '@emotion/css';\nimport React, { useCallback } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\nimport { Icon } from '../Icon/Icon';\nimport { PopoverContent, Tooltip } from '../Tooltip';\n\nimport { LabelProps } from './Label';\n\nexport interface Props extends Omit<LabelProps, 'css' | 'description' | 'category'> {\n  /** Content for the labels tooltip. If provided, an info icon with the tooltip content\n   * will be displayed */\n  tooltip?: PopoverContent;\n  /** Custom width for the label */\n  width?: number | 'auto';\n  /** Make labels's background transparent */\n  transparent?: boolean;\n  /** Make tooltip interactive */\n  interactive?: boolean;\n  /** @beta */\n  /** Controls which element the InlineLabel should be rendered into */\n  as?: React.ElementType;\n}\n\nexport const InlineLabel = ({\n  children,\n  className,\n  tooltip,\n  width,\n  transparent,\n  interactive,\n  as: Component = 'label',\n  ...rest\n}: Props) => {\n  const styles = useStyles2(\n    useCallback((theme) => getInlineLabelStyles(theme, transparent, width), [transparent, width])\n  );\n\n  return (\n    <Component className={cx(styles.label, className)} {...rest}>\n      {children}\n      {tooltip && (\n        <Tooltip interactive={interactive} placement=\"top\" content={tooltip} theme=\"info\">\n          <Icon tabIndex={0} name=\"info-circle\" size=\"sm\" className={styles.icon} />\n        </Tooltip>\n      )}\n    </Component>\n  );\n};\n\nexport const getInlineLabelStyles = (theme: GrafanaTheme2, transparent = false, width?: number | 'auto') => {\n  return {\n    label: css`\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      flex-shrink: 0;\n      padding: 0 ${theme.spacing(1)};\n      font-weight: ${theme.typography.fontWeightMedium};\n      font-size: ${theme.typography.size.sm};\n      background-color: ${transparent ? 'transparent' : theme.colors.background.secondary};\n      height: ${theme.spacing(theme.components.height.md)};\n      line-height: ${theme.spacing(theme.components.height.md)};\n      margin-right: ${theme.spacing(0.5)};\n      border-radius: ${theme.shape.radius.default};\n      border: none;\n      width: ${width ? (width !== 'auto' ? `${8 * width}px` : width) : '100%'};\n      color: ${theme.colors.text.primary};\n    `,\n    icon: css`\n      color: ${theme.colors.text.secondary};\n      margin-left: 10px;\n\n      :hover {\n        color: ${theme.colors.text.primary};\n      }\n    `,\n  };\n};\n","import { cx, css } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useTheme2 } from '../../themes';\nimport { getChildId } from '../../utils/reactUtils';\nimport { PopoverContent } from '../Tooltip';\n\nimport { FieldProps } from './Field';\nimport { FieldValidationMessage } from './FieldValidationMessage';\nimport { InlineLabel } from './InlineLabel';\n\nexport interface Props extends Omit<FieldProps, 'css' | 'horizontal' | 'description' | 'error'> {\n  /** Content for the label's tooltip */\n  tooltip?: PopoverContent;\n  /** Custom width for the label as a multiple of 8px */\n  labelWidth?: number | 'auto';\n  /** Make the field's child to fill the width of the row. Equivalent to setting `flex-grow:1` on the field */\n  grow?: boolean;\n  /** Make the field's child shrink with width of the row. Equivalent to setting `flex-shrink:1` on the field */\n  shrink?: boolean;\n  /** Make field's background transparent */\n  transparent?: boolean;\n  /** Error message to display */\n  error?: string | null;\n  htmlFor?: string;\n  /** Make tooltip interactive */\n  interactive?: boolean;\n}\n\nexport const InlineField = ({\n  children,\n  label,\n  tooltip,\n  labelWidth = 'auto',\n  invalid,\n  loading,\n  disabled,\n  required,\n  className,\n  htmlFor,\n  grow,\n  shrink,\n  error,\n  transparent,\n  interactive,\n  ...htmlProps\n}: Props) => {\n  const theme = useTheme2();\n  const styles = getStyles(theme, grow, shrink);\n  const inputId = htmlFor ?? getChildId(children);\n\n  const labelElement =\n    typeof label === 'string' ? (\n      <InlineLabel\n        interactive={interactive}\n        width={labelWidth}\n        tooltip={tooltip}\n        htmlFor={inputId}\n        transparent={transparent}\n      >\n        {`${label}${required ? ' *' : ''}`}\n      </InlineLabel>\n    ) : (\n      label\n    );\n\n  return (\n    <div className={cx(styles.container, className)} {...htmlProps}>\n      {labelElement}\n      <div className={styles.childContainer}>\n        {React.cloneElement(children, { invalid, disabled, loading })}\n        {invalid && error && (\n          <div className={cx(styles.fieldValidationWrapper)}>\n            <FieldValidationMessage>{error}</FieldValidationMessage>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nInlineField.displayName = 'InlineField';\n\nconst getStyles = (theme: GrafanaTheme2, grow?: boolean, shrink?: boolean) => {\n  return {\n    container: css`\n      display: flex;\n      flex-direction: row;\n      align-items: flex-start;\n      text-align: left;\n      position: relative;\n      flex: ${grow ? 1 : 0} ${shrink ? 1 : 0} auto;\n      margin: 0 ${theme.spacing(0.5)} ${theme.spacing(0.5)} 0;\n    `,\n    childContainer: css`\n      flex: ${grow ? 1 : 0} ${shrink ? 1 : 0} auto;\n    `,\n    fieldValidationWrapper: css`\n      margin-top: ${theme.spacing(0.5)};\n    `,\n  };\n};\n","import React from 'react';\n\nimport { InlineField } from '../..';\nimport { FormField } from '../FormField/FormField';\nimport { SecretFormField } from '../SecretFormField/SecretFormField';\n\nimport { HttpSettingsProps } from './types';\n\nexport const BasicAuthSettings = ({ dataSourceConfig, onChange }: HttpSettingsProps) => {\n  const password = dataSourceConfig.secureJsonData ? dataSourceConfig.secureJsonData.basicAuthPassword : '';\n\n  const onPasswordReset = () => {\n    onChange({\n      ...dataSourceConfig,\n      secureJsonData: {\n        ...dataSourceConfig.secureJsonData,\n        basicAuthPassword: '',\n      },\n      secureJsonFields: {\n        ...dataSourceConfig.secureJsonFields,\n        basicAuthPassword: false,\n      },\n    });\n  };\n\n  const onPasswordChange = (event: React.SyntheticEvent<HTMLInputElement>) => {\n    onChange({\n      ...dataSourceConfig,\n      secureJsonData: {\n        ...dataSourceConfig.secureJsonData,\n        basicAuthPassword: event.currentTarget.value,\n      },\n    });\n  };\n\n  return (\n    <>\n      <InlineField disabled={dataSourceConfig.readOnly}>\n        <FormField\n          label=\"User\"\n          labelWidth={10}\n          inputWidth={18}\n          placeholder=\"user\"\n          value={dataSourceConfig.basicAuthUser}\n          onChange={(event) => onChange({ ...dataSourceConfig, basicAuthUser: event.currentTarget.value })}\n        />\n      </InlineField>\n      <InlineField disabled={dataSourceConfig.readOnly}>\n        <SecretFormField\n          isConfigured={!!(dataSourceConfig.secureJsonFields && dataSourceConfig.secureJsonFields.basicAuthPassword)}\n          value={password || ''}\n          inputWidth={18}\n          labelWidth={10}\n          onReset={onPasswordReset}\n          onChange={onPasswordChange}\n        />\n      </InlineField>\n    </>\n  );\n};\n","import { css } from '@emotion/css';\nimport { uniqueId } from 'lodash';\nimport React, { PureComponent } from 'react';\n\nimport { DataSourceSettings } from '@grafana/data';\n\nimport { stylesFactory } from '../../themes';\nimport { Button } from '../Button';\nimport { FormField } from '../FormField/FormField';\nimport { Icon } from '../Icon/Icon';\nimport { SecretFormField } from '../SecretFormField/SecretFormField';\n\nexport interface CustomHeader {\n  id: string;\n  name: string;\n  value: string;\n  configured: boolean;\n}\n\nexport type CustomHeaders = CustomHeader[];\n\nexport interface Props {\n  dataSourceConfig: DataSourceSettings<any, any>;\n  onChange: (config: DataSourceSettings) => void;\n}\n\nexport interface State {\n  headers: CustomHeaders;\n}\n\ninterface CustomHeaderRowProps {\n  header: CustomHeader;\n  onReset: (id: string) => void;\n  onRemove: (id: string) => void;\n  onChange: (value: CustomHeader) => void;\n  onBlur: () => void;\n}\n\nconst getCustomHeaderRowStyles = stylesFactory(() => {\n  return {\n    layout: css`\n      display: flex;\n      align-items: center;\n      margin-bottom: 4px;\n      > * {\n        margin-left: 4px;\n        margin-bottom: 0;\n        height: 100%;\n        &:first-child,\n        &:last-child {\n          margin-left: 0;\n        }\n      }\n    `,\n  };\n});\n\nconst CustomHeaderRow = ({ header, onBlur, onChange, onRemove, onReset }: CustomHeaderRowProps) => {\n  const styles = getCustomHeaderRowStyles();\n  return (\n    <div className={styles.layout}>\n      <FormField\n        label=\"Header\"\n        name=\"name\"\n        placeholder=\"X-Custom-Header\"\n        labelWidth={5}\n        value={header.name || ''}\n        onChange={(e) => onChange({ ...header, name: e.target.value })}\n        onBlur={onBlur}\n      />\n      <SecretFormField\n        label=\"Value\"\n        aria-label=\"Value\"\n        name=\"value\"\n        isConfigured={header.configured}\n        value={header.value}\n        labelWidth={5}\n        inputWidth={header.configured ? 11 : 12}\n        placeholder=\"Header Value\"\n        onReset={() => onReset(header.id)}\n        onChange={(e) => onChange({ ...header, value: e.target.value })}\n        onBlur={onBlur}\n      />\n      <Button\n        type=\"button\"\n        aria-label=\"Remove header\"\n        variant=\"secondary\"\n        size=\"xs\"\n        onClick={(_e) => onRemove(header.id)}\n      >\n        <Icon name=\"trash-alt\" />\n      </Button>\n    </div>\n  );\n};\n\nCustomHeaderRow.displayName = 'CustomHeaderRow';\n\nexport class CustomHeadersSettings extends PureComponent<Props, State> {\n  state: State = {\n    headers: [],\n  };\n\n  constructor(props: Props) {\n    super(props);\n    const { jsonData, secureJsonData, secureJsonFields } = this.props.dataSourceConfig;\n    this.state = {\n      headers: Object.keys(jsonData)\n        .sort()\n        .filter((key) => key.startsWith('httpHeaderName'))\n        .map((key, index) => {\n          return {\n            id: uniqueId(),\n            name: jsonData[key],\n            value: secureJsonData !== undefined ? secureJsonData[key] : '',\n            configured: (secureJsonFields && secureJsonFields[`httpHeaderValue${index + 1}`]) || false,\n          };\n        }),\n    };\n  }\n\n  updateSettings = () => {\n    const { headers } = this.state;\n\n    // we remove every httpHeaderName* field\n    const newJsonData = Object.fromEntries(\n      Object.entries(this.props.dataSourceConfig.jsonData).filter(([key, val]) => !key.startsWith('httpHeaderName'))\n    );\n\n    // we remove every httpHeaderValue* field\n    const newSecureJsonData = Object.fromEntries(\n      Object.entries(this.props.dataSourceConfig.secureJsonData || {}).filter(\n        ([key, val]) => !key.startsWith('httpHeaderValue')\n      )\n    );\n\n    // then we add the current httpHeader-fields\n    for (const [index, header] of headers.entries()) {\n      newJsonData[`httpHeaderName${index + 1}`] = header.name;\n      if (!header.configured) {\n        newSecureJsonData[`httpHeaderValue${index + 1}`] = header.value;\n      }\n    }\n\n    this.props.onChange({\n      ...this.props.dataSourceConfig,\n      jsonData: newJsonData,\n      secureJsonData: newSecureJsonData,\n    });\n  };\n\n  onHeaderAdd = () => {\n    this.setState((prevState) => {\n      return { headers: [...prevState.headers, { id: uniqueId(), name: '', value: '', configured: false }] };\n    });\n  };\n\n  onHeaderChange = (headerIndex: number, value: CustomHeader) => {\n    this.setState(({ headers }) => {\n      return {\n        headers: headers.map((item, index) => {\n          if (headerIndex !== index) {\n            return item;\n          }\n          return { ...value };\n        }),\n      };\n    });\n  };\n\n  onHeaderReset = (headerId: string) => {\n    this.setState(({ headers }) => {\n      return {\n        headers: headers.map((h, i) => {\n          if (h.id !== headerId) {\n            return h;\n          }\n          return {\n            ...h,\n            value: '',\n            configured: false,\n          };\n        }),\n      };\n    });\n  };\n\n  onHeaderRemove = (headerId: string) => {\n    this.setState(\n      ({ headers }) => ({\n        headers: headers.filter((h) => h.id !== headerId),\n      }),\n      this.updateSettings\n    );\n  };\n\n  render() {\n    const { headers } = this.state;\n    const { dataSourceConfig } = this.props;\n\n    return (\n      <div className={'gf-form-group'}>\n        <div className=\"gf-form\">\n          <h6>Custom HTTP Headers</h6>\n        </div>\n        <div>\n          {headers.map((header, i) => (\n            <CustomHeaderRow\n              key={header.id}\n              header={header}\n              onChange={(h) => {\n                this.onHeaderChange(i, h);\n              }}\n              onBlur={this.updateSettings}\n              onRemove={this.onHeaderRemove}\n              onReset={this.onHeaderReset}\n            />\n          ))}\n        </div>\n        {!dataSourceConfig.readOnly && (\n          <div className=\"gf-form\">\n            <Button\n              variant=\"secondary\"\n              icon=\"plus\"\n              type=\"button\"\n              onClick={(e) => {\n                this.onHeaderAdd();\n              }}\n            >\n              Add header\n            </Button>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default CustomHeadersSettings;\n","import React from 'react';\n\nimport { InlineField } from '../Forms/InlineField';\nimport { InlineSwitch } from '../Switch/Switch';\n\nimport { HttpSettingsBaseProps } from './types';\n\nconst LABEL_WIDTH = 26;\n\nexport const HttpProxySettings = ({\n  dataSourceConfig,\n  onChange,\n  showForwardOAuthIdentityOption = true,\n}: HttpSettingsBaseProps) => {\n  return (\n    <>\n      <div className=\"gf-form-inline\">\n        <InlineField label=\"TLS Client Auth\" labelWidth={LABEL_WIDTH} disabled={dataSourceConfig.readOnly}>\n          <InlineSwitch\n            id=\"http-settings-tls-client-auth\"\n            value={dataSourceConfig.jsonData.tlsAuth || false}\n            onChange={(event) => onChange({ ...dataSourceConfig.jsonData, tlsAuth: event!.currentTarget.checked })}\n          />\n        </InlineField>\n        <InlineField\n          label=\"With CA Cert\"\n          tooltip=\"Needed for verifying self-signed TLS Certs\"\n          labelWidth={LABEL_WIDTH}\n          disabled={dataSourceConfig.readOnly}\n        >\n          <InlineSwitch\n            id=\"http-settings-ca-cert\"\n            value={dataSourceConfig.jsonData.tlsAuthWithCACert || false}\n            onChange={(event) =>\n              onChange({ ...dataSourceConfig.jsonData, tlsAuthWithCACert: event!.currentTarget.checked })\n            }\n          />\n        </InlineField>\n      </div>\n      <div className=\"gf-form-inline\">\n        <InlineField label=\"Skip TLS Verify\" labelWidth={LABEL_WIDTH} disabled={dataSourceConfig.readOnly}>\n          <InlineSwitch\n            id=\"http-settings-skip-tls-verify\"\n            value={dataSourceConfig.jsonData.tlsSkipVerify || false}\n            onChange={(event) =>\n              onChange({ ...dataSourceConfig.jsonData, tlsSkipVerify: event!.currentTarget.checked })\n            }\n          />\n        </InlineField>\n      </div>\n      {showForwardOAuthIdentityOption && (\n        <div className=\"gf-form-inline\">\n          <InlineField\n            label=\"Forward OAuth Identity\"\n            tooltip=\"Forward the user's upstream OAuth identity to the data source (Their access token gets passed along).\"\n            labelWidth={LABEL_WIDTH}\n            disabled={dataSourceConfig.readOnly}\n          >\n            <InlineSwitch\n              id=\"http-settings-forward-oauth\"\n              value={dataSourceConfig.jsonData.oauthPassThru || false}\n              onChange={(event) =>\n                onChange({ ...dataSourceConfig.jsonData, oauthPassThru: event!.currentTarget.checked })\n              }\n            />\n          </InlineField>\n        </div>\n      )}\n    </>\n  );\n};\n","import { css, cx } from '@emotion/css';\nimport React, { HTMLProps, ReactNode } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\n\nexport interface Props extends Omit<HTMLProps<HTMLDivElement>, 'css'> {\n  children: ReactNode | ReactNode[];\n}\n\nexport const InlineFieldRow = ({ children, className, ...htmlProps }: Props) => {\n  const styles = useStyles2(getStyles);\n  return (\n    <div className={cx(styles.container, className)} {...htmlProps}>\n      {children}\n    </div>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    container: css`\n      label: InlineFieldRow;\n      display: flex;\n      flex-direction: row;\n      flex-wrap: wrap;\n      align-content: flex-start;\n      row-gap: ${theme.spacing(0.5)};\n    `,\n  };\n};\n","import React, { ChangeEvent, MouseEvent } from 'react';\n\nimport { Button } from '../Button';\nimport { InlineField } from '../Forms/InlineField';\nimport { InlineFieldRow } from '../Forms/InlineFieldRow';\nimport { Input } from '../Input/Input';\nimport { TextArea } from '../TextArea/TextArea';\n\ninterface Props {\n  label: string;\n  hasCert: boolean;\n  placeholder: string;\n\n  onChange: (event: ChangeEvent<HTMLTextAreaElement>) => void;\n  onClick: (event: MouseEvent<HTMLButtonElement>) => void;\n}\n\nexport const CertificationKey = ({ hasCert, label, onChange, onClick, placeholder }: Props) => {\n  return (\n    <InlineFieldRow>\n      <InlineField label={label} labelWidth={14} disabled={hasCert}>\n        {hasCert ? (\n          <Input type=\"text\" value=\"configured\" width={24} />\n        ) : (\n          <TextArea rows={7} onChange={onChange} placeholder={placeholder} required />\n        )}\n      </InlineField>\n      {hasCert && (\n        <Button variant=\"secondary\" onClick={onClick} style={{ marginLeft: 4 }}>\n          Reset\n        </Button>\n      )}\n    </InlineFieldRow>\n  );\n};\n","import { css, cx } from '@emotion/css';\nimport React from 'react';\n\nimport { KeyValue } from '@grafana/data';\n\nimport { FormField } from '../FormField/FormField';\nimport { Icon } from '../Icon/Icon';\nimport { Tooltip } from '../Tooltip/Tooltip';\n\nimport { CertificationKey } from './CertificationKey';\nimport { HttpSettingsBaseProps } from './types';\n\nexport const TLSAuthSettings = ({ dataSourceConfig, onChange }: HttpSettingsBaseProps) => {\n  const hasTLSCACert = dataSourceConfig.secureJsonFields && dataSourceConfig.secureJsonFields.tlsCACert;\n  const hasTLSClientCert = dataSourceConfig.secureJsonFields && dataSourceConfig.secureJsonFields.tlsClientCert;\n  const hasTLSClientKey = dataSourceConfig.secureJsonFields && dataSourceConfig.secureJsonFields.tlsClientKey;\n  const hasServerName = dataSourceConfig.jsonData && dataSourceConfig.jsonData.serverName;\n\n  const onResetClickFactory = (field: string) => (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n    const newSecureJsonFields: KeyValue<boolean> = { ...dataSourceConfig.secureJsonFields };\n    newSecureJsonFields[field] = false;\n    onChange({\n      ...dataSourceConfig,\n      secureJsonFields: newSecureJsonFields,\n    });\n  };\n\n  const onCertificateChangeFactory = (field: string) => (event: React.SyntheticEvent<HTMLTextAreaElement>) => {\n    const newSecureJsonData = { ...dataSourceConfig.secureJsonData };\n    newSecureJsonData[field] = event.currentTarget.value;\n\n    onChange({\n      ...dataSourceConfig,\n      secureJsonData: newSecureJsonData,\n    });\n  };\n\n  const onServerNameLabelChange = (event: React.SyntheticEvent<HTMLInputElement>) => {\n    const newJsonData = {\n      ...dataSourceConfig.jsonData,\n      serverName: event.currentTarget.value,\n    };\n\n    onChange({\n      ...dataSourceConfig,\n      jsonData: newJsonData,\n    });\n  };\n\n  return (\n    <div className=\"gf-form-group\">\n      <div\n        className={cx(\n          'gf-form',\n          css`\n            align-items: baseline;\n          `\n        )}\n      >\n        <h6>TLS/SSL Auth Details</h6>\n        <Tooltip\n          placement=\"right-end\"\n          content=\"TLS/SSL Certs are encrypted and stored in the Grafana database.\"\n          theme=\"info\"\n        >\n          <div className=\"gf-form-help-icon gf-form-help-icon--right-normal\">\n            <Icon name=\"info-circle\" size=\"xs\" style={{ marginLeft: '10px' }} />\n          </div>\n        </Tooltip>\n      </div>\n      <div>\n        {dataSourceConfig.jsonData.tlsAuthWithCACert && (\n          <CertificationKey\n            hasCert={!!hasTLSCACert}\n            onChange={onCertificateChangeFactory('tlsCACert')}\n            placeholder=\"Begins with -----BEGIN CERTIFICATE-----\"\n            label=\"CA Cert\"\n            onClick={onResetClickFactory('tlsCACert')}\n          />\n        )}\n\n        {dataSourceConfig.jsonData.tlsAuth && (\n          <>\n            <div className=\"gf-form\">\n              <FormField\n                label=\"ServerName\"\n                labelWidth={7}\n                inputWidth={30}\n                placeholder=\"domain.example.com\"\n                value={hasServerName && dataSourceConfig.jsonData.serverName}\n                onChange={onServerNameLabelChange}\n              />\n            </div>\n            <CertificationKey\n              hasCert={!!hasTLSClientCert}\n              label=\"Client Cert\"\n              onChange={onCertificateChangeFactory('tlsClientCert')}\n              placeholder=\"Begins with -----BEGIN CERTIFICATE-----\"\n              onClick={onResetClickFactory('tlsClientCert')}\n            />\n\n            <CertificationKey\n              hasCert={!!hasTLSClientKey}\n              label=\"Client Key\"\n              placeholder=\"Begins with -----BEGIN RSA PRIVATE KEY-----\"\n              onChange={onCertificateChangeFactory('tlsClientKey')}\n              onClick={onResetClickFactory('tlsClientKey')}\n            />\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n","import { css, cx } from '@emotion/css';\nimport React, { useState, useCallback } from 'react';\n\nimport { DataSourceSettings, SelectableValue } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\n\nimport { useTheme2 } from '../../themes';\nimport { FormField } from '../FormField/FormField';\nimport { InlineFormLabel } from '../FormLabel/FormLabel';\nimport { InlineField } from '../Forms/InlineField';\nimport { Input } from '../Forms/Legacy/Input/Input';\nimport { Icon } from '../Icon/Icon';\nimport { Select } from '../Select/Select';\nimport { InlineSwitch } from '../Switch/Switch';\nimport { TagsInput } from '../TagsInput/TagsInput';\n\nimport { BasicAuthSettings } from './BasicAuthSettings';\nimport { CustomHeadersSettings } from './CustomHeadersSettings';\nimport { HttpProxySettings } from './HttpProxySettings';\nimport { TLSAuthSettings } from './TLSAuthSettings';\nimport { HttpSettingsProps } from './types';\n\nconst ACCESS_OPTIONS: Array<SelectableValue<string>> = [\n  {\n    label: 'Server (default)',\n    value: 'proxy',\n  },\n  {\n    label: 'Browser',\n    value: 'direct',\n  },\n];\n\nconst DEFAULT_ACCESS_OPTION = {\n  label: 'Server (default)',\n  value: 'proxy',\n};\n\nconst HttpAccessHelp = () => (\n  <div className=\"grafana-info-box m-t-2\">\n    <p>\n      Access mode controls how requests to the data source will be handled.\n      <strong>\n        &nbsp;<i>Server</i>\n      </strong>{' '}\n      should be the preferred way if nothing else is stated.\n    </p>\n    <div className=\"alert-title\">Server access mode (Default):</div>\n    <p>\n      All requests will be made from the browser to Grafana backend/server which in turn will forward the requests to\n      the data source and by that circumvent possible Cross-Origin Resource Sharing (CORS) requirements. The URL needs\n      to be accessible from the grafana backend/server if you select this access mode.\n    </p>\n    <div className=\"alert-title\">Browser access mode:</div>\n    <p>\n      All requests will be made from the browser directly to the data source and may be subject to Cross-Origin Resource\n      Sharing (CORS) requirements. The URL needs to be accessible from the browser if you select this access mode.\n    </p>\n  </div>\n);\n\nconst LABEL_WIDTH = 26;\n\nexport const DataSourceHttpSettings = (props: HttpSettingsProps) => {\n  const {\n    defaultUrl,\n    dataSourceConfig,\n    onChange,\n    showAccessOptions,\n    sigV4AuthToggleEnabled,\n    showForwardOAuthIdentityOption,\n    azureAuthSettings,\n    renderSigV4Editor,\n  } = props;\n  let urlTooltip;\n  const [isAccessHelpVisible, setIsAccessHelpVisible] = useState(false);\n  const theme = useTheme2();\n\n  const onSettingsChange = useCallback(\n    (change: Partial<DataSourceSettings<any, any>>) => {\n      onChange({\n        ...dataSourceConfig,\n        ...change,\n      });\n    },\n    [dataSourceConfig, onChange]\n  );\n\n  switch (dataSourceConfig.access) {\n    case 'direct':\n      urlTooltip = (\n        <>\n          Your access method is <em>Browser</em>, this means the URL needs to be accessible from the browser.\n        </>\n      );\n      break;\n    case 'proxy':\n      urlTooltip = (\n        <>\n          Your access method is <em>Server</em>, this means the URL needs to be accessible from the grafana\n          backend/server.\n        </>\n      );\n      break;\n    default:\n      urlTooltip = 'Specify a complete HTTP URL (for example http://your_server:8080)';\n  }\n\n  const accessSelect = (\n    <Select\n      aria-label=\"Access\"\n      className=\"width-20 gf-form-input\"\n      options={ACCESS_OPTIONS}\n      value={ACCESS_OPTIONS.filter((o) => o.value === dataSourceConfig.access)[0] || DEFAULT_ACCESS_OPTION}\n      onChange={(selectedValue) => onSettingsChange({ access: selectedValue.value })}\n      disabled={dataSourceConfig.readOnly}\n    />\n  );\n\n  const isValidUrl = /^(ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?$/.test(\n    dataSourceConfig.url\n  );\n\n  const notValidStyle = css`\n    box-shadow: inset 0 0px 5px ${theme.v1.palette.red};\n  `;\n\n  const inputStyle = cx({ [`width-20`]: true, [notValidStyle]: !isValidUrl });\n\n  const urlInput = (\n    <Input\n      className={inputStyle}\n      placeholder={defaultUrl}\n      value={dataSourceConfig.url}\n      aria-label={selectors.components.DataSource.DataSourceHttpSettings.urlInput}\n      onChange={(event) => onSettingsChange({ url: event.currentTarget.value })}\n      disabled={dataSourceConfig.readOnly}\n    />\n  );\n\n  const azureAuthEnabled: boolean =\n    (azureAuthSettings?.azureAuthSupported && azureAuthSettings.getAzureAuthEnabled(dataSourceConfig)) || false;\n\n  return (\n    <div className=\"gf-form-group\">\n      <>\n        <h3 className=\"page-heading\">HTTP</h3>\n        <div className=\"gf-form-group\">\n          <div className=\"gf-form\">\n            <FormField label=\"URL\" labelWidth={13} tooltip={urlTooltip} inputEl={urlInput} />\n          </div>\n\n          {showAccessOptions && (\n            <>\n              <div className=\"gf-form-inline\">\n                <div className=\"gf-form\">\n                  <FormField label=\"Access\" labelWidth={13} inputWidth={20} inputEl={accessSelect} />\n                </div>\n                <div className=\"gf-form\">\n                  <button\n                    type=\"button\"\n                    className=\"gf-form-label query-keyword pointer\"\n                    onClick={() => setIsAccessHelpVisible((isVisible) => !isVisible)}\n                  >\n                    Help&nbsp;\n                    <Icon name={isAccessHelpVisible ? 'angle-down' : 'angle-right'} style={{ marginBottom: 0 }} />\n                  </button>\n                </div>\n              </div>\n              {isAccessHelpVisible && <HttpAccessHelp />}\n            </>\n          )}\n          {dataSourceConfig.access === 'proxy' && (\n            <div className=\"gf-form-group\">\n              <div className=\"gf-form\">\n                <InlineFormLabel\n                  width={13}\n                  tooltip=\"Grafana proxy deletes forwarded cookies by default. Specify cookies by name that should be forwarded to the data source.\"\n                >\n                  Allowed cookies\n                </InlineFormLabel>\n                <TagsInput\n                  tags={dataSourceConfig.jsonData.keepCookies}\n                  width={40}\n                  onChange={(cookies) =>\n                    onSettingsChange({ jsonData: { ...dataSourceConfig.jsonData, keepCookies: cookies } })\n                  }\n                  disabled={dataSourceConfig.readOnly}\n                />\n              </div>\n              <div className=\"gf-form\">\n                <FormField\n                  label=\"Timeout\"\n                  type=\"number\"\n                  labelWidth={13}\n                  inputWidth={20}\n                  tooltip=\"HTTP request timeout in seconds\"\n                  placeholder=\"Timeout in seconds\"\n                  aria-label=\"Timeout in seconds\"\n                  value={dataSourceConfig.jsonData.timeout}\n                  onChange={(event) => {\n                    onSettingsChange({\n                      jsonData: { ...dataSourceConfig.jsonData, timeout: parseInt(event.currentTarget.value, 10) },\n                    });\n                  }}\n                  disabled={dataSourceConfig.readOnly}\n                />\n              </div>\n            </div>\n          )}\n        </div>\n      </>\n\n      <>\n        <h3 className=\"page-heading\">Auth</h3>\n        <div className=\"gf-form-group\">\n          <div className=\"gf-form-inline\">\n            <InlineField label=\"Basic auth\" labelWidth={LABEL_WIDTH} disabled={dataSourceConfig.readOnly}>\n              <InlineSwitch\n                id=\"http-settings-basic-auth\"\n                value={dataSourceConfig.basicAuth}\n                onChange={(event) => {\n                  onSettingsChange({ basicAuth: event!.currentTarget.checked });\n                }}\n              />\n            </InlineField>\n\n            <InlineField\n              label=\"With Credentials\"\n              tooltip=\"Whether credentials such as cookies or auth headers should be sent with cross-site requests.\"\n              labelWidth={LABEL_WIDTH}\n              disabled={dataSourceConfig.readOnly}\n            >\n              <InlineSwitch\n                id=\"http-settings-with-credentials\"\n                value={dataSourceConfig.withCredentials}\n                onChange={(event) => {\n                  onSettingsChange({ withCredentials: event!.currentTarget.checked });\n                }}\n              />\n            </InlineField>\n          </div>\n\n          {azureAuthSettings?.azureAuthSupported && (\n            <div className=\"gf-form-inline\">\n              <InlineField\n                label=\"Azure Authentication\"\n                tooltip=\"Use Azure authentication for Azure endpoint.\"\n                labelWidth={LABEL_WIDTH}\n                disabled={dataSourceConfig.readOnly}\n              >\n                <InlineSwitch\n                  id=\"http-settings-azure-auth\"\n                  value={azureAuthEnabled}\n                  onChange={(event) => {\n                    onSettingsChange(\n                      azureAuthSettings.setAzureAuthEnabled(dataSourceConfig, event!.currentTarget.checked)\n                    );\n                  }}\n                />\n              </InlineField>\n            </div>\n          )}\n\n          {sigV4AuthToggleEnabled && (\n            <div className=\"gf-form-inline\">\n              <InlineField label=\"SigV4 auth\" labelWidth={LABEL_WIDTH} disabled={dataSourceConfig.readOnly}>\n                <InlineSwitch\n                  id=\"http-settings-sigv4-auth\"\n                  value={dataSourceConfig.jsonData.sigV4Auth || false}\n                  onChange={(event) => {\n                    onSettingsChange({\n                      jsonData: { ...dataSourceConfig.jsonData, sigV4Auth: event!.currentTarget.checked },\n                    });\n                  }}\n                />\n              </InlineField>\n            </div>\n          )}\n\n          {dataSourceConfig.access === 'proxy' && (\n            <HttpProxySettings\n              dataSourceConfig={dataSourceConfig}\n              onChange={(jsonData) => onSettingsChange({ jsonData })}\n              showForwardOAuthIdentityOption={showForwardOAuthIdentityOption}\n            />\n          )}\n        </div>\n        {dataSourceConfig.basicAuth && (\n          <>\n            <h6>Basic Auth Details</h6>\n            <div className=\"gf-form-group\">\n              <BasicAuthSettings {...props} />\n            </div>\n          </>\n        )}\n\n        {azureAuthSettings?.azureAuthSupported && azureAuthEnabled && azureAuthSettings.azureSettingsUI && (\n          <azureAuthSettings.azureSettingsUI dataSourceConfig={dataSourceConfig} onChange={onChange} />\n        )}\n\n        {dataSourceConfig.jsonData.sigV4Auth && sigV4AuthToggleEnabled && renderSigV4Editor}\n        {(dataSourceConfig.jsonData.tlsAuth || dataSourceConfig.jsonData.tlsAuthWithCACert) && (\n          <TLSAuthSettings dataSourceConfig={dataSourceConfig} onChange={onChange} />\n        )}\n\n        {dataSourceConfig.access === 'proxy' && (\n          <CustomHeadersSettings dataSourceConfig={dataSourceConfig} onChange={onChange} />\n        )}\n      </>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { DataSourceJsonData, DataSourcePluginOptionsEditorProps } from '@grafana/data';\n\nimport { InlineSwitch } from '../../components/Switch/Switch';\nimport { InlineField } from '../Forms/InlineField';\n\nexport interface Props<T extends DataSourceJsonData>\n  extends Pick<DataSourcePluginOptionsEditorProps<T>, 'options' | 'onOptionsChange'> {}\n\nexport interface AlertingConfig extends DataSourceJsonData {\n  manageAlerts?: boolean;\n}\n\nexport function AlertingSettings<T extends AlertingConfig>({ options, onOptionsChange }: Props<T>): JSX.Element {\n  return (\n    <>\n      <h3 className=\"page-heading\">Alerting</h3>\n      <div className=\"gf-form-group\">\n        <div className=\"gf-form-inline\">\n          <div className=\"gf-form\">\n            <InlineField labelWidth={26} label=\"Manage alerts via Alerting UI\" disabled={options.readOnly}>\n              <InlineSwitch\n                value={options.jsonData.manageAlerts !== false}\n                onChange={(event) =>\n                  onOptionsChange({\n                    ...options,\n                    jsonData: { ...options.jsonData, manageAlerts: event!.currentTarget.checked },\n                  })\n                }\n              />\n            </InlineField>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","import React from 'react';\n\nimport { DataSourceJsonData, DataSourcePluginOptionsEditorProps } from '@grafana/data';\n\nimport { InlineSwitch } from '../../components/Switch/Switch';\nimport { InlineField } from '../Forms/InlineField';\n\nexport interface Props<T extends DataSourceJsonData>\n  extends Pick<DataSourcePluginOptionsEditorProps<T>, 'options' | 'onOptionsChange'> {}\n\nexport interface SecureSocksProxyConfig extends DataSourceJsonData {\n  enableSecureSocksProxy?: boolean;\n}\n\nexport function SecureSocksProxySettings<T extends SecureSocksProxyConfig>({\n  options,\n  onOptionsChange,\n}: Props<T>): JSX.Element {\n  return (\n    <>\n      <h3 className=\"page-heading\">Secure Socks Proxy</h3>\n      <div className=\"gf-form-group\">\n        <div className=\"gf-form-inline\">\n          <div className=\"gf-form\">\n            <InlineField\n              labelWidth={26}\n              label=\"Enabled\"\n              tooltip=\"Connect to this datasource via the secure socks proxy.\"\n            >\n              <InlineSwitch\n                value={options.jsonData.enableSecureSocksProxy ?? false}\n                onChange={(event) =>\n                  onOptionsChange({\n                    ...options,\n                    jsonData: { ...options.jsonData, enableSecureSocksProxy: event!.currentTarget.checked },\n                  })\n                }\n              />\n            </InlineField>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","import { css } from '@emotion/css';\n\nimport { GrafanaTheme, GrafanaTheme2 } from '@grafana/data';\n\nexport const getSegmentStyles = (theme: GrafanaTheme | GrafanaTheme2) => {\n  const palette = 'v1' in theme ? theme.v1.palette : theme.palette;\n\n  return {\n    segment: css`\n      cursor: pointer;\n      width: auto;\n    `,\n\n    queryPlaceholder: css`\n      color: ${palette.gray2};\n    `,\n\n    disabled: css`\n      cursor: not-allowed;\n      opacity: 0.65;\n      box-shadow: none;\n    `,\n  };\n};\n","import { cx } from '@emotion/css';\nimport { isObject } from 'lodash';\nimport React, { HTMLProps } from 'react';\n\nimport { SelectableValue } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\nimport { InlineLabel } from '../Forms/InlineLabel';\n\nimport { getSegmentStyles } from './styles';\n\nimport { SegmentSelect, useExpandableLabel, SegmentProps } from './';\n\nexport interface SegmentSyncProps<T> extends SegmentProps<T>, Omit<HTMLProps<HTMLDivElement>, 'value' | 'onChange'> {\n  value?: T | SelectableValue<T>;\n  onChange: (item: SelectableValue<T>) => void;\n  options: Array<SelectableValue<T>>;\n  inputMinWidth?: number;\n}\n\nexport function Segment<T>({\n  options,\n  value,\n  onChange,\n  Component,\n  className,\n  allowCustomValue,\n  allowEmptyValue,\n  placeholder,\n  disabled,\n  inputMinWidth,\n  inputPlaceholder,\n  onExpandedChange,\n  autofocus = false,\n  ...rest\n}: React.PropsWithChildren<SegmentSyncProps<T>>) {\n  const [Label, labelWidth, expanded, setExpanded] = useExpandableLabel(autofocus, onExpandedChange);\n  const width = inputMinWidth ? Math.max(inputMinWidth, labelWidth) : labelWidth;\n  const styles = useStyles2(getSegmentStyles);\n\n  if (!expanded) {\n    const label = isObject(value) ? value.label : value;\n\n    return (\n      <Label\n        disabled={disabled}\n        Component={\n          Component || (\n            <InlineLabel\n              className={cx(\n                styles.segment,\n                {\n                  [styles.queryPlaceholder]: placeholder !== undefined && !value,\n                  [styles.disabled]: disabled,\n                },\n                className\n              )}\n            >\n              {label || placeholder}\n            </InlineLabel>\n          )\n        }\n      />\n    );\n  }\n\n  return (\n    <SegmentSelect\n      {...rest}\n      value={value && !isObject(value) ? { value } : value}\n      placeholder={inputPlaceholder}\n      options={options}\n      width={width}\n      onClickOutside={() => setExpanded(false)}\n      allowCustomValue={allowCustomValue}\n      allowEmptyValue={allowEmptyValue}\n      onChange={(item) => {\n        setExpanded(false);\n        onChange(item);\n      }}\n    />\n  );\n}\n","import React, { HTMLProps, useRef } from 'react';\n\nimport { SelectableValue } from '@grafana/data';\n\nimport { useTheme2 } from '../../themes/ThemeContext';\nimport { AsyncSelect, Select } from '../Select/Select';\n\n/** @internal\n * Should be used only internally by Segment/SegmentAsync which can guarantee that SegmentSelect is hidden\n * when a value is selected. See comment below on closeMenuOnSelect()\n */\nexport interface Props<T> extends Omit<HTMLProps<HTMLDivElement>, 'value' | 'onChange'> {\n  value?: T | SelectableValue<T>;\n  options: Array<SelectableValue<T>>;\n  onChange: (item: SelectableValue<T>) => void;\n  /**\n   * If provided - AsyncSelect will be used allowing to reload options when the value in the input changes\n   */\n  loadOptions?: (inputValue: string) => Promise<Array<SelectableValue<T>>>;\n  onClickOutside: () => void;\n  width: number;\n  noOptionsMessage?: string;\n  allowCustomValue?: boolean;\n  /**\n   * If true, empty value will be passed to onChange callback otherwise using empty value\n   * will work as canceling and using the previous value\n   */\n  allowEmptyValue?: boolean;\n  placeholder?: string;\n}\n\n/** @internal */\nexport function SegmentSelect<T>({\n  value,\n  placeholder = '',\n  options = [],\n  onChange,\n  onClickOutside,\n  loadOptions = undefined,\n  width: widthPixels,\n  noOptionsMessage = '',\n  allowCustomValue = false,\n  allowEmptyValue = false,\n  ...rest\n}: React.PropsWithChildren<Props<T>>) {\n  const ref = useRef<HTMLDivElement>(null);\n  const theme = useTheme2();\n\n  let width = widthPixels > 0 ? widthPixels / theme.spacing.gridSize : undefined;\n\n  let Component;\n  let asyncOptions = {};\n  if (loadOptions) {\n    Component = AsyncSelect;\n    asyncOptions = { loadOptions, defaultOptions: true };\n  } else {\n    Component = Select;\n  }\n\n  return (\n    <div {...rest} ref={ref}>\n      <Component\n        width={width}\n        noOptionsMessage={noOptionsMessage}\n        placeholder={placeholder}\n        autoFocus={true}\n        isOpen={true}\n        onChange={onChange}\n        options={options}\n        value={value}\n        // Disable \"close menu on select\" option to avoid calling onChange() in onCloseMenu() when a value is selected.\n        // Once the value is selected the Select component (with the menu) will be hidden anyway by the parent component:\n        // Segment or SegmentAsync - hence setting this option has no UX effect.\n        closeMenuOnSelect={false}\n        onCloseMenu={() => {\n          if (ref && ref.current) {\n            // https://github.com/JedWatson/react-select/issues/188#issuecomment-279240292\n            // Unfortunately there's no other way of retrieving the value (not yet) created new option\n            const input = ref.current.querySelector('input[id^=\"react-select-\"]') as HTMLInputElement;\n            if (input && (input.value || allowEmptyValue)) {\n              onChange({ value: input.value as any, label: input.value });\n            } else {\n              onClickOutside();\n            }\n          }\n        }}\n        allowCustomValue={allowCustomValue}\n        {...asyncOptions}\n      />\n    </div>\n  );\n}\n","import { cx } from '@emotion/css';\nimport { isObject } from 'lodash';\nimport React, { HTMLProps } from 'react';\nimport { useAsyncFn } from 'react-use';\nimport { AsyncState } from 'react-use/lib/useAsync';\n\nimport { SelectableValue } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\nimport { t } from '../../utils/i18n';\nimport { InlineLabel } from '../Forms/InlineLabel';\n\nimport { SegmentSelect } from './SegmentSelect';\nimport { getSegmentStyles } from './styles';\n\nimport { useExpandableLabel, SegmentProps } from '.';\n\nexport interface SegmentAsyncProps<T> extends SegmentProps<T>, Omit<HTMLProps<HTMLDivElement>, 'value' | 'onChange'> {\n  value?: T | SelectableValue<T>;\n  loadOptions: (query?: string) => Promise<Array<SelectableValue<T>>>;\n  /**\n   *  If true options will be reloaded when user changes the value in the input,\n   *  otherwise, options will be loaded when the segment is clicked\n   */\n  reloadOptionsOnChange?: boolean;\n  onChange: (item: SelectableValue<T>) => void;\n  noOptionMessageHandler?: (state: AsyncState<Array<SelectableValue<T>>>) => string;\n  inputMinWidth?: number;\n}\n\nexport function SegmentAsync<T>({\n  value,\n  onChange,\n  loadOptions,\n  reloadOptionsOnChange = false,\n  Component,\n  className,\n  allowCustomValue,\n  allowEmptyValue,\n  disabled,\n  placeholder,\n  inputMinWidth,\n  inputPlaceholder,\n  autofocus = false,\n  onExpandedChange,\n  noOptionMessageHandler = mapStateToNoOptionsMessage,\n  ...rest\n}: React.PropsWithChildren<SegmentAsyncProps<T>>) {\n  const [state, fetchOptions] = useAsyncFn(loadOptions, [loadOptions]);\n  const [Label, labelWidth, expanded, setExpanded] = useExpandableLabel(autofocus, onExpandedChange);\n  const width = inputMinWidth ? Math.max(inputMinWidth, labelWidth) : labelWidth;\n  const styles = useStyles2(getSegmentStyles);\n\n  if (!expanded) {\n    const label = isObject(value) ? value.label : value;\n\n    return (\n      <Label\n        onClick={reloadOptionsOnChange ? undefined : fetchOptions}\n        disabled={disabled}\n        Component={\n          Component || (\n            <InlineLabel\n              className={cx(\n                styles.segment,\n                {\n                  [styles.queryPlaceholder]: placeholder !== undefined && !value,\n                  [styles.disabled]: disabled,\n                },\n                className\n              )}\n            >\n              {label || placeholder}\n            </InlineLabel>\n          )\n        }\n      />\n    );\n  }\n\n  return (\n    <SegmentSelect\n      {...rest}\n      value={value && !isObject(value) ? { value } : value}\n      placeholder={inputPlaceholder}\n      options={state.value ?? []}\n      loadOptions={reloadOptionsOnChange ? fetchOptions : undefined}\n      width={width}\n      noOptionsMessage={noOptionMessageHandler(state)}\n      allowCustomValue={allowCustomValue}\n      allowEmptyValue={allowEmptyValue}\n      onClickOutside={() => {\n        setExpanded(false);\n      }}\n      onChange={(item) => {\n        setExpanded(false);\n        onChange(item);\n      }}\n    />\n  );\n}\n\nfunction mapStateToNoOptionsMessage<T>(state: AsyncState<Array<SelectableValue<T>>>): string {\n  if (state.loading) {\n    return t('grafana-ui.segment-async.loading', 'Loading options...');\n  }\n\n  if (state.error) {\n    return t('grafana-ui.segment-async.error', 'Failed to load options');\n  }\n\n  if (!Array.isArray(state.value) || state.value.length === 0) {\n    return t('grafana-ui.segment-async.no-options', 'No options found');\n  }\n\n  return '';\n}\n","import { cx, css } from '@emotion/css';\nimport React, { HTMLProps, useRef, useState } from 'react';\nimport useClickAway from 'react-use/lib/useClickAway';\n\nimport { useStyles2 } from '../../themes';\nimport { measureText } from '../../utils/measureText';\nimport { InlineLabel } from '../Forms/InlineLabel';\n\nimport { getSegmentStyles } from './styles';\n\nimport { useExpandableLabel, SegmentProps } from '.';\n\nexport interface SegmentInputProps<T>\n  extends Omit<SegmentProps<T>, 'allowCustomValue' | 'allowEmptyValue'>,\n    Omit<HTMLProps<HTMLInputElement>, 'value' | 'onChange'> {\n  value: string | number;\n  onChange: (text: string | number) => void;\n}\n\nconst FONT_SIZE = 14;\n\nexport function SegmentInput<T>({\n  value: initialValue,\n  onChange,\n  Component,\n  className,\n  placeholder,\n  inputPlaceholder,\n  disabled,\n  autofocus = false,\n  onExpandedChange,\n  ...rest\n}: React.PropsWithChildren<SegmentInputProps<T>>) {\n  const ref = useRef<HTMLInputElement>(null);\n  const [value, setValue] = useState<number | string>(initialValue);\n  const [inputWidth, setInputWidth] = useState<number>(measureText((initialValue || '').toString(), FONT_SIZE).width);\n  const [Label, , expanded, setExpanded] = useExpandableLabel(autofocus, onExpandedChange);\n  const styles = useStyles2(getSegmentStyles);\n\n  useClickAway(ref, () => {\n    setExpanded(false);\n    onChange(value);\n  });\n\n  if (!expanded) {\n    return (\n      <Label\n        disabled={disabled}\n        Component={\n          Component || (\n            <InlineLabel\n              className={cx(\n                styles.segment,\n                {\n                  [styles.queryPlaceholder]: placeholder !== undefined && !value,\n                  [styles.disabled]: disabled,\n                },\n                className\n              )}\n            >\n              {initialValue || placeholder}\n            </InlineLabel>\n          )\n        }\n      />\n    );\n  }\n\n  const inputWidthStyle = css`\n    width: ${Math.max(inputWidth + 20, 32)}px;\n  `;\n\n  return (\n    <input\n      {...rest}\n      ref={ref}\n      // this needs to autofocus, but it's ok as it's only rendered by choice\n      // eslint-disable-next-line jsx-a11y/no-autofocus\n      autoFocus\n      className={cx(`gf-form gf-form-input`, inputWidthStyle)}\n      value={value}\n      placeholder={inputPlaceholder}\n      onChange={(item) => {\n        const { width } = measureText(item.target.value, FONT_SIZE);\n        setInputWidth(width);\n        setValue(item.target.value);\n      }}\n      onBlur={() => {\n        setExpanded(false);\n        onChange(value);\n      }}\n      onKeyDown={(e) => {\n        if ([13, 27].includes(e.keyCode)) {\n          setExpanded(false);\n          onChange(value);\n        }\n      }}\n    />\n  );\n}\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\nimport { InlineFieldRow } from '../Forms/InlineFieldRow';\nimport { InlineLabel } from '../Forms/InlineLabel';\n\n/**\n * Horizontal section for editor components.\n *\n * @alpha\n */\nexport const SegmentSection = ({\n  label,\n  htmlFor,\n  children,\n  fill,\n}: {\n  // Name of the section\n  label: string;\n  // htmlFor for the label\n  htmlFor?: string;\n  // List of components in the section\n  children: React.ReactNode;\n  // Fill the space at the end\n  fill?: boolean;\n}) => {\n  const styles = useStyles2(getStyles);\n  return (\n    <>\n      <InlineFieldRow>\n        <InlineLabel htmlFor={htmlFor} width={12} className={styles.label}>\n          {label}\n        </InlineLabel>\n        {children}\n        {fill && (\n          <div className={styles.fill}>\n            <InlineLabel>{''}</InlineLabel>\n          </div>\n        )}\n      </InlineFieldRow>\n    </>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  label: css`\n    color: ${theme.colors.primary.text};\n  `,\n  fill: css`\n    flex-grow: 1;\n    margin-bottom: ${theme.spacing(0.5)};\n  `,\n});\n","import React, { useState, useRef, ReactElement } from 'react';\n\nimport { useStyles2 } from '../../themes';\nimport { clearButtonStyles } from '../Button';\n\ninterface LabelProps {\n  Component: ReactElement;\n  onClick?: () => void;\n  disabled?: boolean;\n}\n\nexport const useExpandableLabel = (\n  initialExpanded: boolean,\n  onExpandedChange?: (expanded: boolean) => void\n): [React.ComponentType<LabelProps>, number, boolean, (expanded: boolean) => void] => {\n  const ref = useRef<HTMLButtonElement>(null);\n  const buttonStyles = useStyles2(clearButtonStyles);\n  const [expanded, setExpanded] = useState<boolean>(initialExpanded);\n  const [width, setWidth] = useState(0);\n\n  const setExpandedWrapper = (expanded: boolean) => {\n    setExpanded(expanded);\n    if (onExpandedChange) {\n      onExpandedChange(expanded);\n    }\n  };\n\n  const Label = ({ Component, onClick, disabled }: LabelProps) => (\n    <button\n      type=\"button\"\n      className={buttonStyles}\n      ref={ref}\n      disabled={disabled}\n      onClick={() => {\n        setExpandedWrapper(true);\n        if (ref && ref.current) {\n          setWidth(ref.current.clientWidth * 1.25);\n        }\n        onClick?.();\n      }}\n    >\n      {Component}\n    </button>\n  );\n\n  return [Label, width, expanded, setExpandedWrapper];\n};\n","import { css } from '@emotion/css';\nimport { useDialog } from '@react-aria/dialog';\nimport { FocusScope } from '@react-aria/focus';\nimport { useOverlay } from '@react-aria/overlays';\nimport RcDrawer from 'rc-drawer';\nimport React, { CSSProperties, ReactNode, useState, useEffect } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\n\nimport { useStyles2 } from '../../themes';\nimport { CustomScrollbar } from '../CustomScrollbar/CustomScrollbar';\nimport { IconButton } from '../IconButton/IconButton';\n\nexport interface Props {\n  children: ReactNode;\n  /** Title shown at the top of the drawer */\n  title?: ReactNode;\n  /** Subtitle shown below the title */\n  subtitle?: ReactNode;\n  /** Should the Drawer be closable by clicking on the mask, defaults to true */\n  closeOnMaskClick?: boolean;\n  /** Render the drawer inside a container on the page */\n  inline?: boolean;\n  /** Either a number in px or a string with unit postfix */\n  width?: number | string;\n  /** Should the Drawer be expandable to full width */\n  expandable?: boolean;\n  /** Tabs */\n  tabs?: React.ReactNode;\n  /** Set to true if the component rendered within in drawer content has its own scroll */\n  scrollableContent?: boolean;\n  /** Callback for closing the drawer */\n  onClose: () => void;\n}\n\nexport function Drawer({\n  children,\n  inline = false,\n  onClose,\n  closeOnMaskClick = true,\n  scrollableContent = false,\n  title,\n  subtitle,\n  width = '40%',\n  expandable = false,\n  tabs,\n}: Props) {\n  const drawerStyles = useStyles2(getStyles);\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n  const currentWidth = isExpanded ? '100%' : width;\n  const overlayRef = React.useRef(null);\n  const { dialogProps, titleProps } = useDialog({}, overlayRef);\n  const { overlayProps } = useOverlay(\n    {\n      isDismissable: false,\n      isOpen,\n      onClose,\n    },\n    overlayRef\n  );\n\n  // RcDrawer v4.x needs to be mounted in advance for animations to play.\n  useEffect(() => {\n    setIsOpen(true);\n  }, []);\n\n  const content = <div className={drawerStyles.content}>{children}</div>;\n  const style: CSSProperties = {};\n  if (inline) {\n    style.position = 'absolute';\n  }\n\n  return (\n    <RcDrawer\n      open={isOpen}\n      onClose={onClose}\n      placement=\"right\"\n      width={currentWidth}\n      getContainer={inline ? undefined : 'body'}\n      style={style}\n      className={drawerStyles.drawerContent}\n      rootClassName={drawerStyles.drawer}\n      motion={{\n        motionAppear: true,\n        motionName: drawerStyles.drawerMotion,\n      }}\n      maskClassName={drawerStyles.mask}\n      maskClosable={closeOnMaskClick}\n      maskMotion={{\n        motionAppear: true,\n        motionName: drawerStyles.maskMotion,\n      }}\n    >\n      <FocusScope restoreFocus contain autoFocus>\n        <div\n          aria-label={\n            typeof title === 'string'\n              ? selectors.components.Drawer.General.title(title)\n              : selectors.components.Drawer.General.title('no title')\n          }\n          className={drawerStyles.container}\n          {...overlayProps}\n          {...dialogProps}\n          ref={overlayRef}\n        >\n          {typeof title === 'string' && (\n            <div className={drawerStyles.header}>\n              <div className={drawerStyles.actions}>\n                {expandable && !isExpanded && (\n                  <IconButton\n                    name=\"angle-left\"\n                    size=\"xl\"\n                    onClick={() => setIsExpanded(true)}\n                    aria-label={selectors.components.Drawer.General.expand}\n                  />\n                )}\n                {expandable && isExpanded && (\n                  <IconButton\n                    name=\"angle-right\"\n                    size=\"xl\"\n                    onClick={() => setIsExpanded(false)}\n                    aria-label={selectors.components.Drawer.General.contract}\n                  />\n                )}\n                <IconButton\n                  name=\"times\"\n                  size=\"xl\"\n                  onClick={onClose}\n                  aria-label={selectors.components.Drawer.General.close}\n                />\n              </div>\n              <div className={drawerStyles.titleWrapper}>\n                <h3 {...titleProps}>{title}</h3>\n                {typeof subtitle === 'string' && <div className=\"muted\">{subtitle}</div>}\n                {typeof subtitle !== 'string' && subtitle}\n                {tabs && <div className={drawerStyles.tabsWrapper}>{tabs}</div>}\n              </div>\n            </div>\n          )}\n          {typeof title !== 'string' && title}\n          <div className={drawerStyles.contentScroll}>\n            {!scrollableContent ? content : <CustomScrollbar autoHeightMin=\"100%\">{content}</CustomScrollbar>}\n          </div>\n        </div>\n      </FocusScope>\n    </RcDrawer>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    container: css`\n      display: flex;\n      flex-direction: column;\n      height: 100%;\n      flex: 1 1 0;\n    `,\n    drawer: css`\n      .rc-drawer-content-wrapper {\n        box-shadow: ${theme.shadows.z3};\n\n        ${theme.breakpoints.down('sm')} {\n          width: 100% !important;\n        }\n      }\n    `,\n    drawerContent: css`\n      background-color: ${theme.colors.background.primary} !important;\n      display: flex;\n      flex-direction: column;\n      overflow: hidden;\n      z-index: ${theme.zIndex.dropdown};\n    `,\n    drawerMotion: css`\n      &-appear {\n        transform: translateX(100%);\n        transition: none !important;\n\n        &-active {\n          transition: ${theme.transitions.create('transform')} !important;\n          transform: translateX(0);\n        }\n      }\n    `,\n    mask: css`\n      background-color: ${theme.components.overlay.background} !important;\n      backdrop-filter: blur(1px);\n    `,\n    maskMotion: css`\n      &-appear {\n        opacity: 0;\n\n        &-active {\n          opacity: 1;\n          transition: ${theme.transitions.create('opacity')};\n        }\n      }\n    `,\n    header: css`\n      background-color: ${theme.colors.background.canvas};\n      flex-grow: 0;\n      padding-top: ${theme.spacing(0.5)};\n    `,\n    actions: css`\n      display: flex;\n      align-items: baseline;\n      justify-content: flex-end;\n    `,\n    titleWrapper: css`\n      margin-bottom: ${theme.spacing(3)};\n      padding: ${theme.spacing(0, 1, 0, 3)};\n      overflow-wrap: break-word;\n    `,\n    content: css({\n      padding: theme.spacing(2),\n      height: '100%',\n      flexGrow: 1,\n    }),\n    contentScroll: css({\n      minHeight: 0,\n      flex: 1,\n    }),\n    tabsWrapper: css({\n      paddingLeft: theme.spacing(2),\n      margin: theme.spacing(3, -1, -3, -3),\n    }),\n  };\n};\n","import { css } from '@emotion/css';\nimport { css as cssCore } from '@emotion/react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { stylesFactory } from '../../themes';\n\nexport const getStyles = stylesFactory((theme: GrafanaTheme2, isHorizontal: boolean, hasMarks = false) => {\n  const { spacing } = theme;\n  const railColor = theme.colors.border.strong;\n  const trackColor = theme.colors.primary.main;\n  const handleColor = theme.colors.primary.main;\n  const blueOpacity = theme.colors.primary.transparent;\n  const hoverSyle = `box-shadow: 0px 0px 0px 6px ${blueOpacity}`;\n\n  return {\n    container: css`\n      width: 100%;\n      margin: ${isHorizontal ? 'inherit' : `${spacing(1, 3, 1, 1)}`};\n      padding-bottom: ${isHorizontal && hasMarks ? theme.spacing(1) : 'inherit'};\n      height: ${isHorizontal ? 'auto' : '100%'};\n    `,\n    slider: css`\n      .rc-slider {\n        display: flex;\n        flex-grow: 1;\n        margin-left: 7px; // half the size of the handle to align handle to the left on 0 value\n      }\n      .rc-slider-mark {\n        top: ${theme.spacing(1.75)};\n      }\n      .rc-slider-mark-text {\n        color: ${theme.colors.text.disabled};\n        font-size: ${theme.typography.bodySmall.fontSize};\n      }\n      .rc-slider-mark-text-active {\n        color: ${theme.colors.text.primary};\n      }\n      .rc-slider-handle {\n        border: none;\n        background-color: ${handleColor};\n        box-shadow: ${theme.shadows.z1};\n        cursor: pointer;\n        opacity: 1;\n      }\n\n      .rc-slider-handle:hover,\n      .rc-slider-handle:active,\n      .rc-slider-handle-click-focused:focus {\n        ${hoverSyle};\n      }\n\n      // The triple class names is needed because that's the specificity used in the source css :(\n      .rc-slider-handle-dragging.rc-slider-handle-dragging.rc-slider-handle-dragging,\n      .rc-slider-handle:focus-visible {\n        box-shadow: 0 0 0 5px ${theme.colors.text.primary};\n      }\n\n      .rc-slider-dot,\n      .rc-slider-dot-active {\n        background-color: ${theme.colors.text.primary};\n        border-color: ${theme.colors.text.primary};\n      }\n\n      .rc-slider-track {\n        background-color: ${trackColor};\n      }\n      .rc-slider-rail {\n        background-color: ${railColor};\n        cursor: pointer;\n      }\n    `,\n    /** Global component from @emotion/core doesn't accept computed classname string returned from css from emotion.\n     * It accepts object containing the computed name and flattened styles returned from css from @emotion/core\n     * */\n    tooltip: cssCore`\n      body {\n        .rc-slider-tooltip {\n          cursor: grab;\n          user-select: none;\n          z-index: ${theme.zIndex.tooltip};\n        }\n\n        .rc-slider-tooltip-inner {\n          color: ${theme.colors.text.primary};\n          background-color: transparent !important;\n          border-radius: 0;\n          box-shadow: none;\n        }\n\n        .rc-slider-tooltip-placement-top .rc-slider-tooltip-arrow {\n          display: none;\n        }\n\n        .rc-slider-tooltip-placement-top {\n          padding: 0;\n        }\n      }\n    `,\n    sliderInput: css`\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n      width: 100%;\n    `,\n    sliderInputVertical: css`\n      flex-direction: column;\n      height: 100%;\n\n      .rc-slider {\n        margin: 0;\n        order: 2;\n      }\n    `,\n    sliderInputField: css`\n      margin-left: ${theme.spacing(3)};\n      width: 60px;\n      input {\n        text-align: center;\n      }\n    `,\n    sliderInputFieldVertical: css`\n      margin: 0 0 ${theme.spacing(3)} 0;\n      order: 1;\n    `,\n  };\n});\n","import { cx } from '@emotion/css';\nimport { Global } from '@emotion/react';\nimport SliderComponent from 'rc-slider';\nimport React, { useState, useCallback, ChangeEvent, FocusEvent } from 'react';\n\nimport { useTheme2 } from '../../themes/ThemeContext';\nimport { Input } from '../Input/Input';\n\nimport { getStyles } from './styles';\nimport { SliderProps } from './types';\n\n/**\n * @public\n */\nexport const Slider = ({\n  min,\n  max,\n  onChange,\n  onAfterChange,\n  orientation = 'horizontal',\n  reverse,\n  step,\n  value,\n  ariaLabelForHandle,\n  marks,\n  included,\n}: SliderProps) => {\n  const isHorizontal = orientation === 'horizontal';\n  const theme = useTheme2();\n  const styles = getStyles(theme, isHorizontal, Boolean(marks));\n  const SliderWithTooltip = SliderComponent;\n  const [sliderValue, setSliderValue] = useState<number>(value ?? min);\n\n  const onSliderChange = useCallback(\n    (v: number | number[]) => {\n      const value = typeof v === 'number' ? v : v[0];\n\n      setSliderValue(value);\n      onChange?.(value);\n    },\n    [setSliderValue, onChange]\n  );\n\n  const onSliderInputChange = useCallback(\n    (e: ChangeEvent<HTMLInputElement>) => {\n      let v = +e.target.value;\n\n      if (Number.isNaN(v)) {\n        v = 0;\n      }\n\n      setSliderValue(v);\n\n      if (onChange) {\n        onChange(v);\n      }\n\n      if (onAfterChange) {\n        onAfterChange(v);\n      }\n    },\n    [onChange, onAfterChange]\n  );\n\n  // Check for min/max on input blur so user is able to enter\n  // custom values that might seem above/below min/max on first keystroke\n  const onSliderInputBlur = useCallback(\n    (e: FocusEvent<HTMLInputElement>) => {\n      const v = +e.target.value;\n\n      if (v > max) {\n        setSliderValue(max);\n      } else if (v < min) {\n        setSliderValue(min);\n      }\n    },\n    [max, min]\n  );\n\n  const handleAfterChange = useCallback(\n    (v: number | number[]) => {\n      const value = typeof v === 'number' ? v : v[0];\n      onAfterChange?.(value);\n    },\n    [onAfterChange]\n  );\n\n  const sliderInputClassNames = !isHorizontal ? [styles.sliderInputVertical] : [];\n  const sliderInputFieldClassNames = !isHorizontal ? [styles.sliderInputFieldVertical] : [];\n\n  return (\n    <div className={cx(styles.container, styles.slider)}>\n      {/** Slider tooltip's parent component is body and therefore we need Global component to do css overrides for it. */}\n      <Global styles={styles.tooltip} />\n      <div className={cx(styles.sliderInput, ...sliderInputClassNames)}>\n        <SliderWithTooltip\n          min={min}\n          max={max}\n          step={step}\n          defaultValue={value}\n          value={sliderValue}\n          onChange={onSliderChange}\n          onAfterChange={handleAfterChange}\n          vertical={!isHorizontal}\n          reverse={reverse}\n          ariaLabelForHandle={ariaLabelForHandle}\n          marks={marks}\n          included={included}\n        />\n\n        <Input\n          type=\"text\"\n          className={cx(styles.sliderInputField, ...sliderInputFieldClassNames)}\n          value={sliderValue}\n          onChange={onSliderInputChange}\n          onBlur={onSliderInputBlur}\n          min={min}\n          max={max}\n        />\n      </div>\n    </div>\n  );\n};\n\nSlider.displayName = 'Slider';\n","import { css } from '@emotion/css';\nimport Tooltip from 'rc-tooltip';\nimport React, { useEffect, useRef } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes/ThemeContext';\n\ninterface RCTooltipRef {\n  // rc-tooltip's ref is essentially untyped, so we be cautious by saying the function is\n  // potentially undefined which, given rc's track record, seems likely :)\n  forcePopupAlign?: () => {};\n}\n\nconst HandleTooltip = (props: {\n  value: number;\n  children: React.ReactElement;\n  visible: boolean;\n  placement: 'top' | 'right';\n  tipFormatter?: (value: number) => React.ReactNode;\n}) => {\n  const { value, children, visible, placement, tipFormatter, ...restProps } = props;\n\n  const tooltipRef = useRef<RCTooltipRef>();\n  const rafRef = useRef<number | null>(null);\n  const styles = useStyles2(tooltipStyles);\n\n  function cancelKeepAlign() {\n    if (rafRef.current !== null) {\n      cancelAnimationFrame(rafRef.current);\n    }\n  }\n\n  function keepAlign() {\n    rafRef.current = requestAnimationFrame(() => {\n      tooltipRef.current?.forcePopupAlign?.();\n    });\n  }\n\n  useEffect(() => {\n    if (visible) {\n      keepAlign();\n    } else {\n      cancelKeepAlign();\n    }\n\n    return cancelKeepAlign;\n  }, [value, visible]);\n\n  return (\n    <Tooltip\n      overlayClassName={styles.tooltip}\n      placement={placement}\n      overlay={tipFormatter ?? value}\n      overlayInnerStyle={{ minHeight: 'auto' }}\n      ref={tooltipRef}\n      visible={visible}\n      {...restProps}\n    >\n      {children}\n    </Tooltip>\n  );\n};\n\nconst tooltipStyles = (theme: GrafanaTheme2) => {\n  return {\n    tooltip: css({\n      position: 'absolute',\n      display: 'block',\n      visibility: 'visible',\n      fontSize: theme.typography.bodySmall.fontSize,\n      opacity: 0.9,\n      padding: 3,\n    }),\n  };\n};\n\nexport default HandleTooltip;\n","import { cx } from '@emotion/css';\nimport { Global } from '@emotion/react';\nimport Slider, { SliderProps } from 'rc-slider';\nimport React, { useCallback } from 'react';\n\nimport { useTheme2 } from '../../themes/ThemeContext';\n\nimport HandleTooltip from './HandleTooltip';\nimport { getStyles } from './styles';\nimport { RangeSliderProps } from './types';\n\n/**\n * @public\n *\n * RichHistoryQueriesTab uses this Range Component\n */\nexport const RangeSlider = ({\n  min,\n  max,\n  onChange,\n  onAfterChange,\n  orientation = 'horizontal',\n  reverse,\n  step,\n  formatTooltipResult,\n  value,\n  tooltipAlwaysVisible = true,\n}: RangeSliderProps) => {\n  const handleChange = useCallback(\n    (v: number | number[]) => {\n      const value = typeof v === 'number' ? [v, v] : v;\n      onChange?.(value);\n    },\n    [onChange]\n  );\n\n  const handleAfterChange = useCallback(\n    (v: number | number[]) => {\n      const value = typeof v === 'number' ? [v, v] : v;\n      onAfterChange?.(value);\n    },\n    [onAfterChange]\n  );\n\n  const isHorizontal = orientation === 'horizontal';\n  const theme = useTheme2();\n  const styles = getStyles(theme, isHorizontal);\n\n  const tipHandleRender: SliderProps['handleRender'] = (node, handleProps) => {\n    return (\n      <HandleTooltip\n        value={handleProps.value}\n        visible={tooltipAlwaysVisible || handleProps.dragging}\n        tipFormatter={formatTooltipResult}\n        placement={isHorizontal ? 'top' : 'right'}\n      >\n        {node}\n      </HandleTooltip>\n    );\n  };\n\n  return (\n    <div className={cx(styles.container, styles.slider)}>\n      {/** Slider tooltip's parent component is body and therefore we need Global component to do css overrides for it. */}\n      <Global styles={styles.tooltip} />\n      <Slider\n        min={min}\n        max={max}\n        step={step}\n        defaultValue={value}\n        range={true}\n        onChange={handleChange}\n        onAfterChange={handleAfterChange}\n        vertical={!isHorizontal}\n        reverse={reverse}\n        handleRender={tipHandleRender}\n      />\n    </div>\n  );\n};\n\nRangeSlider.displayName = 'RangeSlider';\n","import { css } from '@emotion/css';\nimport React, { HTMLProps, useEffect } from 'react';\nimport { useForm, Mode, DeepPartial, UnpackNestedValue, SubmitHandler, FieldValues } from 'react-hook-form';\n\nimport { FormAPI } from '../../types';\n\ninterface FormProps<T extends FieldValues> extends Omit<HTMLProps<HTMLFormElement>, 'onSubmit' | 'children'> {\n  validateOn?: Mode;\n  validateOnMount?: boolean;\n  validateFieldsOnMount?: string | string[];\n  defaultValues?: UnpackNestedValue<DeepPartial<T>>;\n  onSubmit: SubmitHandler<T>;\n  children: (api: FormAPI<T>) => React.ReactNode;\n  /** Sets max-width for container. Use it instead of setting individual widths on inputs.*/\n  maxWidth?: number | 'none';\n}\n\nexport function Form<T extends FieldValues>({\n  defaultValues,\n  onSubmit,\n  validateOnMount = false,\n  validateFieldsOnMount,\n  children,\n  validateOn = 'onSubmit',\n  maxWidth = 600,\n  ...htmlProps\n}: FormProps<T>) {\n  const { handleSubmit, trigger, formState, ...rest } = useForm<T>({\n    mode: validateOn,\n    defaultValues,\n  });\n\n  useEffect(() => {\n    if (validateOnMount) {\n      //@ts-expect-error\n      trigger(validateFieldsOnMount);\n    }\n  }, [trigger, validateFieldsOnMount, validateOnMount]);\n\n  return (\n    <form\n      className={css`\n        max-width: ${maxWidth !== 'none' ? maxWidth + 'px' : maxWidth};\n        width: 100%;\n      `}\n      onSubmit={handleSubmit(onSubmit)}\n      {...htmlProps}\n    >\n      {children({ errors: formState.errors, formState, ...rest })}\n    </form>\n  );\n}\n","/**\n * Rollup does not support renamed exports so do not change this to export { Controller as InputControl } ...\n */\nimport { Controller } from 'react-hook-form';\nexport const InputControl = Controller;\n","import React, { useState } from 'react';\n\nimport { SelectableValue } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\n\nimport { useTheme2 } from '../../themes';\nimport { IconName } from '../../types';\nimport { ComponentSize } from '../../types/size';\nimport { Button, ButtonFill, ButtonVariant } from '../Button';\nimport { Select } from '../Select/Select';\n\nexport interface ValuePickerProps<T> {\n  /** Aria label applied to the input field */\n  ['aria-label']?: string;\n  /** Label to display on the picker button */\n  label: string;\n  /** Icon to display on the picker button */\n  icon?: IconName;\n  /** ValuePicker options  */\n  options: Array<SelectableValue<T>>;\n  /** Callback to handle selected option */\n  onChange: (value: SelectableValue<T>) => void;\n  /** Which ButtonVariant to render */\n  variant?: ButtonVariant;\n  /** Size of button  */\n  size?: ComponentSize;\n  /** Min width for select in grid units */\n  minWidth?: number;\n  /** Should the picker cover the full width of its parent */\n  isFullWidth?: boolean;\n  /** Control where the menu is rendered */\n  menuPlacement?: 'auto' | 'bottom' | 'top';\n  /** Which ButtonFill to use */\n  fill?: ButtonFill;\n\n  /** custom css applied to the button */\n  buttonCss?: string;\n}\n\nexport function ValuePicker<T>({\n  'aria-label': ariaLabel,\n  label,\n  icon,\n  options,\n  onChange,\n  variant,\n  minWidth = 16,\n  size = 'sm',\n  isFullWidth = true,\n  menuPlacement,\n  fill,\n  buttonCss,\n}: ValuePickerProps<T>) {\n  const [isPicking, setIsPicking] = useState(false);\n  const theme = useTheme2();\n\n  return (\n    <>\n      {!isPicking && (\n        <Button\n          size={size || 'sm'}\n          className={buttonCss}\n          icon={icon || 'plus'}\n          onClick={() => setIsPicking(true)}\n          variant={variant}\n          fill={fill}\n          fullWidth={isFullWidth}\n          aria-label={selectors.components.ValuePicker.button(ariaLabel ?? label)}\n        >\n          {label}\n        </Button>\n      )}\n\n      {isPicking && (\n        <span style={{ minWidth: theme.spacing(minWidth), flexGrow: isFullWidth ? 1 : undefined }}>\n          <Select\n            placeholder={label}\n            options={options}\n            aria-label={selectors.components.ValuePicker.select(ariaLabel ?? label)}\n            isOpen\n            onCloseMenu={() => setIsPicking(false)}\n            autoFocus={true}\n            onChange={(value) => {\n              setIsPicking(false);\n              onChange(value);\n            }}\n            menuPlacement={menuPlacement}\n          />\n        </span>\n      )}\n    </>\n  );\n}\n","import React, { memo, useCallback } from 'react';\n\nimport { FieldMatcherID, fieldMatchers } from '@grafana/data';\n\nimport { Input } from '../Input/Input';\n\nimport { MatcherUIProps, FieldMatcherUIRegistryItem } from './types';\n\nexport const FieldNameByRegexMatcherEditor = memo<MatcherUIProps<string>>((props) => {\n  const { options, onChange } = props;\n\n  const onBlur = useCallback(\n    (e: React.FocusEvent<HTMLInputElement>) => {\n      return onChange(e.target.value);\n    },\n    [onChange]\n  );\n\n  return <Input placeholder=\"Enter regular expression\" defaultValue={options} onBlur={onBlur} />;\n});\nFieldNameByRegexMatcherEditor.displayName = 'FieldNameByRegexMatcherEditor';\n\nexport const fieldNameByRegexMatcherItem: FieldMatcherUIRegistryItem<string> = {\n  id: FieldMatcherID.byRegexp,\n  component: FieldNameByRegexMatcherEditor,\n  matcher: fieldMatchers.get(FieldMatcherID.byRegexp),\n  name: 'Fields with name matching regex',\n  description: 'Set properties for fields with names matching a regex',\n  optionsToLabel: (options) => options,\n};\n","import { useMemo } from 'react';\n\nimport { DataFrame, Field, getFieldDisplayName, SelectableValue } from '@grafana/data';\n\nimport { getFieldTypeIcon } from '../../types';\n\n/**\n * @internal\n */\nexport interface FrameFieldsDisplayNames {\n  // The display names\n  display: Set<string>;\n\n  // raw field names (that are explicitly not visible)\n  raw: Set<string>;\n\n  // Field mappings (duplicates are not supported)\n  fields: Map<string, Field>;\n}\n\n/**\n * @internal\n */\nexport function frameHasName(name: string | undefined, names: FrameFieldsDisplayNames) {\n  if (!name) {\n    return false;\n  }\n  return names.display.has(name) || names.raw.has(name);\n}\n\n/**\n * Returns the distinct names in a set of frames\n */\nexport function getFrameFieldsDisplayNames(\n  data: DataFrame[],\n  filter?: (field: Field) => boolean\n): FrameFieldsDisplayNames {\n  const names: FrameFieldsDisplayNames = {\n    display: new Set<string>(),\n    raw: new Set<string>(),\n    fields: new Map<string, Field>(),\n  };\n\n  for (const frame of data) {\n    for (const field of frame.fields) {\n      if (filter && !filter(field)) {\n        continue;\n      }\n      const disp = getFieldDisplayName(field, frame, data);\n      names.display.add(disp);\n      names.fields.set(disp, field);\n      if (field.name && disp !== field.name) {\n        names.raw.add(field.name);\n        names.fields.set(field.name, field);\n      }\n    }\n  }\n  return names;\n}\n\n/**\n * @internal\n */\nexport function useFieldDisplayNames(data: DataFrame[], filter?: (field: Field) => boolean): FrameFieldsDisplayNames {\n  return useMemo(() => {\n    return getFrameFieldsDisplayNames(data, filter);\n  }, [data, filter]);\n}\n\n/**\n * @internal\n */\nexport function useSelectOptions(\n  displayNames: FrameFieldsDisplayNames,\n  currentName?: string,\n  firstItem?: SelectableValue<string>,\n  fieldType?: string\n): Array<SelectableValue<string>> {\n  return useMemo(() => {\n    let found = false;\n    const options: Array<SelectableValue<string>> = [];\n    if (firstItem) {\n      options.push(firstItem);\n    }\n    for (const name of displayNames.display) {\n      if (!found && name === currentName) {\n        found = true;\n      }\n      const field = displayNames.fields.get(name);\n      if (!fieldType || fieldType === field?.type) {\n        options.push({\n          value: name,\n          label: name,\n          icon: field ? getFieldTypeIcon(field) : undefined,\n        });\n      }\n    }\n    for (const name of displayNames.raw) {\n      if (!displayNames.display.has(name)) {\n        if (!found && name === currentName) {\n          found = true;\n        }\n        options.push({\n          value: name,\n          label: `${name} (base field name)`,\n        });\n      }\n    }\n\n    if (currentName && !found) {\n      options.push({\n        value: currentName,\n        label: `${currentName} (not found)`,\n      });\n    }\n    return options;\n  }, [displayNames, currentName, firstItem, fieldType]);\n}\n","import React, { memo, useCallback } from 'react';\n\nimport { FieldMatcherID, fieldMatchers, SelectableValue } from '@grafana/data';\n\nimport { Select } from '../Select/Select';\n\nimport { MatcherUIProps, FieldMatcherUIRegistryItem } from './types';\nimport { useFieldDisplayNames, useSelectOptions, frameHasName } from './utils';\n\nexport const FieldNameMatcherEditor = memo<MatcherUIProps<string>>((props) => {\n  const { data, options, onChange: onChangeFromProps, id } = props;\n  const names = useFieldDisplayNames(data);\n  const selectOptions = useSelectOptions(names, options);\n\n  const onChange = useCallback(\n    (selection: SelectableValue<string>) => {\n      if (!frameHasName(selection.value, names)) {\n        return;\n      }\n      return onChangeFromProps(selection.value!);\n    },\n    [names, onChangeFromProps]\n  );\n\n  const selectedOption = selectOptions.find((v) => v.value === options);\n  return <Select value={selectedOption} options={selectOptions} onChange={onChange} inputId={id} />;\n});\nFieldNameMatcherEditor.displayName = 'FieldNameMatcherEditor';\n\nexport const fieldNameMatcherItem: FieldMatcherUIRegistryItem<string> = {\n  id: FieldMatcherID.byName,\n  component: FieldNameMatcherEditor,\n  matcher: fieldMatchers.get(FieldMatcherID.byName),\n  name: 'Fields with name',\n  description: 'Set properties for a specific field',\n  optionsToLabel: (options) => options,\n};\n","import React, { memo, useCallback } from 'react';\n\nimport { FieldMatcherID, fieldMatchers, SelectableValue, ByNamesMatcherOptions } from '@grafana/data';\n\nimport { Input } from '../Input/Input';\nimport { MultiSelect } from '../Select/Select';\n\nimport { MatcherUIProps, FieldMatcherUIRegistryItem } from './types';\nimport { useFieldDisplayNames, useSelectOptions, frameHasName } from './utils';\n\nexport const FieldNamesMatcherEditor = memo<MatcherUIProps<ByNamesMatcherOptions>>((props) => {\n  const { data, options, onChange: onChangeFromProps } = props;\n  const { readOnly, prefix } = options;\n  const names = useFieldDisplayNames(data);\n  const selectOptions = useSelectOptions(names, undefined);\n\n  const onChange = useCallback(\n    (selections: Array<SelectableValue<string>>) => {\n      if (!Array.isArray(selections)) {\n        return;\n      }\n\n      return onChangeFromProps({\n        ...options,\n        names: selections.reduce((all: string[], current) => {\n          if (!frameHasName(current.value, names)) {\n            return all;\n          }\n          all.push(current.value!);\n          return all;\n        }, []),\n      });\n    },\n    [names, onChangeFromProps, options]\n  );\n\n  if (readOnly) {\n    const displayNames = (options.names ?? []).join(', ');\n    return <Input value={displayNames} readOnly={true} disabled={true} prefix={prefix} />;\n  }\n\n  return <MultiSelect value={options.names} options={selectOptions} onChange={onChange} />;\n});\nFieldNamesMatcherEditor.displayName = 'FieldNameMatcherEditor';\n\nexport const fieldNamesMatcherItem: FieldMatcherUIRegistryItem<ByNamesMatcherOptions> = {\n  id: FieldMatcherID.byNames,\n  component: FieldNamesMatcherEditor,\n  matcher: fieldMatchers.get(FieldMatcherID.byNames),\n  name: 'Fields with name',\n  description: 'Set properties for a specific field',\n  optionsToLabel: (options) => (options.names ?? []).join(', '),\n  excludeFromPicker: true,\n};\n","import React, { memo, useMemo, useCallback } from 'react';\n\nimport { FieldMatcherID, fieldMatchers, SelectableValue, FieldType, DataFrame } from '@grafana/data';\n\nimport { getFieldTypeIconName } from '../../types/icon';\nimport { Select } from '../Select/Select';\n\nimport { MatcherUIProps, FieldMatcherUIRegistryItem } from './types';\n\nexport const FieldTypeMatcherEditor = memo<MatcherUIProps<string>>((props) => {\n  const { data, options, onChange: onChangeFromProps, id } = props;\n  const counts = useFieldCounts(data);\n  const selectOptions = useSelectOptions(counts, options);\n\n  const onChange = useCallback(\n    (selection: SelectableValue<string>) => {\n      return onChangeFromProps(selection.value!);\n    },\n    [onChangeFromProps]\n  );\n\n  const selectedOption = selectOptions.find((v) => v.value === options);\n  return <Select inputId={id} value={selectedOption} options={selectOptions} onChange={onChange} />;\n});\nFieldTypeMatcherEditor.displayName = 'FieldTypeMatcherEditor';\n\n// Select options for all field types.\n// This is not eported to the published package, but used internally\nexport const allFieldTypeIconOptions: Array<SelectableValue<FieldType>> = [\n  { value: FieldType.number, label: 'Number', icon: getFieldTypeIconName(FieldType.number) },\n  { value: FieldType.string, label: 'String', icon: getFieldTypeIconName(FieldType.string) },\n  { value: FieldType.time, label: 'Time', icon: getFieldTypeIconName(FieldType.time) },\n  { value: FieldType.boolean, label: 'Boolean', icon: getFieldTypeIconName(FieldType.boolean) },\n  { value: FieldType.trace, label: 'Traces', icon: getFieldTypeIconName(FieldType.trace) },\n  { value: FieldType.enum, label: 'Enum', icon: getFieldTypeIconName(FieldType.enum) },\n  { value: FieldType.other, label: 'Other', icon: getFieldTypeIconName(FieldType.other) },\n];\n\nconst useFieldCounts = (data: DataFrame[]): Map<FieldType, number> => {\n  return useMemo(() => {\n    const counts: Map<FieldType, number> = new Map();\n    for (const t of allFieldTypeIconOptions) {\n      counts.set(t.value!, 0);\n    }\n    for (const frame of data) {\n      for (const field of frame.fields) {\n        const key = field.type || FieldType.other;\n        let v = counts.get(key);\n        if (!v) {\n          v = 0;\n        }\n        counts.set(key, v + 1);\n      }\n    }\n    return counts;\n  }, [data]);\n};\n\nconst useSelectOptions = (counts: Map<string, number>, opt?: string): Array<SelectableValue<string>> => {\n  return useMemo(() => {\n    let found = false;\n    const options: Array<SelectableValue<string>> = [];\n    for (const t of allFieldTypeIconOptions) {\n      const count = counts.get(t.value!);\n      const match = opt === t.value;\n      if (count || match) {\n        options.push({\n          ...t,\n          label: `${t.label} (${counts.get(t.value!)})`,\n        });\n      }\n      if (match) {\n        found = true;\n      }\n    }\n    if (opt && !found) {\n      options.push({\n        value: opt,\n        label: `${opt} (No matches)`,\n      });\n    }\n    return options;\n  }, [counts, opt]);\n};\n\nexport const fieldTypeMatcherItem: FieldMatcherUIRegistryItem<string> = {\n  id: FieldMatcherID.byType,\n  component: FieldTypeMatcherEditor,\n  matcher: fieldMatchers.get(FieldMatcherID.byType),\n  name: 'Fields with type',\n  description: 'Set properties for fields of a specific type (number, string, boolean)',\n  optionsToLabel: (options) => options,\n};\n","import { css } from '@emotion/css';\nimport React, { useMemo, useCallback } from 'react';\n\nimport {\n  FieldMatcherID,\n  fieldMatchers,\n  FieldValueMatcherConfig,\n  fieldReducers,\n  ReducerID,\n  SelectableValue,\n  GrafanaTheme2,\n} from '@grafana/data';\nimport { ComparisonOperation } from '@grafana/schema';\n\nimport { useStyles2 } from '../../themes';\nimport { Input } from '../Input/Input';\nimport { Select } from '../Select/Select';\n\nimport { MatcherUIProps, FieldMatcherUIRegistryItem } from './types';\n\ntype Props = MatcherUIProps<FieldValueMatcherConfig>;\n\nexport const comparisonOperationOptions = [\n  { label: '==', value: ComparisonOperation.EQ },\n  { label: '!=', value: ComparisonOperation.NEQ },\n  { label: '>', value: ComparisonOperation.GT },\n  { label: '>=', value: ComparisonOperation.GTE },\n  { label: '<', value: ComparisonOperation.LT },\n  { label: '<=', value: ComparisonOperation.LTE },\n];\n\n// This should move to a utility function on the reducer registry\nfunction isBooleanReducer(r: ReducerID) {\n  return r === ReducerID.allIsNull || r === ReducerID.allIsZero;\n}\n\nexport const FieldValueMatcherEditor = ({ options, onChange }: Props) => {\n  const styles = useStyles2(getStyles);\n  const reducer = useMemo(() => fieldReducers.selectOptions([options?.reducer]), [options?.reducer]);\n\n  const onSetReducer = useCallback(\n    (selection: SelectableValue<string>) => {\n      return onChange({ ...options, reducer: selection.value! as ReducerID });\n    },\n    [options, onChange]\n  );\n\n  const onChangeOp = useCallback(\n    (v: SelectableValue<ComparisonOperation>) => {\n      return onChange({ ...options, op: v.value! });\n    },\n    [options, onChange]\n  );\n\n  const onChangeValue = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      const value = e.currentTarget.valueAsNumber;\n      return onChange({ ...options, value });\n    },\n    [options, onChange]\n  );\n\n  const opts = options ?? {};\n  const isBool = isBooleanReducer(options.reducer);\n\n  return (\n    <div className={styles.spot}>\n      <Select\n        value={reducer.current}\n        options={reducer.options}\n        onChange={onSetReducer}\n        placeholder=\"Select field reducer\"\n      />\n      {opts.reducer && !isBool && (\n        <>\n          <Select\n            value={comparisonOperationOptions.find((v) => v.value === opts.op)}\n            options={comparisonOperationOptions}\n            onChange={onChangeOp}\n            aria-label={'Comparison operator'}\n            width={19}\n          />\n\n          <Input type=\"number\" value={opts.value} onChange={onChangeValue} />\n        </>\n      )}\n    </div>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    spot: css`\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n      align-content: flex-end;\n      gap: 4px;\n    `,\n  };\n};\n\nexport const fieldValueMatcherItem: FieldMatcherUIRegistryItem<FieldValueMatcherConfig> = {\n  id: FieldMatcherID.byValue,\n  component: FieldValueMatcherEditor,\n  matcher: fieldMatchers.get(FieldMatcherID.byValue),\n  name: 'Fields with values',\n  description: 'Set properties for fields with reducer condition',\n  optionsToLabel: (options) => `${options?.reducer} ${options?.op} ${options?.value}`,\n};\n","import React, { memo, useMemo, useCallback } from 'react';\n\nimport { FieldMatcherID, fieldMatchers, SelectableValue, DataFrame } from '@grafana/data';\n\nimport { Select } from '../Select/Select';\n\nimport { MatcherUIProps, FieldMatcherUIRegistryItem } from './types';\n\n/**\n * UI to configure \"fields by frame refId\"-matcher.\n * @public\n */\nexport const FieldsByFrameRefIdMatcher = memo<MatcherUIProps<string>>((props) => {\n  const { data, options, onChange: onChangeFromProps } = props;\n  const referenceIDs = useFrameRefIds(data);\n  const selectOptions = useSelectOptions(referenceIDs);\n\n  const onChange = useCallback(\n    (selection: SelectableValue<string>) => {\n      if (!selection.value || !referenceIDs.has(selection.value)) {\n        return;\n      }\n      return onChangeFromProps(selection.value);\n    },\n    [referenceIDs, onChangeFromProps]\n  );\n\n  const selectedOption = selectOptions.find((v) => v.value === options);\n  return <Select value={selectedOption} options={selectOptions} onChange={onChange} />;\n});\n\nFieldsByFrameRefIdMatcher.displayName = 'FieldsByFrameRefIdMatcher';\n\n/**\n * Registry item for UI to configure \"fields by frame refId\"-matcher.\n * @public\n */\nexport const fieldsByFrameRefIdItem: FieldMatcherUIRegistryItem<string> = {\n  id: FieldMatcherID.byFrameRefID,\n  component: FieldsByFrameRefIdMatcher,\n  matcher: fieldMatchers.get(FieldMatcherID.byFrameRefID),\n  name: 'Fields returned by query',\n  description: 'Set properties for fields from a specific query',\n  optionsToLabel: (options) => options,\n};\n\nconst useFrameRefIds = (data: DataFrame[]): Set<string> => {\n  return useMemo(() => {\n    const refIds: Set<string> = new Set();\n\n    for (const frame of data) {\n      if (frame.refId) {\n        refIds.add(frame.refId);\n      }\n    }\n\n    return refIds;\n  }, [data]);\n};\n\nconst useSelectOptions = (displayNames: Set<string>): Array<SelectableValue<string>> => {\n  return useMemo(() => {\n    return Array.from(displayNames).map((n) => ({\n      value: n,\n      label: n,\n    }));\n  }, [displayNames]);\n};\n","import { Registry } from '@grafana/data';\n\nimport { fieldNameByRegexMatcherItem } from './FieldNameByRegexMatcherEditor';\nimport { fieldNameMatcherItem } from './FieldNameMatcherEditor';\nimport { fieldNamesMatcherItem } from './FieldNamesMatcherEditor';\nimport { fieldTypeMatcherItem } from './FieldTypeMatcherEditor';\nimport { fieldValueMatcherItem } from './FieldValueMatcher';\nimport { fieldsByFrameRefIdItem } from './FieldsByFrameRefIdMatcher';\nimport { FieldMatcherUIRegistryItem } from './types';\n\nexport const fieldMatchersUI = new Registry<FieldMatcherUIRegistryItem<any>>(() => [\n  fieldNameMatcherItem,\n  fieldNameByRegexMatcherItem,\n  fieldTypeMatcherItem,\n  fieldsByFrameRefIdItem,\n  fieldNamesMatcherItem,\n  fieldValueMatcherItem,\n]);\n","import React, { AnchorHTMLAttributes, forwardRef } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n\nimport { locationUtil, textUtil } from '@grafana/data';\n\nexport interface Props extends AnchorHTMLAttributes<HTMLAnchorElement> {}\n\n/**\n * @alpha\n */\nexport const Link = forwardRef<HTMLAnchorElement, Props>(({ href, children, ...rest }, ref) => {\n  const validUrl = locationUtil.stripBaseFromUrl(textUtil.sanitizeUrl(href ?? ''));\n\n  return (\n    <RouterLink ref={ref} to={validUrl} {...rest}>\n      {children}\n    </RouterLink>\n  );\n});\n\nLink.displayName = 'Link';\n","import { css, cx } from '@emotion/css';\nimport React, { ReactNode } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\n\nexport interface LabelProps extends React.HTMLAttributes<HTMLLegendElement> {\n  children: string | ReactNode;\n  description?: string;\n}\n\nexport const getLegendStyles = (theme: GrafanaTheme2) => {\n  return {\n    legend: css`\n      font-size: ${theme.typography.h3.fontSize};\n      font-weight: ${theme.typography.fontWeightRegular};\n      margin: 0 0 ${theme.spacing(2)} 0;\n    `,\n  };\n};\n\nexport const Legend = ({ children, className, ...legendProps }: LabelProps) => {\n  const styles = useStyles2(getLegendStyles);\n\n  return (\n    <legend className={cx(styles.legend, className)} {...legendProps}>\n      {children}\n    </legend>\n  );\n};\n","import { css, cx } from '@emotion/css';\nimport React, { HTMLProps } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { stylesFactory, useTheme2 } from '../../themes';\n\nimport { Legend } from './Legend';\n\nexport interface Props extends Omit<HTMLProps<HTMLFieldSetElement>, 'label'> {\n  children: React.ReactNode[] | React.ReactNode;\n  /** Label for the fieldset's legend */\n  label?: React.ReactNode;\n}\n\nexport const FieldSet = ({ label, children, className, ...rest }: Props) => {\n  const theme = useTheme2();\n  const styles = getStyles(theme);\n\n  return (\n    <fieldset className={cx(styles.wrapper, className)} {...rest}>\n      {label && <Legend>{label}</Legend>}\n      {children}\n    </fieldset>\n  );\n};\n\nconst getStyles = stylesFactory((theme: GrafanaTheme2) => {\n  return {\n    wrapper: css`\n      margin-bottom: ${theme.spacing(4)};\n\n      &:last-child {\n        margin-bottom: 0;\n      }\n    `,\n  };\n});\n","import { cx, css } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\n\nexport interface Props {\n  grow?: boolean;\n  className?: string;\n}\n\n/** @beta */\nexport const InlineSegmentGroup = ({ children, className, grow, ...htmlProps }: React.PropsWithChildren<Props>) => {\n  const styles = useStyles2((theme) => getStyles(theme, grow));\n\n  return (\n    <div className={cx(styles.container, className)} {...htmlProps}>\n      {children}\n    </div>\n  );\n};\n\nInlineSegmentGroup.displayName = 'InlineSegmentGroup';\n\nconst getStyles = (theme: GrafanaTheme2, grow?: boolean) => {\n  return {\n    container: css`\n      display: flex;\n      flex-direction: row;\n      align-items: flex-start;\n      text-align: left;\n      position: relative;\n      flex: ${grow ? 1 : 0} 0 auto;\n      margin-bottom: ${theme.spacing(0.5)};\n    `,\n  };\n};\n","import { FC } from 'react';\nimport { useFieldArray, UseFieldArrayProps } from 'react-hook-form';\n\nimport { FieldArrayApi } from '../../types';\n\nexport interface FieldArrayProps extends UseFieldArrayProps {\n  children: (api: FieldArrayApi) => JSX.Element;\n}\n\nexport const FieldArray: FC<FieldArrayProps> = ({ name, control, children, ...rest }) => {\n  const { fields, append, prepend, remove, swap, move, insert } = useFieldArray({\n    control,\n    name,\n    ...rest,\n  });\n  return children({ fields, append, prepend, remove, swap, move, insert });\n};\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { StringSelector } from '@grafana/e2e-selectors';\n\nimport { useTheme2, stylesFactory } from '../../../themes';\nimport { getFocusStyles, getMouseFocusStyles } from '../../../themes/mixins';\nimport { getPropertiesForButtonSize } from '../commonStyles';\n\nexport type RadioButtonSize = 'sm' | 'md';\n\nexport interface RadioButtonProps {\n  size?: RadioButtonSize;\n  disabled?: boolean;\n  name?: string;\n  description?: string;\n  active: boolean;\n  id: string;\n  onChange: () => void;\n  onClick: () => void;\n  fullWidth?: boolean;\n  'aria-label'?: StringSelector;\n  children?: React.ReactNode;\n}\n\nexport const RadioButton = React.forwardRef<HTMLInputElement, RadioButtonProps>(\n  (\n    {\n      children,\n      active = false,\n      disabled = false,\n      size = 'md',\n      onChange,\n      onClick,\n      id,\n      name = undefined,\n      description,\n      fullWidth,\n      'aria-label': ariaLabel,\n    },\n    ref\n  ) => {\n    const theme = useTheme2();\n    const styles = getRadioButtonStyles(theme, size, fullWidth);\n\n    return (\n      <>\n        <input\n          type=\"radio\"\n          className={styles.radio}\n          onChange={onChange}\n          onClick={onClick}\n          disabled={disabled}\n          id={id}\n          checked={active}\n          name={name}\n          aria-label={ariaLabel}\n          ref={ref}\n        />\n        <label className={styles.radioLabel} htmlFor={id} title={description}>\n          {children}\n        </label>\n      </>\n    );\n  }\n);\n\nRadioButton.displayName = 'RadioButton';\n\nconst getRadioButtonStyles = stylesFactory((theme: GrafanaTheme2, size: RadioButtonSize, fullWidth?: boolean) => {\n  const { fontSize, height, padding } = getPropertiesForButtonSize(size, theme);\n\n  const textColor = theme.colors.text.secondary;\n  const textColorHover = theme.colors.text.primary;\n  // remove the group inner padding (set on RadioButtonGroup)\n  const labelHeight = height * theme.spacing.gridSize - 4 - 2;\n\n  return {\n    radio: css`\n      position: absolute;\n      opacity: 0;\n      z-index: -1000;\n\n      &:checked + label {\n        color: ${theme.colors.text.primary};\n        font-weight: ${theme.typography.fontWeightMedium};\n        background: ${theme.colors.action.selected};\n        z-index: 3;\n      }\n\n      &:focus + label,\n      &:focus-visible + label {\n        ${getFocusStyles(theme)};\n      }\n\n      &:focus:not(:focus-visible) + label {\n        ${getMouseFocusStyles(theme)}\n      }\n\n      &:disabled + label {\n        color: ${theme.colors.text.disabled};\n        cursor: not-allowed;\n      }\n    `,\n    radioLabel: css`\n      display: inline-block;\n      position: relative;\n      font-size: ${fontSize};\n      height: ${labelHeight}px;\n      // Deduct border from line-height for perfect vertical centering on windows and linux\n      line-height: ${labelHeight}px;\n      color: ${textColor};\n      padding: ${theme.spacing(0, padding)};\n      border-radius: ${theme.shape.borderRadius()};\n      background: ${theme.colors.background.primary};\n      cursor: pointer;\n      z-index: 1;\n      flex: ${fullWidth ? `1 0 0` : 'none'};\n      text-align: center;\n      user-select: none;\n      white-space: nowrap;\n\n      &:hover {\n        color: ${textColorHover};\n      }\n    `,\n  };\n});\n","import { css, cx } from '@emotion/css';\nimport { uniqueId } from 'lodash';\nimport React, { useCallback, useEffect, useRef } from 'react';\n\nimport { GrafanaTheme2, SelectableValue, toIconName } from '@grafana/data';\n\nimport { useStyles2 } from '../../../themes';\nimport { Icon } from '../../Icon/Icon';\n\nimport { RadioButtonSize, RadioButton } from './RadioButton';\n\nexport interface RadioButtonGroupProps<T> {\n  value?: T;\n  id?: string;\n  disabled?: boolean;\n  disabledOptions?: T[];\n  options: Array<SelectableValue<T>>;\n  onChange?: (value: T) => void;\n  onClick?: (value: T) => void;\n  size?: RadioButtonSize;\n  fullWidth?: boolean;\n  className?: string;\n  autoFocus?: boolean;\n}\n\nexport function RadioButtonGroup<T>({\n  options,\n  value,\n  onChange,\n  onClick,\n  disabled,\n  disabledOptions,\n  size = 'md',\n  id,\n  className,\n  fullWidth = false,\n  autoFocus = false,\n}: RadioButtonGroupProps<T>) {\n  const handleOnChange = useCallback(\n    (option: SelectableValue) => {\n      return () => {\n        if (onChange) {\n          onChange(option.value);\n        }\n      };\n    },\n    [onChange]\n  );\n  const handleOnClick = useCallback(\n    (option: SelectableValue) => {\n      return () => {\n        if (onClick) {\n          onClick(option.value);\n        }\n      };\n    },\n    [onClick]\n  );\n\n  const internalId = id ?? uniqueId('radiogroup-');\n  const groupName = useRef(internalId);\n  const styles = useStyles2(getStyles);\n\n  const activeButtonRef = useRef<HTMLInputElement | null>(null);\n  useEffect(() => {\n    if (autoFocus && activeButtonRef.current) {\n      activeButtonRef.current.focus();\n    }\n  }, [autoFocus]);\n\n  return (\n    <div className={cx(styles.radioGroup, fullWidth && styles.fullWidth, className)}>\n      {options.map((opt, i) => {\n        const isItemDisabled = disabledOptions && opt.value && disabledOptions.includes(opt.value);\n        const icon = opt.icon ? toIconName(opt.icon) : undefined;\n\n        return (\n          <RadioButton\n            size={size}\n            disabled={isItemDisabled || disabled}\n            active={value === opt.value}\n            key={`o.label-${i}`}\n            aria-label={opt.ariaLabel}\n            onChange={handleOnChange(opt)}\n            onClick={handleOnClick(opt)}\n            id={`option-${opt.value}-${internalId}`}\n            name={groupName.current}\n            description={opt.description}\n            fullWidth={fullWidth}\n            ref={value === opt.value ? activeButtonRef : undefined}\n          >\n            {icon && <Icon name={icon} className={styles.icon} />}\n            {opt.imgUrl && <img src={opt.imgUrl} alt={opt.label} className={styles.img} />}\n            {opt.label} {opt.component ? <opt.component /> : null}\n          </RadioButton>\n        );\n      })}\n    </div>\n  );\n}\n\nRadioButtonGroup.displayName = 'RadioButtonGroup';\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    radioGroup: css({\n      display: 'inline-flex',\n      flexDirection: 'row',\n      flexWrap: 'nowrap',\n      border: `1px solid ${theme.components.input.borderColor}`,\n      borderRadius: theme.shape.borderRadius(),\n      padding: '2px',\n    }),\n    fullWidth: css({\n      display: 'flex',\n    }),\n    icon: css`\n      margin-right: 6px;\n    `,\n    img: css`\n      width: ${theme.spacing(2)};\n      height: ${theme.spacing(2)};\n      margin-right: ${theme.spacing(1)};\n    `,\n  };\n};\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../../themes';\n\nexport interface RadioButtonDotProps {\n  id: string;\n  name: string;\n  checked?: boolean;\n  disabled?: boolean;\n  label: React.ReactNode;\n  description?: string;\n  onChange?: (id: string) => void;\n}\n\nexport const RadioButtonDot = ({ id, name, label, checked, disabled, description, onChange }: RadioButtonDotProps) => {\n  const styles = useStyles2(getStyles);\n\n  return (\n    <label title={description} className={styles.label}>\n      <input\n        id={id}\n        name={name}\n        type=\"radio\"\n        checked={checked}\n        disabled={disabled}\n        className={styles.input}\n        onChange={() => onChange && onChange(id)}\n      />\n      {label}\n    </label>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  input: css`\n    position: relative;\n    appearance: none;\n    outline: none;\n    background-color: ${theme.colors.background.canvas};\n    margin: 0;\n    width: ${theme.spacing(2)} !important; /* TODO How to overcome this? Checkbox does the same 🙁 */\n    height: ${theme.spacing(2)};\n    border: 1px solid ${theme.colors.border.medium};\n    border-radius: 50%;\n    margin: 3px 0; /* Space for box-shadow when focused */\n\n    :checked {\n      background-color: ${theme.v1.palette.white};\n      border: 5px solid ${theme.colors.primary.main};\n    }\n\n    :disabled {\n      background-color: ${theme.colors.action.disabledBackground} !important;\n      border-color: ${theme.colors.border.weak};\n    }\n\n    :disabled:checked {\n      border: 1px solid ${theme.colors.border.weak};\n    }\n\n    :disabled:checked::after {\n      content: '';\n      width: 6px;\n      height: 6px;\n      background-color: ${theme.colors.text.disabled};\n      border-radius: 50%;\n      display: inline-block;\n      position: absolute;\n      top: 4px;\n      left: 4px;\n    }\n\n    :focus {\n      outline: none !important;\n      box-shadow: 0 0 0 1px ${theme.colors.background.canvas}, 0 0 0 3px ${theme.colors.primary.main};\n    }\n  `,\n  label: css`\n    font-size: ${theme.typography.fontSize};\n    line-height: 22px; /* 16px for the radio button and 6px for the focus shadow */\n    display: grid;\n    grid-template-columns: ${theme.spacing(2)} auto;\n    gap: ${theme.spacing(1)};\n  `,\n});\n","import { css, cx } from '@emotion/css';\nimport { uniqueId } from 'lodash';\nimport React from 'react';\n\nimport { GrafanaTheme2, SelectableValue } from '@grafana/data';\n\nimport { useStyles2 } from '../../../themes';\n\nimport { RadioButtonDot } from './RadioButtonDot';\n\nexport interface RadioButtonListProps<T> {\n  /** A name of a radio group. Used to group multiple radio inputs into a single group */\n  name: string;\n  id?: string;\n  /** An array of available options */\n  options: Array<SelectableValue<T>>;\n  value?: T;\n  onChange?: (value: T) => void;\n  /** Disables all elements in the list */\n  disabled?: boolean;\n  /** Disables subset of elements in the list. Compares values using the === operator */\n  disabledOptions?: T[];\n  className?: string;\n}\n\nexport function RadioButtonList<T>({\n  name,\n  id,\n  options,\n  value,\n  onChange,\n  className,\n  disabled,\n  disabledOptions = [],\n}: RadioButtonListProps<T>) {\n  const styles = useStyles2(getStyles);\n  const internalId = id ?? uniqueId('radiogroup-list-');\n\n  return (\n    <div id={id} className={cx(styles.container, className)} role=\"radiogroup\">\n      {options.map((option, index) => {\n        const itemId = `${internalId}-${index}`;\n\n        const isChecked = value && value === option.value;\n        const isDisabled = disabled || disabledOptions.some((optionValue) => optionValue === option.value);\n\n        const handleChange = () => onChange && option.value && onChange(option.value);\n\n        return (\n          <RadioButtonDot\n            key={itemId}\n            id={itemId}\n            name={name}\n            label={option.label}\n            description={option.description}\n            checked={isChecked}\n            disabled={isDisabled}\n            onChange={handleChange}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  container: css`\n    display: grid;\n    gap: ${theme.spacing(1)};\n  `,\n});\n","import React, { useEffect } from 'react';\n\nimport { measureText } from '../../utils/measureText';\n\nimport { Input, Props as InputProps } from './Input';\n\nexport interface Props extends InputProps {\n  /** Sets the min-width to a multiple of 8px. Default value is 10*/\n  minWidth?: number;\n  /** Sets the max-width to a multiple of 8px.*/\n  maxWidth?: number;\n  /** onChange function that will be run on onBlur and onKeyPress with enter*/\n  onCommitChange?: (event: React.FormEvent<HTMLInputElement>) => void;\n}\n\nexport const AutoSizeInput = React.forwardRef<HTMLInputElement, Props>((props, ref) => {\n  const { defaultValue = '', minWidth = 10, maxWidth, onCommitChange, onKeyDown, onBlur, ...restProps } = props;\n  const [value, setValue] = React.useState(defaultValue);\n  const [inputWidth, setInputWidth] = React.useState(minWidth);\n\n  useEffect(() => {\n    setInputWidth(getWidthFor(value.toString(), minWidth, maxWidth));\n  }, [value, maxWidth, minWidth]);\n\n  return (\n    <Input\n      {...restProps}\n      ref={ref}\n      value={value.toString()}\n      onChange={(event) => {\n        setValue(event.currentTarget.value);\n      }}\n      width={inputWidth}\n      onBlur={(event) => {\n        if (onBlur) {\n          onBlur(event);\n        } else if (onCommitChange) {\n          onCommitChange(event);\n        }\n      }}\n      onKeyDown={(event) => {\n        if (onKeyDown) {\n          onKeyDown(event);\n        } else if (event.key === 'Enter' && onCommitChange) {\n          onCommitChange(event);\n        }\n      }}\n      data-testid={'autosize-input'}\n    />\n  );\n});\n\nfunction getWidthFor(value: string, minWidth: number, maxWidth: number | undefined): number {\n  if (!value) {\n    return minWidth;\n  }\n\n  const extraSpace = 3;\n  const realWidth = measureText(value.toString(), 14).width / 8 + extraSpace;\n\n  if (minWidth && realWidth < minWidth) {\n    return minWidth;\n  }\n\n  if (maxWidth && realWidth > maxWidth) {\n    return maxWidth;\n  }\n\n  return realWidth;\n}\n\nAutoSizeInput.displayName = 'AutoSizeInput';\n","import React from 'react';\n\nexport function useCombinedRefs<T>(\n  ...refs: Array<React.MutableRefObject<T | null> | React.ForwardedRef<T | null> | ((instance: T | null) => void)>\n) {\n  const targetRef = React.useRef<T | null>(null);\n\n  React.useEffect(() => {\n    refs.forEach((ref) => {\n      if (!ref) {\n        return;\n      }\n\n      if (typeof ref === 'function') {\n        ref(targetRef.current);\n      } else {\n        ref.current = targetRef.current;\n      }\n    });\n  }, [refs]);\n\n  return targetRef;\n}\n","import React, { HTMLProps } from 'react';\n\nimport { escapeStringForRegex, unEscapeStringFromRegex } from '@grafana/data';\n\nimport { useCombinedRefs } from '../../utils/useCombinedRefs';\nimport { Button } from '../Button';\nimport { Icon } from '../Icon/Icon';\nimport { Input } from '../Input/Input';\n\nexport interface Props extends Omit<HTMLProps<HTMLInputElement>, 'onChange'> {\n  value: string | undefined;\n  width?: number;\n  onChange: (value: string) => void;\n  escapeRegex?: boolean;\n}\n\nexport const FilterInput = React.forwardRef<HTMLInputElement, Props>(\n  ({ value, width, onChange, escapeRegex = true, ...restProps }, ref) => {\n    const innerRef = React.useRef<HTMLInputElement | null>(null);\n    const combinedRef = useCombinedRefs<HTMLInputElement>(ref, innerRef);\n\n    const suffix =\n      value !== '' ? (\n        <Button\n          icon=\"times\"\n          fill=\"text\"\n          size=\"sm\"\n          onClick={(e) => {\n            innerRef.current?.focus();\n            onChange('');\n            e.stopPropagation();\n          }}\n        >\n          Clear\n        </Button>\n      ) : null;\n\n    return (\n      <Input\n        prefix={<Icon name=\"search\" />}\n        suffix={suffix}\n        width={width}\n        type=\"text\"\n        value={escapeRegex ? unEscapeStringFromRegex(value ?? '') : value}\n        onChange={(event) =>\n          onChange(escapeRegex ? escapeStringForRegex(event.currentTarget.value) : event.currentTarget.value)\n        }\n        {...restProps}\n        ref={combinedRef}\n      />\n    );\n  }\n);\n\nFilterInput.displayName = 'FilterInput';\n","import * as React from 'react';\n\nimport { Button } from '../Button';\nimport { Input } from '../Input/Input';\nimport { HorizontalGroup } from '../Layout/Layout';\n\nexport type Props = React.ComponentProps<typeof Input> & {\n  /** TRUE if the secret was already configured. (It is needed as often the backend doesn't send back the actual secret, only the information that it was configured) */\n  isConfigured: boolean;\n  /** Called when the user clicks on the \"Reset\" button in order to clear the secret */\n  onReset: () => void;\n};\n\nexport const CONFIGURED_TEXT = 'configured';\nexport const RESET_BUTTON_TEXT = 'Reset';\n\nexport const SecretInput = ({ isConfigured, onReset, ...props }: Props) => (\n  <HorizontalGroup>\n    {!isConfigured && <Input {...props} type=\"password\" />}\n    {isConfigured && <Input {...props} type=\"text\" disabled={true} value={CONFIGURED_TEXT} />}\n    {isConfigured && (\n      <Button onClick={onReset} variant=\"secondary\">\n        {RESET_BUTTON_TEXT}\n      </Button>\n    )}\n  </HorizontalGroup>\n);\n","import { css, cx } from '@emotion/css';\nimport * as React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes/ThemeContext';\nimport { Button } from '../Button';\nimport { HorizontalGroup } from '../Layout/Layout';\nimport { TextArea } from '../TextArea/TextArea';\n\nexport type Props = React.ComponentProps<typeof TextArea> & {\n  /** TRUE if the secret was already configured. (It is needed as often the backend doesn't send back the actual secret, only the information that it was configured) */\n  isConfigured: boolean;\n  /** Called when the user clicks on the \"Reset\" button in order to clear the secret */\n  onReset: () => void;\n};\n\nexport const CONFIGURED_TEXT = 'configured';\nexport const RESET_BUTTON_TEXT = 'Reset';\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    configuredStyle: css`\n      min-height: ${theme.spacing(theme.components.height.md)};\n      padding-top: ${theme.spacing(0.5) /** Needed to mimic vertically centered text in an input box */};\n      resize: none;\n    `,\n  };\n};\n\n/**\n * Text area that does not disclose an already configured value but lets the user reset the current value and enter a new one.\n * Typically useful for asymmetric cryptography keys.\n */\nexport const SecretTextArea = ({ isConfigured, onReset, ...props }: Props) => {\n  const styles = useStyles2(getStyles);\n  return (\n    <HorizontalGroup>\n      {!isConfigured && <TextArea {...props} />}\n      {isConfigured && (\n        <TextArea {...props} rows={1} disabled={true} value={CONFIGURED_TEXT} className={cx(styles.configuredStyle)} />\n      )}\n      {isConfigured && (\n        <Button onClick={onReset} variant=\"secondary\">\n          {RESET_BUTTON_TEXT}\n        </Button>\n      )}\n    </HorizontalGroup>\n  );\n};\n","import { css, cx } from '@emotion/css';\nimport React, { HTMLProps, useCallback } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { stylesFactory, useStyles2 } from '../../themes';\nimport { getFocusStyles, getMouseFocusStyles } from '../../themes/mixins';\n\nimport { getLabelStyles } from './Label';\n\nexport interface CheckboxProps extends Omit<HTMLProps<HTMLInputElement>, 'value'> {\n  label?: string;\n  description?: string;\n  value?: boolean;\n  // htmlValue allows to specify the input \"value\" attribute\n  htmlValue?: string | number;\n}\n\nexport const Checkbox = React.forwardRef<HTMLInputElement, CheckboxProps>(\n  ({ label, description, value, htmlValue, onChange, disabled, className, ...inputProps }, ref) => {\n    const handleOnChange = useCallback(\n      (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (onChange) {\n          onChange(e);\n        }\n      },\n      [onChange]\n    );\n    const styles = useStyles2(getCheckboxStyles);\n\n    return (\n      <label className={cx(styles.wrapper, className)}>\n        <div className={styles.checkboxWrapper}>\n          <input\n            type=\"checkbox\"\n            className={styles.input}\n            checked={value}\n            disabled={disabled}\n            onChange={handleOnChange}\n            value={htmlValue}\n            {...inputProps}\n            ref={ref}\n          />\n          <span className={styles.checkmark} />\n        </div>\n        {label && <span className={styles.label}>{label}</span>}\n        {description && <span className={styles.description}>{description}</span>}\n      </label>\n    );\n  }\n);\n\nexport const getCheckboxStyles = stylesFactory((theme: GrafanaTheme2) => {\n  const labelStyles = getLabelStyles(theme);\n  const checkboxSize = 2;\n  const labelPadding = 1;\n\n  return {\n    wrapper: css`\n      display: inline-grid;\n      align-items: center;\n      column-gap: ${theme.spacing(labelPadding)};\n      grid-template-columns: auto 1fr;\n      grid-template-rows: auto auto;\n      position: relative;\n      vertical-align: middle;\n    `,\n    input: css`\n      position: absolute;\n      z-index: 1;\n      top: 0;\n      left: 0;\n      width: 100% !important; // global styles unset this\n      height: 100%;\n      opacity: 0;\n\n      &:focus + span,\n      &:focus-visible + span {\n        ${getFocusStyles(theme)}\n      }\n\n      &:focus:not(:focus-visible) + span {\n        ${getMouseFocusStyles(theme)}\n      }\n\n      /**\n       * Using adjacent sibling selector to style checked state.\n       * Primarily to limit the classes necessary to use when these classes will be used\n       * for angular components styling\n       * */\n      &:checked + span {\n        background: blue;\n        background: ${theme.colors.primary.main};\n        border: none;\n\n        &:hover {\n          background: ${theme.colors.primary.shade};\n        }\n\n        &:after {\n          content: '';\n          position: absolute;\n          z-index: 2;\n          left: 5px;\n          top: 1px;\n          width: 6px;\n          height: 12px;\n          border: solid ${theme.colors.primary.contrastText};\n          border-width: 0 3px 3px 0;\n          transform: rotate(45deg);\n        }\n      }\n\n      &:disabled + span {\n        background-color: ${theme.colors.action.disabledBackground};\n        cursor: not-allowed;\n\n        &:hover {\n          background-color: ${theme.colors.action.disabledBackground};\n        }\n\n        &:after {\n          border-color: ${theme.colors.action.disabledText};\n        }\n      }\n    `,\n    checkboxWrapper: css`\n      display: flex;\n      align-items: center;\n      grid-column-start: 1;\n      grid-row-start: 1;\n    `,\n    checkmark: css`\n      position: relative; /* Checkbox should be layered on top of the invisible input so it recieves :hover */\n      z-index: 2;\n      display: inline-block;\n      width: ${theme.spacing(checkboxSize)};\n      height: ${theme.spacing(checkboxSize)};\n      border-radius: ${theme.shape.borderRadius()};\n      background: ${theme.components.input.background};\n      border: 1px solid ${theme.components.input.borderColor};\n\n      &:hover {\n        cursor: pointer;\n        border-color: ${theme.components.input.borderHover};\n      }\n    `,\n    label: cx(\n      labelStyles.label,\n      css`\n        grid-column-start: 2;\n        grid-row-start: 1;\n        position: relative;\n        z-index: 2;\n        cursor: pointer;\n        max-width: fit-content;\n        line-height: ${theme.typography.bodySmall.lineHeight};\n        margin-bottom: 0;\n      `\n    ),\n    description: cx(\n      labelStyles.description,\n      css`\n        grid-column-start: 2;\n        grid-row-start: 2;\n        line-height: ${theme.typography.bodySmall.lineHeight};\n        margin-top: 0; /* The margin effectively comes from the top: -2px on the label above it */\n      `\n    ),\n  };\n});\n\nCheckbox.displayName = 'Checkbox';\n","/**\n * Shortens the filename to 16 length\n * @param fileName\n */\nexport function trimFileName(fileName: string): string {\n  const nameLength = 16;\n  const delimiter = fileName.lastIndexOf('.');\n  const extension = fileName.substring(delimiter);\n  const file = fileName.substring(0, delimiter);\n\n  if (file.length < nameLength) {\n    return fileName;\n  }\n\n  return `${file.substring(0, nameLength)}...${extension}`;\n}\n","import { css, cx } from '@emotion/css';\nimport React, { FormEvent, useCallback, useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\n\nimport { useStyles2 } from '../../themes';\nimport { getFocusStyles } from '../../themes/mixins';\nimport { ComponentSize } from '../../types/size';\nimport { trimFileName } from '../../utils/file';\nimport { getButtonStyles } from '../Button';\nimport { Icon } from '../index';\n\nexport interface Props {\n  /** Callback function to handle uploaded file  */\n  onFileUpload: (event: FormEvent<HTMLInputElement>) => void;\n  /** Accepted file extensions */\n  accept?: string;\n  /** Overwrite or add to style */\n  className?: string;\n  /** Button size */\n  size?: ComponentSize;\n  /** Show the file name */\n  showFileName?: boolean;\n}\n\nexport const FileUpload = ({\n  onFileUpload,\n  className,\n  children = 'Upload file',\n  accept = '*',\n  size = 'md',\n  showFileName,\n}: React.PropsWithChildren<Props>) => {\n  const style = useStyles2(getStyles(size));\n  const [fileName, setFileName] = useState('');\n  const id = uuidv4();\n\n  const onChange = useCallback(\n    (event: FormEvent<HTMLInputElement>) => {\n      const file = event.currentTarget?.files?.[0];\n      if (file) {\n        setFileName(file.name ?? '');\n      }\n      onFileUpload(event);\n    },\n    [onFileUpload]\n  );\n\n  return (\n    <>\n      <input\n        type=\"file\"\n        id={id}\n        className={style.fileUpload}\n        onChange={onChange}\n        multiple={false}\n        accept={accept}\n        data-testid={selectors.components.FileUpload.inputField}\n      />\n      <label htmlFor={id} className={cx(style.labelWrapper, className)}>\n        <Icon name=\"upload\" className={style.icon} />\n        {children}\n      </label>\n\n      {showFileName && fileName && (\n        <span\n          aria-label=\"File name\"\n          className={style.fileName}\n          data-testid={selectors.components.FileUpload.fileNameSpan}\n        >\n          {trimFileName(fileName)}\n        </span>\n      )}\n    </>\n  );\n};\n\nconst getStyles = (size: ComponentSize) => (theme: GrafanaTheme2) => {\n  const buttonStyles = getButtonStyles({ theme, variant: 'primary', size, iconOnly: false });\n  const focusStyle = getFocusStyles(theme);\n\n  return {\n    fileUpload: css({\n      height: '0.1px',\n      opacity: '0',\n      overflow: 'hidden',\n      position: 'absolute',\n      width: '0.1px',\n      zIndex: -1,\n      '&:focus + label': focusStyle,\n      '&:focus-visible + label': focusStyle,\n    }),\n    labelWrapper: buttonStyles.button,\n    icon: buttonStyles.icon,\n    fileName: css({\n      marginLeft: theme.spacing(0.5),\n    }),\n  };\n};\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { formattedValueToString, getValueFormat, GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\nimport { trimFileName } from '../../utils/file';\nimport { Button } from '../Button';\nimport { Icon } from '../Icon/Icon';\nimport { IconButton } from '../IconButton/IconButton';\n\nimport { DropzoneFile } from './FileDropzone';\n\nexport const REMOVE_FILE = 'Remove file';\nexport interface FileListItemProps {\n  file: DropzoneFile;\n  removeFile?: (file: DropzoneFile) => void;\n}\n\nexport function FileListItem({ file: customFile, removeFile }: FileListItemProps) {\n  const styles = useStyles2(getStyles);\n  const { file, progress, error, abortUpload, retryUpload } = customFile;\n\n  const renderRightSide = () => {\n    if (error) {\n      return (\n        <>\n          <span className={styles.error}>{error.message}</span>\n          {retryUpload && (\n            <IconButton\n              type=\"button\"\n              aria-label=\"Retry\"\n              name=\"sync\"\n              tooltip=\"Retry\"\n              tooltipPlacement=\"top\"\n              onClick={retryUpload}\n            />\n          )}\n          {removeFile && (\n            <IconButton\n              className={retryUpload ? styles.marginLeft : ''}\n              type=\"button\"\n              name=\"trash-alt\"\n              onClick={() => removeFile(customFile)}\n              tooltip={REMOVE_FILE}\n              aria-label={REMOVE_FILE}\n            />\n          )}\n        </>\n      );\n    }\n\n    if (progress && file.size > progress) {\n      return (\n        <>\n          <progress className={styles.progressBar} max={file.size} value={progress} />\n          <span className={styles.paddingLeft}>{Math.round((progress / file.size) * 100)}%</span>\n          {abortUpload && (\n            <Button variant=\"secondary\" type=\"button\" fill=\"text\" onClick={abortUpload}>\n              Cancel upload\n            </Button>\n          )}\n        </>\n      );\n    }\n    return (\n      removeFile && (\n        <IconButton\n          name=\"trash-alt\"\n          onClick={() => removeFile(customFile)}\n          tooltip={REMOVE_FILE}\n          aria-label={REMOVE_FILE}\n          type=\"button\"\n          tooltipPlacement=\"top\"\n        />\n      )\n    );\n  };\n\n  const valueFormat = getValueFormat('decbytes')(file.size);\n\n  return (\n    <div className={styles.fileListContainer}>\n      <span className={styles.fileNameWrapper}>\n        <Icon name=\"file-blank\" size=\"lg\" aria-hidden={true} />\n        <span className={styles.padding}>{trimFileName(file.name)}</span>\n        <span>{formattedValueToString(valueFormat)}</span>\n      </span>\n\n      <div className={styles.fileNameWrapper}>{renderRightSide()}</div>\n    </div>\n  );\n}\n\nfunction getStyles(theme: GrafanaTheme2) {\n  return {\n    fileListContainer: css`\n      width: 100%;\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n      justify-content: space-between;\n      padding: ${theme.spacing(2)};\n      border: 1px dashed ${theme.colors.border.medium};\n      background-color: ${theme.colors.background.secondary};\n      margin-top: ${theme.spacing(1)};\n    `,\n    fileNameWrapper: css`\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n    `,\n    padding: css`\n      padding: ${theme.spacing(0, 1)};\n    `,\n    paddingLeft: css`\n      padding-left: ${theme.spacing(2)};\n    `,\n    marginLeft: css`\n      margin-left: ${theme.spacing(1)};\n    `,\n    error: css`\n      padding-right: ${theme.spacing(2)};\n      color: ${theme.colors.error.text};\n    `,\n    progressBar: css`\n      border-radius: ${theme.shape.radius.default};\n      height: 4px;\n      ::-webkit-progress-bar {\n        background-color: ${theme.colors.border.weak};\n        border-radius: ${theme.shape.radius.default};\n      }\n      ::-webkit-progress-value {\n        background-color: ${theme.colors.primary.main};\n        border-radius: ${theme.shape.radius.default};\n      }\n    `,\n  };\n}\n","import { css, cx } from '@emotion/css';\nimport { isString, uniqueId } from 'lodash';\nimport React, { ReactNode, useCallback, useState } from 'react';\nimport { Accept, DropEvent, DropzoneOptions, FileError, FileRejection, useDropzone, ErrorCode } from 'react-dropzone';\n\nimport { formattedValueToString, getValueFormat, GrafanaTheme2 } from '@grafana/data';\n\nimport { useTheme2 } from '../../themes';\nimport { Alert } from '../Alert/Alert';\nimport { Icon } from '../Icon/Icon';\n\nimport { FileListItem } from './FileListItem';\n\ntype BackwardsCompatibleDropzoneOptions = Omit<DropzoneOptions, 'accept'> & {\n  // For backward compatibility we are still allowing the old `string | string[]` format for adding accepted file types (format changed in v13.0.0)\n  accept?: string | string[] | Accept;\n};\n\nexport interface FileDropzoneProps {\n  /**\n   * Use the children property to have custom dropzone view.\n   */\n  children?: ReactNode;\n  /**\n   * Use this property to override the default behaviour for the react-dropzone options.\n   * @default {\n   *  maxSize: Infinity,\n   *  minSize: 0,\n   *  multiple: true,\n   *  useFsAccessApi: false,\n   *  maxFiles: 0,\n   * }\n   */\n  options?: BackwardsCompatibleDropzoneOptions;\n  /**\n   * Use this to change the FileReader's read.\n   */\n  readAs?: 'readAsArrayBuffer' | 'readAsText' | 'readAsBinaryString' | 'readAsDataURL';\n  /**\n   * Use the onLoad function to get the result from FileReader.\n   */\n  onLoad?: (result: string | ArrayBuffer | null) => void;\n  /**\n   * The fileListRenderer property can be used to overwrite the list of files. To not to show\n   * any list return null in the function.\n   */\n  fileListRenderer?: (file: DropzoneFile, removeFile: (file: DropzoneFile) => void) => ReactNode;\n  onFileRemove?: (file: DropzoneFile) => void;\n}\n\nexport interface DropzoneFile {\n  file: File;\n  id: string;\n  error: DOMException | null;\n  progress?: number;\n  abortUpload?: () => void;\n  retryUpload?: () => void;\n}\n\nexport function FileDropzone({ options, children, readAs, onLoad, fileListRenderer, onFileRemove }: FileDropzoneProps) {\n  const [files, setFiles] = useState<DropzoneFile[]>([]);\n  const [fileErrors, setErrorMessages] = useState<FileError[]>([]);\n\n  const formattedSize = getValueFormat('decbytes')(options?.maxSize ? options?.maxSize : 0);\n\n  const setFileProperty = useCallback(\n    (customFile: DropzoneFile, action: (customFileToModify: DropzoneFile) => void) => {\n      setFiles((oldFiles) => {\n        return oldFiles.map((oldFile) => {\n          if (oldFile.id === customFile.id) {\n            action(oldFile);\n            return oldFile;\n          }\n          return oldFile;\n        });\n      });\n    },\n    []\n  );\n\n  const onDrop = useCallback(\n    (acceptedFiles: File[], rejectedFiles: FileRejection[], event: DropEvent) => {\n      let customFiles = acceptedFiles.map(mapToCustomFile);\n      if (options?.multiple === false) {\n        setFiles(customFiles);\n      } else {\n        setFiles((oldFiles) => [...oldFiles, ...customFiles]);\n      }\n\n      setErrors(rejectedFiles);\n\n      if (options?.onDrop) {\n        options.onDrop(acceptedFiles, rejectedFiles, event);\n      } else {\n        for (const customFile of customFiles) {\n          const reader = new FileReader();\n\n          const read = () => {\n            if (readAs) {\n              reader[readAs](customFile.file);\n            } else {\n              reader.readAsText(customFile.file);\n            }\n          };\n\n          // Set abort FileReader\n          setFileProperty(customFile, (fileToModify) => {\n            fileToModify.abortUpload = () => {\n              reader.abort();\n            };\n            fileToModify.retryUpload = () => {\n              setFileProperty(customFile, (fileToModify) => {\n                fileToModify.error = null;\n                fileToModify.progress = undefined;\n              });\n              read();\n            };\n          });\n\n          reader.onabort = () => {\n            setFileProperty(customFile, (fileToModify) => {\n              fileToModify.error = new DOMException('Aborted');\n            });\n          };\n\n          reader.onprogress = (event) => {\n            setFileProperty(customFile, (fileToModify) => {\n              fileToModify.progress = event.loaded;\n            });\n          };\n\n          reader.onload = () => {\n            onLoad?.(reader.result);\n          };\n\n          reader.onerror = () => {\n            setFileProperty(customFile, (fileToModify) => {\n              fileToModify.error = reader.error;\n            });\n          };\n\n          read();\n        }\n      }\n    },\n    [onLoad, options, readAs, setFileProperty]\n  );\n\n  const removeFile = (file: DropzoneFile) => {\n    const newFiles = files.filter((f) => file.id !== f.id);\n    setFiles(newFiles);\n    onFileRemove?.(file);\n  };\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    ...options,\n    useFsAccessApi: false,\n    onDrop,\n    accept: transformAcceptToNewFormat(options?.accept),\n  });\n  const theme = useTheme2();\n  const styles = getStyles(theme, isDragActive);\n  const fileList = files.map((file) => {\n    if (fileListRenderer) {\n      return fileListRenderer(file, removeFile);\n    }\n    return <FileListItem key={file.id} file={file} removeFile={removeFile} />;\n  });\n\n  const setErrors = (rejectedFiles: FileRejection[]) => {\n    let errors: FileError[] = [];\n    rejectedFiles.map((rejectedFile) => {\n      rejectedFile.errors.map((newError) => {\n        if (\n          errors.findIndex((presentError) => {\n            return presentError.code === newError.code && presentError.message === newError.message;\n          }) === -1\n        ) {\n          errors.push(newError);\n        }\n      });\n    });\n\n    setErrorMessages(errors);\n  };\n\n  const renderErrorMessages = (errors: FileError[]) => {\n    return (\n      <div className={styles.errorAlert}>\n        <Alert title=\"Upload failed\" severity=\"error\" onRemove={clearAlert}>\n          {errors.map((error) => {\n            switch (error.code) {\n              case ErrorCode.FileTooLarge:\n                return (\n                  <div key={error.message + error.code}>\n                    File is larger than {formattedValueToString(formattedSize)}\n                  </div>\n                );\n              default:\n                return <div key={error.message + error.code}>{error.message}</div>;\n            }\n          })}\n        </Alert>\n      </div>\n    );\n  };\n\n  const clearAlert = () => {\n    setErrorMessages([]);\n  };\n\n  return (\n    <div className={styles.container}>\n      <div data-testid=\"dropzone\" {...getRootProps({ className: styles.dropzone })}>\n        <input {...getInputProps()} />\n        {children ?? <FileDropzoneDefaultChildren primaryText={getPrimaryText(files, options)} />}\n      </div>\n      {fileErrors.length > 0 && renderErrorMessages(fileErrors)}\n      <div className={styles.acceptContainer}>\n        {options?.accept && (\n          <small className={cx(styles.small, styles.acceptMargin, styles.acceptedFiles)}>\n            {getAcceptedFileTypeText(options.accept)}\n          </small>\n        )}\n        {options?.maxSize && (\n          <small className={cx(styles.small, styles.acceptMargin)}>{`Max file size: ${formattedValueToString(\n            formattedSize\n          )}`}</small>\n        )}\n      </div>\n      {fileList}\n    </div>\n  );\n}\n\nexport function getMimeTypeByExtension(ext: string) {\n  if (['txt', 'json', 'csv', 'xls', 'yml'].some((e) => ext.match(e))) {\n    return 'text/plain';\n  }\n\n  return 'application/octet-stream';\n}\n\nexport function transformAcceptToNewFormat(accept?: string | string[] | Accept): Accept | undefined {\n  if (isString(accept)) {\n    return {\n      [getMimeTypeByExtension(accept)]: [accept],\n    };\n  }\n\n  if (Array.isArray(accept)) {\n    return accept.reduce((prev: Record<string, string[]>, current) => {\n      const mime = getMimeTypeByExtension(current);\n\n      prev[mime] = prev[mime] ? [...prev[mime], current] : [current];\n\n      return prev;\n    }, {});\n  }\n\n  return accept;\n}\n\nexport function FileDropzoneDefaultChildren({\n  primaryText = 'Upload file',\n  secondaryText = 'Drag and drop here or browse',\n}) {\n  const theme = useTheme2();\n  const styles = getStyles(theme);\n\n  return (\n    <div className={styles.iconWrapper}>\n      <Icon name=\"upload\" size=\"xxl\" />\n      <h3>{primaryText}</h3>\n      <small className={styles.small}>{secondaryText}</small>\n    </div>\n  );\n}\n\nfunction getPrimaryText(files: DropzoneFile[], options?: BackwardsCompatibleDropzoneOptions) {\n  if (options?.multiple === undefined || options?.multiple) {\n    return 'Upload file';\n  }\n  return files.length ? 'Replace file' : 'Upload file';\n}\n\nfunction getAcceptedFileTypeText(accept: string | string[] | Accept) {\n  if (isString(accept)) {\n    return `Accepted file type: ${accept}`;\n  }\n\n  if (Array.isArray(accept)) {\n    return `Accepted file types: ${accept.join(', ')}`;\n  }\n\n  // react-dropzone has updated the type of the \"accept\" parameter since v13.0.0:\n  // https://github.com/react-dropzone/react-dropzone/blob/master/src/index.js#L95\n  return `Accepted file types: ${Object.values(accept).flat().join(', ')}`;\n}\n\nfunction mapToCustomFile(file: File): DropzoneFile {\n  return {\n    id: uniqueId('file'),\n    file,\n    error: null,\n  };\n}\n\nfunction getStyles(theme: GrafanaTheme2, isDragActive?: boolean) {\n  return {\n    container: css`\n      display: flex;\n      flex-direction: column;\n      width: 100%;\n    `,\n    dropzone: css`\n      display: flex;\n      flex: 1;\n      flex-direction: column;\n      align-items: center;\n      padding: ${theme.spacing(6)};\n      border-radius: 2px;\n      border: 2px dashed ${theme.colors.border.medium};\n      background-color: ${isDragActive ? theme.colors.background.secondary : theme.colors.background.primary};\n      cursor: pointer;\n    `,\n    iconWrapper: css`\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n    `,\n    acceptContainer: css`\n      display: flex;\n    `,\n    acceptedFiles: css`\n      flex-grow: 1;\n    `,\n    acceptMargin: css`\n      margin: ${theme.spacing(2, 0, 1)};\n    `,\n    small: css`\n      color: ${theme.colors.text.secondary};\n    `,\n    errorAlert: css`\n      padding-top: 10px;\n    `,\n  };\n}\n","import { css, cx } from '@emotion/css';\nimport React, { FormEvent, MouseEvent, useState } from 'react';\n\nimport { dateMath, dateTime, getDefaultTimeRange, GrafanaTheme2, TimeRange, TimeZone } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\n\nimport { stylesFactory } from '../../themes';\nimport { useTheme2 } from '../../themes/ThemeContext';\nimport { ClickOutsideWrapper } from '../ClickOutsideWrapper/ClickOutsideWrapper';\nimport { Icon } from '../Icon/Icon';\nimport { getInputStyles } from '../Input/Input';\n\nimport { TimePickerButtonLabel } from './TimeRangePicker';\nimport { TimePickerContent } from './TimeRangePicker/TimePickerContent';\nimport { quickOptions } from './options';\n\nconst isValidTimeRange = (range: TimeRange) => {\n  return dateMath.isValid(range.from) && dateMath.isValid(range.to);\n};\n\nexport interface TimeRangeInputProps {\n  value: TimeRange;\n  timeZone?: TimeZone;\n  onChange: (timeRange: TimeRange) => void;\n  onChangeTimeZone?: (timeZone: TimeZone) => void;\n  hideTimeZone?: boolean;\n  placeholder?: string;\n  clearable?: boolean;\n  /** Controls horizontal alignment of the picker menu */\n  isReversed?: boolean;\n  /** Controls visibility of the preset time ranges (e.g. **Last 5 minutes**) in the picker menu */\n  hideQuickRanges?: boolean;\n  disabled?: boolean;\n}\n\nconst noop = () => {};\n\nexport const TimeRangeInput = ({\n  value,\n  onChange,\n  onChangeTimeZone = noop,\n  clearable,\n  hideTimeZone = true,\n  timeZone = 'browser',\n  placeholder = 'Select time range',\n  isReversed = true,\n  hideQuickRanges = false,\n  disabled = false,\n}: TimeRangeInputProps) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const theme = useTheme2();\n  const styles = getStyles(theme, disabled);\n\n  const onOpen = (event: FormEvent<HTMLButtonElement>) => {\n    event.stopPropagation();\n    event.preventDefault();\n    if (disabled) {\n      return;\n    }\n    setIsOpen(!isOpen);\n  };\n\n  const onClose = () => {\n    setIsOpen(false);\n  };\n\n  const onRangeChange = (timeRange: TimeRange) => {\n    onClose();\n    onChange(timeRange);\n  };\n\n  const onRangeClear = (event: MouseEvent<HTMLDivElement>) => {\n    event.stopPropagation();\n    const from = dateTime(null);\n    const to = dateTime(null);\n    onChange({ from, to, raw: { from, to } });\n  };\n\n  return (\n    <div className={styles.container}>\n      <button\n        type=\"button\"\n        className={styles.pickerInput}\n        aria-label={selectors.components.TimePicker.openButton}\n        onClick={onOpen}\n      >\n        {isValidTimeRange(value) ? (\n          <TimePickerButtonLabel value={value} timeZone={timeZone} />\n        ) : (\n          <span className={styles.placeholder}>{placeholder}</span>\n        )}\n\n        {!disabled && (\n          <span className={styles.caretIcon}>\n            {isValidTimeRange(value) && clearable && (\n              <Icon className={styles.clearIcon} name=\"times\" size=\"lg\" onClick={onRangeClear} />\n            )}\n            <Icon name={isOpen ? 'angle-up' : 'angle-down'} size=\"lg\" />\n          </span>\n        )}\n      </button>\n      {isOpen && (\n        <ClickOutsideWrapper includeButtonPress={false} onClick={onClose}>\n          <TimePickerContent\n            timeZone={timeZone}\n            value={isValidTimeRange(value) ? value : getDefaultTimeRange()}\n            onChange={onRangeChange}\n            quickOptions={quickOptions}\n            onChangeTimeZone={onChangeTimeZone}\n            className={styles.content}\n            hideTimeZone={hideTimeZone}\n            isReversed={isReversed}\n            hideQuickRanges={hideQuickRanges}\n          />\n        </ClickOutsideWrapper>\n      )}\n    </div>\n  );\n};\n\nconst getStyles = stylesFactory((theme: GrafanaTheme2, disabled = false) => {\n  const inputStyles = getInputStyles({ theme, invalid: false });\n  return {\n    container: css`\n      display: flex;\n      position: relative;\n    `,\n    content: css`\n      margin-left: 0;\n      position: absolute;\n      top: 116%;\n      z-index: ${theme.zIndex.dropdown};\n    `,\n    pickerInput: cx(\n      inputStyles.input,\n      disabled && inputStyles.inputDisabled,\n      inputStyles.wrapper,\n      css`\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        cursor: pointer;\n        padding-right: 0;\n        line-height: ${theme.spacing.gridSize * 4 - 2}px;\n      `\n    ),\n    caretIcon: cx(\n      inputStyles.suffix,\n      css`\n        position: relative;\n        top: -1px;\n        margin-left: ${theme.spacing(0.5)};\n      `\n    ),\n    clearIcon: css`\n      margin-right: ${theme.spacing(0.5)};\n      &:hover {\n        color: ${theme.colors.text.maxContrast};\n      }\n    `,\n    placeholder: css`\n      color: ${theme.colors.text.disabled};\n      opacity: 1;\n    `,\n  };\n});\n","import { RelativeTimeRange, TimeOption } from '@grafana/data';\n\nconst regex = /^now$|^now\\-(\\d{1,10})([wdhms])$/;\n\nexport const mapOptionToRelativeTimeRange = (option: TimeOption): RelativeTimeRange | undefined => {\n  return {\n    from: relativeToSeconds(option.from),\n    to: relativeToSeconds(option.to),\n  };\n};\n\nexport const mapRelativeTimeRangeToOption = (range: RelativeTimeRange): TimeOption => {\n  const from = secondsToRelativeFormat(range.from);\n  const to = secondsToRelativeFormat(range.to);\n\n  return { from, to, display: `${from} to ${to}` };\n};\n\nexport type RangeValidation = {\n  isValid: boolean;\n  errorMessage?: string;\n};\n\nexport const isRangeValid = (relative: string, now = Date.now()): RangeValidation => {\n  if (!isRelativeFormat(relative)) {\n    return {\n      isValid: false,\n      errorMessage: 'Value not in relative time format.',\n    };\n  }\n\n  const seconds = relativeToSeconds(relative);\n\n  if (seconds > Math.ceil(now / 1000)) {\n    return {\n      isValid: false,\n      errorMessage: 'Can not enter value prior to January 1, 1970.',\n    };\n  }\n\n  return { isValid: true };\n};\n\nexport const isRelativeFormat = (format: string): boolean => {\n  return regex.test(format);\n};\n\nconst relativeToSeconds = (relative: string): number => {\n  const match = regex.exec(relative);\n\n  if (!match || match.length !== 3) {\n    return 0;\n  }\n\n  const [, value, unit] = match;\n  const parsed = parseInt(value, 10);\n\n  if (isNaN(parsed)) {\n    return 0;\n  }\n\n  return parsed * units[unit];\n};\n\nconst units: Record<string, number> = {\n  w: 604800,\n  d: 86400,\n  h: 3600,\n  m: 60,\n  s: 1,\n};\n\nconst secondsToRelativeFormat = (seconds: number): string => {\n  if (seconds <= 0) {\n    return 'now';\n  }\n\n  if (seconds >= units.w && seconds % units.w === 0) {\n    return `now-${seconds / units.w}w`;\n  }\n\n  if (seconds >= units.d && seconds % units.d === 0) {\n    return `now-${seconds / units.d}d`;\n  }\n\n  if (seconds >= units.h && seconds % units.h === 0) {\n    return `now-${seconds / units.h}h`;\n  }\n\n  if (seconds >= units.m && seconds % units.m === 0) {\n    return `now-${seconds / units.m}m`;\n  }\n\n  return `now-${seconds}s`;\n};\n","import { css, cx } from '@emotion/css';\nimport { useDialog } from '@react-aria/dialog';\nimport { FocusScope } from '@react-aria/focus';\nimport { useOverlay } from '@react-aria/overlays';\nimport React, { FormEvent, useCallback, useRef, useState } from 'react';\nimport { usePopper } from 'react-popper';\n\nimport { RelativeTimeRange, GrafanaTheme2, TimeOption } from '@grafana/data';\n\nimport { useStyles2 } from '../../../themes';\nimport { Trans, t } from '../../../utils/i18n';\nimport { Button } from '../../Button';\nimport CustomScrollbar from '../../CustomScrollbar/CustomScrollbar';\nimport { Field } from '../../Forms/Field';\nimport { Icon } from '../../Icon/Icon';\nimport { getInputStyles, Input } from '../../Input/Input';\nimport { Portal } from '../../Portal/Portal';\nimport { Tooltip } from '../../Tooltip/Tooltip';\nimport { TimePickerTitle } from '../TimeRangePicker/TimePickerTitle';\nimport { TimeRangeList } from '../TimeRangePicker/TimeRangeList';\nimport { quickOptions } from '../options';\n\nimport {\n  isRangeValid,\n  isRelativeFormat,\n  mapOptionToRelativeTimeRange,\n  mapRelativeTimeRangeToOption,\n  RangeValidation,\n} from './utils';\n\n/**\n * @internal\n */\nexport interface RelativeTimeRangePickerProps {\n  timeRange: RelativeTimeRange;\n  onChange: (timeRange: RelativeTimeRange) => void;\n}\n\ntype InputState = {\n  value: string;\n  validation: RangeValidation;\n};\n\nconst validOptions = quickOptions.filter((o) => isRelativeFormat(o.from));\n\n/**\n * @internal\n */\nexport function RelativeTimeRangePicker(props: RelativeTimeRangePickerProps) {\n  const { timeRange, onChange } = props;\n  const [isOpen, setIsOpen] = useState(false);\n  const onClose = useCallback(() => setIsOpen(false), []);\n  const timeOption = mapRelativeTimeRangeToOption(timeRange);\n  const [from, setFrom] = useState<InputState>({ value: timeOption.from, validation: isRangeValid(timeOption.from) });\n  const [to, setTo] = useState<InputState>({ value: timeOption.to, validation: isRangeValid(timeOption.to) });\n  const ref = useRef<HTMLDivElement>(null);\n  const { overlayProps, underlayProps } = useOverlay(\n    { onClose: () => setIsOpen(false), isDismissable: true, isOpen },\n    ref\n  );\n  const { dialogProps } = useDialog({}, ref);\n\n  const [markerElement, setMarkerElement] = useState<HTMLDivElement | null>(null);\n  const [selectorElement, setSelectorElement] = useState<HTMLDivElement | null>(null);\n  const popper = usePopper(markerElement, selectorElement, {\n    placement: 'auto-start',\n  });\n\n  const styles = useStyles2(getStyles(from.validation.errorMessage, to.validation.errorMessage));\n\n  const onChangeTimeOption = (option: TimeOption) => {\n    const relativeTimeRange = mapOptionToRelativeTimeRange(option);\n    if (!relativeTimeRange) {\n      return;\n    }\n    onClose();\n    setFrom({ ...from, value: option.from });\n    setTo({ ...to, value: option.to });\n    onChange(relativeTimeRange);\n  };\n\n  const onOpen = useCallback(\n    (event: FormEvent<HTMLButtonElement>) => {\n      event.stopPropagation();\n      event.preventDefault();\n      setIsOpen(!isOpen);\n    },\n    [isOpen]\n  );\n\n  const onApply = (event: FormEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n\n    if (!to.validation.isValid || !from.validation.isValid) {\n      return;\n    }\n\n    const timeRange = mapOptionToRelativeTimeRange({\n      from: from.value,\n      to: to.value,\n      display: '',\n    });\n\n    if (!timeRange) {\n      return;\n    }\n\n    onChange(timeRange);\n    setIsOpen(false);\n  };\n\n  return (\n    <div className={styles.container} ref={setMarkerElement}>\n      <button className={styles.pickerInput} type=\"button\" onClick={onOpen}>\n        <span className={styles.clockIcon}>\n          <Icon name=\"clock-nine\" />\n        </span>\n        <span>\n          {timeOption.from} to {timeOption.to}\n        </span>\n        <span className={styles.caretIcon}>\n          <Icon name={isOpen ? 'angle-up' : 'angle-down'} size=\"lg\" />\n        </span>\n      </button>\n      {isOpen && (\n        <Portal>\n          <div role=\"presentation\" className={styles.backdrop} {...underlayProps} />\n          <FocusScope contain autoFocus restoreFocus>\n            <div ref={ref} {...overlayProps} {...dialogProps}>\n              <div\n                className={styles.content}\n                ref={setSelectorElement}\n                style={popper.styles.popper}\n                {...popper.attributes}\n              >\n                <div className={styles.body}>\n                  <CustomScrollbar className={styles.leftSide} hideHorizontalTrack>\n                    <TimeRangeList\n                      title={t('time-picker.time-range.example-title', 'Example time ranges')}\n                      options={validOptions}\n                      onChange={onChangeTimeOption}\n                      value={timeOption}\n                    />\n                  </CustomScrollbar>\n                  <div className={styles.rightSide}>\n                    <div className={styles.title}>\n                      <TimePickerTitle>\n                        <Tooltip content={<TooltipContent />} placement=\"bottom\" theme=\"info\">\n                          <div>\n                            <Trans i18nKey=\"time-picker.time-range.specify\">\n                              Specify time range <Icon name=\"info-circle\" />\n                            </Trans>\n                          </div>\n                        </Tooltip>\n                      </TimePickerTitle>\n                    </div>\n                    <Field label=\"From\" invalid={!from.validation.isValid} error={from.validation.errorMessage}>\n                      <Input\n                        onClick={(event) => event.stopPropagation()}\n                        onBlur={() => setFrom({ ...from, validation: isRangeValid(from.value) })}\n                        onChange={(event) => setFrom({ ...from, value: event.currentTarget.value })}\n                        value={from.value}\n                      />\n                    </Field>\n                    <Field label=\"To\" invalid={!to.validation.isValid} error={to.validation.errorMessage}>\n                      <Input\n                        onClick={(event) => event.stopPropagation()}\n                        onBlur={() => setTo({ ...to, validation: isRangeValid(to.value) })}\n                        onChange={(event) => setTo({ ...to, value: event.currentTarget.value })}\n                        value={to.value}\n                      />\n                    </Field>\n                    <Button aria-label=\"TimePicker submit button\" onClick={onApply}>\n                      Apply time range\n                    </Button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </FocusScope>\n        </Portal>\n      )}\n    </div>\n  );\n}\n\nconst TooltipContent = () => {\n  const styles = useStyles2(toolTipStyles);\n  return (\n    <>\n      <div className={styles.supported}>\n        Supported formats: <code className={styles.tooltip}>now-[digit]s/m/h/d/w</code>\n      </div>\n      <div>Example: to select a time range from 10 minutes ago to now</div>\n      <code className={styles.tooltip}>From: now-10m To: now</code>\n      <div className={styles.link}>\n        For more information see{' '}\n        <a href=\"https://grafana.com/docs/grafana/latest/dashboards/time-range-controls/\">\n          docs <Icon name=\"external-link-alt\" />\n        </a>\n        .\n      </div>\n    </>\n  );\n};\n\nconst toolTipStyles = (theme: GrafanaTheme2) => ({\n  supported: css`\n    margin-bottom: ${theme.spacing(1)};\n  `,\n  tooltip: css`\n    margin: 0;\n  `,\n  link: css`\n    margin-top: ${theme.spacing(1)};\n  `,\n});\n\nconst getStyles = (fromError?: string, toError?: string) => (theme: GrafanaTheme2) => {\n  const inputStyles = getInputStyles({ theme, invalid: false });\n  const bodyMinimumHeight = 250;\n  const bodyHeight = bodyMinimumHeight + calculateErrorHeight(theme, fromError) + calculateErrorHeight(theme, toError);\n\n  return {\n    backdrop: css`\n      position: fixed;\n      z-index: ${theme.zIndex.modalBackdrop};\n      top: 0;\n      right: 0;\n      bottom: 0;\n      left: 0;\n    `,\n    container: css`\n      display: flex;\n      position: relative;\n    `,\n    pickerInput: cx(\n      inputStyles.input,\n      inputStyles.wrapper,\n      css`\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        cursor: pointer;\n        padding-right: 0;\n        padding-left: 0;\n        line-height: ${theme.spacing.gridSize * theme.components.height.md - 2}px;\n      `\n    ),\n    caretIcon: cx(\n      inputStyles.suffix,\n      css`\n        position: relative;\n        margin-left: ${theme.spacing(0.5)};\n      `\n    ),\n    clockIcon: cx(\n      inputStyles.prefix,\n      css`\n        position: relative;\n        margin-right: ${theme.spacing(0.5)};\n      `\n    ),\n    content: css`\n      background: ${theme.colors.background.primary};\n      box-shadow: ${theme.shadows.z3};\n      position: absolute;\n      z-index: ${theme.zIndex.modal};\n      width: 500px;\n      top: 100%;\n      border-radius: ${theme.shape.radius.default};\n      border: 1px solid ${theme.colors.border.weak};\n      left: 0;\n      white-space: normal;\n    `,\n    body: css`\n      display: flex;\n      height: ${bodyHeight}px;\n    `,\n    description: css`\n      color: ${theme.colors.text.secondary};\n      font-size: ${theme.typography.size.sm};\n    `,\n    leftSide: css`\n      width: 50% !important;\n      border-right: 1px solid ${theme.colors.border.medium};\n    `,\n    rightSide: css`\n      width: 50%;\n      padding: ${theme.spacing(1)};\n    `,\n    title: css`\n      margin-bottom: ${theme.spacing(1)};\n    `,\n  };\n};\n\nfunction calculateErrorHeight(theme: GrafanaTheme2, errorMessage?: string): number {\n  if (!errorMessage) {\n    return 0;\n  }\n\n  if (errorMessage.length > 34) {\n    return theme.spacing.gridSize * 6.5;\n  }\n\n  return theme.spacing.gridSize * 4;\n}\n","import { css, cx } from '@emotion/css';\nimport React, { HTMLAttributes } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { styleMixins, stylesFactory, useStyles2, useTheme2 } from '../../themes';\n\n/**\n * @public\n */\nexport interface CardInnerProps {\n  href?: string;\n  children?: React.ReactNode;\n}\n\n/** @deprecated This component will be removed in a future release */\nconst CardInner = ({ children, href }: CardInnerProps) => {\n  const { inner } = useStyles2(getCardInnerStyles);\n  return href ? (\n    <a className={inner} href={href}>\n      {children}\n    </a>\n  ) : (\n    <>{children}</>\n  );\n};\n\nconst getCardInnerStyles = (theme: GrafanaTheme2) => ({\n  inner: css({\n    display: 'flex',\n    width: '100%',\n    padding: theme.spacing(2),\n  }),\n});\n\n/**\n * @public\n */\nexport interface CardContainerProps extends HTMLAttributes<HTMLOrSVGElement>, CardInnerProps {\n  /** Disable pointer events for the Card, e.g. click events */\n  disableEvents?: boolean;\n  /** No style change on hover */\n  disableHover?: boolean;\n  /** Makes the card selectable, set to \"true\" to apply selected styles */\n  isSelected?: boolean;\n  /** Custom container styles */\n  className?: string;\n}\n\n/** @deprecated Using `CardContainer` directly is discouraged and should be replaced with `Card` */\nexport const CardContainer = ({\n  children,\n  disableEvents,\n  disableHover,\n  isSelected,\n  className,\n  href,\n  ...props\n}: CardContainerProps) => {\n  const theme = useTheme2();\n  const { oldContainer } = getCardContainerStyles(theme, disableEvents, disableHover, isSelected);\n  return (\n    <div {...props} className={cx(oldContainer, className)}>\n      <CardInner href={href}>{children}</CardInner>\n    </div>\n  );\n};\n\nexport const getCardContainerStyles = stylesFactory(\n  (theme: GrafanaTheme2, disabled = false, disableHover = false, isSelected) => {\n    const isSelectable = isSelected !== undefined;\n\n    return {\n      container: css({\n        display: 'grid',\n        position: 'relative',\n        gridTemplateColumns: 'auto 1fr auto',\n        gridTemplateRows: '1fr auto auto auto',\n        gridAutoColumns: '1fr',\n        gridAutoFlow: 'row',\n        gridTemplateAreas: `\n        \"Figure Heading Tags\"\n        \"Figure Meta Tags\"\n        \"Figure Description Tags\"\n        \"Figure Actions Secondary\"`,\n        width: '100%',\n        padding: theme.spacing(2),\n        background: theme.colors.background.secondary,\n        borderRadius: theme.shape.borderRadius(),\n        marginBottom: '8px',\n        pointerEvents: disabled ? 'none' : 'auto',\n        transition: theme.transitions.create(['background-color', 'box-shadow', 'border-color', 'color'], {\n          duration: theme.transitions.duration.short,\n        }),\n\n        ...(!disableHover && {\n          '&:hover': {\n            background: theme.colors.emphasize(theme.colors.background.secondary, 0.03),\n            cursor: 'pointer',\n            zIndex: 1,\n          },\n          '&:focus': styleMixins.getFocusStyles(theme),\n        }),\n\n        ...(isSelectable && {\n          cursor: 'pointer',\n        }),\n\n        ...(isSelected && {\n          outline: `solid 2px ${theme.colors.primary.border}`,\n        }),\n      }),\n      oldContainer: css({\n        display: 'flex',\n        width: '100%',\n        background: theme.colors.background.secondary,\n        borderRadius: theme.shape.borderRadius(),\n        position: 'relative',\n        pointerEvents: disabled ? 'none' : 'auto',\n        marginBottom: theme.spacing(1),\n        transition: theme.transitions.create(['background-color', 'box-shadow', 'border-color', 'color'], {\n          duration: theme.transitions.duration.short,\n        }),\n\n        ...(!disableHover && {\n          '&:hover': {\n            background: theme.colors.emphasize(theme.colors.background.secondary, 0.03),\n            cursor: 'pointer',\n            zIndex: 1,\n          },\n          '&:focus': styleMixins.getFocusStyles(theme),\n        }),\n      }),\n    };\n  }\n);\n","import { css, cx } from '@emotion/css';\nimport React, { memo, cloneElement, FC, useMemo, useContext, ReactNode } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2, useTheme2 } from '../../themes';\nimport { getFocusStyles } from '../../themes/mixins';\n\nimport { CardContainer, CardContainerProps, getCardContainerStyles } from './CardContainer';\n\n/**\n * @public\n */\nexport interface Props extends Omit<CardContainerProps, 'disableEvents' | 'disableHover'> {\n  /** Indicates if the card and all its actions can be interacted with */\n  disabled?: boolean;\n  /** Link to redirect to on card click. If provided, the Card inner content will be rendered inside `a` */\n  href?: string;\n  /** On click handler for the Card */\n  onClick?: (e: React.MouseEvent<HTMLElement>) => void;\n  /** @deprecated Use `Card.Heading` instead */\n  heading?: ReactNode;\n  /** @deprecated Use `Card.Description` instead */\n  description?: string;\n  isSelected?: boolean;\n}\n\nexport interface CardInterface extends FC<Props> {\n  Heading: typeof Heading;\n  Tags: typeof Tags;\n  Figure: typeof Figure;\n  Meta: typeof Meta;\n  Actions: typeof Actions;\n  SecondaryActions: typeof SecondaryActions;\n  Description: typeof Description;\n}\n\nconst CardContext = React.createContext<{\n  href?: string;\n  onClick?: (e: React.MouseEvent<HTMLElement>) => void;\n  disabled?: boolean;\n  isSelected?: boolean;\n} | null>(null);\n\n/**\n * Generic card component\n *\n * @public\n */\nexport const Card: CardInterface = ({ disabled, href, onClick, children, isSelected, className, ...htmlProps }) => {\n  const hasHeadingComponent = useMemo(\n    () =>\n      React.Children.toArray(children).some(\n        (c) => React.isValidElement(c) && (c.type as any).displayName === Heading.displayName\n      ),\n    [children]\n  );\n\n  const disableHover = disabled || (!onClick && !href);\n  const onCardClick = onClick && !disabled ? onClick : undefined;\n  const theme = useTheme2();\n  const styles = getCardContainerStyles(theme, disabled, disableHover, isSelected);\n\n  return (\n    <CardContainer\n      disableEvents={disabled}\n      disableHover={disableHover}\n      isSelected={isSelected}\n      className={cx(styles.container, className)}\n      {...htmlProps}\n    >\n      <CardContext.Provider value={{ href, onClick: onCardClick, disabled, isSelected }}>\n        {!hasHeadingComponent && <Heading />}\n        {children}\n      </CardContext.Provider>\n    </CardContainer>\n  );\n};\n\ninterface ChildProps {\n  className?: string;\n  disabled?: boolean;\n  children?: React.ReactNode;\n}\n\n/** Main heading for the card */\nconst Heading = ({ children, className, 'aria-label': ariaLabel }: ChildProps & { 'aria-label'?: string }) => {\n  const context = useContext(CardContext);\n  const styles = useStyles2(getHeadingStyles);\n\n  const { href, onClick, isSelected } = context ?? { href: undefined, onClick: undefined, isSelected: undefined };\n\n  return (\n    <h2 className={cx(styles.heading, className)}>\n      {href ? (\n        <a href={href} className={styles.linkHack} aria-label={ariaLabel} onClick={onClick}>\n          {children}\n        </a>\n      ) : onClick ? (\n        <button onClick={onClick} className={styles.linkHack} aria-label={ariaLabel} type=\"button\">\n          {children}\n        </button>\n      ) : (\n        <>{children}</>\n      )}\n      {isSelected !== undefined && <input aria-label=\"option\" type=\"radio\" readOnly checked={isSelected} />}\n    </h2>\n  );\n};\nHeading.displayName = 'Heading';\n\nconst getHeadingStyles = (theme: GrafanaTheme2) => ({\n  heading: css({\n    gridArea: 'Heading',\n    justifySelf: 'start',\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    width: '100%',\n    marginBottom: 0,\n    fontSize: theme.typography.size.md,\n    letterSpacing: 'inherit',\n    lineHeight: theme.typography.body.lineHeight,\n    color: theme.colors.text.primary,\n    fontWeight: theme.typography.fontWeightMedium,\n  }),\n  linkHack: css({\n    all: 'unset',\n    '&::after': {\n      position: 'absolute',\n      content: '\"\"',\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      borderRadius: theme.shape.borderRadius(1),\n    },\n\n    '&:focus-visible': {\n      outline: 'none',\n      outlineOffset: 0,\n      boxShadow: 'none',\n\n      '&::after': {\n        ...getFocusStyles(theme),\n        zIndex: 1,\n      },\n    },\n  }),\n});\n\nconst Tags = ({ children, className }: ChildProps) => {\n  const styles = useStyles2(getTagStyles);\n  return <div className={cx(styles.tagList, className)}>{children}</div>;\n};\nTags.displayName = 'Tags';\n\nconst getTagStyles = (theme: GrafanaTheme2) => ({\n  tagList: css({\n    position: 'relative',\n    gridArea: 'Tags',\n    alignSelf: 'center',\n  }),\n});\n\n/** Card description text */\nconst Description = ({ children, className }: ChildProps) => {\n  const styles = useStyles2(getDescriptionStyles);\n  return <p className={cx(styles.description, className)}>{children}</p>;\n};\nDescription.displayName = 'Description';\n\nconst getDescriptionStyles = (theme: GrafanaTheme2) => ({\n  description: css({\n    width: '100%',\n    gridArea: 'Description',\n    margin: theme.spacing(1, 0, 0),\n    color: theme.colors.text.secondary,\n    lineHeight: theme.typography.body.lineHeight,\n  }),\n});\n\nconst Figure = ({ children, align = 'start', className }: ChildProps & { align?: 'start' | 'center' }) => {\n  const styles = useStyles2(getFigureStyles);\n  return (\n    <div\n      className={cx(\n        styles.media,\n        className,\n        css`\n          align-self: ${align};\n        `\n      )}\n    >\n      {children}\n    </div>\n  );\n};\nFigure.displayName = 'Figure';\n\nconst getFigureStyles = (theme: GrafanaTheme2) => ({\n  media: css({\n    position: 'relative',\n    gridArea: 'Figure',\n\n    marginRight: theme.spacing(2),\n    width: '40px',\n\n    '> img': {\n      width: '100%',\n    },\n\n    '&:empty': {\n      display: 'none',\n    },\n  }),\n});\n\nconst Meta = memo(({ children, className, separator = '|' }: ChildProps & { separator?: string }) => {\n  const styles = useStyles2(getMetaStyles);\n  let meta = children;\n\n  const filtered = React.Children.toArray(children).filter(Boolean);\n  if (!filtered.length) {\n    return null;\n  }\n  meta = filtered.map((element, i) => (\n    <div key={`element_${i}`} className={styles.metadataItem}>\n      {element}\n    </div>\n  ));\n  // Join meta data elements by separator\n  if (filtered.length > 1 && separator) {\n    meta = filtered.reduce((prev, curr, i) => [\n      prev,\n      <span key={`separator_${i}`} className={styles.separator}>\n        {separator}\n      </span>,\n      curr,\n    ]);\n  }\n  return <div className={cx(styles.metadata, className)}>{meta}</div>;\n});\nMeta.displayName = 'Meta';\n\nconst getMetaStyles = (theme: GrafanaTheme2) => ({\n  metadata: css({\n    gridArea: 'Meta',\n    display: 'flex',\n    alignItems: 'center',\n    width: '100%',\n    fontSize: theme.typography.size.sm,\n    color: theme.colors.text.secondary,\n    margin: theme.spacing(0.5, 0, 0),\n    lineHeight: theme.typography.bodySmall.lineHeight,\n    overflowWrap: 'anywhere',\n  }),\n  metadataItem: css({\n    // Needed to allow for clickable children in metadata\n    zIndex: 0,\n  }),\n  separator: css({\n    margin: `0 ${theme.spacing(1)}`,\n  }),\n});\n\ninterface ActionsProps extends ChildProps {\n  children?: React.ReactNode;\n  variant?: 'primary' | 'secondary';\n}\n\nconst BaseActions = ({ children, disabled, variant, className }: ActionsProps) => {\n  const styles = useStyles2(getActionStyles);\n  const context = useContext(CardContext);\n  const isDisabled = context?.disabled || disabled;\n\n  const css = variant === 'primary' ? styles.actions : styles.secondaryActions;\n  return (\n    <div className={cx(css, className)}>\n      {React.Children.map(children, (child) => {\n        return React.isValidElement(child) ? cloneElement(child, { disabled: isDisabled, ...child.props }) : null;\n      })}\n    </div>\n  );\n};\n\nconst getActionStyles = (theme: GrafanaTheme2) => ({\n  actions: css({\n    gridArea: 'Actions',\n    marginTop: theme.spacing(2),\n    '& > *': {\n      marginRight: theme.spacing(1),\n    },\n  }),\n  secondaryActions: css({\n    display: 'flex',\n    gridArea: 'Secondary',\n    alignSelf: 'center',\n    color: theme.colors.text.secondary,\n    marginTtop: theme.spacing(2),\n\n    '& > *': {\n      marginRight: `${theme.spacing(1)} !important`,\n    },\n  }),\n});\n\nconst Actions = ({ children, disabled, className }: ChildProps) => {\n  return (\n    <BaseActions variant=\"primary\" disabled={disabled} className={className}>\n      {children}\n    </BaseActions>\n  );\n};\nActions.displayName = 'Actions';\n\nconst SecondaryActions = ({ children, disabled, className }: ChildProps) => {\n  return (\n    <BaseActions variant=\"secondary\" disabled={disabled} className={className}>\n      {children}\n    </BaseActions>\n  );\n};\nSecondaryActions.displayName = 'SecondaryActions';\n\n/**\n * @public\n * @deprecated Use `className` on respective components to modify styles\n */\nexport const getCardStyles = (theme: GrafanaTheme2) => {\n  return {\n    inner: css`\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      width: 100%;\n      flex-wrap: wrap;\n    `,\n    ...getHeadingStyles(theme),\n    ...getMetaStyles(theme),\n    ...getDescriptionStyles(theme),\n    ...getFigureStyles(theme),\n    ...getActionStyles(theme),\n    ...getTagStyles(theme),\n  };\n};\n\nCard.Heading = Heading;\nCard.Tags = Tags;\nCard.Figure = Figure;\nCard.Meta = Meta;\nCard.Actions = Actions;\nCard.SecondaryActions = SecondaryActions;\nCard.Description = Description;\n","import React, { HTMLAttributes } from 'react';\n\nimport { PluginSignatureStatus } from '@grafana/data';\n\nimport { Badge, BadgeProps } from '../Badge/Badge';\n\n/**\n * @public\n */\nexport interface PluginSignatureBadgeProps extends HTMLAttributes<HTMLDivElement> {\n  status?: PluginSignatureStatus;\n}\n\n/**\n * @public\n */\nexport const PluginSignatureBadge = ({ status, ...otherProps }: PluginSignatureBadgeProps) => {\n  const display = getSignatureDisplayModel(status);\n  return (\n    <Badge\n      text={display.text}\n      color={display.color as any}\n      icon={display.icon}\n      tooltip={display.tooltip}\n      {...otherProps}\n    />\n  );\n};\n\nPluginSignatureBadge.displayName = 'PluginSignatureBadge';\n\nfunction getSignatureDisplayModel(signature?: PluginSignatureStatus): BadgeProps {\n  if (!signature) {\n    signature = PluginSignatureStatus.invalid;\n  }\n\n  switch (signature) {\n    case PluginSignatureStatus.internal:\n      return { text: 'Core', color: 'blue', tooltip: 'Core plugin that is bundled with Grafana' };\n    case PluginSignatureStatus.valid:\n      return { text: 'Signed', icon: 'lock', color: 'green', tooltip: 'Signed and verified plugin' };\n    case PluginSignatureStatus.invalid:\n      return {\n        text: 'Invalid signature',\n        icon: 'exclamation-triangle',\n        color: 'red',\n        tooltip: 'Invalid plugin signature',\n      };\n    case PluginSignatureStatus.modified:\n      return {\n        text: 'Modified signature',\n        icon: 'exclamation-triangle',\n        color: 'red',\n        tooltip: 'Valid signature but content has been modified',\n      };\n    case PluginSignatureStatus.missing:\n      return {\n        text: 'Missing signature',\n        icon: 'exclamation-triangle',\n        color: 'red',\n        tooltip: 'Missing plugin signature',\n      };\n    default:\n      return {\n        text: 'Unsigned',\n        icon: 'exclamation-triangle',\n        color: 'red',\n        tooltip: 'Unsigned external plugin',\n      };\n  }\n}\n","import { SelectableValue } from '@grafana/data';\nimport {\n  AxisPlacement,\n  BarAlignment,\n  GraphDrawStyle,\n  GraphGradientMode,\n  GraphTresholdsStyleMode,\n  LineInterpolation,\n  VisibilityMode,\n  StackingMode,\n} from '@grafana/schema';\n\n/**\n * @alpha\n */\nexport const graphFieldOptions = {\n  drawStyle: [\n    { label: 'Lines', value: GraphDrawStyle.Line },\n    { label: 'Bars', value: GraphDrawStyle.Bars },\n    { label: 'Points', value: GraphDrawStyle.Points },\n  ] as Array<SelectableValue<GraphDrawStyle>>,\n\n  lineInterpolation: [\n    { description: 'Linear', value: LineInterpolation.Linear, icon: 'gf-interpolation-linear' },\n    { description: 'Smooth', value: LineInterpolation.Smooth, icon: 'gf-interpolation-smooth' },\n    { description: 'Step before', value: LineInterpolation.StepBefore, icon: 'gf-interpolation-step-before' },\n    { description: 'Step after', value: LineInterpolation.StepAfter, icon: 'gf-interpolation-step-after' },\n  ] as Array<SelectableValue<LineInterpolation>>,\n\n  barAlignment: [\n    { description: 'Before', value: BarAlignment.Before, icon: 'gf-bar-alignment-before' },\n    { description: 'Center', value: BarAlignment.Center, icon: 'gf-bar-alignment-center' },\n    { description: 'After', value: BarAlignment.After, icon: 'gf-bar-alignment-after' },\n  ] as Array<SelectableValue<BarAlignment>>,\n\n  showPoints: [\n    { label: 'Auto', value: VisibilityMode.Auto, description: 'Show points when the density is low' },\n    { label: 'Always', value: VisibilityMode.Always },\n    { label: 'Never', value: VisibilityMode.Never },\n  ] as Array<SelectableValue<VisibilityMode>>,\n\n  axisPlacement: [\n    { label: 'Auto', value: AxisPlacement.Auto, description: 'First field on the left, everything else on the right' },\n    { label: 'Left', value: AxisPlacement.Left },\n    { label: 'Right', value: AxisPlacement.Right },\n    { label: 'Hidden', value: AxisPlacement.Hidden },\n  ] as Array<SelectableValue<AxisPlacement>>,\n\n  fillGradient: [\n    { label: 'None', value: GraphGradientMode.None },\n    { label: 'Opacity', value: GraphGradientMode.Opacity, description: 'Enable fill opacity gradient' },\n    { label: 'Hue', value: GraphGradientMode.Hue, description: 'Small color hue gradient' },\n    {\n      label: 'Scheme',\n      value: GraphGradientMode.Scheme,\n      description: 'Use color scheme to define gradient',\n    },\n  ] as Array<SelectableValue<GraphGradientMode>>,\n\n  stacking: [\n    { label: 'Off', value: StackingMode.None },\n    { label: 'Normal', value: StackingMode.Normal },\n    { label: '100%', value: StackingMode.Percent },\n  ] as Array<SelectableValue<StackingMode>>,\n\n  thresholdsDisplayModes: [\n    { label: 'Off', value: GraphTresholdsStyleMode.Off },\n    { label: 'As lines', value: GraphTresholdsStyleMode.Line },\n    { label: 'As lines (dashed)', value: GraphTresholdsStyleMode.Dashed },\n    { label: 'As filled regions', value: GraphTresholdsStyleMode.Area },\n    { label: 'As filled regions and lines', value: GraphTresholdsStyleMode.LineAndArea },\n    { label: 'As filled regions and lines (dashed)', value: GraphTresholdsStyleMode.DashedAndArea },\n  ] as Array<SelectableValue<GraphTresholdsStyleMode>>,\n};\n","import React from 'react';\n\nimport {\n  DataFrame,\n  DisplayProcessor,\n  DisplayValue,\n  fieldReducers,\n  getDisplayProcessor,\n  getFieldDisplayName,\n  getFieldSeriesColor,\n  reduceField,\n  ReducerID,\n} from '@grafana/data';\nimport { VizLegendOptions, AxisPlacement } from '@grafana/schema';\n\nimport { useTheme2 } from '../../themes';\nimport { VizLayout, VizLayoutLegendProps } from '../VizLayout/VizLayout';\nimport { VizLegend } from '../VizLegend/VizLegend';\nimport { VizLegendItem } from '../VizLegend/types';\n\nimport { UPlotConfigBuilder } from './config/UPlotConfigBuilder';\n\nconst defaultFormatter = (v: any) => (v == null ? '-' : v.toFixed(1));\n\ninterface PlotLegendProps extends VizLegendOptions, Omit<VizLayoutLegendProps, 'children'> {\n  data: DataFrame[];\n  config: UPlotConfigBuilder;\n}\n\nexport const PlotLegend = React.memo(\n  ({ data, config, placement, calcs, displayMode, ...vizLayoutLegendProps }: PlotLegendProps) => {\n    const theme = useTheme2();\n    const legendItems = config\n      .getSeries()\n      .map<VizLegendItem | undefined>((s) => {\n        const seriesConfig = s.props;\n        const fieldIndex = seriesConfig.dataFrameFieldIndex;\n        const axisPlacement = config.getAxisPlacement(s.props.scaleKey);\n\n        if (!fieldIndex) {\n          return undefined;\n        }\n\n        const field = data[fieldIndex.frameIndex]?.fields[fieldIndex.fieldIndex];\n\n        if (!field || field.config.custom?.hideFrom?.legend) {\n          return undefined;\n        }\n\n        const label = getFieldDisplayName(field, data[fieldIndex.frameIndex]!, data);\n        const scaleColor = getFieldSeriesColor(field, theme);\n        const seriesColor = scaleColor.color;\n\n        return {\n          disabled: !(seriesConfig.show ?? true),\n          fieldIndex,\n          color: seriesColor,\n          label,\n          yAxis: axisPlacement === AxisPlacement.Left || axisPlacement === AxisPlacement.Bottom ? 1 : 2,\n          getDisplayValues: () => {\n            if (!calcs?.length) {\n              return [];\n            }\n\n            const fmt = field.display ?? defaultFormatter;\n            let countFormatter: DisplayProcessor | null = null;\n\n            const fieldCalcs = reduceField({\n              field,\n              reducers: calcs,\n            });\n\n            return calcs.map<DisplayValue>((reducerId) => {\n              const fieldReducer = fieldReducers.get(reducerId);\n              let formatter = fmt;\n\n              if (fieldReducer.id === ReducerID.diffperc) {\n                formatter = getDisplayProcessor({\n                  field: {\n                    ...field,\n                    config: {\n                      ...field.config,\n                      unit: 'percentunit',\n                    },\n                  },\n                  theme,\n                });\n              }\n\n              if (\n                fieldReducer.id === ReducerID.count ||\n                fieldReducer.id === ReducerID.changeCount ||\n                fieldReducer.id === ReducerID.distinctCount\n              ) {\n                if (!countFormatter) {\n                  countFormatter = getDisplayProcessor({\n                    field: {\n                      ...field,\n                      config: {\n                        ...field.config,\n                        unit: 'none',\n                      },\n                    },\n                    theme,\n                  });\n                }\n                formatter = countFormatter;\n              }\n\n              return {\n                ...formatter(fieldCalcs[reducerId]),\n                title: fieldReducer.name,\n                description: fieldReducer.description,\n              };\n            });\n          },\n          getItemKey: () => `${label}-${fieldIndex.frameIndex}-${fieldIndex.fieldIndex}`,\n        };\n      })\n      .filter((i) => i !== undefined) as VizLegendItem[];\n\n    return (\n      <VizLayout.Legend placement={placement} {...vizLayoutLegendProps}>\n        <VizLegend\n          placement={placement}\n          items={legendItems}\n          displayMode={displayMode}\n          sortBy={vizLayoutLegendProps.sortBy}\n          sortDesc={vizLayoutLegendProps.sortDesc}\n        />\n      </VizLayout.Legend>\n    );\n  }\n);\n\nPlotLegend.displayName = 'PlotLegend';\n","import React from 'react';\n\ninterface MarkerProps {\n  /** x position relative to plotting area bounding box*/\n  x: number;\n  /** y position relative to plotting area bounding box*/\n  y: number;\n}\n\n// An abstraction over a component rendered within a chart canvas.\n// Marker is rendered with DOM coords of the chart bounding box.\nexport const Marker = ({ x, y, children }: React.PropsWithChildren<MarkerProps>) => {\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        top: `${y}px`,\n        left: `${x}px`,\n      }}\n    >\n      {children}\n    </div>\n  );\n};\n","import { css } from '@emotion/css';\nimport React, { useMemo } from 'react';\n\ninterface XYCanvasProps {\n  top: number; // css pxls\n  left: number; // css pxls\n}\n\n/**\n * Renders absolutely positioned element on top of the uPlot's plotting area (axes are not included!).\n * Useful when you want to render some overlay with canvas-independent elements on top of the plot.\n */\nexport const XYCanvas = ({ children, left, top }: React.PropsWithChildren<XYCanvasProps>) => {\n  const className = useMemo(() => {\n    return css`\n      position: absolute;\n      overflow: visible;\n      left: ${left}px;\n      top: ${top}px;\n    `;\n  }, [left, top]);\n\n  return <div className={className}>{children}</div>;\n};\n","import React, { useLayoutEffect, useMemo, useRef, useState } from 'react';\nimport { useMountedState } from 'react-use';\nimport uPlot from 'uplot';\n\nimport { DataFrame, DataFrameFieldIndex } from '@grafana/data';\n\nimport { UPlotConfigBuilder } from '../config/UPlotConfigBuilder';\n\nimport { Marker } from './Marker';\nimport { XYCanvas } from './XYCanvas';\n\ninterface EventsCanvasProps {\n  id: string;\n  config: UPlotConfigBuilder;\n  events: DataFrame[];\n  renderEventMarker: (dataFrame: DataFrame, dataFrameFieldIndex: DataFrameFieldIndex) => React.ReactNode;\n  mapEventToXYCoords: (\n    dataFrame: DataFrame,\n    dataFrameFieldIndex: DataFrameFieldIndex\n  ) => { x: number; y: number } | undefined;\n}\n\nexport function EventsCanvas({ id, events, renderEventMarker, mapEventToXYCoords, config }: EventsCanvasProps) {\n  const plotInstance = useRef<uPlot>();\n  // render token required to re-render annotation markers. Rendering lines happens in uPlot and the props do not change\n  // so we need to force the re-render when the draw hook was performed by uPlot\n  const [renderToken, setRenderToken] = useState(0);\n  const isMounted = useMountedState();\n\n  useLayoutEffect(() => {\n    config.addHook('init', (u) => {\n      plotInstance.current = u;\n    });\n\n    config.addHook('draw', () => {\n      if (!isMounted()) {\n        return;\n      }\n      setRenderToken((s) => s + 1);\n    });\n  }, [config, setRenderToken]);\n\n  const eventMarkers = useMemo(() => {\n    const markers: React.ReactNode[] = [];\n\n    if (!plotInstance.current || events.length === 0) {\n      return markers;\n    }\n\n    for (let i = 0; i < events.length; i++) {\n      const frame = events[i];\n      for (let j = 0; j < frame.length; j++) {\n        const coords = mapEventToXYCoords(frame, { fieldIndex: j, frameIndex: i });\n        if (!coords) {\n          continue;\n        }\n        markers.push(\n          <Marker {...coords} key={`${id}-marker-${i}-${j}`}>\n            {renderEventMarker(frame, { fieldIndex: j, frameIndex: i })}\n          </Marker>\n        );\n      }\n    }\n\n    return <>{markers}</>;\n  }, [events, renderEventMarker, renderToken]);\n\n  if (!plotInstance.current) {\n    return null;\n  }\n\n  return (\n    <XYCanvas\n      left={plotInstance.current.bbox.left / window.devicePixelRatio}\n      top={plotInstance.current.bbox.top / window.devicePixelRatio}\n    >\n      {eventMarkers}\n    </XYCanvas>\n  );\n}\n","import { useEffect, useLayoutEffect, useState } from 'react';\n\nimport { UPlotConfigBuilder } from '../config/UPlotConfigBuilder';\nimport { PlotSelection } from '../types';\nimport { pluginLog } from '../utils';\n\ninterface ZoomPluginProps {\n  onZoom: (range: { from: number; to: number }) => void;\n  config: UPlotConfigBuilder;\n}\n\n// min px width that triggers zoom\nconst MIN_ZOOM_DIST = 5;\n\n/**\n * @alpha\n */\nexport const ZoomPlugin = ({ onZoom, config }: ZoomPluginProps) => {\n  const [selection, setSelection] = useState<PlotSelection | null>(null);\n\n  useEffect(() => {\n    if (selection) {\n      pluginLog('ZoomPlugin', false, 'selected', selection);\n      if (selection.bbox.width < MIN_ZOOM_DIST) {\n        return;\n      }\n      onZoom({ from: selection.min, to: selection.max });\n    }\n  }, [selection]);\n\n  useLayoutEffect(() => {\n    config.addHook('setSelect', (u) => {\n      const min = u.posToVal(u.select.left, 'x');\n      const max = u.posToVal(u.select.left + u.select.width, 'x');\n\n      setSelection({\n        min,\n        max,\n        bbox: {\n          left: u.bbox.left / window.devicePixelRatio + u.select.left,\n          top: u.bbox.top / window.devicePixelRatio,\n          height: u.bbox.height / window.devicePixelRatio,\n          width: u.select.width,\n        },\n      });\n\n      // manually hide selected region (since cursor.drag.setScale = false)\n      /* @ts-ignore */\n      u.setSelect({ left: 0, width: 0 }, false);\n    });\n  }, [config]);\n\n  return null;\n};\n","import React, { useEffect, useLayoutEffect, useRef, useState } from 'react';\nimport { useMountedState } from 'react-use';\nimport uPlot from 'uplot';\n\nimport {\n  arrayUtils,\n  CartesianCoords2D,\n  DashboardCursorSync,\n  DataFrame,\n  FALLBACK_COLOR,\n  FieldType,\n  formattedValueToString,\n  getDisplayProcessor,\n  getFieldDisplayName,\n  TimeZone,\n} from '@grafana/data';\nimport { TooltipDisplayMode, SortOrder } from '@grafana/schema';\n\nimport { useTheme2 } from '../../../themes/ThemeContext';\nimport { Portal } from '../../Portal/Portal';\nimport { SeriesTable, SeriesTableRowProps, VizTooltipContainer } from '../../VizTooltip';\nimport { UPlotConfigBuilder } from '../config/UPlotConfigBuilder';\nimport { findMidPointYPosition, pluginLog } from '../utils';\n\ninterface TooltipPluginProps {\n  timeZone: TimeZone;\n  data: DataFrame;\n  frames?: DataFrame[];\n  config: UPlotConfigBuilder;\n  mode?: TooltipDisplayMode;\n  sortOrder?: SortOrder;\n  sync?: () => DashboardCursorSync;\n  // Allows custom tooltip content rendering. Exposes aligned data frame with relevant indexes for data inspection\n  // Use field.state.origin indexes from alignedData frame field to get access to original data frame and field index.\n  renderTooltip?: (alignedFrame: DataFrame, seriesIdx: number | null, datapointIdx: number | null) => React.ReactNode;\n}\n\nconst TOOLTIP_OFFSET = 10;\n\n/**\n * @alpha\n */\nexport const TooltipPlugin = ({\n  mode = TooltipDisplayMode.Single,\n  sortOrder = SortOrder.None,\n  sync,\n  timeZone,\n  config,\n  renderTooltip,\n  ...otherProps\n}: TooltipPluginProps) => {\n  const plotInstance = useRef<uPlot>();\n  const theme = useTheme2();\n  const [focusedSeriesIdx, setFocusedSeriesIdx] = useState<number | null>(null);\n  const [focusedPointIdx, setFocusedPointIdx] = useState<number | null>(null);\n  const [focusedPointIdxs, setFocusedPointIdxs] = useState<Array<number | null>>([]);\n  const [coords, setCoords] = useState<CartesianCoords2D | null>(null);\n  const [isActive, setIsActive] = useState<boolean>(false);\n  const isMounted = useMountedState();\n\n  const pluginId = `TooltipPlugin`;\n\n  // Debug logs\n  useEffect(() => {\n    pluginLog(pluginId, true, `Focused series: ${focusedSeriesIdx}, focused point: ${focusedPointIdx}`);\n  }, [focusedPointIdx, focusedSeriesIdx]);\n\n  // Add uPlot hooks to the config, or re-add when the config changed\n  useLayoutEffect(() => {\n    let bbox: DOMRect | undefined = undefined;\n\n    const plotEnter = () => {\n      if (!isMounted()) {\n        return;\n      }\n      setIsActive(true);\n      plotInstance.current?.root.classList.add('plot-active');\n    };\n\n    const plotLeave = () => {\n      if (!isMounted()) {\n        return;\n      }\n      setCoords(null);\n      setIsActive(false);\n      plotInstance.current?.root.classList.remove('plot-active');\n    };\n\n    // cache uPlot plotting area bounding box\n    config.addHook('syncRect', (u, rect) => (bbox = rect));\n\n    config.addHook('init', (u) => {\n      plotInstance.current = u;\n\n      u.root.parentElement?.addEventListener('focus', plotEnter);\n      u.over.addEventListener('mouseenter', plotEnter);\n\n      u.root.parentElement?.addEventListener('blur', plotLeave);\n      u.over.addEventListener('mouseleave', plotLeave);\n\n      if (sync && sync() === DashboardCursorSync.Crosshair) {\n        u.root.classList.add('shared-crosshair');\n      }\n    });\n\n    const tooltipInterpolator = config.getTooltipInterpolator();\n\n    if (tooltipInterpolator) {\n      // Custom toolitp positioning\n      config.addHook('setCursor', (u) => {\n        tooltipInterpolator(\n          setFocusedSeriesIdx,\n          setFocusedPointIdx,\n          (clear) => {\n            if (clear) {\n              setCoords(null);\n              return;\n            }\n\n            if (!bbox) {\n              return;\n            }\n\n            const { x, y } = positionTooltip(u, bbox);\n            if (x !== undefined && y !== undefined) {\n              setCoords({ x, y });\n            }\n          },\n          u\n        );\n      });\n    } else {\n      config.addHook('setLegend', (u) => {\n        if (!isMounted()) {\n          return;\n        }\n        setFocusedPointIdx(u.legend.idx!);\n        setFocusedPointIdxs(u.legend.idxs!.slice());\n      });\n\n      // default series/datapoint idx retireval\n      config.addHook('setCursor', (u) => {\n        if (!bbox || !isMounted()) {\n          return;\n        }\n\n        const { x, y } = positionTooltip(u, bbox);\n        if (x !== undefined && y !== undefined) {\n          setCoords({ x, y });\n        } else {\n          setCoords(null);\n        }\n      });\n\n      config.addHook('setSeries', (_, idx) => {\n        if (!isMounted()) {\n          return;\n        }\n        setFocusedSeriesIdx(idx);\n      });\n    }\n\n    return () => {\n      setCoords(null);\n      if (plotInstance.current) {\n        plotInstance.current.over.removeEventListener('mouseleave', plotLeave);\n        plotInstance.current.over.removeEventListener('mouseenter', plotEnter);\n        plotInstance.current.root.parentElement?.removeEventListener('focus', plotEnter);\n        plotInstance.current.root.parentElement?.removeEventListener('blur', plotLeave);\n      }\n    };\n  }, [config, setCoords, setIsActive, setFocusedPointIdx, setFocusedPointIdxs]);\n\n  if (focusedPointIdx === null || (!isActive && sync && sync() === DashboardCursorSync.Crosshair)) {\n    return null;\n  }\n\n  // GraphNG expects aligned data, let's take field 0 as x field. FTW\n  let xField = otherProps.data.fields[0];\n  if (!xField) {\n    return null;\n  }\n  const xFieldFmt = xField.display || getDisplayProcessor({ field: xField, timeZone, theme });\n  let tooltip: React.ReactNode = null;\n\n  let xVal = xFieldFmt(xField!.values.get(focusedPointIdx)).text;\n\n  if (!renderTooltip) {\n    // when interacting with a point in single mode\n    if (mode === TooltipDisplayMode.Single && focusedSeriesIdx !== null) {\n      const field = otherProps.data.fields[focusedSeriesIdx];\n\n      if (!field) {\n        return null;\n      }\n\n      const dataIdx = focusedPointIdxs?.[focusedSeriesIdx] ?? focusedPointIdx;\n      xVal = xFieldFmt(xField!.values.get(dataIdx)).text;\n      const fieldFmt = field.display || getDisplayProcessor({ field, timeZone, theme });\n      const display = fieldFmt(field.values.get(dataIdx));\n\n      tooltip = (\n        <SeriesTable\n          series={[\n            {\n              color: display.color || FALLBACK_COLOR,\n              label: getFieldDisplayName(field, otherProps.data, otherProps.frames),\n              value: display ? formattedValueToString(display) : null,\n            },\n          ]}\n          timestamp={xVal}\n        />\n      );\n    }\n\n    if (mode === TooltipDisplayMode.Multi) {\n      let series: SeriesTableRowProps[] = [];\n      const frame = otherProps.data;\n      const fields = frame.fields;\n      const sortIdx: unknown[] = [];\n\n      for (let i = 0; i < fields.length; i++) {\n        const field = frame.fields[i];\n        if (\n          !field ||\n          field === xField ||\n          field.type === FieldType.time ||\n          field.type !== FieldType.number ||\n          field.config.custom?.hideFrom?.tooltip ||\n          field.config.custom?.hideFrom?.viz\n        ) {\n          continue;\n        }\n\n        const v = otherProps.data.fields[i].values.get(focusedPointIdxs[i]!);\n        const display = field.display!(v);\n\n        sortIdx.push(v);\n        series.push({\n          color: display.color || FALLBACK_COLOR,\n          label: getFieldDisplayName(field, frame, otherProps.frames),\n          value: display ? formattedValueToString(display) : null,\n          isActive: focusedSeriesIdx === i,\n        });\n      }\n\n      if (sortOrder !== SortOrder.None) {\n        // create sort reference series array, as Array.sort() mutates the original array\n        const sortRef = [...series];\n        const sortFn = arrayUtils.sortValues(sortOrder);\n\n        series.sort((a, b) => {\n          // get compared values indices to retrieve raw values from sortIdx\n          const aIdx = sortRef.indexOf(a);\n          const bIdx = sortRef.indexOf(b);\n          return sortFn(sortIdx[aIdx], sortIdx[bIdx]);\n        });\n      }\n\n      tooltip = <SeriesTable series={series} timestamp={xVal} />;\n    }\n  } else {\n    tooltip = renderTooltip(otherProps.data, focusedSeriesIdx, focusedPointIdx);\n  }\n\n  return (\n    <Portal>\n      {tooltip && coords && (\n        <VizTooltipContainer position={{ x: coords.x, y: coords.y }} offset={{ x: TOOLTIP_OFFSET, y: TOOLTIP_OFFSET }}>\n          {tooltip}\n        </VizTooltipContainer>\n      )}\n    </Portal>\n  );\n};\n\nfunction isCursorOutsideCanvas({ left, top }: uPlot.Cursor, canvas: DOMRect) {\n  if (left === undefined || top === undefined) {\n    return false;\n  }\n  return left < 0 || left > canvas.width || top < 0 || top > canvas.height;\n}\n\n/**\n * Given uPlot cursor position, figure out position of the tooltip withing the canvas bbox\n * Tooltip is positioned relatively to a viewport\n * @internal\n **/\nexport function positionTooltip(u: uPlot, bbox: DOMRect) {\n  let x, y;\n  const cL = u.cursor.left || 0;\n  const cT = u.cursor.top || 0;\n\n  if (isCursorOutsideCanvas(u.cursor, bbox)) {\n    const idx = u.posToIdx(cL);\n    // when cursor outside of uPlot's canvas\n    if (cT < 0 || cT > bbox.height) {\n      let pos = findMidPointYPosition(u, idx);\n\n      if (pos) {\n        y = bbox.top + pos;\n        if (cL >= 0 && cL <= bbox.width) {\n          // find x-scale position for a current cursor left position\n          x = bbox.left + u.valToPos(u.data[0][u.posToIdx(cL)], u.series[0].scale!);\n        }\n      }\n    }\n  } else {\n    x = bbox.left + cL;\n    y = bbox.top + cT;\n  }\n\n  return { x, y };\n}\n","import { clamp } from 'lodash';\nimport { useLayoutEffect } from 'react';\nimport uPlot from 'uplot';\n\nimport { UPlotConfigBuilder } from '../config/UPlotConfigBuilder';\n\ninterface KeyboardPluginProps {\n  config: UPlotConfigBuilder; // onkeypress, onkeyup, onkeydown (triggered by vizlayout handlers)\n}\n\nconst PIXELS_PER_MS = 0.1 as const;\nconst SHIFT_MULTIPLIER = 2 as const;\nconst KNOWN_KEYS = new Set(['ArrowRight', 'ArrowLeft', 'ArrowUp', 'ArrowDown', 'Shift', ' ']);\n\nconst initHook = (u: uPlot) => {\n  let vizLayoutViz: HTMLElement | null = u.root.closest('[tabindex]');\n  let pressedKeys = new Set<string>();\n  let dragStartX: number | null = null;\n  let keysLastHandledAt: number | null = null;\n\n  if (!vizLayoutViz) {\n    return;\n  }\n\n  const moveCursor = (dx: number, dy: number) => {\n    const { cursor } = u;\n    if (cursor.left === undefined || cursor.top === undefined) {\n      return;\n    }\n\n    const { width, height } = u.over.style;\n    const [maxX, maxY] = [Math.floor(parseFloat(width)), Math.floor(parseFloat(height))];\n\n    u.setCursor({\n      left: clamp(cursor.left + dx, 0, maxX),\n      top: clamp(cursor.top + dy, 0, maxY),\n    });\n  };\n\n  const handlePressedKeys = (time: number) => {\n    const nothingPressed = pressedKeys.size === 0;\n    if (nothingPressed || !u) {\n      keysLastHandledAt = null;\n      return;\n    }\n\n    const dt = time - (keysLastHandledAt ?? time);\n    const dx = dt * PIXELS_PER_MS;\n    let horValue = 0;\n    let vertValue = 0;\n\n    if (pressedKeys.has('ArrowUp')) {\n      vertValue -= dx;\n    }\n    if (pressedKeys.has('ArrowDown')) {\n      vertValue += dx;\n    }\n    if (pressedKeys.has('ArrowLeft')) {\n      horValue -= dx;\n    }\n    if (pressedKeys.has('ArrowRight')) {\n      horValue += dx;\n    }\n    if (pressedKeys.has('Shift')) {\n      horValue *= SHIFT_MULTIPLIER;\n      vertValue *= SHIFT_MULTIPLIER;\n    }\n\n    moveCursor(horValue, vertValue);\n\n    const { cursor } = u;\n    if (pressedKeys.has(' ') && cursor) {\n      const drawHeight = Number(u.over.style.height.slice(0, -2));\n\n      u.setSelect(\n        {\n          left: cursor.left! < dragStartX! ? cursor.left! : dragStartX!,\n          top: 0,\n          width: Math.abs(cursor.left! - (dragStartX ?? cursor.left!)),\n          height: drawHeight,\n        },\n        false\n      );\n    }\n\n    keysLastHandledAt = time;\n    window.requestAnimationFrame(handlePressedKeys);\n  };\n\n  const onKeyDown = (e: KeyboardEvent) => {\n    if (e.key === 'Tab') {\n      // Hide the cursor if the user tabs away\n      u.setCursor({ left: -5, top: -5 });\n      return;\n    }\n\n    if (!KNOWN_KEYS.has(e.key)) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n\n    const newKey = !pressedKeys.has(e.key);\n    if (newKey) {\n      const initiateAnimationLoop = pressedKeys.size === 0;\n      pressedKeys.add(e.key);\n\n      dragStartX = e.key === ' ' && dragStartX === null ? u.cursor.left! : dragStartX;\n\n      if (initiateAnimationLoop) {\n        window.requestAnimationFrame(handlePressedKeys);\n      }\n    }\n  };\n\n  const onKeyUp = (e: KeyboardEvent) => {\n    if (!KNOWN_KEYS.has(e.key)) {\n      return;\n    }\n\n    pressedKeys.delete(e.key);\n\n    if (e.key === ' ') {\n      e.preventDefault();\n      e.stopPropagation();\n\n      // We do this so setSelect hooks get fired, zooming the plot\n      u.setSelect(u.select);\n      dragStartX = null;\n    }\n  };\n\n  const onFocus = () => {\n    // We only want to initialize the cursor if the user is using keyboard controls\n    if (!vizLayoutViz?.matches(':focus-visible')) {\n      return;\n    }\n\n    // Is there a more idiomatic way to do this?\n    const drawWidth = parseFloat(u.over.style.width);\n    const drawHeight = parseFloat(u.over.style.height);\n    u.setCursor({ left: drawWidth / 2, top: drawHeight / 2 });\n  };\n\n  const onBlur = () => {\n    keysLastHandledAt = null;\n    dragStartX = null;\n    pressedKeys.clear();\n    u.setSelect({ left: 0, top: 0, width: 0, height: 0 }, false);\n  };\n\n  vizLayoutViz.addEventListener('keydown', onKeyDown);\n  vizLayoutViz.addEventListener('keyup', onKeyUp);\n  vizLayoutViz.addEventListener('focus', onFocus);\n  vizLayoutViz.addEventListener('blur', onBlur);\n\n  const onDestroy = () => {\n    vizLayoutViz?.removeEventListener('keydown', onKeyDown);\n    vizLayoutViz?.removeEventListener('keyup', onKeyUp);\n    vizLayoutViz?.removeEventListener('focus', onFocus);\n    vizLayoutViz?.removeEventListener('blur', onBlur);\n\n    vizLayoutViz = null;\n  };\n\n  (u.hooks.destroy ??= []).push(onDestroy);\n};\n\n/**\n * @alpha\n */\nexport const KeyboardPlugin = ({ config }: KeyboardPluginProps) => {\n  useLayoutEffect(() => config.addHook('init', initHook), [config]);\n\n  return null;\n};\n","import { isNumber } from 'lodash';\nimport uPlot from 'uplot';\n\nimport {\n  DashboardCursorSync,\n  DataFrame,\n  DataHoverClearEvent,\n  DataHoverEvent,\n  DataHoverPayload,\n  FieldConfig,\n  FieldType,\n  formattedValueToString,\n  getFieldColorModeForField,\n  getFieldSeriesColor,\n  getFieldDisplayName,\n  getDisplayProcessor,\n  FieldColorModeId,\n  DecimalCount,\n} from '@grafana/data';\nimport {\n  AxisPlacement,\n  GraphDrawStyle,\n  GraphFieldConfig,\n  GraphTresholdsStyleMode,\n  VisibilityMode,\n  ScaleDirection,\n  ScaleOrientation,\n  StackingMode,\n  GraphTransform,\n  AxisColorMode,\n  GraphGradientMode,\n} from '@grafana/schema';\n\n// unit lookup needed to determine if we want power-of-2 or power-of-10 axis ticks\n// see categories.ts is @grafana/data\nconst IEC_UNITS = new Set([\n  'bytes',\n  'bits',\n  'kbytes',\n  'mbytes',\n  'gbytes',\n  'tbytes',\n  'pbytes',\n  'binBps',\n  'binbps',\n  'KiBs',\n  'Kibits',\n  'MiBs',\n  'Mibits',\n  'GiBs',\n  'Gibits',\n  'TiBs',\n  'Tibits',\n  'PiBs',\n  'Pibits',\n]);\n\nconst BIN_INCRS = Array(53);\n\nfor (let i = 0; i < BIN_INCRS.length; i++) {\n  BIN_INCRS[i] = 2 ** i;\n}\n\nimport { buildScaleKey } from '../GraphNG/utils';\nimport { UPlotConfigBuilder, UPlotConfigPrepFn } from '../uPlot/config/UPlotConfigBuilder';\nimport { getScaleGradientFn } from '../uPlot/config/gradientFills';\nimport { getStackingGroups, preparePlotData2 } from '../uPlot/utils';\n\nconst defaultFormatter = (v: any, decimals: DecimalCount = 1) => (v == null ? '-' : v.toFixed(decimals));\n\nconst defaultConfig: GraphFieldConfig = {\n  drawStyle: GraphDrawStyle.Line,\n  showPoints: VisibilityMode.Auto,\n  axisPlacement: AxisPlacement.Auto,\n};\n\nexport const preparePlotConfigBuilder: UPlotConfigPrepFn<{\n  sync?: () => DashboardCursorSync;\n}> = ({\n  frame,\n  theme,\n  timeZones,\n  getTimeRange,\n  eventBus,\n  sync,\n  allFrames,\n  renderers,\n  tweakScale = (opts) => opts,\n  tweakAxis = (opts) => opts,\n}) => {\n  const builder = new UPlotConfigBuilder(timeZones[0]);\n\n  let alignedFrame: DataFrame;\n\n  builder.setPrepData((frames) => {\n    // cache alignedFrame\n    alignedFrame = frames[0];\n\n    return preparePlotData2(frames[0], builder.getStackingGroups());\n  });\n\n  // X is the first field in the aligned frame\n  const xField = frame.fields[0];\n  if (!xField) {\n    return builder; // empty frame with no options\n  }\n\n  const xScaleKey = 'x';\n  let xScaleUnit = '_x';\n  let yScaleKey = '';\n\n  const xFieldAxisPlacement =\n    xField.config.custom?.axisPlacement !== AxisPlacement.Hidden ? AxisPlacement.Bottom : AxisPlacement.Hidden;\n  const xFieldAxisShow = xField.config.custom?.axisPlacement !== AxisPlacement.Hidden;\n\n  if (xField.type === FieldType.time) {\n    xScaleUnit = 'time';\n    builder.addScale({\n      scaleKey: xScaleKey,\n      orientation: ScaleOrientation.Horizontal,\n      direction: ScaleDirection.Right,\n      isTime: true,\n      range: () => {\n        const r = getTimeRange();\n        return [r.from.valueOf(), r.to.valueOf()];\n      },\n    });\n\n    // filters first 2 ticks to make space for timezone labels\n    const filterTicks: uPlot.Axis.Filter | undefined =\n      timeZones.length > 1\n        ? (u, splits) => {\n            return splits.map((v, i) => (i < 2 ? null : v));\n          }\n        : undefined;\n\n    for (let i = 0; i < timeZones.length; i++) {\n      const timeZone = timeZones[i];\n      builder.addAxis({\n        scaleKey: xScaleKey,\n        isTime: true,\n        placement: xFieldAxisPlacement,\n        show: xFieldAxisShow,\n        label: xField.config.custom?.axisLabel,\n        timeZone,\n        theme,\n        grid: { show: i === 0 && xField.config.custom?.axisGridShow },\n        filter: filterTicks,\n      });\n    }\n\n    // render timezone labels\n    if (timeZones.length > 1) {\n      builder.addHook('drawAxes', (u: uPlot) => {\n        u.ctx.save();\n\n        u.ctx.fillStyle = theme.colors.text.primary;\n        u.ctx.textAlign = 'left';\n        u.ctx.textBaseline = 'bottom';\n\n        let i = 0;\n        u.axes.forEach((a) => {\n          if (a.side === 2) {\n            //@ts-ignore\n            let cssBaseline: number = a._pos + a._size;\n            u.ctx.fillText(timeZones[i], u.bbox.left, cssBaseline * uPlot.pxRatio);\n            i++;\n          }\n        });\n\n        u.ctx.restore();\n      });\n    }\n  } else {\n    // Not time!\n    if (xField.config.unit) {\n      xScaleUnit = xField.config.unit;\n    }\n\n    builder.addScale({\n      scaleKey: xScaleKey,\n      orientation: ScaleOrientation.Horizontal,\n      direction: ScaleDirection.Right,\n    });\n\n    builder.addAxis({\n      scaleKey: xScaleKey,\n      placement: xFieldAxisPlacement,\n      show: xFieldAxisShow,\n      label: xField.config.custom?.axisLabel,\n      theme,\n      grid: { show: xField.config.custom?.axisGridShow },\n    });\n  }\n\n  let customRenderedFields =\n    renderers?.flatMap((r) => Object.values(r.fieldMap).filter((name) => r.indicesOnly.indexOf(name) === -1)) ?? [];\n\n  let indexByName: Map<string, number> | undefined;\n\n  for (let i = 1; i < frame.fields.length; i++) {\n    const field = frame.fields[i];\n\n    const config: FieldConfig<GraphFieldConfig> = {\n      ...field.config,\n      custom: {\n        ...defaultConfig,\n        ...field.config.custom,\n      },\n    };\n\n    const customConfig: GraphFieldConfig = config.custom!;\n\n    if (field === xField || field.type !== FieldType.number) {\n      continue;\n    }\n\n    let fmt = field.display ?? defaultFormatter;\n    if (field.config.custom?.stacking?.mode === StackingMode.Percent) {\n      fmt = getDisplayProcessor({\n        field: {\n          ...field,\n          config: {\n            ...field.config,\n            unit: 'percentunit',\n          },\n        },\n        theme,\n      });\n    }\n    const scaleKey = buildScaleKey(config);\n    const colorMode = getFieldColorModeForField(field);\n    const scaleColor = getFieldSeriesColor(field, theme);\n    const seriesColor = scaleColor.color;\n\n    // The builder will manage unique scaleKeys and combine where appropriate\n    builder.addScale(\n      tweakScale(\n        {\n          scaleKey,\n          orientation: ScaleOrientation.Vertical,\n          direction: ScaleDirection.Up,\n          distribution: customConfig.scaleDistribution?.type,\n          log: customConfig.scaleDistribution?.log,\n          linearThreshold: customConfig.scaleDistribution?.linearThreshold,\n          min: field.config.min,\n          max: field.config.max,\n          softMin: customConfig.axisSoftMin,\n          softMax: customConfig.axisSoftMax,\n          centeredZero: customConfig.axisCenteredZero,\n          range:\n            customConfig.stacking?.mode === StackingMode.Percent\n              ? (u: uPlot, dataMin: number, dataMax: number) => {\n                  dataMin = dataMin < 0 ? -1 : 0;\n                  dataMax = dataMax > 0 ? 1 : 0;\n                  return [dataMin, dataMax];\n                }\n              : undefined,\n          decimals: field.config.decimals,\n        },\n        field\n      )\n    );\n\n    if (!yScaleKey) {\n      yScaleKey = scaleKey;\n    }\n\n    if (customConfig.axisPlacement !== AxisPlacement.Hidden) {\n      let axisColor: uPlot.Axis.Stroke | undefined;\n\n      if (customConfig.axisColorMode === AxisColorMode.Series) {\n        if (\n          colorMode.isByValue &&\n          field.config.custom?.gradientMode === GraphGradientMode.Scheme &&\n          colorMode.id === FieldColorModeId.Thresholds\n        ) {\n          axisColor = getScaleGradientFn(1, theme, colorMode, field.config.thresholds);\n        } else {\n          axisColor = seriesColor;\n        }\n      }\n\n      let axisColorOpts = {};\n\n      if (axisColor) {\n        axisColorOpts = {\n          border: {\n            show: true,\n            width: 1,\n            stroke: axisColor,\n          },\n          ticks: {\n            stroke: axisColor,\n          },\n          color: customConfig.axisColorMode === AxisColorMode.Series ? axisColor : undefined,\n        };\n      }\n\n      let incrs: uPlot.Axis.Incrs | undefined;\n\n      if (IEC_UNITS.has(config.unit!)) {\n        incrs = BIN_INCRS;\n      }\n\n      builder.addAxis(\n        tweakAxis(\n          {\n            scaleKey,\n            label: customConfig.axisLabel,\n            size: customConfig.axisWidth,\n            placement: customConfig.axisPlacement ?? AxisPlacement.Auto,\n            formatValue: (v, decimals) => formattedValueToString(fmt(v, decimals)),\n            theme,\n            grid: { show: customConfig.axisGridShow },\n            decimals: field.config.decimals,\n            distr: customConfig.scaleDistribution?.type,\n            incrs,\n            ...axisColorOpts,\n          },\n          field\n        )\n      );\n    }\n\n    const showPoints =\n      customConfig.drawStyle === GraphDrawStyle.Points ? VisibilityMode.Always : customConfig.showPoints;\n\n    let pointsFilter: uPlot.Series.Points.Filter = () => null;\n\n    if (customConfig.spanNulls !== true) {\n      pointsFilter = (u, seriesIdx, show, gaps) => {\n        let filtered = [];\n\n        let series = u.series[seriesIdx];\n\n        if (!show && gaps && gaps.length) {\n          const [firstIdx, lastIdx] = series.idxs!;\n          const xData = u.data[0];\n          const yData = u.data[seriesIdx];\n          const firstPos = Math.round(u.valToPos(xData[firstIdx], 'x', true));\n          const lastPos = Math.round(u.valToPos(xData[lastIdx], 'x', true));\n\n          if (gaps[0][0] === firstPos) {\n            filtered.push(firstIdx);\n          }\n\n          // show single points between consecutive gaps that share end/start\n          for (let i = 0; i < gaps.length; i++) {\n            let thisGap = gaps[i];\n            let nextGap = gaps[i + 1];\n\n            if (nextGap && thisGap[1] === nextGap[0]) {\n              // approx when data density is > 1pt/px, since gap start/end pixels are rounded\n              let approxIdx = u.posToIdx(thisGap[1], true);\n\n              if (yData[approxIdx] == null) {\n                // scan left/right alternating to find closest index with non-null value\n                for (let j = 1; j < 100; j++) {\n                  if (yData[approxIdx + j] != null) {\n                    approxIdx += j;\n                    break;\n                  }\n                  if (yData[approxIdx - j] != null) {\n                    approxIdx -= j;\n                    break;\n                  }\n                }\n              }\n\n              filtered.push(approxIdx);\n            }\n          }\n\n          if (gaps[gaps.length - 1][1] === lastPos) {\n            filtered.push(lastIdx);\n          }\n        }\n\n        return filtered.length ? filtered : null;\n      };\n    }\n\n    let { fillOpacity } = customConfig;\n\n    let pathBuilder: uPlot.Series.PathBuilder | null = null;\n    let pointsBuilder: uPlot.Series.Points.Show | null = null;\n\n    if (field.state?.origin) {\n      if (!indexByName) {\n        indexByName = getNamesToFieldIndex(frame, allFrames);\n      }\n\n      const originFrame = allFrames[field.state.origin.frameIndex];\n      const originField = originFrame?.fields[field.state.origin.fieldIndex];\n\n      const dispName = getFieldDisplayName(originField ?? field, originFrame, allFrames);\n\n      // disable default renderers\n      if (customRenderedFields.indexOf(dispName) >= 0) {\n        pathBuilder = () => null;\n        pointsBuilder = () => undefined;\n      } else if (customConfig.transform === GraphTransform.Constant) {\n        // patch some monkeys!\n        const defaultBuilder = uPlot.paths!.linear!();\n\n        pathBuilder = (u, seriesIdx) => {\n          //eslint-disable-next-line\n          const _data: any[] = (u as any)._data; // uplot.AlignedData not exposed in types\n\n          // the data we want the line renderer to pull is x at each plot edge with paired flat y values\n\n          const r = getTimeRange();\n          let xData = [r.from.valueOf(), r.to.valueOf()];\n          let firstY = _data[seriesIdx].find((v: number | null | undefined) => v != null);\n          let yData = [firstY, firstY];\n          let fauxData = _data.slice();\n          fauxData[0] = xData;\n          fauxData[seriesIdx] = yData;\n\n          //eslint-disable-next-line\n          return defaultBuilder(\n            {\n              ...u,\n              _data: fauxData,\n            } as any,\n            seriesIdx,\n            0,\n            1\n          );\n        };\n      }\n\n      if (customConfig.fillBelowTo) {\n        const fillBelowToField = frame.fields.find(\n          (f) =>\n            customConfig.fillBelowTo === f.name ||\n            customConfig.fillBelowTo === f.config?.displayNameFromDS ||\n            customConfig.fillBelowTo === getFieldDisplayName(f, frame, allFrames)\n        );\n\n        const fillBelowDispName = fillBelowToField\n          ? getFieldDisplayName(fillBelowToField, frame, allFrames)\n          : customConfig.fillBelowTo;\n\n        const t = indexByName.get(dispName);\n        const b = indexByName.get(fillBelowDispName);\n        if (isNumber(b) && isNumber(t)) {\n          builder.addBand({\n            series: [t, b],\n            fill: undefined, // using null will have the band use fill options from `t`\n          });\n\n          if (!fillOpacity) {\n            fillOpacity = 35; // default from flot\n          }\n        } else {\n          fillOpacity = 0;\n        }\n      }\n    }\n\n    let dynamicSeriesColor: ((seriesIdx: number) => string | undefined) | undefined = undefined;\n\n    if (colorMode.id === FieldColorModeId.Thresholds) {\n      dynamicSeriesColor = (seriesIdx) => getFieldSeriesColor(alignedFrame.fields[seriesIdx], theme).color;\n    }\n\n    builder.addSeries({\n      pathBuilder,\n      pointsBuilder,\n      scaleKey,\n      showPoints,\n      pointsFilter,\n      colorMode,\n      fillOpacity,\n      theme,\n      dynamicSeriesColor,\n      drawStyle: customConfig.drawStyle!,\n      lineColor: customConfig.lineColor ?? seriesColor,\n      lineWidth: customConfig.lineWidth,\n      lineInterpolation: customConfig.lineInterpolation,\n      lineStyle: customConfig.lineStyle,\n      barAlignment: customConfig.barAlignment,\n      barWidthFactor: customConfig.barWidthFactor,\n      barMaxWidth: customConfig.barMaxWidth,\n      pointSize: customConfig.pointSize,\n      spanNulls: customConfig.spanNulls || false,\n      show: !customConfig.hideFrom?.viz,\n      gradientMode: customConfig.gradientMode,\n      thresholds: config.thresholds,\n      hardMin: field.config.min,\n      hardMax: field.config.max,\n      softMin: customConfig.axisSoftMin,\n      softMax: customConfig.axisSoftMax,\n      // The following properties are not used in the uPlot config, but are utilized as transport for legend config\n      dataFrameFieldIndex: field.state?.origin,\n    });\n\n    // Render thresholds in graph\n    if (customConfig.thresholdsStyle && config.thresholds) {\n      const thresholdDisplay = customConfig.thresholdsStyle.mode ?? GraphTresholdsStyleMode.Off;\n      if (thresholdDisplay !== GraphTresholdsStyleMode.Off) {\n        builder.addThresholds({\n          config: customConfig.thresholdsStyle,\n          thresholds: config.thresholds,\n          scaleKey,\n          theme,\n          hardMin: field.config.min,\n          hardMax: field.config.max,\n          softMin: customConfig.axisSoftMin,\n          softMax: customConfig.axisSoftMax,\n        });\n      }\n    }\n  }\n\n  let stackingGroups = getStackingGroups(frame);\n\n  builder.setStackingGroups(stackingGroups);\n\n  // hook up custom/composite renderers\n  renderers?.forEach((r) => {\n    if (!indexByName) {\n      indexByName = getNamesToFieldIndex(frame, allFrames);\n    }\n    let fieldIndices: Record<string, number> = {};\n\n    for (let key in r.fieldMap) {\n      let dispName = r.fieldMap[key];\n      fieldIndices[key] = indexByName.get(dispName)!;\n    }\n\n    r.init(builder, fieldIndices);\n  });\n\n  builder.scaleKeys = [xScaleKey, yScaleKey];\n\n  // if hovered value is null, how far we may scan left/right to hover nearest non-null\n  const hoverProximityPx = 15;\n\n  let cursor: Partial<uPlot.Cursor> = {\n    // this scans left and right from cursor position to find nearest data index with value != null\n    // TODO: do we want to only scan past undefined values, but halt at explicit null values?\n    dataIdx: (self, seriesIdx, hoveredIdx, cursorXVal) => {\n      let seriesData = self.data[seriesIdx];\n\n      if (seriesData[hoveredIdx] == null) {\n        let nonNullLft = null,\n          nonNullRgt = null,\n          i;\n\n        i = hoveredIdx;\n        while (nonNullLft == null && i-- > 0) {\n          if (seriesData[i] != null) {\n            nonNullLft = i;\n          }\n        }\n\n        i = hoveredIdx;\n        while (nonNullRgt == null && i++ < seriesData.length) {\n          if (seriesData[i] != null) {\n            nonNullRgt = i;\n          }\n        }\n\n        let xVals = self.data[0];\n\n        let curPos = self.valToPos(cursorXVal, 'x');\n        let rgtPos = nonNullRgt == null ? Infinity : self.valToPos(xVals[nonNullRgt], 'x');\n        let lftPos = nonNullLft == null ? -Infinity : self.valToPos(xVals[nonNullLft], 'x');\n\n        let lftDelta = curPos - lftPos;\n        let rgtDelta = rgtPos - curPos;\n\n        if (lftDelta <= rgtDelta) {\n          if (lftDelta <= hoverProximityPx) {\n            hoveredIdx = nonNullLft!;\n          }\n        } else {\n          if (rgtDelta <= hoverProximityPx) {\n            hoveredIdx = nonNullRgt!;\n          }\n        }\n      }\n\n      return hoveredIdx;\n    },\n  };\n\n  if (sync && sync() !== DashboardCursorSync.Off) {\n    const payload: DataHoverPayload = {\n      point: {\n        [xScaleKey]: null,\n        [yScaleKey]: null,\n      },\n      data: frame,\n    };\n    const hoverEvent = new DataHoverEvent(payload);\n    cursor.sync = {\n      key: '__global_',\n      filters: {\n        pub: (type: string, src: uPlot, x: number, y: number, w: number, h: number, dataIdx: number) => {\n          if (sync && sync() === DashboardCursorSync.Off) {\n            return false;\n          }\n\n          payload.rowIndex = dataIdx;\n          if (x < 0 && y < 0) {\n            payload.point[xScaleUnit] = null;\n            payload.point[yScaleKey] = null;\n            eventBus.publish(new DataHoverClearEvent());\n          } else {\n            // convert the points\n            payload.point[xScaleUnit] = src.posToVal(x, xScaleKey);\n            payload.point[yScaleKey] = src.posToVal(y, yScaleKey);\n            payload.point.panelRelY = y > 0 ? y / h : 1; // used by old graph panel to position tooltip\n            eventBus.publish(hoverEvent);\n            hoverEvent.payload.down = undefined;\n          }\n          return true;\n        },\n      },\n      scales: [xScaleKey, yScaleKey],\n      // match: [() => true, (a, b) => a === b],\n    };\n  }\n\n  builder.setSync();\n  builder.setCursor(cursor);\n\n  return builder;\n};\n\nexport function getNamesToFieldIndex(frame: DataFrame, allFrames: DataFrame[]): Map<string, number> {\n  const originNames = new Map<string, number>();\n  frame.fields.forEach((field, i) => {\n    const origin = field.state?.origin;\n    if (origin) {\n      const origField = allFrames[origin.frameIndex]?.fields[origin.fieldIndex];\n      if (origField) {\n        originNames.set(getFieldDisplayName(origField, allFrames[origin.frameIndex], allFrames), i);\n      }\n    }\n  });\n  return originNames;\n}\n","import React, { Component } from 'react';\n\nimport { DataFrame, TimeRange } from '@grafana/data';\n\nimport { withTheme2 } from '../../themes/ThemeContext';\nimport { GraphNG, GraphNGProps, PropDiffFn } from '../GraphNG/GraphNG';\nimport { PanelContext, PanelContextRoot } from '../PanelChrome/PanelContext';\nimport { PlotLegend } from '../uPlot/PlotLegend';\nimport { UPlotConfigBuilder } from '../uPlot/config/UPlotConfigBuilder';\n\nimport { preparePlotConfigBuilder } from './utils';\n\nconst propsToDiff: Array<string | PropDiffFn> = ['legend', 'options', 'theme'];\n\ntype TimeSeriesProps = Omit<GraphNGProps, 'prepConfig' | 'propsToDiff' | 'renderLegend'>;\n\nexport class UnthemedTimeSeries extends Component<TimeSeriesProps> {\n  static contextType = PanelContextRoot;\n  panelContext: PanelContext = {} as PanelContext;\n\n  prepConfig = (alignedFrame: DataFrame, allFrames: DataFrame[], getTimeRange: () => TimeRange) => {\n    const { eventBus, sync } = this.context as PanelContext;\n    const { theme, timeZone, renderers, tweakAxis, tweakScale } = this.props;\n\n    return preparePlotConfigBuilder({\n      frame: alignedFrame,\n      theme,\n      timeZones: Array.isArray(timeZone) ? timeZone : [timeZone],\n      getTimeRange,\n      eventBus,\n      sync,\n      allFrames,\n      renderers,\n      tweakScale,\n      tweakAxis,\n    });\n  };\n\n  renderLegend = (config: UPlotConfigBuilder) => {\n    const { legend, frames } = this.props;\n\n    //hides and shows the legend ON the uPlot graph\n    if (!config || (legend && !legend.showLegend)) {\n      return null;\n    }\n\n    return <PlotLegend data={frames} config={config} {...legend} />;\n  };\n\n  render() {\n    return (\n      <GraphNG\n        {...this.props}\n        prepConfig={this.prepConfig}\n        propsToDiff={propsToDiff}\n        renderLegend={this.renderLegend}\n      />\n    );\n  }\n}\n\nexport const TimeSeries = withTheme2(UnthemedTimeSeries);\nTimeSeries.displayName = 'TimeSeries';\n","import React, { useCallback, useContext } from 'react';\n\nimport { DataFrame, DataFrameFieldIndex, Field } from '@grafana/data';\n\nimport { XYFieldMatchers } from './types';\n\n/** @alpha */\ninterface GraphNGContextType {\n  mapSeriesIndexToDataFrameFieldIndex: (index: number) => DataFrameFieldIndex;\n  dimFields: XYFieldMatchers;\n  data: DataFrame;\n}\n\n/** @alpha */\nexport const GraphNGContext = React.createContext<GraphNGContextType>({} as GraphNGContextType);\n\n/**\n * @alpha\n * Exposes API for data frame inspection in Plot plugins\n */\nexport const useGraphNGContext = () => {\n  const { data, dimFields, mapSeriesIndexToDataFrameFieldIndex } = useContext<GraphNGContextType>(GraphNGContext);\n\n  const getXAxisField = useCallback(() => {\n    const xFieldMatcher = dimFields.x;\n    let xField: Field | null = null;\n\n    for (let j = 0; j < data.fields.length; j++) {\n      if (xFieldMatcher(data.fields[j], data, [data])) {\n        xField = data.fields[j];\n        break;\n      }\n    }\n\n    return xField;\n  }, [data, dimFields]);\n\n  return {\n    dimFields,\n    mapSeriesIndexToDataFrameFieldIndex,\n    getXAxisField,\n    alignedData: data,\n  };\n};\n","import { cx, css } from '@emotion/css';\nimport React, { forwardRef, HTMLAttributes, useCallback } from 'react';\nimport Highlighter from 'react-highlight-words';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useTheme2 } from '../../themes';\nimport { HighlightPart } from '../../types';\nimport { PartialHighlighter } from '../Typeahead/PartialHighlighter';\n\ntype OnLabelClick = (name: string, value: string | undefined, event: React.MouseEvent<HTMLElement>) => void;\n\ninterface Props extends Omit<HTMLAttributes<HTMLElement>, 'onClick'> {\n  name: string;\n  active?: boolean;\n  loading?: boolean;\n  searchTerm?: string;\n  value?: string;\n  facets?: number;\n  title?: string;\n  highlightParts?: HighlightPart[];\n  onClick?: OnLabelClick;\n}\n\n/**\n * @internal\n */\nexport const Label = forwardRef<HTMLButtonElement, Props>(\n  (\n    {\n      name,\n      value,\n      hidden,\n      facets,\n      onClick,\n      className,\n      loading,\n      searchTerm,\n      active,\n      style,\n      title,\n      highlightParts,\n      ...rest\n    },\n    ref\n  ) => {\n    const theme = useTheme2();\n    const styles = getLabelStyles(theme);\n    const searchWords = searchTerm ? [searchTerm] : [];\n\n    const onLabelClick = useCallback(\n      (event: React.MouseEvent<HTMLElement>) => {\n        if (onClick && !hidden) {\n          onClick(name, value, event);\n        }\n      },\n      [onClick, name, hidden, value]\n    );\n\n    // Using this component for labels and label values. If value is given use value for display text.\n    let text = value || name;\n    if (facets) {\n      text = `${text} (${facets})`;\n    }\n\n    return (\n      <button\n        key={text}\n        ref={ref}\n        onClick={onLabelClick}\n        style={style}\n        title={title || text}\n        type=\"button\"\n        role=\"option\"\n        aria-selected={!!active}\n        className={cx(\n          styles.base,\n          active && styles.active,\n          loading && styles.loading,\n          hidden && styles.hidden,\n          className,\n          onClick && !hidden && styles.hover\n        )}\n        {...rest}\n      >\n        {highlightParts !== undefined ? (\n          <PartialHighlighter text={text} highlightClassName={styles.matchHighLight} highlightParts={highlightParts} />\n        ) : (\n          <Highlighter\n            textToHighlight={text}\n            searchWords={searchWords}\n            autoEscape\n            highlightClassName={styles.matchHighLight}\n          />\n        )}\n      </button>\n    );\n  }\n);\n\nLabel.displayName = 'Label';\n\nconst getLabelStyles = (theme: GrafanaTheme2) => ({\n  base: css`\n    display: inline-block;\n    cursor: pointer;\n    font-size: ${theme.typography.size.sm};\n    line-height: ${theme.typography.bodySmall.lineHeight};\n    background-color: ${theme.colors.background.secondary};\n    color: ${theme.colors.text.primary};\n    white-space: nowrap;\n    text-shadow: none;\n    padding: ${theme.spacing(0.5)};\n    border-radius: ${theme.shape.borderRadius()};\n    border: none;\n    margin-right: ${theme.spacing(1)};\n    margin-bottom: ${theme.spacing(0.5)};\n  `,\n  loading: css`\n    font-weight: ${theme.typography.fontWeightMedium};\n    background-color: ${theme.colors.primary.shade};\n    color: ${theme.colors.text.primary};\n    animation: pulse 3s ease-out 0s infinite normal forwards;\n    @keyframes pulse {\n      0% {\n        color: ${theme.colors.text.primary};\n      }\n      50% {\n        color: ${theme.colors.text.secondary};\n      }\n      100% {\n        color: ${theme.colors.text.disabled};\n      }\n    }\n  `,\n  active: css`\n    font-weight: ${theme.typography.fontWeightMedium};\n    background-color: ${theme.colors.primary.main};\n    color: ${theme.colors.primary.contrastText};\n  `,\n  matchHighLight: css`\n    background: inherit;\n    color: ${theme.components.textHighlight.text};\n    background-color: ${theme.components.textHighlight.background};\n  `,\n  hidden: css`\n    opacity: 0.6;\n    cursor: default;\n    border: 1px solid transparent;\n  `,\n  hover: css`\n    &:hover {\n      opacity: 0.85;\n      cursor: pointer;\n    }\n  `,\n});\n","import { css, cx } from '@emotion/css';\nimport React, { DetailedHTMLProps, HTMLAttributes } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\n\ntype Props = DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>;\n\nexport const PanelContainer = ({ children, className, ...props }: Props) => {\n  const styles = useStyles2(getStyles);\n  return (\n    <div className={cx(styles, className)} {...props}>\n      {children}\n    </div>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) =>\n  css`\n    background-color: ${theme.components.panel.background};\n    border: 1px solid ${theme.components.panel.borderColor};\n    border-radius: ${theme.shape.radius.default};\n  `;\n","import { FormField } from './FormField/FormField';\nimport { Input, LegacyInputStatus } from './Forms/Legacy/Input/Input';\nimport { IndicatorsContainer } from './Forms/Legacy/Select/IndicatorsContainer';\nimport { NoOptionsMessage } from './Forms/Legacy/Select/NoOptionsMessage';\nimport { AsyncSelect, Select } from './Forms/Legacy/Select/Select';\nimport { Switch } from './Forms/Legacy/Switch/Switch';\nimport { SecretFormField } from './SecretFormField/SecretFormField';\n\nexport { Icon } from './Icon/Icon';\nexport { IconButton, type IconButtonVariant } from './IconButton/IconButton';\nexport { ConfirmButton } from './ConfirmButton/ConfirmButton';\nexport { DeleteButton } from './ConfirmButton/DeleteButton';\nexport { Tooltip } from './Tooltip/Tooltip';\nexport type { PopoverContent } from './Tooltip/types';\nexport { PopoverController } from './Tooltip/PopoverController';\nexport { Popover } from './Tooltip/Popover';\nexport { Toggletip } from './Toggletip/Toggletip';\nexport { Portal, getPortalContainer, PortalContainer } from './Portal/Portal';\nexport { CustomScrollbar, type ScrollbarPosition } from './CustomScrollbar/CustomScrollbar';\nexport { TabbedContainer, type TabConfig } from './TabbedContainer/TabbedContainer';\n\nexport { ClipboardButton } from './ClipboardButton/ClipboardButton';\nexport { Cascader, type CascaderOption } from './Cascader/Cascader';\nexport { ButtonCascader } from './ButtonCascader/ButtonCascader';\nexport { InlineToast } from './InlineToast/InlineToast';\n\nexport { LoadingPlaceholder, type LoadingPlaceholderProps } from './LoadingPlaceholder/LoadingPlaceholder';\nexport { LoadingBar, type LoadingBarProps } from './LoadingBar/LoadingBar';\nexport { ColorPicker, SeriesColorPicker } from './ColorPicker/ColorPicker';\nexport { ColorPickerInput } from './ColorPicker/ColorPickerInput';\nexport { SeriesColorPickerPopover, SeriesColorPickerPopoverWithTheme } from './ColorPicker/SeriesColorPickerPopover';\nexport { EmptySearchResult } from './EmptySearchResult/EmptySearchResult';\nexport { UnitPicker } from './UnitPicker/UnitPicker';\nexport { StatsPicker } from './StatsPicker/StatsPicker';\nexport { RefreshPicker, defaultIntervals } from './RefreshPicker/RefreshPicker';\nexport { TimeRangePicker, type TimeRangePickerProps } from './DateTimePickers/TimeRangePicker';\nexport { TimePickerTooltip } from './DateTimePickers/TimeRangePicker';\nexport { TimeOfDayPicker } from './DateTimePickers/TimeOfDayPicker';\nexport { TimeZonePicker } from './DateTimePickers/TimeZonePicker';\nexport { WeekStartPicker } from './DateTimePickers/WeekStartPicker';\nexport { DatePicker, type DatePickerProps } from './DateTimePickers/DatePicker/DatePicker';\nexport {\n  DatePickerWithInput,\n  type DatePickerWithInputProps,\n} from './DateTimePickers/DatePickerWithInput/DatePickerWithInput';\nexport { DateTimePicker } from './DateTimePickers/DateTimePicker/DateTimePicker';\nexport { List } from './List/List';\nexport { InteractiveTable } from './InteractiveTable/InteractiveTable';\nexport { TagsInput } from './TagsInput/TagsInput';\nexport { Pagination } from './Pagination/Pagination';\nexport { Tag, type OnTagClick } from './Tags/Tag';\nexport { TagList } from './Tags/TagList';\nexport { FilterPill } from './FilterPill/FilterPill';\n\nexport { ConfirmModal, type ConfirmModalProps } from './ConfirmModal/ConfirmModal';\nexport { QueryField, type QueryFieldProps } from './QueryField/QueryField';\n\nexport { CodeEditor } from './Monaco/CodeEditor';\n\nexport { ReactMonacoEditorLazy as ReactMonacoEditor } from './Monaco/ReactMonacoEditorLazy';\n\nexport {\n  type Monaco,\n  type monacoTypes,\n  type MonacoEditor,\n  type MonacoOptions as CodeEditorMonacoOptions,\n  type CodeEditorSuggestionItem,\n  CodeEditorSuggestionItemKind,\n} from './Monaco/types';\nexport { variableSuggestionToCodeEditorSuggestion } from './Monaco/utils';\n\n// TODO: namespace\nexport { Modal, type Props as ModalProps } from './Modal/Modal';\nexport { ModalHeader } from './Modal/ModalHeader';\nexport { ModalTabsHeader } from './Modal/ModalTabsHeader';\nexport { ModalTabContent } from './Modal/ModalTabContent';\nexport { ModalsProvider, ModalRoot, ModalsController, ModalsContext } from './Modal/ModalsContext';\nexport { PageToolbar } from './PageLayout/PageToolbar';\n\n// Renderless\nexport { SetInterval } from './SetInterval/SetInterval';\n\nexport { Table } from './Table/Table';\nexport {\n  TableCellDisplayMode,\n  type TableSortByFieldState,\n  type TableFooterCalc,\n  type AdHocFilterItem,\n} from './Table/types';\nexport { TableInputCSV } from './TableInputCSV/TableInputCSV';\nexport { TabsBar } from './Tabs/TabsBar';\nexport { Tab } from './Tabs/Tab';\nexport { VerticalTab } from './Tabs/VerticalTab';\nexport { TabContent } from './Tabs/TabContent';\nexport { Counter } from './Tabs/Counter';\nexport { RenderUserContentAsHTML } from './RenderUserContentAsHTML/RenderUserContentAsHTML';\n\n// Visualizations\nexport {\n  BigValue,\n  BigValueColorMode,\n  BigValueGraphMode,\n  BigValueJustifyMode,\n  BigValueTextMode,\n} from './BigValue/BigValue';\nexport { Sparkline } from './Sparkline/Sparkline';\n\nexport { Gauge } from './Gauge/Gauge';\nexport { Graph } from './Graph/Graph';\nexport { GraphWithLegend } from './Graph/GraphWithLegend';\nexport { GraphContextMenu, GraphContextMenuHeader } from './Graph/GraphContextMenu';\nexport { BarGauge } from './BarGauge/BarGauge';\nexport {\n  VizTooltip,\n  VizTooltipContainer,\n  SeriesTable,\n  type SeriesTableProps,\n  SeriesTableRow,\n  type SeriesTableRowProps,\n} from './VizTooltip';\nexport { VizRepeater, type VizRepeaterRenderValueProps } from './VizRepeater/VizRepeater';\nexport { graphTimeFormat, graphTickFormatter } from './Graph/utils';\nexport {\n  PanelChrome,\n  type PanelChromeProps,\n  type PanelPadding,\n  type PanelChromeType,\n  PanelChromeLoadingIndicator,\n  type PanelChromeLoadingIndicatorProps,\n  PanelChromeErrorIndicator,\n  type PanelChromeErrorIndicatorProps,\n  PanelContextProvider,\n  type PanelContext,\n  PanelContextRoot,\n  usePanelContext,\n} from './PanelChrome';\nexport {\n  VizLayout,\n  type VizLayoutComponentType,\n  type VizLayoutLegendProps,\n  type VizLayoutProps,\n} from './VizLayout/VizLayout';\nexport { type VizLegendItem, SeriesVisibilityChangeBehavior } from './VizLegend/types';\nexport { VizLegend } from './VizLegend/VizLegend';\nexport { VizLegendListItem } from './VizLegend/VizLegendListItem';\n\nexport { Alert, type AlertVariant } from './Alert/Alert';\nexport { GraphSeriesToggler, type GraphSeriesTogglerAPI } from './Graph/GraphSeriesToggler';\nexport { Collapse, ControlledCollapse } from './Collapse/Collapse';\nexport { CollapsableSection } from './Collapse/CollapsableSection';\nexport { LogLabels } from './Logs/LogLabels';\nexport { LogMessageAnsi } from './Logs/LogMessageAnsi';\nexport { LogRows } from './Logs/LogRows';\nexport { getLogRowStyles } from './Logs/getLogRowStyles';\nexport { DataLinkButton } from './DataLinks/DataLinkButton';\nexport { FieldLinkList } from './DataLinks/FieldLinkList';\n// Panel editors\nexport { FullWidthButtonContainer } from './Button/FullWidthButtonContainer';\nexport { ClickOutsideWrapper } from './ClickOutsideWrapper/ClickOutsideWrapper';\nexport * from './SingleStatShared/index';\nexport { CallToActionCard } from './CallToActionCard/CallToActionCard';\nexport { ContextMenu, type ContextMenuProps } from './ContextMenu/ContextMenu';\nexport { Menu, type MenuProps } from './Menu/Menu';\nexport { MenuGroup, type MenuItemsGroup, type MenuGroupProps } from './Menu/MenuGroup';\nexport { MenuItem, type MenuItemProps } from './Menu/MenuItem';\nexport { WithContextMenu } from './ContextMenu/WithContextMenu';\nexport { DataLinksInlineEditor } from './DataLinks/DataLinksInlineEditor/DataLinksInlineEditor';\nexport { DataLinkInput } from './DataLinks/DataLinkInput';\nexport {\n  DataLinksContextMenu,\n  type DataLinksContextMenuProps,\n  type DataLinksContextMenuApi,\n} from './DataLinks/DataLinksContextMenu';\nexport { SeriesIcon } from './VizLegend/SeriesIcon';\nexport { InfoBox } from './InfoBox/InfoBox';\nexport { FeatureBadge, FeatureInfoBox } from './InfoBox/FeatureInfoBox';\n\nexport { JSONFormatter } from './JSONFormatter/JSONFormatter';\nexport { JsonExplorer } from './JSONFormatter/json_explorer/json_explorer';\nexport {\n  ErrorBoundary,\n  ErrorBoundaryAlert,\n  type ErrorBoundaryAlertProps,\n  withErrorBoundary,\n} from './ErrorBoundary/ErrorBoundary';\nexport { ErrorWithStack } from './ErrorBoundary/ErrorWithStack';\nexport { DataSourceHttpSettings } from './DataSourceSettings/DataSourceHttpSettings';\nexport { CustomHeadersSettings } from './DataSourceSettings/CustomHeadersSettings';\nexport { AlertingSettings } from './DataSourceSettings/AlertingSettings';\nexport { SecureSocksProxySettings } from './DataSourceSettings/SecureSocksProxySettings';\nexport { TLSAuthSettings } from './DataSourceSettings/TLSAuthSettings';\nexport { CertificationKey } from './DataSourceSettings/CertificationKey';\nexport { Spinner } from './Spinner/Spinner';\nexport { FadeTransition } from './transitions/FadeTransition';\nexport { SlideOutTransition } from './transitions/SlideOutTransition';\nexport { Segment, SegmentAsync, SegmentInput, SegmentSelect, SegmentSection } from './Segment/';\nexport { Drawer } from './Drawer/Drawer';\nexport { Slider } from './Slider/Slider';\nexport { RangeSlider } from './Slider/RangeSlider';\n\n// Next-gen forms\nexport { Form } from './Forms/Form';\nexport { sharedInputStyle } from './Forms/commonStyles';\nexport { InputControl } from './InputControl';\nexport { Button, LinkButton, type ButtonVariant, ButtonGroup, type ButtonProps, clearButtonStyles } from './Button';\nexport { ToolbarButton, ToolbarButtonRow } from './ToolbarButton';\nexport { ValuePicker } from './ValuePicker/ValuePicker';\nexport { fieldMatchersUI } from './MatchersUI/fieldMatchersUI';\nexport { Link } from './Link/Link';\n\nexport { Label } from './Forms/Label';\nexport { Field, type FieldProps } from './Forms/Field';\nexport { Legend } from './Forms/Legend';\nexport { FieldSet } from './Forms/FieldSet';\nexport { FieldValidationMessage } from './Forms/FieldValidationMessage';\nexport { InlineField } from './Forms/InlineField';\nexport { InlineSegmentGroup } from './Forms/InlineSegmentGroup';\nexport { InlineLabel } from './Forms/InlineLabel';\nexport { InlineFieldRow } from './Forms/InlineFieldRow';\nexport { FieldArray } from './Forms/FieldArray';\n\n// Select\nexport { default as resetSelectStyles } from './Select/resetSelectStyles';\nexport * from './Select/Select';\nexport { DropdownIndicator } from './Select/DropdownIndicator';\nexport { getSelectStyles } from './Select/getSelectStyles';\nexport * from './Select/types';\n\nexport { HorizontalGroup, VerticalGroup, Container } from './Layout/Layout';\nexport { Badge, type BadgeColor, type BadgeProps } from './Badge/Badge';\nexport { RadioButtonGroup } from './Forms/RadioButtonGroup/RadioButtonGroup';\nexport { RadioButtonList } from './Forms/RadioButtonList/RadioButtonList';\n\nexport { Input, getInputStyles } from './Input/Input';\nexport { AutoSizeInput } from './Input/AutoSizeInput';\nexport { FilterInput } from './FilterInput/FilterInput';\nexport type { FormInputSize } from './Forms/types';\nexport * from './SecretInput';\nexport * from './SecretTextArea';\n\nexport { Switch, InlineSwitch } from './Switch/Switch';\nexport { Checkbox } from './Forms/Checkbox';\n\nexport { TextArea } from './TextArea/TextArea';\nexport { FileUpload } from './FileUpload/FileUpload';\nexport * from './FileDropzone';\nexport { TimeRangeInput } from './DateTimePickers/TimeRangeInput';\nexport { RelativeTimeRangePicker } from './DateTimePickers/RelativeTimeRangePicker/RelativeTimeRangePicker';\nexport { Card, type Props as CardProps, getCardStyles } from './Card/Card';\nexport { CardContainer, type CardContainerProps } from './Card/CardContainer';\nexport { FormattedValueDisplay } from './FormattedValueDisplay/FormattedValueDisplay';\nexport { ButtonSelect } from './Dropdown/ButtonSelect';\nexport { Dropdown } from './Dropdown/Dropdown';\nexport { PluginSignatureBadge, type PluginSignatureBadgeProps } from './PluginSignatureBadge/PluginSignatureBadge';\n\n// Export this until we've figured out a good approach to inline form styles.\nexport { InlineFormLabel } from './FormLabel/FormLabel';\n\nconst LegacyForms = {\n  SecretFormField,\n  FormField,\n  Select,\n  AsyncSelect,\n  IndicatorsContainer,\n  NoOptionsMessage,\n  Input,\n  Switch,\n};\nexport { LegacyForms, LegacyInputStatus };\n\n// WIP, need renames and exports cleanup\nexport * from './uPlot/config';\nexport { ScaleDistribution, BarGaugeDisplayMode } from '@grafana/schema';\nexport { UPlotConfigBuilder } from './uPlot/config/UPlotConfigBuilder';\nexport { UPLOT_AXIS_FONT_SIZE } from './uPlot/config/UPlotAxisBuilder';\nexport { UPlotChart } from './uPlot/Plot';\nexport { PlotLegend } from './uPlot/PlotLegend';\nexport * from './uPlot/geometries';\nexport * from './uPlot/plugins';\nexport { type PlotTooltipInterpolator, type PlotSelection } from './uPlot/types';\nexport { type UPlotConfigPrepFn } from './uPlot/config/UPlotConfigBuilder';\nexport { GraphNG, type GraphNGProps, FIXED_UNIT } from './GraphNG/GraphNG';\nexport { TimeSeries } from './TimeSeries/TimeSeries';\nexport { useGraphNGContext } from './GraphNG/hooks';\nexport { preparePlotFrame, buildScaleKey } from './GraphNG/utils';\nexport { type GraphNGLegendEvent } from './GraphNG/types';\nexport * from './PanelChrome/types';\nexport { Label as BrowserLabel } from './BrowserLabel/Label';\nexport { PanelContainer } from './PanelContainer/PanelContainer';\n","import React from 'react';\n\nimport {\n  FieldConfigEditorBuilder,\n  FieldType,\n  identityOverrideProcessor,\n  SelectableValue,\n  StandardEditorProps,\n} from '@grafana/data';\nimport { AxisColorMode, AxisConfig, AxisPlacement, ScaleDistribution, ScaleDistributionConfig } from '@grafana/schema';\n\nimport { graphFieldOptions, Select, RadioButtonGroup, Input, Field } from '../../index';\n\n/**\n * @alpha\n */\nexport function addAxisConfig(\n  builder: FieldConfigEditorBuilder<AxisConfig>,\n  defaultConfig: AxisConfig,\n  hideScale?: boolean\n) {\n  const category = ['Axis'];\n\n  // options for axis appearance\n  builder\n    .addRadio({\n      path: 'axisPlacement',\n      name: 'Placement',\n      category,\n      defaultValue: graphFieldOptions.axisPlacement[0].value,\n      settings: {\n        options: graphFieldOptions.axisPlacement,\n      },\n    })\n    .addTextInput({\n      path: 'axisLabel',\n      name: 'Label',\n      category,\n      defaultValue: '',\n      settings: {\n        placeholder: 'Optional text',\n      },\n      showIf: (c) => c.axisPlacement !== AxisPlacement.Hidden,\n      // Do not apply default settings to time and string fields which are used as x-axis fields in Time series and Bar chart panels\n      shouldApply: (f) => f.type !== FieldType.time && f.type !== FieldType.string,\n    })\n    .addNumberInput({\n      path: 'axisWidth',\n      name: 'Width',\n      category,\n      settings: {\n        placeholder: 'Auto',\n      },\n      showIf: (c) => c.axisPlacement !== AxisPlacement.Hidden,\n    })\n    .addRadio({\n      path: 'axisGridShow',\n      name: 'Show grid lines',\n      category,\n      defaultValue: undefined,\n      settings: {\n        options: [\n          { value: undefined, label: 'Auto' },\n          { value: true, label: 'On' },\n          { value: false, label: 'Off' },\n        ],\n      },\n    })\n    .addRadio({\n      path: 'axisColorMode',\n      name: 'Color',\n      category,\n      defaultValue: AxisColorMode.Text,\n      settings: {\n        options: [\n          { value: AxisColorMode.Text, label: 'Text' },\n          { value: AxisColorMode.Series, label: 'Series' },\n        ],\n      },\n    });\n\n  // options for scale range\n  builder\n    .addCustomEditor<void, ScaleDistributionConfig>({\n      id: 'scaleDistribution',\n      path: 'scaleDistribution',\n      name: 'Scale',\n      category,\n      editor: ScaleDistributionEditor as any,\n      override: ScaleDistributionEditor as any,\n      defaultValue: { type: ScaleDistribution.Linear },\n      shouldApply: (f) => f.type === FieldType.number,\n      process: identityOverrideProcessor,\n    })\n    .addBooleanSwitch({\n      path: 'axisCenteredZero',\n      name: 'Centered zero',\n      category,\n      defaultValue: false,\n      showIf: (c) => c.scaleDistribution?.type !== ScaleDistribution.Log,\n    })\n    .addNumberInput({\n      path: 'axisSoftMin',\n      name: 'Soft min',\n      defaultValue: defaultConfig.axisSoftMin,\n      category,\n      settings: {\n        placeholder: 'See: Standard options > Min',\n      },\n    })\n    .addNumberInput({\n      path: 'axisSoftMax',\n      name: 'Soft max',\n      defaultValue: defaultConfig.axisSoftMax,\n      category,\n      settings: {\n        placeholder: 'See: Standard options > Max',\n      },\n    });\n}\n\nconst DISTRIBUTION_OPTIONS: Array<SelectableValue<ScaleDistribution>> = [\n  {\n    label: 'Linear',\n    value: ScaleDistribution.Linear,\n  },\n  {\n    label: 'Logarithmic',\n    value: ScaleDistribution.Log,\n  },\n  {\n    label: 'Symlog',\n    value: ScaleDistribution.Symlog,\n  },\n];\n\nconst LOG_DISTRIBUTION_OPTIONS: Array<SelectableValue<number>> = [\n  {\n    label: '2',\n    value: 2,\n  },\n  {\n    label: '10',\n    value: 10,\n  },\n];\n\n/**\n * @internal\n */\nexport const ScaleDistributionEditor = ({ value, onChange }: StandardEditorProps<ScaleDistributionConfig>) => {\n  const type = value?.type ?? ScaleDistribution.Linear;\n  const log = value?.log ?? 2;\n  return (\n    <>\n      <div style={{ marginBottom: 16 }}>\n        <RadioButtonGroup\n          value={type}\n          options={DISTRIBUTION_OPTIONS}\n          onChange={(v) => {\n            onChange({\n              ...value,\n              type: v!,\n              log: v === ScaleDistribution.Linear ? undefined : log,\n            });\n          }}\n        />\n      </div>\n      {(type === ScaleDistribution.Log || type === ScaleDistribution.Symlog) && (\n        <Field label=\"Log base\">\n          <Select\n            options={LOG_DISTRIBUTION_OPTIONS}\n            value={log}\n            onChange={(v) => {\n              onChange({\n                ...value,\n                log: v.value!,\n              });\n            }}\n          />\n        </Field>\n      )}\n      {type === ScaleDistribution.Symlog && (\n        <Field label=\"Linear threshold\">\n          <Input\n            placeholder=\"1\"\n            value={value?.linearThreshold}\n            onChange={(v) => {\n              onChange({\n                ...value,\n                linearThreshold: Number(v.currentTarget.value),\n              });\n            }}\n          />\n        </Field>\n      )}\n    </>\n  );\n};\n","import { startCase } from 'lodash';\nimport React, { useCallback } from 'react';\n\nimport { FieldConfigEditorBuilder, FieldConfigEditorProps } from '@grafana/data';\nimport { HideableFieldConfig, HideSeriesConfig } from '@grafana/schema';\n\nimport { FilterPill, HorizontalGroup } from '../../index';\n\nconst SeriesConfigEditor = ({ value, onChange }: FieldConfigEditorProps<HideSeriesConfig, {}>) => {\n  const onChangeToggle = useCallback(\n    (prop: keyof HideSeriesConfig) => {\n      onChange({ ...value, [prop]: !value[prop] });\n    },\n    [value, onChange]\n  );\n\n  return (\n    <HorizontalGroup spacing=\"xs\">\n      {Object.keys(value).map((k) => {\n        const key = k as keyof HideSeriesConfig;\n        return (\n          <FilterPill\n            icon={value[key] ? 'eye-slash' : 'eye'}\n            onClick={() => onChangeToggle(key)}\n            key={key}\n            label={startCase(key)}\n            selected={value[key]}\n          />\n        );\n      })}\n    </HorizontalGroup>\n  );\n};\n\n/**\n * @alpha\n */\nexport function addHideFrom(builder: FieldConfigEditorBuilder<HideableFieldConfig>) {\n  builder.addCustomEditor({\n    id: 'hideFrom',\n    name: 'Hide in area',\n    category: ['Series'],\n    path: 'hideFrom',\n    defaultValue: {\n      tooltip: false,\n      viz: false,\n      legend: false,\n    },\n    editor: SeriesConfigEditor,\n    override: SeriesConfigEditor,\n    shouldApply: () => true,\n    hideFromDefaults: true,\n    process: (value) => value,\n  });\n}\n","import { PanelOptionsEditorBuilder, standardEditorsRegistry, StatsPickerConfigSettings } from '@grafana/data';\nimport { LegendDisplayMode, OptionsWithLegend } from '@grafana/schema';\n\n/**\n * @alpha\n */\nexport function addLegendOptions<T extends OptionsWithLegend>(\n  builder: PanelOptionsEditorBuilder<T>,\n  includeLegendCalcs = true\n) {\n  builder\n    .addBooleanSwitch({\n      path: 'legend.showLegend',\n      name: 'Visibility',\n      category: ['Legend'],\n      description: '',\n      defaultValue: true,\n    })\n    .addRadio({\n      path: 'legend.displayMode',\n      name: 'Mode',\n      category: ['Legend'],\n      description: '',\n      defaultValue: LegendDisplayMode.List,\n      settings: {\n        options: [\n          { value: LegendDisplayMode.List, label: 'List' },\n          { value: LegendDisplayMode.Table, label: 'Table' },\n        ],\n      },\n      showIf: (c) => c.legend.showLegend,\n    })\n    .addRadio({\n      path: 'legend.placement',\n      name: 'Placement',\n      category: ['Legend'],\n      description: '',\n      defaultValue: 'bottom',\n      settings: {\n        options: [\n          { value: 'bottom', label: 'Bottom' },\n          { value: 'right', label: 'Right' },\n        ],\n      },\n      showIf: (c) => c.legend.showLegend,\n    })\n    .addNumberInput({\n      path: 'legend.width',\n      name: 'Width',\n      category: ['Legend'],\n      settings: {\n        placeholder: 'Auto',\n      },\n      showIf: (c) => c.legend.showLegend && c.legend.placement === 'right',\n    });\n\n  if (includeLegendCalcs) {\n    builder.addCustomEditor<StatsPickerConfigSettings, string[]>({\n      id: 'legend.calcs',\n      path: 'legend.calcs',\n      name: 'Values',\n      category: ['Legend'],\n      description: 'Select values or calculations to show in legend',\n      editor: standardEditorsRegistry.get('stats-picker').editor,\n      defaultValue: [],\n      settings: {\n        allowMultiple: true,\n      },\n      showIf: (currentConfig) => currentConfig.legend.showLegend !== false,\n    });\n  }\n}\n","import { PanelOptionsEditorBuilder } from '@grafana/data';\nimport { OptionsWithTooltip, TooltipDisplayMode, SortOrder } from '@grafana/schema';\n\nexport function addTooltipOptions<T extends OptionsWithTooltip>(\n  builder: PanelOptionsEditorBuilder<T>,\n  singleOnly = false\n) {\n  const category = ['Tooltip'];\n  const modeOptions = singleOnly\n    ? [\n        { value: TooltipDisplayMode.Single, label: 'Single' },\n        { value: TooltipDisplayMode.None, label: 'Hidden' },\n      ]\n    : [\n        { value: TooltipDisplayMode.Single, label: 'Single' },\n        { value: TooltipDisplayMode.Multi, label: 'All' },\n        { value: TooltipDisplayMode.None, label: 'Hidden' },\n      ];\n\n  const sortOptions = [\n    { value: SortOrder.None, label: 'None' },\n    { value: SortOrder.Ascending, label: 'Ascending' },\n    { value: SortOrder.Descending, label: 'Descending' },\n  ];\n\n  builder\n    .addRadio({\n      path: 'tooltip.mode',\n      name: 'Tooltip mode',\n      category,\n      defaultValue: 'single',\n      settings: {\n        options: modeOptions,\n      },\n    })\n    .addRadio({\n      path: 'tooltip.sort',\n      name: 'Values sort order',\n      category,\n      defaultValue: SortOrder.None,\n      showIf: (options: T) => options.tooltip?.mode === TooltipDisplayMode.Multi,\n      settings: {\n        options: sortOptions,\n      },\n    });\n}\n","import { PanelOptionsEditorBuilder } from '@grafana/data';\nimport { OptionsWithTextFormatting } from '@grafana/schema';\n\n/**\n * Adds common text control options to a visualization options\n * @param builder\n * @param withTitle\n * @public\n */\nexport function addTextSizeOptions<T extends OptionsWithTextFormatting>(\n  builder: PanelOptionsEditorBuilder<T>,\n  withTitle = true\n) {\n  if (withTitle) {\n    builder.addNumberInput({\n      path: 'text.titleSize',\n      category: ['Text size'],\n      name: 'Title',\n      settings: {\n        placeholder: 'Auto',\n        integer: false,\n        min: 1,\n        max: 200,\n      },\n      defaultValue: undefined,\n    });\n  }\n\n  builder.addNumberInput({\n    path: 'text.valueSize',\n    category: ['Text size'],\n    name: 'Value',\n    settings: {\n      placeholder: 'Auto',\n      integer: false,\n      min: 1,\n      max: 200,\n    },\n    defaultValue: undefined,\n  });\n}\n","import React from 'react';\n\nimport {\n  FieldConfigEditorBuilder,\n  FieldOverrideEditorProps,\n  FieldType,\n  identityOverrideProcessor,\n} from '@grafana/data';\nimport { StackingConfig, StackingMode } from '@grafana/schema';\n\nimport {\n  GraphFieldConfig,\n  graphFieldOptions,\n  HorizontalGroup,\n  IconButton,\n  Input,\n  RadioButtonGroup,\n  Tooltip,\n} from '../..';\n\nexport const StackingEditor = ({ value, context, onChange, item }: FieldOverrideEditorProps<StackingConfig, any>) => {\n  return (\n    <HorizontalGroup>\n      <RadioButtonGroup\n        value={value?.mode || StackingMode.None}\n        options={item.settings.options}\n        onChange={(v) => {\n          onChange({\n            ...value,\n            mode: v,\n          });\n        }}\n      />\n      {context.isOverride && value?.mode && value?.mode !== StackingMode.None && (\n        <Input\n          type=\"text\"\n          placeholder=\"Group\"\n          suffix={\n            <Tooltip content=\"Name of the stacking group\" placement=\"top\">\n              <IconButton name=\"question-circle\" />\n            </Tooltip>\n          }\n          defaultValue={value?.group}\n          onChange={(v) => {\n            onChange({\n              ...value,\n              group: v.currentTarget.value.trim(),\n            });\n          }}\n        />\n      )}\n    </HorizontalGroup>\n  );\n};\n\nexport function addStackingConfig(\n  builder: FieldConfigEditorBuilder<GraphFieldConfig>,\n  defaultConfig?: StackingConfig,\n  category = ['Graph styles']\n) {\n  builder.addCustomEditor({\n    id: 'stacking',\n    path: 'stacking',\n    name: 'Stack series',\n    category: category,\n    defaultValue: defaultConfig,\n    editor: StackingEditor,\n    override: StackingEditor,\n    settings: {\n      options: graphFieldOptions.stacking,\n    },\n    process: identityOverrideProcessor,\n    shouldApply: (f) => f.type === FieldType.number,\n  });\n}\n"],"names":["memoizeOne","React","createTheme","__spreadProps","__spreadValues","hoistNonReactStatics","useContext","cacheStore","css","isIconName","SVG","cx","colorManipulator","getCardStyles","tinycolor","Global","Portal","useRef","useLayoutEffect","ReactDOM","useEffect","usePopperTooltip","getStyles","Component","__objRest","classNames","map","sortBy","chunk","flattenDeep","zip","EventsWithValidation","Block","Text","Document","Value","useState","last","SearchFunctionType","throttle","NodeGraphDataFrameFieldNames","LegacyInputStatus","Input","PureComponent","IndicatorsContainer","components","className","useCallback","Scrollbars","CSSTransition","data","toIconName","useMemo","ReactSelect","Creatable","Select","AsyncSelect","ReactAsyncSelect","Switch","uniqueId","omit","forwardRef","Manager","Transition","ReactPopper","placement","i18next","initReactI18next","I18NextTrans","usePopper","keyframes","useMeasure","InputControl","max","_a","List","value","toOption","AsyncCreatable","showAllSelectedWhenOpen","maxVisibleValues","RCCascader","ColorSwatchVariant","useFocusRing","selectors","upperFirst","debounce","useThrottleFn","RgbaStringColorPicker","FocusScope","createRef","getPaletteStyles","getValueFormats","fieldReducers","difference","modulo","useEffectOnce","useImperativeHandle","styleMixins.mediaUp","useOverlay","useDialog","useMenuTriggerState","useMenuTrigger","useButton","parseDuration","formatDuration","isString","dateTimeFormat","getTimeZoneInfo","getTimeZoneGroups","options","toLower","group","isEmpty","InternalTimeZones","timeZone","memo","getLabelStyles","Label","Body","Calendar","dateTime","dateTimeParse","OverlayContainer","fromValue","toValue","rangeUtil","from","to","TimePickerCalendar","isValid","isDateTime","dateMath","uuidv4","Options","timeOption","timeZoneFormatUserFriendly","RcTimePicker","dateTimeAsMoment","useMedia","date","getColumns","useTable","isTruthy","useSortBy","useExpanded","key","Fragment","getTagStyles","isKeyHotkey","Plain","SlateRange","Record","Prism","CompletionItemKind","all","calculateSize","renderMarkdown","createElement","Highlighter","isEqual","FixedSizeList","classnames","Editor","useAsync","CodeEditorSuggestionItemKind","monacoLanguageRegistry","locale","Subject","switchMap","of","NEVER","interval","stringToMs","tap","ReducerID","availableIconsIndex","FieldType","_b","BarGaugeValueMode","GAUGE_DEFAULT_MINIMUM","GAUGE_DEFAULT_MAXIMUM","BarGaugeDisplayMode","VizOrientation","ThresholdsMode","maxTitleHeightRatio","titleHeight","formattedValueToString","FALLBACK_COLOR","getFieldColorMode","FieldColorModeId","useClickAway","getFieldConfigWithMinMax","TableCellDisplayMode","isFunction","TableCellBackgroundDisplayMode","Geometry","WKT","EventBusSrv","Subscription","defaultPreparePlotFrame","fieldMatchers","FieldMatcherID","DataHoverEvent","throttleTime","LegacyGraphHoverEvent","DataHoverClearEvent","ArrayVector","GraphDrawStyle","preparePlotFrame","outerJoinDataFrames","AxisPlacement","ScaleDistribution","StackingMode","ensureTimeField","GraphTransform","i","uPlot","scaleKey","incrRoundDn","incrRoundUp","isBooleanUnit","splits","values","decimals","guessDecimals","roundDecimals","systemDateFormats","ScaleOrientation","GradientDirection","VisibilityMode","GraphGradientMode","lineColor","LineInterpolation","GraphTresholdsStyleMode","theme","DefaultTimeZone","merge","IndexVector","defaultConfig","compareDataFrameStructures","ScaleDirection","getFieldColorModeForField","BarAlignment","getMinMaxAndDelta","isArray","isDataFrame","getFieldDisplayName","isTimeSeriesFrame","clone","f","getDisplayProcessor","reduceField","TableCellHeight","useFilters","useAbsoluteLayout","useResizeColumns","usePagination","footerItems","noHeader","VariableSizeList","readCSV","textUtil","BigValueColorMode","BigValueGraphMode","BigValueJustifyMode","BigValueTextMode","getActiveThreshold","$","useWindowSize","fieldColorModeRegistry","getValueFromDimension","getColumnFromDimension","TooltipDisplayMode","createDimension","uniqBy","ReactUtils.renderOrCallToRender","PanelChrome","LoadingState","SeriesVisibilityChangeMode","PanelChromeComponent","color","capitalize","styleMixins.hoverColor","orderBy","stat","SeriesVisibilityChangeBehavior","LegendDisplayMode","newHiddenSeries","series","toggledSeries","ansicolor","findHighlightChunksInText","LogLevel","getParser","calculateFieldStats","calculateLogsLabelStats","calculateStats","toDataFrame","FieldCache","LogsSortOrder","field","checkLogsError","escapeUnescapedString","sortLogRows","LogsDedupStrategy","cloneDeep","convertOldAngularValueMappings","validateFieldConfig","isNumber","sortThresholds","deprecationWarning","groupBy","usePrevious","VariableOrigin","DataLinkBuiltInVars","scrollTop","index","link","FeatureState","requestAnimationFrame","captureException","faro","LABEL_WIDTH","isObject","useAsyncFn","expanded","RcDrawer","cssCore","SliderComponent","Tooltip","Slider","useForm","Controller","useSelectOptions","ComparisonOperation","Registry","locationUtil","RouterLink","useFieldArray","unEscapeStringFromRegex","escapeStringForRegex","CONFIGURED_TEXT","RESET_BUTTON_TEXT","getValueFormat","fileToModify","event","useDropzone","ErrorCode","getDefaultTimeRange","timeRange","styleMixins.getFocusStyles","cloneElement","PluginSignatureStatus","defaultFormatter","getFieldSeriesColor","useMountedState","SortOrder","DashboardCursorSync","arrayUtils","clamp","AxisColorMode","identityOverrideProcessor","startCase","standardEditorsRegistry"],"mappings":"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"}