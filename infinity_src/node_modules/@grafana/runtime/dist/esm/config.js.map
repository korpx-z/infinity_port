{"version":3,"file":"config.js","sources":["../../src/config.ts"],"sourcesContent":["import { merge } from 'lodash';\n\nimport {\n  AuthSettings,\n  BootData,\n  BuildInfo,\n  createTheme,\n  DataSourceInstanceSettings,\n  FeatureToggles,\n  GrafanaConfig,\n  GrafanaTheme,\n  GrafanaTheme2,\n  LicenseInfo,\n  MapLayerOptions,\n  OAuthSettings,\n  PanelPluginMeta,\n  systemDateFormats,\n  SystemDateFormatSettings,\n  NewThemeOptions,\n} from '@grafana/data';\n\nexport interface AzureSettings {\n  cloud?: string;\n  managedIdentityEnabled: boolean;\n  workloadIdentityEnabled: boolean;\n}\n\nexport type AppPluginConfig = {\n  id: string;\n  path: string;\n  version: string;\n  preload: boolean;\n};\n\nexport class GrafanaBootConfig implements GrafanaConfig {\n  isPublicDashboardView: boolean;\n  snapshotEnabled = true;\n  datasources: { [str: string]: DataSourceInstanceSettings } = {};\n  panels: { [key: string]: PanelPluginMeta } = {};\n  apps: Record<string, AppPluginConfig> = {};\n  auth: AuthSettings = {};\n  minRefreshInterval = '';\n  appUrl = '';\n  appSubUrl = '';\n  windowTitlePrefix = '';\n  buildInfo: BuildInfo;\n  newPanelTitle = '';\n  bootData: BootData;\n  externalUserMngLinkUrl = '';\n  externalUserMngLinkName = '';\n  externalUserMngInfo = '';\n  allowOrgCreate = false;\n  feedbackLinksEnabled = true;\n  disableLoginForm = false;\n  defaultDatasource = ''; // UID\n  alertingEnabled = false;\n  alertingErrorOrTimeout = '';\n  alertingNoDataOrNullValues = '';\n  alertingMinInterval = 1;\n  angularSupportEnabled = false;\n  authProxyEnabled = false;\n  exploreEnabled = false;\n  queryHistoryEnabled = false;\n  helpEnabled = false;\n  profileEnabled = false;\n  ldapEnabled = false;\n  jwtHeaderName = '';\n  jwtUrlLogin = false;\n  sigV4AuthEnabled = false;\n  azureAuthEnabled = false;\n  samlEnabled = false;\n  samlName = '';\n  autoAssignOrg = true;\n  verifyEmailEnabled = false;\n  oauth: OAuthSettings = {};\n  rbacEnabled = true;\n  disableUserSignUp = false;\n  loginHint = '';\n  passwordHint = '';\n  loginError = undefined;\n  viewersCanEdit = false;\n  editorsCanAdmin = false;\n  disableSanitizeHtml = false;\n  liveEnabled = true;\n  /** @deprecated Use `theme2` instead. */\n  theme: GrafanaTheme;\n  theme2: GrafanaTheme2;\n  featureToggles: FeatureToggles = {};\n  anonymousEnabled = false;\n  licenseInfo: LicenseInfo = {} as LicenseInfo;\n  rendererAvailable = false;\n  dashboardPreviews: {\n    systemRequirements: {\n      met: boolean;\n      requiredImageRendererPluginVersion: string;\n    };\n    thumbnailsExist: boolean;\n  } = { systemRequirements: { met: false, requiredImageRendererPluginVersion: '' }, thumbnailsExist: false };\n  rendererVersion = '';\n  secretsManagerPluginEnabled = false;\n  supportBundlesEnabled = false;\n  http2Enabled = false;\n  dateFormats?: SystemDateFormatSettings;\n  sentry = {\n    enabled: false,\n    dsn: '',\n    customEndpoint: '',\n    sampleRate: 1,\n  };\n  grafanaJavascriptAgent = {\n    enabled: false,\n    customEndpoint: '',\n    apiKey: '',\n    errorInstrumentalizationEnabled: true,\n    consoleInstrumentalizationEnabled: false,\n    webVitalsInstrumentalizationEnabled: false,\n  };\n  pluginCatalogURL = 'https://grafana.com/grafana/plugins/';\n  pluginAdminEnabled = true;\n  pluginAdminExternalManageEnabled = false;\n  pluginCatalogHiddenPlugins: string[] = [];\n  pluginsCDNBaseURL = '';\n  expressionsEnabled = false;\n  customTheme?: undefined;\n  awsAllowedAuthProviders: string[] = [];\n  awsAssumeRoleEnabled = false;\n  azure: AzureSettings = {\n    managedIdentityEnabled: false,\n    workloadIdentityEnabled: false,\n  };\n  caching = {\n    enabled: false,\n  };\n  geomapDefaultBaseLayerConfig?: MapLayerOptions;\n  geomapDisableCustomBaseLayer?: boolean;\n  unifiedAlertingEnabled = false;\n  unifiedAlerting = { minInterval: '' };\n  applicationInsightsConnectionString?: string;\n  applicationInsightsEndpointUrl?: string;\n  recordedQueries = {\n    enabled: true,\n  };\n  featureHighlights = {\n    enabled: false,\n  };\n  reporting = {\n    enabled: true,\n  };\n  googleAnalyticsId: undefined;\n  googleAnalytics4Id: undefined;\n  googleAnalytics4SendManualPageViews = false;\n  rudderstackWriteKey: undefined;\n  rudderstackDataPlaneUrl: undefined;\n  rudderstackSdkUrl: undefined;\n  rudderstackConfigUrl: undefined;\n  sqlConnectionLimits = {\n    maxOpenConns: 100,\n    maxIdleConns: 100,\n    connMaxLifetime: 14400,\n  };\n\n  tokenExpirationDayLimit: undefined;\n\n  constructor(options: GrafanaBootConfig) {\n    this.bootData = options.bootData;\n    this.bootData.user.lightTheme = getThemeMode(options) === 'light';\n    this.isPublicDashboardView = options.bootData.settings.isPublicDashboardView;\n\n    const defaults = {\n      datasources: {},\n      windowTitlePrefix: 'Grafana - ',\n      panels: {},\n      newPanelTitle: 'Panel Title',\n      playlist_timespan: '1m',\n      unsaved_changes_warning: true,\n      appUrl: '',\n      appSubUrl: '',\n      buildInfo: {\n        version: '1.0',\n        commit: '1',\n        env: 'production',\n      },\n      viewersCanEdit: false,\n      editorsCanAdmin: false,\n      disableSanitizeHtml: false,\n    };\n\n    merge(this, defaults, options);\n\n    this.buildInfo = options.buildInfo || defaults.buildInfo;\n\n    if (this.dateFormats) {\n      systemDateFormats.update(this.dateFormats);\n    }\n\n    overrideFeatureTogglesFromUrl(this);\n\n    if (this.featureToggles.disableAngular) {\n      this.angularSupportEnabled = false;\n    }\n\n    // Creating theme after applying feature toggle overrides in case we need to toggle anything\n    this.theme2 = createTheme(getThemeCustomizations(this));\n\n    this.theme = this.theme2.v1;\n    // Special feature toggle that impact theme/component looks\n    this.theme2.flags.topnav = this.featureToggles.topnav;\n  }\n}\n\nfunction getThemeMode(config: GrafanaBootConfig) {\n  let mode: 'light' | 'dark' = 'dark';\n  const themePref = config.bootData.user.theme;\n\n  if (themePref === 'light' || themePref === 'dark') {\n    mode = themePref;\n  } else if (themePref === 'system') {\n    const mediaResult = window.matchMedia('(prefers-color-scheme: dark)');\n    mode = mediaResult.matches ? 'dark' : 'light';\n  }\n\n  return mode;\n}\n\nfunction getThemeCustomizations(config: GrafanaBootConfig) {\n  // if/when we remove CurrentUserDTO.lightTheme, change this to use getThemeMode instead\n  const mode = config.bootData.user.lightTheme ? 'light' : 'dark';\n\n  const themeOptions: NewThemeOptions = {\n    colors: { mode },\n  };\n\n  return themeOptions;\n}\n\nfunction overrideFeatureTogglesFromUrl(config: GrafanaBootConfig) {\n  if (window.location.href.indexOf('__feature') === -1) {\n    return;\n  }\n\n  const params = new URLSearchParams(window.location.search);\n  params.forEach((value, key) => {\n    if (key.startsWith('__feature.')) {\n      const featureToggles = config.featureToggles as Record<string, boolean>;\n      const featureName = key.substring(10);\n      const toggleState = value === 'true';\n      if (toggleState !== featureToggles[key]) {\n        featureToggles[featureName] = toggleState;\n        console.log(`Setting feature toggle ${featureName} = ${toggleState}`);\n      }\n    }\n  });\n}\n\nconst bootData = (window as any).grafanaBootData || {\n  settings: {},\n  user: {},\n  navTree: [],\n};\n\nconst options = bootData.settings;\noptions.bootData = bootData;\n\n/**\n * Use this to access the {@link GrafanaBootConfig} for the current running Grafana instance.\n *\n * @public\n */\nexport const config = new GrafanaBootConfig(options);\n"],"names":["options","config"],"mappings":"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"}