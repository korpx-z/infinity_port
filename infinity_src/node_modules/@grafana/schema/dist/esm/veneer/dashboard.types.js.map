{"version":3,"file":"dashboard.types.js","sources":["../../../src/veneer/dashboard.types.ts"],"sourcesContent":["import { DataSourceRef as CommonDataSourceRef } from '../common/common.gen';\nimport * as raw from '../raw/dashboard/x/dashboard_types.gen';\n\nexport type { CommonDataSourceRef as DataSourceRef };\n\nexport interface Panel<TOptions = Record<string, unknown>, TCustomFieldConfig = Record<string, unknown>>\n  extends raw.Panel {\n  fieldConfig: FieldConfigSource<TCustomFieldConfig>;\n}\n\nexport enum VariableHide {\n  dontHide,\n  hideLabel,\n  hideVariable,\n}\n\nexport interface VariableModel\n  extends Omit<raw.VariableModel, 'rootStateKey' | 'error' | 'description' | 'hide' | 'datasource'> {\n  // Overrides nullable properties because CUE doesn't support null values\n  // TODO remove explicit nulls\n  rootStateKey: string | null;\n  // TODO remove explicit nulls\n  error: any | null;\n  // TODO remove explicit nulls\n  description: string | null;\n  hide: VariableHide;\n  // TODO remove explicit nulls\n  datasource: CommonDataSourceRef | null;\n}\n\nexport interface Dashboard extends Omit<raw.Dashboard, 'templating'> {\n  panels?: Array<Panel | raw.RowPanel | raw.GraphPanel | raw.HeatmapPanel>;\n  templating?: {\n    list?: VariableModel[];\n  };\n}\n\nexport interface FieldConfig<TOptions = Record<string, unknown>> extends raw.FieldConfig {\n  custom?: TOptions & Record<string, unknown>;\n}\n\nexport interface FieldConfigSource<TOptions = Record<string, unknown>> extends raw.FieldConfigSource {\n  defaults: FieldConfig<TOptions>;\n}\n\nexport interface MatcherConfig<TConfig = any> extends raw.MatcherConfig {\n  options?: TConfig;\n}\n\nexport interface DataTransformerConfig<TOptions = any> extends raw.DataTransformerConfig {\n  options: TOptions;\n}\n\nexport const defaultDashboard = raw.defaultDashboard as Dashboard;\nexport const defaultVariableModel = {\n  ...raw.defaultVariableModel,\n  // TODO remove explicit nulls\n  rootStateKey: null,\n  // TODO remove explicit nulls\n  error: null,\n  // TODO remove explicit nulls\n  description: null,\n  hide: VariableHide.dontHide,\n  state: raw.LoadingState.NotStarted,\n  // TODO remove explicit nulls\n  datasource: null,\n} as VariableModel;\nexport const defaultPanel: Partial<Panel> = raw.defaultPanel;\nexport const defaultFieldConfig: Partial<FieldConfig> = raw.defaultFieldConfig;\nexport const defaultFieldConfigSource: Partial<FieldConfigSource> = raw.defaultFieldConfigSource;\nexport const defaultMatcherConfig: Partial<MatcherConfig> = raw.defaultMatcherConfig;\n"],"names":["VariableHide","raw.defaultDashboard","raw.defaultVariableModel","raw.LoadingState","raw.defaultPanel","raw.defaultFieldConfig","raw.defaultFieldConfigSource","raw.defaultMatcherConfig"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAUY,IAAA,YAAA,qBAAAA,aAAL,KAAA;AACL,EAAAA,aAAA,CAAA,aAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA,GAAA,UAAA,CAAA;AACA,EAAAA,aAAA,CAAA,aAAA,CAAA,WAAA,CAAA,GAAA,CAAA,CAAA,GAAA,WAAA,CAAA;AACA,EAAAA,aAAA,CAAA,aAAA,CAAA,cAAA,CAAA,GAAA,CAAA,CAAA,GAAA,cAAA,CAAA;AAHU,EAAAA,OAAAA,aAAAA,CAAAA;AAAA,CAAA,EAAA,YAAA,IAAA,EAAA,EAAA;AA2CL,MAAM,mBAAmBC,mBAAI;AACvB,MAAA,oBAAA,GAAuB,aAC/B,CAAA,cAAA,CAAA,EAAA,EAAAC,sBAD+B,CAAA,EAAA;AAAA;AAAA,EAGlC,YAAc,EAAA,IAAA;AAAA;AAAA,EAEd,KAAO,EAAA,IAAA;AAAA;AAAA,EAEP,WAAa,EAAA,IAAA;AAAA,EACb,IAAM,EAAA,CAAA;AAAA,EACN,KAAA,EAAOC,YAAiB,CAAA,UAAA;AAAA;AAAA,EAExB,UAAY,EAAA,IAAA;AACd,CAAA,EAAA;AACO,MAAM,eAA+BC,eAAI;AACzC,MAAM,qBAA2CC,qBAAI;AACrD,MAAM,2BAAuDC,2BAAI;AACjE,MAAM,uBAA+CC;;;;"}