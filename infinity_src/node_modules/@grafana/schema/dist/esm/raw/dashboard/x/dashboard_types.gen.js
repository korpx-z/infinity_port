const defaultAnnotationTarget = {
  tags: []
};
const defaultAnnotationQuery = {
  builtIn: 0,
  enable: true,
  hide: false,
  showIn: 0,
  type: "dashboard"
};
const defaultVariableModel = {
  global: false,
  id: "00000000-0000-0000-0000-000000000000",
  index: -1,
  skipUrlSync: false
};
var LoadingState = /* @__PURE__ */ ((LoadingState2) => {
  LoadingState2["Done"] = "Done";
  LoadingState2["Error"] = "Error";
  LoadingState2["Loading"] = "Loading";
  LoadingState2["NotStarted"] = "NotStarted";
  LoadingState2["Streaming"] = "Streaming";
  return LoadingState2;
})(LoadingState || {});
const defaultDashboardLink = {
  asDropdown: false,
  includeVars: false,
  keepTime: false,
  tags: [],
  targetBlank: false
};
var FieldColorModeId = /* @__PURE__ */ ((FieldColorModeId2) => {
  FieldColorModeId2["ContinuousGrYlRd"] = "continuous-GrYlRd";
  FieldColorModeId2["Fixed"] = "fixed";
  FieldColorModeId2["PaletteClassic"] = "palette-classic";
  FieldColorModeId2["PaletteSaturated"] = "palette-saturated";
  FieldColorModeId2["Thresholds"] = "thresholds";
  return FieldColorModeId2;
})(FieldColorModeId || {});
const defaultGridPos = {
  h: 9,
  w: 12,
  x: 0,
  y: 0
};
var ThresholdsMode = /* @__PURE__ */ ((ThresholdsMode2) => {
  ThresholdsMode2["Absolute"] = "absolute";
  ThresholdsMode2["Percentage"] = "percentage";
  return ThresholdsMode2;
})(ThresholdsMode || {});
const defaultThresholdsConfig = {
  steps: []
};
var MappingType = /* @__PURE__ */ ((MappingType2) => {
  MappingType2["RangeToText"] = "range";
  MappingType2["RegexToText"] = "regex";
  MappingType2["SpecialValue"] = "special";
  MappingType2["ValueToText"] = "value";
  return MappingType2;
})(MappingType || {});
var SpecialValueMatch = /* @__PURE__ */ ((SpecialValueMatch2) => {
  SpecialValueMatch2["Empty"] = "empty";
  SpecialValueMatch2["False"] = "false";
  SpecialValueMatch2["NaN"] = "nan";
  SpecialValueMatch2["Null"] = "null";
  SpecialValueMatch2["NullAndNan"] = "null+nan";
  SpecialValueMatch2["True"] = "true";
  return SpecialValueMatch2;
})(SpecialValueMatch || {});
var DashboardCursorSync = /* @__PURE__ */ ((DashboardCursorSync2) => {
  DashboardCursorSync2[DashboardCursorSync2["Crosshair"] = 1] = "Crosshair";
  DashboardCursorSync2[DashboardCursorSync2["Off"] = 0] = "Off";
  DashboardCursorSync2[DashboardCursorSync2["Tooltip"] = 2] = "Tooltip";
  return DashboardCursorSync2;
})(DashboardCursorSync || {});
const defaultDashboardCursorSync = 0 /* Off */;
const defaultPanel = {
  links: [],
  repeatDirection: "h",
  tags: [],
  targets: [],
  thresholds: [],
  timeRegions: [],
  transformations: [],
  transparent: false
};
const defaultFieldConfigSource = {
  overrides: []
};
const defaultMatcherConfig = {
  id: ""
};
const defaultFieldConfig = {
  links: [],
  mappings: []
};
const defaultRowPanel = {
  collapsed: false,
  panels: []
};
const defaultDashboard = {
  editable: true,
  fiscalYearStartMonth: 0,
  graphTooltip: 0 /* Off */,
  links: [],
  panels: [],
  schemaVersion: 36,
  style: "dark",
  tags: [],
  timezone: "browser"
};

export { DashboardCursorSync, FieldColorModeId, LoadingState, MappingType, SpecialValueMatch, ThresholdsMode, defaultAnnotationQuery, defaultAnnotationTarget, defaultDashboard, defaultDashboardCursorSync, defaultDashboardLink, defaultFieldConfig, defaultFieldConfigSource, defaultGridPos, defaultMatcherConfig, defaultPanel, defaultRowPanel, defaultThresholdsConfig, defaultVariableModel };
//# sourceMappingURL=dashboard_types.gen.js.map
