{"version":3,"file":"app.js","sources":["../../../src/types/app.ts"],"sourcesContent":["import { ComponentType } from 'react';\n\nimport { KeyValue } from './data';\nimport { NavModel } from './navModel';\nimport { PluginMeta, GrafanaPlugin, PluginIncludeType } from './plugin';\nimport { type PluginExtensionLinkConfig, PluginExtensionTypes } from './pluginExtensions';\n\n/**\n * @public\n * The app container that is loading another plugin (panel or query editor)\n * */\nexport enum CoreApp {\n  CloudAlerting = 'cloud-alerting',\n  UnifiedAlerting = 'unified-alerting',\n  Dashboard = 'dashboard',\n  Explore = 'explore',\n  Correlations = 'correlations',\n  Unknown = 'unknown',\n  PanelEditor = 'panel-editor',\n  PanelViewer = 'panel-viewer',\n}\n\nexport interface AppRootProps<T extends KeyValue = KeyValue> {\n  meta: AppPluginMeta<T>;\n  /**\n   * base URL segment for an app, /app/pluginId\n   */\n  basename: string; // The URL path to this page\n\n  /**\n   * Pass the nav model to the container... is there a better way?\n   * @deprecated Use PluginPage component exported from @grafana/runtime instead\n   */\n  onNavChanged: (nav: NavModel) => void;\n\n  /**\n   * The URL query parameters\n   * @deprecated Use react-router instead\n   */\n  query: KeyValue;\n\n  /**\n   * The URL path to this page\n   * @deprecated Use react-router instead\n   */\n  path: string;\n}\n\nexport interface AppPluginMeta<T extends KeyValue = KeyValue> extends PluginMeta<T> {\n  // TODO anything specific to apps?\n}\n\nexport class AppPlugin<T extends KeyValue = KeyValue> extends GrafanaPlugin<AppPluginMeta<T>> {\n  private _extensionConfigs: PluginExtensionLinkConfig[] = [];\n\n  // Content under: /a/${plugin-id}/*\n  root?: ComponentType<AppRootProps<T>>;\n\n  /**\n   * Called after the module has loaded, and before the app is used.\n   * This function may be called multiple times on the same instance.\n   * The first time, `this.meta` will be undefined\n   */\n  init(meta: AppPluginMeta<T>) {}\n\n  /**\n   * Set the component displayed under:\n   *   /a/${plugin-id}/*\n   *\n   * If the NavModel is configured, the page will have a managed frame, otheriwse it has full control.\n   */\n  setRootPage(root: ComponentType<AppRootProps<T>>) {\n    this.root = root;\n    return this;\n  }\n\n  setComponentsFromLegacyExports(pluginExports: any) {\n    if (pluginExports.ConfigCtrl) {\n      this.angularConfigCtrl = pluginExports.ConfigCtrl;\n    }\n\n    if (this.meta && this.meta.includes) {\n      for (const include of this.meta.includes) {\n        if (include.type === PluginIncludeType.page && include.component) {\n          const exp = pluginExports[include.component];\n\n          if (!exp) {\n            console.warn('App Page uses unknown component: ', include.component, this.meta);\n            continue;\n          }\n        }\n      }\n    }\n  }\n\n  get extensionConfigs() {\n    return this._extensionConfigs;\n  }\n\n  configureExtensionLink<Context extends object>(extension: Omit<PluginExtensionLinkConfig<Context>, 'type'>) {\n    this._extensionConfigs.push({\n      ...extension,\n      type: PluginExtensionTypes.link,\n    } as PluginExtensionLinkConfig);\n\n    return this;\n  }\n}\n\n/**\n * Defines life cycle of a feature\n * @internal\n */\nexport enum FeatureState {\n  alpha = 'alpha',\n  beta = 'beta',\n}\n"],"names":["CoreApp","FeatureState"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAWY,IAAA,OAAA,qBAAAA,QAAL,KAAA;AACL,EAAAA,SAAA,eAAgB,CAAA,GAAA,gBAAA,CAAA;AAChB,EAAAA,SAAA,iBAAkB,CAAA,GAAA,kBAAA,CAAA;AAClB,EAAAA,SAAA,WAAY,CAAA,GAAA,WAAA,CAAA;AACZ,EAAAA,SAAA,SAAU,CAAA,GAAA,SAAA,CAAA;AACV,EAAAA,SAAA,cAAe,CAAA,GAAA,cAAA,CAAA;AACf,EAAAA,SAAA,SAAU,CAAA,GAAA,SAAA,CAAA;AACV,EAAAA,SAAA,aAAc,CAAA,GAAA,cAAA,CAAA;AACd,EAAAA,SAAA,aAAc,CAAA,GAAA,cAAA,CAAA;AARJ,EAAAA,OAAAA,QAAAA,CAAAA;AAAA,CAAA,EAAA,OAAA,IAAA,EAAA,EAAA;AAyCL,MAAM,kBAAiD,aAAgC,CAAA;AAAA,EAAvF,WAAA,GAAA;AAAA,IAAA,KAAA,CAAA,GAAA,SAAA,CAAA,CAAA;AACL,IAAA,IAAA,CAAQ,oBAAiD,EAAC,CAAA;AAAA,GAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAU1D,KAAK,IAAwB,EAAA;AAAA,GAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQ9B,YAAY,IAAsC,EAAA;AAChD,IAAA,IAAA,CAAK,IAAO,GAAA,IAAA,CAAA;AACZ,IAAO,OAAA,IAAA,CAAA;AAAA,GACT;AAAA,EAEA,+BAA+B,aAAoB,EAAA;AACjD,IAAA,IAAI,cAAc,UAAY,EAAA;AAC5B,MAAA,IAAA,CAAK,oBAAoB,aAAc,CAAA,UAAA,CAAA;AAAA,KACzC;AAEA,IAAA,IAAI,IAAK,CAAA,IAAA,IAAQ,IAAK,CAAA,IAAA,CAAK,QAAU,EAAA;AACnC,MAAW,KAAA,MAAA,OAAA,IAAW,IAAK,CAAA,IAAA,CAAK,QAAU,EAAA;AACxC,QAAA,IAAI,OAAQ,CAAA,IAAA,KAAS,iBAAkB,CAAA,IAAA,IAAQ,QAAQ,SAAW,EAAA;AAChE,UAAM,MAAA,GAAA,GAAM,aAAc,CAAA,OAAA,CAAQ,SAAS,CAAA,CAAA;AAE3C,UAAA,IAAI,CAAC,GAAK,EAAA;AACR,YAAA,OAAA,CAAQ,IAAK,CAAA,mCAAA,EAAqC,OAAQ,CAAA,SAAA,EAAW,KAAK,IAAI,CAAA,CAAA;AAC9E,YAAA,SAAA;AAAA,WACF;AAAA,SACF;AAAA,OACF;AAAA,KACF;AAAA,GACF;AAAA,EAEA,IAAI,gBAAmB,GAAA;AACrB,IAAA,OAAO,IAAK,CAAA,iBAAA,CAAA;AAAA,GACd;AAAA,EAEA,uBAA+C,SAA6D,EAAA;AAC1G,IAAK,IAAA,CAAA,iBAAA,CAAkB,IAAK,CAAA,aAAA,CAAA,cAAA,CAAA,EAAA,EACvB,SADuB,CAAA,EAAA;AAAA,MAE1B,MAAM,oBAAqB,CAAA,IAAA;AAAA,KACC,CAAA,CAAA,CAAA;AAE9B,IAAO,OAAA,IAAA,CAAA;AAAA,GACT;AACF,CAAA;AAMY,IAAA,YAAA,qBAAAC,aAAL,KAAA;AACL,EAAAA,cAAA,OAAQ,CAAA,GAAA,OAAA,CAAA;AACR,EAAAA,cAAA,MAAO,CAAA,GAAA,MAAA,CAAA;AAFG,EAAAA,OAAAA,aAAAA,CAAAA;AAAA,CAAA,EAAA,YAAA,IAAA,EAAA;;;;"}