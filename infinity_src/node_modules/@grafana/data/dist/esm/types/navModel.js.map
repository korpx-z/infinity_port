{"version":3,"file":"navModel.js","sources":["../../../src/types/navModel.ts"],"sourcesContent":["import { ComponentType } from 'react';\n\nimport { LinkTarget } from './dataLink';\nimport { IconName } from './icon';\n\nexport interface NavLinkDTO {\n  id?: string;\n  text: string;\n  description?: string;\n  section?: NavSection;\n  subTitle?: string;\n  icon?: IconName;\n  img?: string;\n  url?: string;\n  target?: LinkTarget;\n  sortWeight?: number;\n  divider?: boolean;\n  hideFromMenu?: boolean;\n  hideFromTabs?: boolean;\n  showIconInNavbar?: boolean;\n  roundIcon?: boolean;\n  /**\n   * This is true for some sections that have no children (but is still a section)\n   **/\n  isSection?: boolean;\n  children?: NavLinkDTO[];\n  highlightText?: string;\n  emptyMessageId?: string;\n  // The ID of the plugin that registered the page (in case it was registered by a plugin, otherwise left empty)\n  pluginId?: string;\n  // Whether the page is used to create a new resource. We may place these in a different position in the UI.\n  isCreateAction?: boolean;\n}\n\nexport interface NavModelItem extends NavLinkDTO {\n  children?: NavModelItem[];\n  active?: boolean;\n  breadcrumbs?: NavModelBreadcrumb[];\n  parentItem?: NavModelItem;\n  showOrgSwitcher?: boolean;\n  onClick?: () => void;\n  menuItemType?: NavMenuItemType;\n  highlightText?: string;\n  highlightId?: string;\n  tabSuffix?: ComponentType<{ className?: string }>;\n  hideFromBreadcrumbs?: boolean;\n  emptyMessage?: string;\n}\n\nexport enum NavSection {\n  Core = 'core',\n  Plugin = 'plugin',\n  Config = 'config',\n}\n\nexport enum NavMenuItemType {\n  Section = 'section',\n  Item = 'item',\n}\n\n/**\n *  Interface used to describe  different kinds of page titles and page navigation. Navmodels are usually generated in the backend and stored in Redux.\n */\nexport interface NavModel {\n  /**\n   *  Main page. that wraps the navigation. Generate the `children` property generate tabs when used with the Page component.\n   */\n  main: NavModelItem;\n  /**\n   *   This is the current active tab/navigation.\n   */\n  node: NavModelItem;\n}\n\nexport interface NavModelBreadcrumb {\n  title: string;\n  url?: string;\n}\n\nexport type NavIndex = { [s: string]: NavModelItem };\n\nexport enum PageLayoutType {\n  Standard,\n  Canvas,\n  Custom,\n}\n"],"names":["NavSection","NavMenuItemType","PageLayoutType"],"mappings":"AAiDY,IAAA,UAAA,qBAAAA,WAAL,KAAA;AACL,EAAAA,YAAA,MAAO,CAAA,GAAA,MAAA,CAAA;AACP,EAAAA,YAAA,QAAS,CAAA,GAAA,QAAA,CAAA;AACT,EAAAA,YAAA,QAAS,CAAA,GAAA,QAAA,CAAA;AAHC,EAAAA,OAAAA,WAAAA,CAAAA;AAAA,CAAA,EAAA,UAAA,IAAA,EAAA,EAAA;AAMA,IAAA,eAAA,qBAAAC,gBAAL,KAAA;AACL,EAAAA,iBAAA,SAAU,CAAA,GAAA,SAAA,CAAA;AACV,EAAAA,iBAAA,MAAO,CAAA,GAAA,MAAA,CAAA;AAFG,EAAAA,OAAAA,gBAAAA,CAAAA;AAAA,CAAA,EAAA,eAAA,IAAA,EAAA,EAAA;AA0BA,IAAA,cAAA,qBAAAC,eAAL,KAAA;AACL,EAAAA,eAAA,CAAA,eAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA,GAAA,UAAA,CAAA;AACA,EAAAA,eAAA,CAAA,eAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAA,CAAA;AACA,EAAAA,eAAA,CAAA,eAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAA,CAAA;AAHU,EAAAA,OAAAA,eAAAA,CAAAA;AAAA,CAAA,EAAA,cAAA,IAAA,EAAA;;;;"}