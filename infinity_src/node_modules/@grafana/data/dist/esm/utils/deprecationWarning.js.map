{"version":3,"file":"deprecationWarning.js","sources":["../../../src/utils/deprecationWarning.ts"],"sourcesContent":["import { KeyValue } from '../types';\n\n// Avoid writing the warning message more than once every 10s\nconst history: KeyValue<number> = {};\n\nexport const deprecationWarning = (file: string, oldName: string, newName?: string) => {\n  let message = `[Deprecation warning] ${file}: ${oldName} is deprecated`;\n  if (newName) {\n    message += `. Use ${newName} instead`;\n  }\n  const now = Date.now();\n  const last = history[message];\n  if (!last || now - last > 10000) {\n    console.warn(message);\n    history[message] = now;\n  }\n};\n"],"names":[],"mappings":"AAGA,MAAM,UAA4B,EAAC,CAAA;AAE5B,MAAM,kBAAqB,GAAA,CAAC,IAAc,EAAA,OAAA,EAAiB,OAAqB,KAAA;AACrF,EAAI,IAAA,OAAA,GAAU,yBAAyB,IAAS,CAAA,EAAA,EAAA,OAAA,CAAA,cAAA,CAAA,CAAA;AAChD,EAAA,IAAI,OAAS,EAAA;AACX,IAAA,OAAA,IAAW,CAAS,MAAA,EAAA,OAAA,CAAA,QAAA,CAAA,CAAA;AAAA,GACtB;AACA,EAAM,MAAA,GAAA,GAAM,KAAK,GAAI,EAAA,CAAA;AACrB,EAAM,MAAA,IAAA,GAAO,QAAQ,OAAO,CAAA,CAAA;AAC5B,EAAA,IAAI,CAAC,IAAA,IAAQ,GAAM,GAAA,IAAA,GAAO,GAAO,EAAA;AAC/B,IAAA,OAAA,CAAQ,KAAK,OAAO,CAAA,CAAA;AACpB,IAAA,OAAA,CAAQ,OAAO,CAAI,GAAA,GAAA,CAAA;AAAA,GACrB;AACF;;;;"}