{"version":3,"file":"FunctionalVector.js","sources":["../../../src/vector/FunctionalVector.ts"],"sourcesContent":["import { Vector } from '../types';\n\nimport { vectorToArray } from './vectorToArray';\n\n/** @public */\nexport abstract class FunctionalVector<T = any> implements Vector<T>, Iterable<T> {\n  abstract get length(): number;\n\n  abstract get(index: number): T;\n\n  // Implement \"iterator protocol\"\n  *iterator() {\n    for (let i = 0; i < this.length; i++) {\n      yield this.get(i);\n    }\n  }\n\n  // Implement \"iterable protocol\"\n  [Symbol.iterator]() {\n    return this.iterator();\n  }\n\n  forEach(iterator: (row: T) => void) {\n    return vectorator(this).forEach(iterator);\n  }\n\n  map<V>(transform: (item: T, index: number) => V) {\n    return vectorator(this).map(transform);\n  }\n\n  filter(predicate: (item: T) => boolean): T[] {\n    return vectorator(this).filter(predicate);\n  }\n\n  toArray(): T[] {\n    return vectorToArray(this);\n  }\n\n  toJSON(): any {\n    return this.toArray();\n  }\n}\n\n/**\n * Use functional programming with your vector\n */\nexport function vectorator<T>(vector: Vector<T>) {\n  return {\n    *[Symbol.iterator]() {\n      for (let i = 0; i < vector.length; i++) {\n        yield vector.get(i);\n      }\n    },\n\n    forEach(iterator: (row: T) => void) {\n      for (let i = 0; i < vector.length; i++) {\n        iterator(vector.get(i));\n      }\n    },\n\n    map<V>(transform: (item: T, index: number) => V) {\n      const result: V[] = [];\n      for (let i = 0; i < vector.length; i++) {\n        result.push(transform(vector.get(i), i));\n      }\n      return result;\n    },\n\n    /** Add a predicate where you return true if it should *keep* the value */\n    filter(predicate: (item: T) => boolean): T[] {\n      const result: T[] = [];\n      for (const val of this) {\n        if (predicate(val)) {\n          result.push(val);\n        }\n      }\n      return result;\n    },\n  };\n}\n"],"names":[],"mappings":";;AAKO,MAAe,gBAA4D,CAAA;AAAA;AAAA,EAMhF,CAAC,QAAW,GAAA;AACV,IAAA,KAAA,IAAS,CAAI,GAAA,CAAA,EAAG,CAAI,GAAA,IAAA,CAAK,QAAQ,CAAK,EAAA,EAAA;AACpC,MAAM,MAAA,IAAA,CAAK,IAAI,CAAC,CAAA,CAAA;AAAA,KAClB;AAAA,GACF;AAAA;AAAA,EAGA,CAAC,MAAO,CAAA,QAAQ,CAAI,GAAA;AAClB,IAAA,OAAO,KAAK,QAAS,EAAA,CAAA;AAAA,GACvB;AAAA,EAEA,QAAQ,QAA4B,EAAA;AAClC,IAAA,OAAO,UAAW,CAAA,IAAI,CAAE,CAAA,OAAA,CAAQ,QAAQ,CAAA,CAAA;AAAA,GAC1C;AAAA,EAEA,IAAO,SAA0C,EAAA;AAC/C,IAAA,OAAO,UAAW,CAAA,IAAI,CAAE,CAAA,GAAA,CAAI,SAAS,CAAA,CAAA;AAAA,GACvC;AAAA,EAEA,OAAO,SAAsC,EAAA;AAC3C,IAAA,OAAO,UAAW,CAAA,IAAI,CAAE,CAAA,MAAA,CAAO,SAAS,CAAA,CAAA;AAAA,GAC1C;AAAA,EAEA,OAAe,GAAA;AACb,IAAA,OAAO,cAAc,IAAI,CAAA,CAAA;AAAA,GAC3B;AAAA,EAEA,MAAc,GAAA;AACZ,IAAA,OAAO,KAAK,OAAQ,EAAA,CAAA;AAAA,GACtB;AACF,CAAA;AAKO,SAAS,WAAc,MAAmB,EAAA;AAC/C,EAAO,OAAA;AAAA,IACL,EAAE,MAAO,CAAA,QAAQ,CAAI,GAAA;AACnB,MAAA,KAAA,IAAS,CAAI,GAAA,CAAA,EAAG,CAAI,GAAA,MAAA,CAAO,QAAQ,CAAK,EAAA,EAAA;AACtC,QAAM,MAAA,MAAA,CAAO,IAAI,CAAC,CAAA,CAAA;AAAA,OACpB;AAAA,KACF;AAAA,IAEA,QAAQ,QAA4B,EAAA;AAClC,MAAA,KAAA,IAAS,CAAI,GAAA,CAAA,EAAG,CAAI,GAAA,MAAA,CAAO,QAAQ,CAAK,EAAA,EAAA;AACtC,QAAS,QAAA,CAAA,MAAA,CAAO,GAAI,CAAA,CAAC,CAAC,CAAA,CAAA;AAAA,OACxB;AAAA,KACF;AAAA,IAEA,IAAO,SAA0C,EAAA;AAC/C,MAAA,MAAM,SAAc,EAAC,CAAA;AACrB,MAAA,KAAA,IAAS,CAAI,GAAA,CAAA,EAAG,CAAI,GAAA,MAAA,CAAO,QAAQ,CAAK,EAAA,EAAA;AACtC,QAAA,MAAA,CAAO,KAAK,SAAU,CAAA,MAAA,CAAO,IAAI,CAAC,CAAA,EAAG,CAAC,CAAC,CAAA,CAAA;AAAA,OACzC;AACA,MAAO,OAAA,MAAA,CAAA;AAAA,KACT;AAAA;AAAA,IAGA,OAAO,SAAsC,EAAA;AAC3C,MAAA,MAAM,SAAc,EAAC,CAAA;AACrB,MAAA,KAAA,MAAW,OAAO,IAAM,EAAA;AACtB,QAAI,IAAA,SAAA,CAAU,GAAG,CAAG,EAAA;AAClB,UAAA,MAAA,CAAO,KAAK,GAAG,CAAA,CAAA;AAAA,SACjB;AAAA,OACF;AACA,MAAO,OAAA,MAAA,CAAA;AAAA,KACT;AAAA,GACF,CAAA;AACF;;;;"}