{"version":3,"file":"BinaryOperationVector.js","sources":["../../../src/vector/BinaryOperationVector.ts"],"sourcesContent":["import { Vector } from '../types/vector';\nimport { BinaryOperation } from '../utils/binaryOperators';\n\nimport { vectorToArray } from './vectorToArray';\n\n/**\n * @public\n */\nexport class BinaryOperationVector implements Vector<number> {\n  constructor(private left: Vector<number>, private right: Vector<number>, private operation: BinaryOperation) {}\n\n  get length(): number {\n    return this.left.length;\n  }\n\n  get(index: number): number {\n    return this.operation(this.left.get(index), this.right.get(index));\n  }\n\n  toArray(): number[] {\n    return vectorToArray(this);\n  }\n\n  toJSON(): number[] {\n    return vectorToArray(this);\n  }\n}\n"],"names":[],"mappings":";;AAQO,MAAM,qBAAgD,CAAA;AAAA,EAC3D,WAAA,CAAoB,IAA8B,EAAA,KAAA,EAA+B,SAA4B,EAAA;AAAzF,IAAA,IAAA,CAAA,IAAA,GAAA,IAAA,CAAA;AAA8B,IAAA,IAAA,CAAA,KAAA,GAAA,KAAA,CAAA;AAA+B,IAAA,IAAA,CAAA,SAAA,GAAA,SAAA,CAAA;AAAA,GAA6B;AAAA,EAE9G,IAAI,MAAiB,GAAA;AACnB,IAAA,OAAO,KAAK,IAAK,CAAA,MAAA,CAAA;AAAA,GACnB;AAAA,EAEA,IAAI,KAAuB,EAAA;AACzB,IAAO,OAAA,IAAA,CAAK,SAAU,CAAA,IAAA,CAAK,IAAK,CAAA,GAAA,CAAI,KAAK,CAAA,EAAG,IAAK,CAAA,KAAA,CAAM,GAAI,CAAA,KAAK,CAAC,CAAA,CAAA;AAAA,GACnE;AAAA,EAEA,OAAoB,GAAA;AAClB,IAAA,OAAO,cAAc,IAAI,CAAA,CAAA;AAAA,GAC3B;AAAA,EAEA,MAAmB,GAAA;AACjB,IAAA,OAAO,cAAc,IAAI,CAAA,CAAA;AAAA,GAC3B;AACF;;;;"}