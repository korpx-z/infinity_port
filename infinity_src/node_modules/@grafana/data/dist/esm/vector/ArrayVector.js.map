{"version":3,"file":"ArrayVector.js","sources":["../../../src/vector/ArrayVector.ts"],"sourcesContent":["import { MutableVector } from '../types/vector';\n\nimport { FunctionalVector } from './FunctionalVector';\n\n/**\n * @public\n */\nexport class ArrayVector<T = any> extends FunctionalVector<T> implements MutableVector<T> {\n  buffer: T[];\n\n  constructor(buffer?: T[]) {\n    super();\n    this.buffer = buffer ? buffer : [];\n  }\n\n  get length() {\n    return this.buffer.length;\n  }\n\n  add(value: T) {\n    this.buffer.push(value);\n  }\n\n  get(index: number): T {\n    return this.buffer[index];\n  }\n\n  set(index: number, value: T) {\n    this.buffer[index] = value;\n  }\n\n  reverse() {\n    this.buffer.reverse();\n  }\n\n  toArray(): T[] {\n    return this.buffer;\n  }\n\n  toJSON(): T[] {\n    return this.buffer;\n  }\n}\n"],"names":[],"mappings":";;AAOO,MAAM,oBAA6B,gBAAgD,CAAA;AAAA,EAGxF,YAAY,MAAc,EAAA;AACxB,IAAM,KAAA,EAAA,CAAA;AACN,IAAK,IAAA,CAAA,MAAA,GAAS,MAAS,GAAA,MAAA,GAAS,EAAC,CAAA;AAAA,GACnC;AAAA,EAEA,IAAI,MAAS,GAAA;AACX,IAAA,OAAO,KAAK,MAAO,CAAA,MAAA,CAAA;AAAA,GACrB;AAAA,EAEA,IAAI,KAAU,EAAA;AACZ,IAAK,IAAA,CAAA,MAAA,CAAO,KAAK,KAAK,CAAA,CAAA;AAAA,GACxB;AAAA,EAEA,IAAI,KAAkB,EAAA;AACpB,IAAO,OAAA,IAAA,CAAK,OAAO,KAAK,CAAA,CAAA;AAAA,GAC1B;AAAA,EAEA,GAAA,CAAI,OAAe,KAAU,EAAA;AAC3B,IAAK,IAAA,CAAA,MAAA,CAAO,KAAK,CAAI,GAAA,KAAA,CAAA;AAAA,GACvB;AAAA,EAEA,OAAU,GAAA;AACR,IAAA,IAAA,CAAK,OAAO,OAAQ,EAAA,CAAA;AAAA,GACtB;AAAA,EAEA,OAAe,GAAA;AACb,IAAA,OAAO,IAAK,CAAA,MAAA,CAAA;AAAA,GACd;AAAA,EAEA,MAAc,GAAA;AACZ,IAAA,OAAO,IAAK,CAAA,MAAA,CAAA;AAAA,GACd;AACF;;;;"}