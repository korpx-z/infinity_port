{"version":3,"file":"FormattedVector.js","sources":["../../../src/vector/FormattedVector.ts"],"sourcesContent":["import { DisplayProcessor } from '../types';\nimport { Vector } from '../types/vector';\nimport { formattedValueToString } from '../valueFormats';\n\nimport { FunctionalVector } from './FunctionalVector';\n\n/**\n * @public\n */\nexport class FormattedVector<T = any> extends FunctionalVector<string> {\n  constructor(private source: Vector<T>, private formatter: DisplayProcessor) {\n    super();\n  }\n\n  get length() {\n    return this.source.length;\n  }\n\n  get(index: number): string {\n    const v = this.source.get(index);\n    return formattedValueToString(this.formatter(v));\n  }\n}\n"],"names":[],"mappings":";;;AASO,MAAM,wBAAiC,gBAAyB,CAAA;AAAA,EACrE,WAAA,CAAoB,QAA2B,SAA6B,EAAA;AAC1E,IAAM,KAAA,EAAA,CAAA;AADY,IAAA,IAAA,CAAA,MAAA,GAAA,MAAA,CAAA;AAA2B,IAAA,IAAA,CAAA,SAAA,GAAA,SAAA,CAAA;AAAA,GAE/C;AAAA,EAEA,IAAI,MAAS,GAAA;AACX,IAAA,OAAO,KAAK,MAAO,CAAA,MAAA,CAAA;AAAA,GACrB;AAAA,EAEA,IAAI,KAAuB,EAAA;AACzB,IAAA,MAAM,CAAI,GAAA,IAAA,CAAK,MAAO,CAAA,GAAA,CAAI,KAAK,CAAA,CAAA;AAC/B,IAAA,OAAO,sBAAuB,CAAA,IAAA,CAAK,SAAU,CAAA,CAAC,CAAC,CAAA,CAAA;AAAA,GACjD;AACF;;;;"}