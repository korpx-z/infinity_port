{"version":3,"file":"IndexVector.js","sources":["../../../src/vector/IndexVector.ts"],"sourcesContent":["import { Field, FieldType } from '../types';\n\nimport { FunctionalVector } from './FunctionalVector';\n\n/**\n * IndexVector is a simple vector implementation that returns the index value\n * for each element in the vector.  It is functionally equivolant a vector backed\n * by an array with values: `[0,1,2,...,length-1]`\n */\nexport class IndexVector extends FunctionalVector<number> {\n  constructor(private len: number) {\n    super();\n  }\n\n  get length() {\n    return this.len;\n  }\n\n  get(index: number): number {\n    return index;\n  }\n\n  /**\n   * Returns a field representing the range [0 ... length-1]\n   */\n  static newField(len: number): Field<number> {\n    return {\n      name: '',\n      values: new IndexVector(len),\n      type: FieldType.number,\n      config: {\n        min: 0,\n        max: len - 1,\n      },\n    };\n  }\n}\n"],"names":[],"mappings":";;;;;;;;AASO,MAAM,oBAAoB,gBAAyB,CAAA;AAAA,EACxD,YAAoB,GAAa,EAAA;AAC/B,IAAM,KAAA,EAAA,CAAA;AADY,IAAA,IAAA,CAAA,GAAA,GAAA,GAAA,CAAA;AAAA,GAEpB;AAAA,EAEA,IAAI,MAAS,GAAA;AACX,IAAA,OAAO,IAAK,CAAA,GAAA,CAAA;AAAA,GACd;AAAA,EAEA,IAAI,KAAuB,EAAA;AACzB,IAAO,OAAA,KAAA,CAAA;AAAA,GACT;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,SAAS,GAA4B,EAAA;AAC1C,IAAO,OAAA;AAAA,MACL,IAAM,EAAA,EAAA;AAAA,MACN,MAAA,EAAQ,IAAI,WAAA,CAAY,GAAG,CAAA;AAAA,MAC3B,MAAM,SAAU,CAAA,MAAA;AAAA,MAChB,MAAQ,EAAA;AAAA,QACN,GAAK,EAAA,CAAA;AAAA,QACL,KAAK,GAAM,GAAA,CAAA;AAAA,OACb;AAAA,KACF,CAAA;AAAA,GACF;AACF;;;;"}