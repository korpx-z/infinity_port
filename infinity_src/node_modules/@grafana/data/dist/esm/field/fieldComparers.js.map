{"version":3,"file":"fieldComparers.js","sources":["../../../src/field/fieldComparers.ts"],"sourcesContent":["import { isNumber } from 'lodash';\n\nimport { dateTime, isDateTimeInput } from '../datetime';\nimport { Field, FieldType } from '../types/dataFrame';\nimport { Vector } from '../types/vector';\n\ntype IndexComparer = (a: number, b: number) => number;\n\n/** @public */\nexport const fieldIndexComparer = (field: Field, reverse = false): IndexComparer => {\n  const values = field.values;\n\n  switch (field.type) {\n    case FieldType.number:\n      return numericIndexComparer(values, reverse);\n    case FieldType.string:\n      return stringIndexComparer(values, reverse);\n    case FieldType.boolean:\n      return booleanIndexComparer(values, reverse);\n    case FieldType.time:\n      if (typeof field.values.get(0) === 'number') {\n        return timestampIndexComparer(values, reverse);\n      }\n      return timeIndexComparer(values, reverse);\n    default:\n      return naturalIndexComparer(reverse);\n  }\n};\n\n/** @public */\nexport const timeComparer = (a: unknown, b: unknown): number => {\n  if (!a || !b) {\n    return falsyComparer(a, b);\n  }\n\n  if (isNumber(a) && isNumber(b)) {\n    return numericComparer(a, b);\n  }\n\n  if (isDateTimeInput(a) && isDateTimeInput(b)) {\n    if (dateTime(a).isBefore(b)) {\n      return -1;\n    }\n\n    if (dateTime(b).isBefore(a)) {\n      return 1;\n    }\n  }\n\n  return 0;\n};\n\n/** @public */\nexport const numericComparer = (a: number, b: number): number => {\n  return a - b;\n};\n\n/** @public */\nexport const stringComparer = (a: string, b: string): number => {\n  if (!a || !b) {\n    return falsyComparer(a, b);\n  }\n  return a.localeCompare(b);\n};\n\nexport const booleanComparer = (a: boolean, b: boolean): number => {\n  return falsyComparer(a, b);\n};\n\nconst falsyComparer = (a: unknown, b: unknown): number => {\n  if (!a && b) {\n    return 1;\n  }\n\n  if (a && !b) {\n    return -1;\n  }\n\n  return 0;\n};\n\nconst timestampIndexComparer = (values: Vector<number>, reverse: boolean): IndexComparer => {\n  let vals = values.toArray();\n  let mult = reverse ? -1 : 1;\n  return (a: number, b: number): number => mult * (vals[a] - vals[b]);\n};\n\nconst timeIndexComparer = (values: Vector<unknown>, reverse: boolean): IndexComparer => {\n  return (a: number, b: number): number => {\n    const vA = values.get(a);\n    const vB = values.get(b);\n    return reverse ? timeComparer(vB, vA) : timeComparer(vA, vB);\n  };\n};\n\nconst booleanIndexComparer = (values: Vector<boolean>, reverse: boolean): IndexComparer => {\n  return (a: number, b: number): number => {\n    const vA = values.get(a);\n    const vB = values.get(b);\n    return reverse ? booleanComparer(vB, vA) : booleanComparer(vA, vB);\n  };\n};\n\nconst numericIndexComparer = (values: Vector<number>, reverse: boolean): IndexComparer => {\n  return (a: number, b: number): number => {\n    const vA = values.get(a);\n    const vB = values.get(b);\n    return reverse ? numericComparer(vB, vA) : numericComparer(vA, vB);\n  };\n};\n\nconst stringIndexComparer = (values: Vector<string>, reverse: boolean): IndexComparer => {\n  return (a: number, b: number): number => {\n    const vA = values.get(a);\n    const vB = values.get(b);\n    return reverse ? stringComparer(vB, vA) : stringComparer(vA, vB);\n  };\n};\n\nconst naturalIndexComparer = (reverse: boolean): IndexComparer => {\n  return (a: number, b: number): number => {\n    return reverse ? numericComparer(b, a) : numericComparer(a, b);\n  };\n};\n"],"names":[],"mappings":"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"}