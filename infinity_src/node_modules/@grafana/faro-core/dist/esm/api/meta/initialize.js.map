{"version":3,"file":"initialize.js","sourceRoot":"","sources":["../../../../src/api/meta/initialize.ts"],"names":[],"mappings":"AAQA,MAAM,UAAU,iBAAiB,CAC/B,iBAAmC,EACnC,cAA8B,EAC9B,OAAe,EACf,KAAY,EACZ,WAAuB;IAEvB,cAAc,CAAC,KAAK,CAAC,uBAAuB,CAAC,CAAC;IAE9C,IAAI,WAAW,GAA8B,SAAS,CAAC;IACvD,IAAI,QAAQ,GAA8B,SAAS,CAAC;IACpD,IAAI,QAAQ,GAA8B,SAAS,CAAC;IAEpD,MAAM,OAAO,GAAuB,CAAC,IAAI,EAAE,EAAE;QAC3C,IAAI,QAAQ,EAAE;YACZ,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;SACxB;QAED,QAAQ,GAAG;YACT,IAAI;SACL,CAAC;QAEF,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IACtB,CAAC,CAAC;IAEF,MAAM,UAAU,GAA0B,CAAC,OAAO,EAAE,EAAE;QACpD,IAAI,WAAW,EAAE;YACf,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;SAC3B;QAED,WAAW,GAAG;YACZ,OAAO;SACR,CAAC;QAEF,KAAK,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;IACzB,CAAC,CAAC;IAEF,MAAM,UAAU,GAA0B,GAAG,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC;IAEpE,MAAM,OAAO,GAAuB,CAAC,IAAI,EAAE,EAAE;;QAC3C,IAAI,CAAA,MAAA,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,IAAI,0CAAE,IAAI,OAAK,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,IAAI,CAAA,EAAE;YACvC,OAAO;SACR;QAED,MAAM,YAAY,GAAG,QAAQ,CAAC;QAE9B,QAAQ,GAAG;YACT,IAAI;SACL,CAAC;QAEF,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAEpB,IAAI,YAAY,EAAE;YAChB,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;SAC5B;IACH,CAAC,CAAC;IAEF,MAAM,OAAO,GAAuB,GAAG,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC;IAE3D,OAAO;QACL,OAAO;QACP,SAAS,EAAE,OAA+B;QAC1C,UAAU;QACV,YAAY,EAAE,UAAqC;QACnD,UAAU;QACV,OAAO;QACP,OAAO;KACR,CAAC;AACJ,CAAC","sourcesContent":["import type { Config } from '../../config';\nimport type { InternalLogger } from '../../internalLogger';\nimport type { Meta, Metas } from '../../metas';\nimport type { Transports } from '../../transports';\nimport type { UnpatchedConsole } from '../../unpatchedConsole';\n\nimport type { MetaAPI } from './types';\n\nexport function initializeMetaAPI(\n  _unpatchedConsole: UnpatchedConsole,\n  internalLogger: InternalLogger,\n  _config: Config,\n  metas: Metas,\n  _transports: Transports\n): MetaAPI {\n  internalLogger.debug('Initializing meta API');\n\n  let metaSession: Partial<Meta> | undefined = undefined;\n  let metaUser: Partial<Meta> | undefined = undefined;\n  let metaView: Partial<Meta> | undefined = undefined;\n\n  const setUser: MetaAPI['setUser'] = (user) => {\n    if (metaUser) {\n      metas.remove(metaUser);\n    }\n\n    metaUser = {\n      user,\n    };\n\n    metas.add(metaUser);\n  };\n\n  const setSession: MetaAPI['setSession'] = (session) => {\n    if (metaSession) {\n      metas.remove(metaSession);\n    }\n\n    metaSession = {\n      session,\n    };\n\n    metas.add(metaSession);\n  };\n\n  const getSession: MetaAPI['getSession'] = () => metas.value.session;\n\n  const setView: MetaAPI['setView'] = (view) => {\n    if (metaView?.view?.name === view?.name) {\n      return;\n    }\n\n    const previousView = metaView;\n\n    metaView = {\n      view,\n    };\n\n    metas.add(metaView);\n\n    if (previousView) {\n      metas.remove(previousView);\n    }\n  };\n\n  const getView: MetaAPI['getView'] = () => metas.value.view;\n\n  return {\n    setUser,\n    resetUser: setUser as MetaAPI['resetUser'],\n    setSession,\n    resetSession: setSession as MetaAPI['resetSession'],\n    getSession,\n    setView,\n    getView,\n  };\n}\n"]}